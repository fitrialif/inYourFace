ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/G_51_facesParametric_2015_Nov_05_1419
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
aS'key_resp_7.keys'
p36
aS'key_resp_7.rt'
p37
asS'autoLog'
p38
I01
sS'extraInfo'
p39
(dp40
S'date'
p41
V2015_Nov_05_1419
p42
sVgroup
p43
VG
sS'expName'
p44
g11
sVparticipant
p45
V51
p46
sS'frameRate'
p47
cnumpy.core.multiarray
scalar
p48
(cnumpy
dtype
p49
(S'f8'
I0
I1
tRp50
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xfc\xacm\x99,\xd1M@'
tRp51
ssS'loopsUnfinished'
p52
(lp53
sS'saveWideText'
p54
I01
sS'thisEntry'
p55
(dp56
sS'version'
p57
S''
sS'_paramNamesSoFar'
p58
(lp59
S'img'
p60
aS'num'
p61
asS'entries'
p62
(lp63
(dp64
g15
F1.6874270439147949
sg44
g11
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg14
S'return'
p65
sa(dp66
g16
Nsg18
Nsg60
S'./basicStim/01F_AN_O.jpg'
p67
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.9340000000000002
sg22
S'NTR'
p68
sS'basicLoop.thisTrialN'
p69
I0
sg44
g11
sS'basicLoop.thisRepN'
p70
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p71
I0
sS'basicLoop.thisIndex'
p72
I0
sa(dp73
g16
Nsg18
Nsg60
S'./basicStim/09F_SA_C.jpg'
p74
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.877
sg22
g68
sS'basicLoop.thisTrialN'
p75
I1
sg44
g11
sS'basicLoop.thisRepN'
p76
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p77
I1
sS'basicLoop.thisIndex'
p78
I39
sa(dp79
g16
Nsg18
Nsg60
S'./basicStim/34M_FE_O.jpg'
p80
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.593
sg22
g68
sS'basicLoop.thisTrialN'
p81
I2
sg44
g11
sS'basicLoop.thisRepN'
p82
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p83
I2
sS'basicLoop.thisIndex'
p84
I72
sa(dp85
g16
Nsg18
Nsg60
S'./basicStim/02F_HA_O.jpg'
p86
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.89000000000000001
sg22
g68
sS'basicLoop.thisTrialN'
p87
I3
sg44
g11
sS'basicLoop.thisRepN'
p88
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p89
I3
sS'basicLoop.thisIndex'
p90
I10
sa(dp91
g16
Nsg18
Nsg60
S'./basicStim/21M_NE_C.jpg'
p92
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.141
sg22
g68
sS'basicLoop.thisTrialN'
p93
I4
sg44
g11
sS'basicLoop.thisRepN'
p94
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p95
I4
sS'basicLoop.thisIndex'
p96
I48
sa(dp97
g16
Nsg18
Nsg60
S'./basicStim/21M_DI_O.jpg'
p98
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.179
sg22
g68
sS'basicLoop.thisTrialN'
p99
I5
sg44
g11
sS'basicLoop.thisRepN'
p100
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p101
I5
sS'basicLoop.thisIndex'
p102
I43
sa(dp103
g16
Nsg18
Nsg60
S'./basicStim/34M_DI_O.jpg'
p104
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.2130000000000001
sg22
g68
sS'basicLoop.thisTrialN'
p105
I6
sg44
g11
sS'basicLoop.thisRepN'
p106
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p107
I6
sS'basicLoop.thisIndex'
p108
I71
sa(dp109
g16
Nsg18
Nsg60
S'./basicStim/03F_NE_C.jpg'
p110
sg21
F1.4910000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p111
I7
sg44
g11
sS'basicLoop.thisRepN'
p112
I0
sg20
S'SUP'
p113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p114
I7
sS'basicLoop.thisIndex'
p115
I20
sa(dp116
g16
Nsg18
Nsg60
S'./basicStim/07F_AN_O.jpg'
p117
sg21
F1.073
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p118
I8
sg44
g11
sS'basicLoop.thisRepN'
p119
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p120
I8
sS'basicLoop.thisIndex'
p121
I28
sa(dp122
g16
Nsg18
Nsg60
S'./basicStim/06F_NE_C.jpg'
p123
sg21
F1.2
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p124
I9
sg44
g11
sS'basicLoop.thisRepN'
p125
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p126
I9
sS'basicLoop.thisIndex'
p127
I27
sa(dp128
g16
Nsg18
Nsg60
S'./basicStim/07F_SP_O.jpg'
p129
sg21
F1.544
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p130
I10
sg44
g11
sS'basicLoop.thisRepN'
p131
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p132
I10
sS'basicLoop.thisIndex'
p133
I33
sa(dp134
g16
Nsg18
Nsg60
S'./basicStim/23M_FE_O.jpg'
p135
sg21
F0.42299999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p136
I11
sg44
g11
sS'basicLoop.thisRepN'
p137
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p138
I11
sS'basicLoop.thisIndex'
p139
I51
sa(dp140
g16
Nsg18
Nsg60
S'./basicStim/03F_DI_O.jpg'
p141
sg21
F1.1319999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p142
I12
sg44
g11
sS'basicLoop.thisRepN'
p143
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p144
I12
sS'basicLoop.thisIndex'
p145
I15
sa(dp146
g16
Nsg18
Nsg60
S'./basicStim/21M_SP_O.jpg'
p147
sg21
F0.41099999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p148
I13
sg44
g11
sS'basicLoop.thisRepN'
p149
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p150
I13
sS'basicLoop.thisIndex'
p151
I47
sa(dp152
g16
Nsg18
Nsg60
S'./basicStim/36M_SA_C.jpg'
p153
sg21
F1.4890000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p154
I14
sg44
g11
sS'basicLoop.thisRepN'
p155
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p156
I14
sS'basicLoop.thisIndex'
p157
I81
sa(dp158
g16
Nsg18
Nsg60
S'./basicStim/02F_DI_O.jpg'
p159
sg21
F0.48499999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p160
I15
sg44
g11
sS'basicLoop.thisRepN'
p161
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p162
I15
sS'basicLoop.thisIndex'
p163
I8
sa(dp164
g16
Nsg18
Nsg60
S'./basicStim/23M_HA_O.jpg'
p165
sg21
F0.438
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p166
I16
sg44
g11
sS'basicLoop.thisRepN'
p167
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p168
I16
sS'basicLoop.thisIndex'
p169
I52
sa(dp170
g16
Nsg18
Nsg60
S'./basicStim/01F_SP_O.jpg'
p171
sg21
F0.55800000000000005
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p172
I17
sg44
g11
sS'basicLoop.thisRepN'
p173
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p174
I17
sS'basicLoop.thisIndex'
p175
I5
sa(dp176
g16
Nsg18
Nsg60
S'./basicStim/34M_AN_O.jpg'
p177
sg21
F7.7960000000000003
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p178
I18
sg44
g11
sS'basicLoop.thisRepN'
p179
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p180
I18
sS'basicLoop.thisIndex'
p181
I70
sa(dp182
g16
Nsg18
Nsg60
S'./basicStim/09F_DI_O.jpg'
p183
sg21
F0.874
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p184
I19
sg44
g11
sS'basicLoop.thisRepN'
p185
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p186
I19
sS'basicLoop.thisIndex'
p187
I36
sa(dp188
g16
Nsg18
Nsg60
S'./basicStim/01F_SA_C.jpg'
p189
sg21
F1.284
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p190
I20
sg44
g11
sS'basicLoop.thisRepN'
p191
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p192
I20
sS'basicLoop.thisIndex'
p193
I4
sa(dp194
g16
Nsg18
Nsg60
S'./basicStim/03F_SP_O.jpg'
p195
sg21
F0.879
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p196
I21
sg44
g11
sS'basicLoop.thisRepN'
p197
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p198
I21
sS'basicLoop.thisIndex'
p199
I19
sa(dp200
g16
Nsg18
Nsg60
S'./basicStim/03F_AN_O.jpg'
p201
sg21
F0.441
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p202
I22
sg44
g11
sS'basicLoop.thisRepN'
p203
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p204
I22
sS'basicLoop.thisIndex'
p205
I14
sa(dp206
g16
Nsg18
Nsg60
S'./basicStim/07F_HA_O.jpg'
p207
sg21
F0.44
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p208
I23
sg44
g11
sS'basicLoop.thisRepN'
p209
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p210
I23
sS'basicLoop.thisIndex'
p211
I31
sa(dp212
g16
Nsg18
Nsg60
S'./basicStim/34M_SP_O.jpg'
p213
sg21
F0.49199999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p214
I24
sg44
g11
sS'basicLoop.thisRepN'
p215
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p216
I24
sS'basicLoop.thisIndex'
p217
I75
sa(dp218
g16
Nsg18
Nsg60
S'./basicStim/24M_FE_O.jpg'
p219
sg21
F0.40799999999999997
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p220
I25
sg44
g11
sS'basicLoop.thisRepN'
p221
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p222
I25
sS'basicLoop.thisIndex'
p223
I58
sa(dp224
g16
Nsg18
Nsg60
S'./basicStim/06F_SP_O.jpg'
p225
sg21
F0.54700000000000004
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p226
I26
sg44
g11
sS'basicLoop.thisRepN'
p227
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p228
I26
sS'basicLoop.thisIndex'
p229
I26
sa(dp230
g16
Nsg18
Nsg60
S'./basicStim/34M_NE_C.jpg'
p231
sg21
F0.52000000000000002
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p232
I27
sg44
g11
sS'basicLoop.thisRepN'
p233
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p234
I27
sS'basicLoop.thisIndex'
p235
I76
sa(dp236
g16
Nsg18
Nsg60
S'./basicStim/03F_HA_O.jpg'
p237
sg21
F0.42499999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p238
I28
sg44
g11
sS'basicLoop.thisRepN'
p239
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p240
I28
sS'basicLoop.thisIndex'
p241
I17
sa(dp242
g16
Nsg18
Nsg60
S'./basicStim/34M_SA_C.jpg'
p243
sg21
F0.42099999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p244
I29
sg44
g11
sS'basicLoop.thisRepN'
p245
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p246
I29
sS'basicLoop.thisIndex'
p247
I74
sa(dp248
g16
Nsg18
Nsg60
S'./basicStim/07F_FE_O.jpg'
p249
sg21
F0.72099999999999997
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p250
I30
sg44
g11
sS'basicLoop.thisRepN'
p251
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p252
I30
sS'basicLoop.thisIndex'
p253
I30
sa(dp254
g16
Nsg18
Nsg60
S'./basicStim/28M_AN_O.jpg'
p255
sg21
F1.26
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p256
I31
sg44
g11
sS'basicLoop.thisRepN'
p257
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p258
I31
sS'basicLoop.thisIndex'
p259
I63
sa(dp260
g16
Nsg18
Nsg60
S'./basicStim/23M_SP_O.jpg'
p261
sg21
F0.49099999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p262
I32
sg44
g11
sS'basicLoop.thisRepN'
p263
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p264
I32
sS'basicLoop.thisIndex'
p265
I54
sa(dp266
g16
Nsg18
Nsg60
S'./basicStim/09F_AN_O.jpg'
p267
sg21
F0.81999999999999995
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p268
I33
sg44
g11
sS'basicLoop.thisRepN'
p269
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p270
I33
sS'basicLoop.thisIndex'
p271
I35
sa(dp272
g16
Nsg18
Nsg60
S'./basicStim/07F_NE_C.jpg'
p273
sg21
F1.663
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p274
I34
sg44
g11
sS'basicLoop.thisRepN'
p275
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p276
I34
sS'basicLoop.thisIndex'
p277
I34
sa(dp278
g16
Nsg18
Nsg60
S'./basicStim/02F_SA_C.jpg'
p279
sg21
F0.44500000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p280
I35
sg44
g11
sS'basicLoop.thisRepN'
p281
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p282
I35
sS'basicLoop.thisIndex'
p283
I11
sa(dp284
g16
Nsg18
Nsg60
S'./basicStim/24M_HA_O.jpg'
p285
sg21
F0.45700000000000002
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p286
I36
sg44
g11
sS'basicLoop.thisRepN'
p287
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p288
I36
sS'basicLoop.thisIndex'
p289
I59
sa(dp290
g16
Nsg18
Nsg60
S'./basicStim/24M_NE_C.jpg'
p291
sg21
F0.83999999999999997
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p292
I37
sg44
g11
sS'basicLoop.thisRepN'
p293
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p294
I37
sS'basicLoop.thisIndex'
p295
I62
sa(dp296
g16
Nsg18
Nsg60
S'./basicStim/28M_SA_C.jpg'
p297
sg21
F0.80400000000000005
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p298
I38
sg44
g11
sS'basicLoop.thisRepN'
p299
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p300
I38
sS'basicLoop.thisIndex'
p301
I67
sa(dp302
g16
Nsg18
Nsg60
S'./basicStim/36M_HA_O.jpg'
p303
sg21
F1.228
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p304
I39
sg44
g11
sS'basicLoop.thisRepN'
p305
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p306
I39
sS'basicLoop.thisIndex'
p307
I80
sa(dp308
g16
Nsg18
Nsg60
S'./basicStim/01F_DI_O.jpg'
p309
sg21
F0.438
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p310
I40
sg44
g11
sS'basicLoop.thisRepN'
p311
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p312
I40
sS'basicLoop.thisIndex'
p313
I1
sa(dp314
g16
Nsg18
Nsg60
S'./basicStim/06F_SA_C.jpg'
p315
sg21
F1.2589999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p316
I41
sg44
g11
sS'basicLoop.thisRepN'
p317
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p318
I41
sS'basicLoop.thisIndex'
p319
I25
sa(dp320
g16
Nsg18
Nsg60
S'./basicStim/28M_HA_O.jpg'
p321
sg21
F0.44
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p322
I42
sg44
g11
sS'basicLoop.thisRepN'
p323
I0
sg20
g113
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p324
I42
sS'basicLoop.thisIndex'
p325
I66
sa(dp326
g16
Nsg18
Nsg60
S'./basicStim/36M_FE_O.jpg'
p327
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F7.3899999999999997
sg22
g68
sS'basicLoop.thisTrialN'
p328
I43
sg44
g11
sS'basicLoop.thisRepN'
p329
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p330
I43
sS'basicLoop.thisIndex'
p331
I79
sa(dp332
g16
Nsg18
Nsg60
S'./basicStim/23M_SA_C.jpg'
p333
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.1659999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p334
I44
sg44
g11
sS'basicLoop.thisRepN'
p335
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p336
I44
sS'basicLoop.thisIndex'
p337
I53
sa(dp338
g16
Nsg18
Nsg60
S'./basicStim/09F_SP_O.jpg'
p339
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.50800000000000001
sg22
g68
sS'basicLoop.thisTrialN'
p340
I45
sg44
g11
sS'basicLoop.thisRepN'
p341
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p342
I45
sS'basicLoop.thisIndex'
p343
I40
sa(dp344
g16
Nsg18
Nsg60
S'./basicStim/06F_AN_O.jpg'
p345
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.98599999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p346
I46
sg44
g11
sS'basicLoop.thisRepN'
p347
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p348
I46
sS'basicLoop.thisIndex'
p349
I21
sa(dp350
g16
Nsg18
Nsg60
S'./basicStim/07F_SA_C.jpg'
p351
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.42399999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p352
I47
sg44
g11
sS'basicLoop.thisRepN'
p353
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p354
I47
sS'basicLoop.thisIndex'
p355
I32
sa(dp356
g16
Nsg18
Nsg60
S'./basicStim/09F_FE_O.jpg'
p357
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.69299999999999995
sg22
g68
sS'basicLoop.thisTrialN'
p358
I48
sg44
g11
sS'basicLoop.thisRepN'
p359
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p360
I48
sS'basicLoop.thisIndex'
p361
I37
sa(dp362
g16
Nsg18
Nsg60
S'./basicStim/01F_FE_O.jpg'
p363
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.41799999999999998
sg22
g68
sS'basicLoop.thisTrialN'
p364
I49
sg44
g11
sS'basicLoop.thisRepN'
p365
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p366
I49
sS'basicLoop.thisIndex'
p367
I2
sa(dp368
g16
Nsg18
Nsg60
S'./basicStim/02F_SP_O.jpg'
p369
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.67200000000000004
sg22
g68
sS'basicLoop.thisTrialN'
p370
I50
sg44
g11
sS'basicLoop.thisRepN'
p371
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p372
I50
sS'basicLoop.thisIndex'
p373
I12
sa(dp374
g16
Nsg18
Nsg60
S'./basicStim/28M_NE_C.jpg'
p375
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.226
sg22
g68
sS'basicLoop.thisTrialN'
p376
I51
sg44
g11
sS'basicLoop.thisRepN'
p377
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p378
I51
sS'basicLoop.thisIndex'
p379
I69
sa(dp380
g16
Nsg18
Nsg60
S'./basicStim/21M_AN_O.jpg'
p381
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.53600000000000003
sg22
g68
sS'basicLoop.thisTrialN'
p382
I52
sg44
g11
sS'basicLoop.thisRepN'
p383
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p384
I52
sS'basicLoop.thisIndex'
p385
I42
sa(dp386
g16
Nsg18
Nsg60
S'./basicStim/23M_NE_C.jpg'
p387
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.56999999999999995
sg22
g68
sS'basicLoop.thisTrialN'
p388
I53
sg44
g11
sS'basicLoop.thisRepN'
p389
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p390
I53
sS'basicLoop.thisIndex'
p391
I55
sa(dp392
g16
Nsg18
Nsg60
S'./basicStim/01F_NE_C.jpg'
p393
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.40600000000000003
sg22
g68
sS'basicLoop.thisTrialN'
p394
I54
sg44
g11
sS'basicLoop.thisRepN'
p395
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p396
I54
sS'basicLoop.thisIndex'
p397
I6
sa(dp398
g16
Nsg18
Nsg60
S'./basicStim/28M_FE_O.jpg'
p399
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.52900000000000003
sg22
g68
sS'basicLoop.thisTrialN'
p400
I55
sg44
g11
sS'basicLoop.thisRepN'
p401
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p402
I55
sS'basicLoop.thisIndex'
p403
I65
sa(dp404
g16
Nsg18
Nsg60
S'./basicStim/03F_SA_C.jpg'
p405
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.48899999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p406
I56
sg44
g11
sS'basicLoop.thisRepN'
p407
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p408
I56
sS'basicLoop.thisIndex'
p409
I18
sa(dp410
g16
Nsg18
Nsg60
S'./basicStim/07F_DI_O.jpg'
p411
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.45500000000000002
sg22
g68
sS'basicLoop.thisTrialN'
p412
I57
sg44
g11
sS'basicLoop.thisRepN'
p413
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p414
I57
sS'basicLoop.thisIndex'
p415
I29
sa(dp416
g16
Nsg18
Nsg60
S'./basicStim/03F_FE_O.jpg'
p417
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.504
sg22
g68
sS'basicLoop.thisTrialN'
p418
I58
sg44
g11
sS'basicLoop.thisRepN'
p419
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p420
I58
sS'basicLoop.thisIndex'
p421
I16
sa(dp422
g16
Nsg18
Nsg60
S'./basicStim/28M_DI_O.jpg'
p423
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.42099999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p424
I59
sg44
g11
sS'basicLoop.thisRepN'
p425
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p426
I59
sS'basicLoop.thisIndex'
p427
I64
sa(dp428
g16
Nsg18
Nsg60
S'./basicStim/06F_HA_O.jpg'
p429
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.41899999999999998
sg22
g68
sS'basicLoop.thisTrialN'
p430
I60
sg44
g11
sS'basicLoop.thisRepN'
p431
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p432
I60
sS'basicLoop.thisIndex'
p433
I24
sa(dp434
g16
Nsg18
Nsg60
S'./basicStim/28M_SP_O.jpg'
p435
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.53800000000000003
sg22
g68
sS'basicLoop.thisTrialN'
p436
I61
sg44
g11
sS'basicLoop.thisRepN'
p437
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p438
I61
sS'basicLoop.thisIndex'
p439
I68
sa(dp440
g16
Nsg18
Nsg60
S'./basicStim/02F_FE_O.jpg'
p441
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.48599999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p442
I62
sg44
g11
sS'basicLoop.thisRepN'
p443
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p444
I62
sS'basicLoop.thisIndex'
p445
I9
sa(dp446
g16
Nsg18
Nsg60
S'./basicStim/36M_NE_C.jpg'
p447
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.50700000000000001
sg22
g68
sS'basicLoop.thisTrialN'
p448
I63
sg44
g11
sS'basicLoop.thisRepN'
p449
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p450
I63
sS'basicLoop.thisIndex'
p451
I83
sa(dp452
g16
Nsg18
Nsg60
S'./basicStim/21M_SA_C.jpg'
p453
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.58999999999999997
sg22
g68
sS'basicLoop.thisTrialN'
p454
I64
sg44
g11
sS'basicLoop.thisRepN'
p455
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p456
I64
sS'basicLoop.thisIndex'
p457
I46
sa(dp458
g16
Nsg18
Nsg60
S'./basicStim/02F_NE_C.jpg'
p459
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.52800000000000002
sg22
g68
sS'basicLoop.thisTrialN'
p460
I65
sg44
g11
sS'basicLoop.thisRepN'
p461
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p462
I65
sS'basicLoop.thisIndex'
p463
I13
sa(dp464
g16
Nsg18
Nsg60
S'./basicStim/24M_SP_O.jpg'
p465
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.504
sg22
g68
sS'basicLoop.thisTrialN'
p466
I66
sg44
g11
sS'basicLoop.thisRepN'
p467
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p468
I66
sS'basicLoop.thisIndex'
p469
I61
sa(dp470
g16
Nsg18
Nsg60
S'./basicStim/24M_AN_O.jpg'
p471
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.45700000000000002
sg22
g68
sS'basicLoop.thisTrialN'
p472
I67
sg44
g11
sS'basicLoop.thisRepN'
p473
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p474
I67
sS'basicLoop.thisIndex'
p475
I56
sa(dp476
g16
Nsg18
Nsg60
S'./basicStim/02F_AN_O.jpg'
p477
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.68700000000000006
sg22
g68
sS'basicLoop.thisTrialN'
p478
I68
sg44
g11
sS'basicLoop.thisRepN'
p479
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p480
I68
sS'basicLoop.thisIndex'
p481
I7
sa(dp482
g16
Nsg18
Nsg60
S'./basicStim/09F_HA_O.jpg'
p483
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.42199999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p484
I69
sg44
g11
sS'basicLoop.thisRepN'
p485
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p486
I69
sS'basicLoop.thisIndex'
p487
I38
sa(dp488
g16
Nsg18
Nsg60
S'./basicStim/09F_NE_C.jpg'
p489
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.432
sg22
g68
sS'basicLoop.thisTrialN'
p490
I70
sg44
g11
sS'basicLoop.thisRepN'
p491
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p492
I70
sS'basicLoop.thisIndex'
p493
I41
sa(dp494
g16
Nsg18
Nsg60
S'./basicStim/34M_HA_O.jpg'
p495
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.41899999999999998
sg22
g68
sS'basicLoop.thisTrialN'
p496
I71
sg44
g11
sS'basicLoop.thisRepN'
p497
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p498
I71
sS'basicLoop.thisIndex'
p499
I73
sa(dp500
g16
Nsg18
Nsg60
S'./basicStim/23M_DI_O.jpg'
p501
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.46999999999999997
sg22
g68
sS'basicLoop.thisTrialN'
p502
I72
sg44
g11
sS'basicLoop.thisRepN'
p503
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p504
I72
sS'basicLoop.thisIndex'
p505
I50
sa(dp506
g16
Nsg18
Nsg60
S'./basicStim/36M_DI_O.jpg'
p507
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.622
sg22
g68
sS'basicLoop.thisTrialN'
p508
I73
sg44
g11
sS'basicLoop.thisRepN'
p509
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p510
I73
sS'basicLoop.thisIndex'
p511
I78
sa(dp512
g16
Nsg18
Nsg60
S'./basicStim/21M_FE_O.jpg'
p513
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.48799999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p514
I74
sg44
g11
sS'basicLoop.thisRepN'
p515
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p516
I74
sS'basicLoop.thisIndex'
p517
I44
sa(dp518
g16
Nsg18
Nsg60
S'./basicStim/21M_HA_O.jpg'
p519
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.58899999999999997
sg22
g68
sS'basicLoop.thisTrialN'
p520
I75
sg44
g11
sS'basicLoop.thisRepN'
p521
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p522
I75
sS'basicLoop.thisIndex'
p523
I45
sa(dp524
g16
Nsg18
Nsg60
S'./basicStim/06F_FE_O.jpg'
p525
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.50700000000000001
sg22
g68
sS'basicLoop.thisTrialN'
p526
I76
sg44
g11
sS'basicLoop.thisRepN'
p527
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p528
I76
sS'basicLoop.thisIndex'
p529
I23
sa(dp530
g16
Nsg18
Nsg60
S'./basicStim/01F_HA_O.jpg'
p531
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.67200000000000004
sg22
g68
sS'basicLoop.thisTrialN'
p532
I77
sg44
g11
sS'basicLoop.thisRepN'
p533
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p534
I77
sS'basicLoop.thisIndex'
p535
I3
sa(dp536
g16
Nsg18
Nsg60
S'./basicStim/24M_DI_O.jpg'
p537
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.53900000000000003
sg22
g68
sS'basicLoop.thisTrialN'
p538
I78
sg44
g11
sS'basicLoop.thisRepN'
p539
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p540
I78
sS'basicLoop.thisIndex'
p541
I57
sa(dp542
g16
Nsg18
Nsg60
S'./basicStim/06F_DI_O.jpg'
p543
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.52600000000000002
sg22
g68
sS'basicLoop.thisTrialN'
p544
I79
sg44
g11
sS'basicLoop.thisRepN'
p545
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p546
I79
sS'basicLoop.thisIndex'
p547
I22
sa(dp548
g16
Nsg18
Nsg60
S'./basicStim/36M_SP_O.jpg'
p549
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.626
sg22
g68
sS'basicLoop.thisTrialN'
p550
I80
sg44
g11
sS'basicLoop.thisRepN'
p551
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p552
I80
sS'basicLoop.thisIndex'
p553
I82
sa(dp554
g16
Nsg18
Nsg60
S'./basicStim/23M_AN_O.jpg'
p555
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.41899999999999998
sg22
g68
sS'basicLoop.thisTrialN'
p556
I81
sg44
g11
sS'basicLoop.thisRepN'
p557
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p558
I81
sS'basicLoop.thisIndex'
p559
I49
sa(dp560
g16
Nsg18
Nsg60
S'./basicStim/24M_SA_C.jpg'
p561
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.42099999999999999
sg22
g68
sS'basicLoop.thisTrialN'
p562
I82
sg44
g11
sS'basicLoop.thisRepN'
p563
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p564
I82
sS'basicLoop.thisIndex'
p565
I60
sa(dp566
g16
Nsg18
Nsg60
S'./basicStim/36M_AN_O.jpg'
p567
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.58899999999999997
sg22
g68
sS'basicLoop.thisTrialN'
p568
I83
sg44
g11
sS'basicLoop.thisRepN'
p569
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p570
I83
sS'basicLoop.thisIndex'
p571
I77
sa(dp572
g44
g11
sg43
VG
sg41
g42
sg24
S'return'
p573
sg45
g46
sg47
g51
sg25
F11.544624805450439
sa(dp574
g15
F1.2397391796112061
sg44
g11
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg14
S'return'
p575
sa(dp576
g44
g11
sg43
VG
sg41
g42
sg24
S'return'
p577
sg45
g46
sg47
g51
sg25
F25.441040992736816
sa(dp578
g41
g42
sg44
g11
sg27
F23.966222047805786
sg26
S'return'
p579
sg43
VG
sg45
g46
sg47
g51
sa(dp580
g31
I0
sg44
g11
sg43
VG
sS'img'
p581
S'./stim/MorphM1_08_orig.jpg'
p582
sS'trials.thisIndex'
p583
g48
(g49
(S'i8'
I0
I1
tRp584
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp585
sS'trials.thisRepN'
p586
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp587
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp588
sg30
I1
sg61
g48
(g584
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp589
sS'trials.thisTrialN'
p590
I0
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7182960510253906
sS'trials.thisN'
p591
I0
sa(dp592
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_06_orig.jpg'
p593
sS'trials.thisIndex'
p594
g48
(g584
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp595
sS'trials.thisRepN'
p596
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp597
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp598
sg30
I0
sg61
g48
(g584
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp599
sS'trials.thisTrialN'
p600
I1
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7729408740997314
sS'trials.thisN'
p601
I1
sa(dp602
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_08_orig.jpg'
p603
sS'trials.thisIndex'
p604
g48
(g584
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp605
sS'trials.thisRepN'
p606
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp607
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp608
sg30
I0
sg61
g48
(g584
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp609
sS'trials.thisTrialN'
p610
I2
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8724739551544189
sS'trials.thisN'
p611
I2
sa(dp612
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_04_orig.jpg'
p613
sS'trials.thisIndex'
p614
g48
(g584
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp615
sS'trials.thisRepN'
p616
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp617
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp618
sg30
I1
sg61
g48
(g584
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp619
sS'trials.thisTrialN'
p620
I3
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5577621459960938
sS'trials.thisN'
p621
I3
sa(dp622
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_02_orig.jpg'
p623
sS'trials.thisIndex'
p624
g48
(g584
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp625
sS'trials.thisRepN'
p626
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp627
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp628
sg30
I1
sg61
g48
(g584
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp629
sS'trials.thisTrialN'
p630
I4
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3033280372619629
sS'trials.thisN'
p631
I4
sa(dp632
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_06_orig.jpg'
p633
sS'trials.thisIndex'
p634
g48
(g584
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp635
sS'trials.thisRepN'
p636
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp637
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp638
sg30
I1
sg61
g48
(g584
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp639
sS'trials.thisTrialN'
p640
I5
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4230189323425293
sS'trials.thisN'
p641
I5
sa(dp642
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_02_orig.jpg'
p643
sS'trials.thisIndex'
p644
g48
(g584
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp645
sS'trials.thisRepN'
p646
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp647
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp648
sg30
I1
sg61
g48
(g584
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp649
sS'trials.thisTrialN'
p650
I6
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6229000091552734
sS'trials.thisN'
p651
I6
sa(dp652
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_05_orig.jpg'
p653
sS'trials.thisIndex'
p654
g48
(g584
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp655
sS'trials.thisRepN'
p656
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp657
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp658
sg30
I0
sg61
g48
(g584
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp659
sS'trials.thisTrialN'
p660
I7
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9427499771118164
sS'trials.thisN'
p661
I7
sa(dp662
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_00_orig.jpg'
p663
sS'trials.thisIndex'
p664
g48
(g584
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp665
sS'trials.thisRepN'
p666
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp667
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp668
sg30
I0
sg61
g48
(g584
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp669
sS'trials.thisTrialN'
p670
I8
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3281021118164062
sS'trials.thisN'
p671
I8
sa(dp672
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_08_orig.jpg'
p673
sS'trials.thisIndex'
p674
g48
(g584
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp675
sS'trials.thisRepN'
p676
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp677
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp678
sg30
I1
sg61
g48
(g584
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp679
sS'trials.thisTrialN'
p680
I9
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2204830646514893
sS'trials.thisN'
p681
I9
sa(dp682
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_07_orig.jpg'
p683
sS'trials.thisIndex'
p684
g48
(g584
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp685
sS'trials.thisRepN'
p686
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp687
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp688
sg30
I1
sg61
g48
(g584
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp689
sS'trials.thisTrialN'
p690
I10
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1551430225372314
sS'trials.thisN'
p691
I10
sa(dp692
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_09_orig.jpg'
p693
sS'trials.thisIndex'
p694
g48
(g584
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp695
sS'trials.thisRepN'
p696
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp697
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp698
sg30
I1
sg61
g48
(g584
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp699
sS'trials.thisTrialN'
p700
I11
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5400240421295166
sS'trials.thisN'
p701
I11
sa(dp702
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_09_orig.jpg'
p703
sS'trials.thisIndex'
p704
g48
(g584
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp705
sS'trials.thisRepN'
p706
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp707
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp708
sg30
I1
sg61
g48
(g584
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp709
sS'trials.thisTrialN'
p710
I12
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5740261077880859
sS'trials.thisN'
p711
I12
sa(dp712
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_07_orig.jpg'
p713
sS'trials.thisIndex'
p714
g48
(g584
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp715
sS'trials.thisRepN'
p716
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp717
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp718
sg30
I1
sg61
g48
(g584
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp719
sS'trials.thisTrialN'
p720
I13
sg32
I0
sg41
g42
sg45
g46
sg33
F1.858922004699707
sS'trials.thisN'
p721
I13
sa(dp722
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_03_orig.jpg'
p723
sS'trials.thisIndex'
p724
g48
(g584
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp725
sS'trials.thisRepN'
p726
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp727
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp728
sg30
I1
sg61
g48
(g584
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp729
sS'trials.thisTrialN'
p730
I14
sg32
I0
sg41
g42
sg45
g46
sg33
F1.926476001739502
sS'trials.thisN'
p731
I14
sa(dp732
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_01_orig.jpg'
p733
sS'trials.thisIndex'
p734
g48
(g584
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp735
sS'trials.thisRepN'
p736
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp737
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp738
sg30
I1
sg61
g48
(g584
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp739
sS'trials.thisTrialN'
p740
I15
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0605659484863281
sS'trials.thisN'
p741
I15
sa(dp742
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_05_orig.jpg'
p743
sS'trials.thisIndex'
p744
g48
(g584
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp745
sS'trials.thisRepN'
p746
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp747
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp748
sg30
I1
sg61
g48
(g584
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp749
sS'trials.thisTrialN'
p750
I16
sg32
I0
sg41
g42
sg45
g46
sg33
F2.24422287940979
sS'trials.thisN'
p751
I16
sa(dp752
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_06_orig.jpg'
p753
sS'trials.thisIndex'
p754
g48
(g584
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp755
sS'trials.thisRepN'
p756
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp757
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp758
sg30
I0
sg61
g48
(g584
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp759
sS'trials.thisTrialN'
p760
I17
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8409478664398193
sS'trials.thisN'
p761
I17
sa(dp762
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_10_orig.jpg'
p763
sS'trials.thisIndex'
p764
g48
(g584
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp765
sS'trials.thisRepN'
p766
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp767
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp768
sg30
I1
sg61
g48
(g584
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp769
sS'trials.thisTrialN'
p770
I18
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3218669891357422
sS'trials.thisN'
p771
I18
sa(dp772
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_03_orig.jpg'
p773
sS'trials.thisIndex'
p774
g48
(g584
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp775
sS'trials.thisRepN'
p776
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp777
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp778
sg30
I1
sg61
g48
(g584
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp779
sS'trials.thisTrialN'
p780
I19
sg32
I0
sg41
g42
sg45
g46
sg33
F2.11043381690979
sS'trials.thisN'
p781
I19
sa(dp782
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_01_orig.jpg'
p783
sS'trials.thisIndex'
p784
g48
(g584
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp785
sS'trials.thisRepN'
p786
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp787
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp788
sg30
I1
sg61
g48
(g584
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp789
sS'trials.thisTrialN'
p790
I20
sg32
I0
sg41
g42
sg45
g46
sg33
F2.764326810836792
sS'trials.thisN'
p791
I20
sa(dp792
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_03_orig.jpg'
p793
sS'trials.thisIndex'
p794
g48
(g584
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp795
sS'trials.thisRepN'
p796
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp797
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp798
sg30
I0
sg61
g48
(g584
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp799
sS'trials.thisTrialN'
p800
I21
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8231902122497559
sS'trials.thisN'
p801
I21
sa(dp802
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_03_orig.jpg'
p803
sS'trials.thisIndex'
p804
g48
(g584
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp805
sS'trials.thisRepN'
p806
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp807
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp808
sg30
I0
sg61
g48
(g584
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp809
sS'trials.thisTrialN'
p810
I22
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4616909027099609
sS'trials.thisN'
p811
I22
sa(dp812
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_02_orig.jpg'
p813
sS'trials.thisIndex'
p814
g48
(g584
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp815
sS'trials.thisRepN'
p816
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp817
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp818
sg30
I1
sg61
g48
(g584
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp819
sS'trials.thisTrialN'
p820
I23
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3449609279632568
sS'trials.thisN'
p821
I23
sa(dp822
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_00_orig.jpg'
p823
sS'trials.thisIndex'
p824
g48
(g584
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp825
sS'trials.thisRepN'
p826
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp827
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp828
sg30
I1
sg61
g48
(g584
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp829
sS'trials.thisTrialN'
p830
I24
sg32
I0
sg41
g42
sg45
g46
sg33
F3.2836000919342041
sS'trials.thisN'
p831
I24
sa(dp832
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_09_orig.jpg'
p833
sS'trials.thisIndex'
p834
g48
(g584
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp835
sS'trials.thisRepN'
p836
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp837
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp838
sg30
I0
sg61
g48
(g584
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp839
sS'trials.thisTrialN'
p840
I25
sg32
I1
sg41
g42
sg45
g46
sg33
F3.7700760364532471
sS'trials.thisN'
p841
I25
sa(dp842
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_03_orig.jpg'
p843
sS'trials.thisIndex'
p844
g48
(g584
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp845
sS'trials.thisRepN'
p846
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp847
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp848
sg30
I1
sg61
g48
(g584
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp849
sS'trials.thisTrialN'
p850
I26
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3114268779754639
sS'trials.thisN'
p851
I26
sa(dp852
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_08_orig.jpg'
p853
sS'trials.thisIndex'
p854
g48
(g584
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp855
sS'trials.thisRepN'
p856
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp857
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp858
sg30
I1
sg61
g48
(g584
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp859
sS'trials.thisTrialN'
p860
I27
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6254949569702148
sS'trials.thisN'
p861
I27
sa(dp862
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_05_orig.jpg'
p863
sS'trials.thisIndex'
p864
g48
(g584
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp865
sS'trials.thisRepN'
p866
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp867
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp868
sg30
I1
sg61
g48
(g584
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp869
sS'trials.thisTrialN'
p870
I28
sg32
I0
sg41
g42
sg45
g46
sg33
F2.4943819046020508
sS'trials.thisN'
p871
I28
sa(dp872
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_01_orig.jpg'
p873
sS'trials.thisIndex'
p874
g48
(g584
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp875
sS'trials.thisRepN'
p876
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp877
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp878
sg30
I1
sg61
g48
(g584
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp879
sS'trials.thisTrialN'
p880
I29
sg32
I0
sg41
g42
sg45
g46
sg33
F13.607590913772583
sS'trials.thisN'
p881
I29
sa(dp882
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_10_orig.jpg'
p883
sS'trials.thisIndex'
p884
g48
(g584
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp885
sS'trials.thisRepN'
p886
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp887
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp888
sg30
I0
sg61
g48
(g584
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp889
sS'trials.thisTrialN'
p890
I30
sg32
I1
sg41
g42
sg45
g46
sg33
F5.9986200332641602
sS'trials.thisN'
p891
I30
sa(dp892
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_06_orig.jpg'
p893
sS'trials.thisIndex'
p894
g48
(g584
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp895
sS'trials.thisRepN'
p896
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp897
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp898
sg30
I1
sg61
g48
(g584
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp899
sS'trials.thisTrialN'
p900
I31
sg32
I0
sg41
g42
sg45
g46
sg33
F11.043088912963867
sS'trials.thisN'
p901
I31
sa(dp902
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_05_orig.jpg'
p903
sS'trials.thisIndex'
p904
g48
(g584
S' \x00\x00\x00\x00\x00\x00\x00'
tRp905
sS'trials.thisRepN'
p906
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp907
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp908
sg30
I0
sg61
g48
(g584
S' \x00\x00\x00\x00\x00\x00\x00'
tRp909
sS'trials.thisTrialN'
p910
I32
sg32
I1
sg41
g42
sg45
g46
sg33
F3.719735860824585
sS'trials.thisN'
p911
I32
sa(dp912
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_00_orig.jpg'
p913
sS'trials.thisIndex'
p914
g48
(g584
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp915
sS'trials.thisRepN'
p916
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp917
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp918
sg30
I1
sg61
g48
(g584
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp919
sS'trials.thisTrialN'
p920
I33
sg32
I0
sg41
g42
sg45
g46
sg33
F12.720142126083374
sS'trials.thisN'
p921
I33
sa(dp922
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_09_orig.jpg'
p923
sS'trials.thisIndex'
p924
g48
(g584
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp925
sS'trials.thisRepN'
p926
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp927
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp928
sg30
I0
sg61
g48
(g584
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp929
sS'trials.thisTrialN'
p930
I34
sg32
I1
sg41
g42
sg45
g46
sg33
F2.7608962059020996
sS'trials.thisN'
p931
I34
sa(dp932
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_10_orig.jpg'
p933
sS'trials.thisIndex'
p934
g48
(g584
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp935
sS'trials.thisRepN'
p936
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp937
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp938
sg30
I0
sg61
g48
(g584
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp939
sS'trials.thisTrialN'
p940
I35
sg32
I1
sg41
g42
sg45
g46
sg33
F7.7420120239257812
sS'trials.thisN'
p941
I35
sa(dp942
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_05_orig.jpg'
p943
sS'trials.thisIndex'
p944
g48
(g584
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp945
sS'trials.thisRepN'
p946
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp947
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp948
sg30
I1
sg61
g48
(g584
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp949
sS'trials.thisTrialN'
p950
I36
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2541720867156982
sS'trials.thisN'
p951
I36
sa(dp952
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_03_orig.jpg'
p953
sS'trials.thisIndex'
p954
g48
(g584
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp955
sS'trials.thisRepN'
p956
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp957
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp958
sg30
I0
sg61
g48
(g584
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp959
sS'trials.thisTrialN'
p960
I37
sg32
I1
sg41
g42
sg45
g46
sg33
F3.7029781341552734
sS'trials.thisN'
p961
I37
sa(dp962
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_08_orig.jpg'
p963
sS'trials.thisIndex'
p964
g48
(g584
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp965
sS'trials.thisRepN'
p966
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp967
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp968
sg30
I1
sg61
g48
(g584
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp969
sS'trials.thisTrialN'
p970
I38
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4715371131896973
sS'trials.thisN'
p971
I38
sa(dp972
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_04_orig.jpg'
p973
sS'trials.thisIndex'
p974
g48
(g584
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp975
sS'trials.thisRepN'
p976
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp977
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp978
sg30
I0
sg61
g48
(g584
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp979
sS'trials.thisTrialN'
p980
I39
sg32
I1
sg41
g42
sg45
g46
sg33
F7.9931221008300781
sS'trials.thisN'
p981
I39
sa(dp982
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_06_orig.jpg'
p983
sS'trials.thisIndex'
p984
g48
(g584
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp985
sS'trials.thisRepN'
p986
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp987
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp988
sg30
I1
sg61
g48
(g584
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp989
sS'trials.thisTrialN'
p990
I40
sg32
I0
sg41
g42
sg45
g46
sg33
F3.4009521007537842
sS'trials.thisN'
p991
I40
sa(dp992
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_00_orig.jpg'
p993
sS'trials.thisIndex'
p994
g48
(g584
S')\x00\x00\x00\x00\x00\x00\x00'
tRp995
sS'trials.thisRepN'
p996
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp997
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp998
sg30
I0
sg61
g48
(g584
S')\x00\x00\x00\x00\x00\x00\x00'
tRp999
sS'trials.thisTrialN'
p1000
I41
sg32
I1
sg41
g42
sg45
g46
sg33
F3.2484521865844727
sS'trials.thisN'
p1001
I41
sa(dp1002
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_09_orig.jpg'
p1003
sS'trials.thisIndex'
p1004
g48
(g584
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1005
sS'trials.thisRepN'
p1006
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1007
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1008
sg30
I1
sg61
g48
(g584
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1009
sS'trials.thisTrialN'
p1010
I42
sg32
I0
sg41
g42
sg45
g46
sg33
F2.4440498352050781
sS'trials.thisN'
p1011
I42
sa(dp1012
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_09_orig.jpg'
p1013
sS'trials.thisIndex'
p1014
g48
(g584
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1015
sS'trials.thisRepN'
p1016
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1017
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1018
sg30
I1
sg61
g48
(g584
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1019
sS'trials.thisTrialN'
p1020
I43
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8760218620300293
sS'trials.thisN'
p1021
I43
sa(dp1022
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_04_orig.jpg'
p1023
sS'trials.thisIndex'
p1024
g48
(g584
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1025
sS'trials.thisRepN'
p1026
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1027
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1028
sg30
I0
sg61
g48
(g584
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1029
sS'trials.thisTrialN'
p1030
I44
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8082120418548584
sS'trials.thisN'
p1031
I44
sa(dp1032
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_10_orig.jpg'
p1033
sS'trials.thisIndex'
p1034
g48
(g584
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1035
sS'trials.thisRepN'
p1036
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1037
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1038
sg30
I0
sg61
g48
(g584
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1039
sS'trials.thisTrialN'
p1040
I45
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7586491107940674
sS'trials.thisN'
p1041
I45
sa(dp1042
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_03_orig.jpg'
p1043
sS'trials.thisIndex'
p1044
g48
(g584
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1045
sS'trials.thisRepN'
p1046
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1047
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1048
sg30
I1
sg61
g48
(g584
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1049
sS'trials.thisTrialN'
p1050
I46
sg32
I0
sg41
g42
sg45
g46
sg33
F3.7864780426025391
sS'trials.thisN'
p1051
I46
sa(dp1052
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_03_orig.jpg'
p1053
sS'trials.thisIndex'
p1054
g48
(g584
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1055
sS'trials.thisRepN'
p1056
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1057
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1058
sg30
I0
sg61
g48
(g584
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1059
sS'trials.thisTrialN'
p1060
I47
sg32
I1
sg41
g42
sg45
g46
sg33
F1.322465181350708
sS'trials.thisN'
p1061
I47
sa(dp1062
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_08_orig.jpg'
p1063
sS'trials.thisIndex'
p1064
g48
(g584
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1065
sS'trials.thisRepN'
p1066
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1067
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1068
sg30
I1
sg61
g48
(g584
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1069
sS'trials.thisTrialN'
p1070
I48
sg32
I0
sg41
g42
sg45
g46
sg33
F5.6477169990539551
sS'trials.thisN'
p1071
I48
sa(dp1072
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_01_orig.jpg'
p1073
sS'trials.thisIndex'
p1074
g48
(g584
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1075
sS'trials.thisRepN'
p1076
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1077
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1078
sg30
I0
sg61
g48
(g584
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1079
sS'trials.thisTrialN'
p1080
I49
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1707639694213867
sS'trials.thisN'
p1081
I49
sa(dp1082
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_01_orig.jpg'
p1083
sS'trials.thisIndex'
p1084
g48
(g584
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1085
sS'trials.thisRepN'
p1086
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1087
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1088
sg30
I0
sg61
g48
(g584
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1089
sS'trials.thisTrialN'
p1090
I50
sg32
I1
sg41
g42
sg45
g46
sg33
F3.1495649814605713
sS'trials.thisN'
p1091
I50
sa(dp1092
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_09_orig.jpg'
p1093
sS'trials.thisIndex'
p1094
g48
(g584
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1095
sS'trials.thisRepN'
p1096
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1097
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1098
sg30
I0
sg61
g48
(g584
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1099
sS'trials.thisTrialN'
p1100
I51
sg32
I1
sg41
g42
sg45
g46
sg33
F8.2950189113616943
sS'trials.thisN'
p1101
I51
sa(dp1102
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_01_orig.jpg'
p1103
sS'trials.thisIndex'
p1104
g48
(g584
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1105
sS'trials.thisRepN'
p1106
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1107
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1108
sg30
I1
sg61
g48
(g584
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1109
sS'trials.thisTrialN'
p1110
I52
sg32
I0
sg41
g42
sg45
g46
sg33
F11.311154127120972
sS'trials.thisN'
p1111
I52
sa(dp1112
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_09_orig.jpg'
p1113
sS'trials.thisIndex'
p1114
g48
(g584
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1115
sS'trials.thisRepN'
p1116
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1117
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1118
sg30
I0
sg61
g48
(g584
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1119
sS'trials.thisTrialN'
p1120
I53
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9765918254852295
sS'trials.thisN'
p1121
I53
sa(dp1122
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_01_orig.jpg'
p1123
sS'trials.thisIndex'
p1124
g48
(g584
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1125
sS'trials.thisRepN'
p1126
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1127
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1128
sg30
I1
sg61
g48
(g584
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1129
sS'trials.thisTrialN'
p1130
I54
sg32
I0
sg41
g42
sg45
g46
sg33
F9.986720085144043
sS'trials.thisN'
p1131
I54
sa(dp1132
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_10_orig.jpg'
p1133
sS'trials.thisIndex'
p1134
g48
(g584
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1135
sS'trials.thisRepN'
p1136
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1137
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1138
sg30
I1
sg61
g48
(g584
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1139
sS'trials.thisTrialN'
p1140
I55
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7956779003143311
sS'trials.thisN'
p1141
I55
sa(dp1142
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_07_orig.jpg'
p1143
sS'trials.thisIndex'
p1144
g48
(g584
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1145
sS'trials.thisRepN'
p1146
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1147
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1148
sg30
I0
sg61
g48
(g584
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1149
sS'trials.thisTrialN'
p1150
I56
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1035058498382568
sS'trials.thisN'
p1151
I56
sa(dp1152
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_09_orig.jpg'
p1153
sS'trials.thisIndex'
p1154
g48
(g584
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1155
sS'trials.thisRepN'
p1156
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1157
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1158
sg30
I1
sg61
g48
(g584
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1159
sS'trials.thisTrialN'
p1160
I57
sg32
I0
sg41
g42
sg45
g46
sg33
F16.054862976074219
sS'trials.thisN'
p1161
I57
sa(dp1162
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_00_orig.jpg'
p1163
sS'trials.thisIndex'
p1164
g48
(g584
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1165
sS'trials.thisRepN'
p1166
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1167
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1168
sg30
I0
sg61
g48
(g584
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1169
sS'trials.thisTrialN'
p1170
I58
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3559329509735107
sS'trials.thisN'
p1171
I58
sa(dp1172
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_00_orig.jpg'
p1173
sS'trials.thisIndex'
p1174
g48
(g584
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1175
sS'trials.thisRepN'
p1176
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1177
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1178
sg30
I1
sg61
g48
(g584
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1179
sS'trials.thisTrialN'
p1180
I59
sg32
I0
sg41
g42
sg45
g46
sg33
F6.9368569850921631
sS'trials.thisN'
p1181
I59
sa(dp1182
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_08_orig.jpg'
p1183
sS'trials.thisIndex'
p1184
g48
(g584
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1185
sS'trials.thisRepN'
p1186
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1187
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1188
sg30
I0
sg61
g48
(g584
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1189
sS'trials.thisTrialN'
p1190
I60
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9259471893310547
sS'trials.thisN'
p1191
I60
sa(dp1192
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_04_orig.jpg'
p1193
sS'trials.thisIndex'
p1194
g48
(g584
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1195
sS'trials.thisRepN'
p1196
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1197
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1198
sg30
I1
sg61
g48
(g584
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1199
sS'trials.thisTrialN'
p1200
I61
sg32
I0
sg41
g42
sg45
g46
sg33
F4.3718280792236328
sS'trials.thisN'
p1201
I61
sa(dp1202
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_10_orig.jpg'
p1203
sS'trials.thisIndex'
p1204
g48
(g584
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1205
sS'trials.thisRepN'
p1206
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1207
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1208
sg30
I0
sg61
g48
(g584
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1209
sS'trials.thisTrialN'
p1210
I62
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3428051471710205
sS'trials.thisN'
p1211
I62
sa(dp1212
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_03_orig.jpg'
p1213
sS'trials.thisIndex'
p1214
g48
(g584
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1215
sS'trials.thisRepN'
p1216
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1217
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1218
sg30
I1
sg61
g48
(g584
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1219
sS'trials.thisTrialN'
p1220
I63
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8252480030059814
sS'trials.thisN'
p1221
I63
sa(dp1222
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_03_orig.jpg'
p1223
sS'trials.thisIndex'
p1224
g48
(g584
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1225
sS'trials.thisRepN'
p1226
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1227
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1228
sg30
I1
sg61
g48
(g584
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1229
sS'trials.thisTrialN'
p1230
I64
sg32
I0
sg41
g42
sg45
g46
sg33
F2.377079963684082
sS'trials.thisN'
p1231
I64
sa(dp1232
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_00_orig.jpg'
p1233
sS'trials.thisIndex'
p1234
g48
(g584
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1235
sS'trials.thisRepN'
p1236
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1237
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1238
sg30
I0
sg61
g48
(g584
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1239
sS'trials.thisTrialN'
p1240
I65
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9309151172637939
sS'trials.thisN'
p1241
I65
sa(dp1242
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_07_orig.jpg'
p1243
sS'trials.thisIndex'
p1244
g48
(g584
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1245
sS'trials.thisRepN'
p1246
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1247
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1248
sg30
I1
sg61
g48
(g584
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1249
sS'trials.thisTrialN'
p1250
I66
sg32
I0
sg41
g42
sg45
g46
sg33
F8.8644640445709229
sS'trials.thisN'
p1251
I66
sa(dp1252
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_00_orig.jpg'
p1253
sS'trials.thisIndex'
p1254
g48
(g584
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1255
sS'trials.thisRepN'
p1256
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1257
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1258
sg30
I1
sg61
g48
(g584
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1259
sS'trials.thisTrialN'
p1260
I67
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5626611709594727
sS'trials.thisN'
p1261
I67
sa(dp1262
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_08_orig.jpg'
p1263
sS'trials.thisIndex'
p1264
g48
(g584
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1265
sS'trials.thisRepN'
p1266
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1267
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1268
sg30
I0
sg61
g48
(g584
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1269
sS'trials.thisTrialN'
p1270
I68
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2110040187835693
sS'trials.thisN'
p1271
I68
sa(dp1272
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_00_orig.jpg'
p1273
sS'trials.thisIndex'
p1274
g48
(g584
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1275
sS'trials.thisRepN'
p1276
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1277
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1278
sg30
I1
sg61
g48
(g584
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1279
sS'trials.thisTrialN'
p1280
I69
sg32
I0
sg41
g42
sg45
g46
sg33
F4.1891629695892334
sS'trials.thisN'
p1281
I69
sa(dp1282
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_10_orig.jpg'
p1283
sS'trials.thisIndex'
p1284
g48
(g584
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1285
sS'trials.thisRepN'
p1286
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1287
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1288
sg30
I0
sg61
g48
(g584
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1289
sS'trials.thisTrialN'
p1290
I70
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7579898834228516
sS'trials.thisN'
p1291
I70
sa(dp1292
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_02_orig.jpg'
p1293
sS'trials.thisIndex'
p1294
g48
(g584
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1295
sS'trials.thisRepN'
p1296
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1297
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1298
sg30
I1
sg61
g48
(g584
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1299
sS'trials.thisTrialN'
p1300
I71
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8479559421539307
sS'trials.thisN'
p1301
I71
sa(dp1302
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_06_orig.jpg'
p1303
sS'trials.thisIndex'
p1304
g48
(g584
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1305
sS'trials.thisRepN'
p1306
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1307
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1308
sg30
I1
sg61
g48
(g584
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1309
sS'trials.thisTrialN'
p1310
I72
sg32
I0
sg41
g42
sg45
g46
sg33
F5.8143479824066162
sS'trials.thisN'
p1311
I72
sa(dp1312
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_10_orig.jpg'
p1313
sS'trials.thisIndex'
p1314
g48
(g584
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1315
sS'trials.thisRepN'
p1316
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1317
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1318
sg30
I1
sg61
g48
(g584
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1319
sS'trials.thisTrialN'
p1320
I73
sg32
I0
sg41
g42
sg45
g46
sg33
F3.5180568695068359
sS'trials.thisN'
p1321
I73
sa(dp1322
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_00_orig.jpg'
p1323
sS'trials.thisIndex'
p1324
g48
(g584
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1325
sS'trials.thisRepN'
p1326
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1327
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1328
sg30
I0
sg61
g48
(g584
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1329
sS'trials.thisTrialN'
p1330
I74
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0213589668273926
sS'trials.thisN'
p1331
I74
sa(dp1332
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_02_orig.jpg'
p1333
sS'trials.thisIndex'
p1334
g48
(g584
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1335
sS'trials.thisRepN'
p1336
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1337
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1338
sg30
I1
sg61
g48
(g584
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1339
sS'trials.thisTrialN'
p1340
I75
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5113677978515625
sS'trials.thisN'
p1341
I75
sa(dp1342
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_08_orig.jpg'
p1343
sS'trials.thisIndex'
p1344
g48
(g584
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1345
sS'trials.thisRepN'
p1346
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1347
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1348
sg30
I0
sg61
g48
(g584
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1349
sS'trials.thisTrialN'
p1350
I76
sg32
I1
sg41
g42
sg45
g46
sg33
F3.1329131126403809
sS'trials.thisN'
p1351
I76
sa(dp1352
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_05_orig.jpg'
p1353
sS'trials.thisIndex'
p1354
g48
(g584
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1355
sS'trials.thisRepN'
p1356
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1357
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1358
sg30
I1
sg61
g48
(g584
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1359
sS'trials.thisTrialN'
p1360
I77
sg32
I0
sg41
g42
sg45
g46
sg33
F13.455579042434692
sS'trials.thisN'
p1361
I77
sa(dp1362
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_09_orig.jpg'
p1363
sS'trials.thisIndex'
p1364
g48
(g584
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1365
sS'trials.thisRepN'
p1366
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1367
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1368
sg30
I0
sg61
g48
(g584
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1369
sS'trials.thisTrialN'
p1370
I78
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9649910926818848
sS'trials.thisN'
p1371
I78
sa(dp1372
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_09_orig.jpg'
p1373
sS'trials.thisIndex'
p1374
g48
(g584
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1375
sS'trials.thisRepN'
p1376
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1377
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1378
sg30
I1
sg61
g48
(g584
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1379
sS'trials.thisTrialN'
p1380
I79
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8294899463653564
sS'trials.thisN'
p1381
I79
sa(dp1382
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_03_orig.jpg'
p1383
sS'trials.thisIndex'
p1384
g48
(g584
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1385
sS'trials.thisRepN'
p1386
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1387
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1388
sg30
I1
sg61
g48
(g584
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1389
sS'trials.thisTrialN'
p1390
I80
sg32
I0
sg41
g42
sg45
g46
sg33
F4.7569139003753662
sS'trials.thisN'
p1391
I80
sa(dp1392
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_04_orig.jpg'
p1393
sS'trials.thisIndex'
p1394
g48
(g584
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1395
sS'trials.thisRepN'
p1396
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1397
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1398
sg30
I0
sg61
g48
(g584
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1399
sS'trials.thisTrialN'
p1400
I81
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0689589977264404
sS'trials.thisN'
p1401
I81
sa(dp1402
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_02_orig.jpg'
p1403
sS'trials.thisIndex'
p1404
g48
(g584
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1405
sS'trials.thisRepN'
p1406
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1407
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1408
sg30
I1
sg61
g48
(g584
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1409
sS'trials.thisTrialN'
p1410
I82
sg32
I0
sg41
g42
sg45
g46
sg33
F6.3339619636535645
sS'trials.thisN'
p1411
I82
sa(dp1412
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_04_orig.jpg'
p1413
sS'trials.thisIndex'
p1414
g48
(g584
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1415
sS'trials.thisRepN'
p1416
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1417
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1418
sg30
I0
sg61
g48
(g584
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1419
sS'trials.thisTrialN'
p1420
I83
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8413040637969971
sS'trials.thisN'
p1421
I83
sa(dp1422
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_05_orig.jpg'
p1423
sS'trials.thisIndex'
p1424
g48
(g584
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1425
sS'trials.thisRepN'
p1426
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1427
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1428
sg30
I1
sg61
g48
(g584
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1429
sS'trials.thisTrialN'
p1430
I84
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6181390285491943
sS'trials.thisN'
p1431
I84
sa(dp1432
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_05_orig.jpg'
p1433
sS'trials.thisIndex'
p1434
g48
(g584
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1435
sS'trials.thisRepN'
p1436
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1437
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1438
sg30
I1
sg61
g48
(g584
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1439
sS'trials.thisTrialN'
p1440
I85
sg32
I0
sg41
g42
sg45
g46
sg33
F9.818483829498291
sS'trials.thisN'
p1441
I85
sa(dp1442
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_04_orig.jpg'
p1443
sS'trials.thisIndex'
p1444
g48
(g584
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1445
sS'trials.thisRepN'
p1446
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1447
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1448
sg30
I0
sg61
g48
(g584
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1449
sS'trials.thisTrialN'
p1450
I86
sg32
I1
sg41
g42
sg45
g46
sg33
F3.9031510353088379
sS'trials.thisN'
p1451
I86
sa(dp1452
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_00_orig.jpg'
p1453
sS'trials.thisIndex'
p1454
g48
(g584
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1455
sS'trials.thisRepN'
p1456
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1457
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1458
sg30
I1
sg61
g48
(g584
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1459
sS'trials.thisTrialN'
p1460
I87
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2954909801483154
sS'trials.thisN'
p1461
I87
sa(dp1462
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_06_orig.jpg'
p1463
sS'trials.thisIndex'
p1464
g48
(g584
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1465
sS'trials.thisRepN'
p1466
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1467
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1468
sg30
I0
sg61
g48
(g584
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1469
sS'trials.thisTrialN'
p1470
I88
sg32
I1
sg41
g42
sg45
g46
sg33
F7.7914597988128662
sS'trials.thisN'
p1471
I88
sa(dp1472
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_01_orig.jpg'
p1473
sS'trials.thisIndex'
p1474
g48
(g584
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1475
sS'trials.thisRepN'
p1476
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1477
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1478
sg30
I1
sg61
g48
(g584
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1479
sS'trials.thisTrialN'
p1480
I89
sg32
I0
sg41
g42
sg45
g46
sg33
F3.1159219741821289
sS'trials.thisN'
p1481
I89
sa(dp1482
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_07_orig.jpg'
p1483
sS'trials.thisIndex'
p1484
g48
(g584
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1485
sS'trials.thisRepN'
p1486
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1487
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1488
sg30
I0
sg61
g48
(g584
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1489
sS'trials.thisTrialN'
p1490
I90
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1529440879821777
sS'trials.thisN'
p1491
I90
sa(dp1492
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_02_orig.jpg'
p1493
sS'trials.thisIndex'
p1494
g48
(g584
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1495
sS'trials.thisRepN'
p1496
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1497
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1498
sg30
I0
sg61
g48
(g584
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1499
sS'trials.thisTrialN'
p1500
I91
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2944338321685791
sS'trials.thisN'
p1501
I91
sa(dp1502
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_05_orig.jpg'
p1503
sS'trials.thisIndex'
p1504
g48
(g584
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1505
sS'trials.thisRepN'
p1506
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1507
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1508
sg30
I1
sg61
g48
(g584
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1509
sS'trials.thisTrialN'
p1510
I92
sg32
I0
sg41
g42
sg45
g46
sg33
F3.1331310272216797
sS'trials.thisN'
p1511
I92
sa(dp1512
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_07_orig.jpg'
p1513
sS'trials.thisIndex'
p1514
g48
(g584
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1515
sS'trials.thisRepN'
p1516
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1517
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1518
sg30
I0
sg61
g48
(g584
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1519
sS'trials.thisTrialN'
p1520
I93
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6401028633117676
sS'trials.thisN'
p1521
I93
sa(dp1522
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_08_orig.jpg'
p1523
sS'trials.thisIndex'
p1524
g48
(g584
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1525
sS'trials.thisRepN'
p1526
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1527
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1528
sg30
I1
sg61
g48
(g584
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1529
sS'trials.thisTrialN'
p1530
I94
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8928430080413818
sS'trials.thisN'
p1531
I94
sa(dp1532
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_04_orig.jpg'
p1533
sS'trials.thisIndex'
p1534
g48
(g584
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1535
sS'trials.thisRepN'
p1536
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1537
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1538
sg30
I0
sg61
g48
(g584
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1539
sS'trials.thisTrialN'
p1540
I95
sg32
I1
sg41
g42
sg45
g46
sg33
F3.5013830661773682
sS'trials.thisN'
p1541
I95
sa(dp1542
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_10_orig.jpg'
p1543
sS'trials.thisIndex'
p1544
g48
(g584
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1545
sS'trials.thisRepN'
p1546
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1547
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1548
sg30
I0
sg61
g48
(g584
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1549
sS'trials.thisTrialN'
p1550
I96
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2725160121917725
sS'trials.thisN'
p1551
I96
sa(dp1552
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_10_orig.jpg'
p1553
sS'trials.thisIndex'
p1554
g48
(g584
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1555
sS'trials.thisRepN'
p1556
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1557
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1558
sg30
I1
sg61
g48
(g584
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1559
sS'trials.thisTrialN'
p1560
I97
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4888670444488525
sS'trials.thisN'
p1561
I97
sa(dp1562
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_07_orig.jpg'
p1563
sS'trials.thisIndex'
p1564
g48
(g584
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1565
sS'trials.thisRepN'
p1566
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1567
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1568
sg30
I1
sg61
g48
(g584
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1569
sS'trials.thisTrialN'
p1570
I98
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0922291278839111
sS'trials.thisN'
p1571
I98
sa(dp1572
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_01_orig.jpg'
p1573
sS'trials.thisIndex'
p1574
g48
(g584
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1575
sS'trials.thisRepN'
p1576
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1577
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1578
sg30
I1
sg61
g48
(g584
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1579
sS'trials.thisTrialN'
p1580
I99
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3228418827056885
sS'trials.thisN'
p1581
I99
sa(dp1582
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_05_orig.jpg'
p1583
sS'trials.thisIndex'
p1584
g48
(g584
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1585
sS'trials.thisRepN'
p1586
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1587
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1588
sg30
I1
sg61
g48
(g584
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1589
sS'trials.thisTrialN'
p1590
I100
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2281918525695801
sS'trials.thisN'
p1591
I100
sa(dp1592
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_07_orig.jpg'
p1593
sS'trials.thisIndex'
p1594
g48
(g584
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1595
sS'trials.thisRepN'
p1596
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1597
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1598
sg30
I1
sg61
g48
(g584
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1599
sS'trials.thisTrialN'
p1600
I101
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1436259746551514
sS'trials.thisN'
p1601
I101
sa(dp1602
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_02_orig.jpg'
p1603
sS'trials.thisIndex'
p1604
g48
(g584
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1605
sS'trials.thisRepN'
p1606
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1607
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1608
sg30
I0
sg61
g48
(g584
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1609
sS'trials.thisTrialN'
p1610
I102
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7409501075744629
sS'trials.thisN'
p1611
I102
sa(dp1612
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_07_orig.jpg'
p1613
sS'trials.thisIndex'
p1614
g48
(g584
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1615
sS'trials.thisRepN'
p1616
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1617
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1618
sg30
I1
sg61
g48
(g584
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1619
sS'trials.thisTrialN'
p1620
I103
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3225228786468506
sS'trials.thisN'
p1621
I103
sa(dp1622
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_07_orig.jpg'
p1623
sS'trials.thisIndex'
p1624
g48
(g584
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1625
sS'trials.thisRepN'
p1626
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1627
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1628
sg30
I0
sg61
g48
(g584
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1629
sS'trials.thisTrialN'
p1630
I104
sg32
I1
sg41
g42
sg45
g46
sg33
F2.0092329978942871
sS'trials.thisN'
p1631
I104
sa(dp1632
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_06_orig.jpg'
p1633
sS'trials.thisIndex'
p1634
g48
(g584
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1635
sS'trials.thisRepN'
p1636
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1637
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1638
sg30
I1
sg61
g48
(g584
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1639
sS'trials.thisTrialN'
p1640
I105
sg32
I0
sg41
g42
sg45
g46
sg33
F2.295158863067627
sS'trials.thisN'
p1641
I105
sa(dp1642
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_06_orig.jpg'
p1643
sS'trials.thisIndex'
p1644
g48
(g584
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1645
sS'trials.thisRepN'
p1646
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1647
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1648
sg30
I0
sg61
g48
(g584
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1649
sS'trials.thisTrialN'
p1650
I106
sg32
I1
sg41
g42
sg45
g46
sg33
F3.5512199401855469
sS'trials.thisN'
p1651
I106
sa(dp1652
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_09_orig.jpg'
p1653
sS'trials.thisIndex'
p1654
g48
(g584
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1655
sS'trials.thisRepN'
p1656
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1657
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1658
sg30
I1
sg61
g48
(g584
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1659
sS'trials.thisTrialN'
p1660
I107
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0923380851745605
sS'trials.thisN'
p1661
I107
sa(dp1662
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_07_orig.jpg'
p1663
sS'trials.thisIndex'
p1664
g48
(g584
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1665
sS'trials.thisRepN'
p1666
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1667
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1668
sg30
I0
sg61
g48
(g584
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1669
sS'trials.thisTrialN'
p1670
I108
sg32
I1
sg41
g42
sg45
g46
sg33
F1.959787130355835
sS'trials.thisN'
p1671
I108
sa(dp1672
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_01_orig.jpg'
p1673
sS'trials.thisIndex'
p1674
g48
(g584
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1675
sS'trials.thisRepN'
p1676
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1677
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1678
sg30
I0
sg61
g48
(g584
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1679
sS'trials.thisTrialN'
p1680
I109
sg32
I1
sg41
g42
sg45
g46
sg33
F14.678711891174316
sS'trials.thisN'
p1681
I109
sa(dp1682
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_06_orig.jpg'
p1683
sS'trials.thisIndex'
p1684
g48
(g584
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1685
sS'trials.thisRepN'
p1686
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1687
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1688
sg30
I1
sg61
g48
(g584
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1689
sS'trials.thisTrialN'
p1690
I110
sg32
I0
sg41
g42
sg45
g46
sg33
F4.0547299385070801
sS'trials.thisN'
p1691
I110
sa(dp1692
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_05_orig.jpg'
p1693
sS'trials.thisIndex'
p1694
g48
(g584
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1695
sS'trials.thisRepN'
p1696
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1697
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1698
sg30
I0
sg61
g48
(g584
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1699
sS'trials.thisTrialN'
p1700
I111
sg32
I1
sg41
g42
sg45
g46
sg33
F23.394929170608521
sS'trials.thisN'
p1701
I111
sa(dp1702
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_03_orig.jpg'
p1703
sS'trials.thisIndex'
p1704
g48
(g584
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1705
sS'trials.thisRepN'
p1706
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1707
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1708
sg30
I0
sg61
g48
(g584
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1709
sS'trials.thisTrialN'
p1710
I112
sg32
I1
sg41
g42
sg45
g46
sg33
F9.216778039932251
sS'trials.thisN'
p1711
I112
sa(dp1712
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_00_orig.jpg'
p1713
sS'trials.thisIndex'
p1714
g48
(g584
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1715
sS'trials.thisRepN'
p1716
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1717
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1718
sg30
I1
sg61
g48
(g584
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1719
sS'trials.thisTrialN'
p1720
I113
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0871748924255371
sS'trials.thisN'
p1721
I113
sa(dp1722
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_01_orig.jpg'
p1723
sS'trials.thisIndex'
p1724
g48
(g584
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1725
sS'trials.thisRepN'
p1726
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1727
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1728
sg30
I0
sg61
g48
(g584
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1729
sS'trials.thisTrialN'
p1730
I114
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5067529678344727
sS'trials.thisN'
p1731
I114
sa(dp1732
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_04_orig.jpg'
p1733
sS'trials.thisIndex'
p1734
g48
(g584
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1735
sS'trials.thisRepN'
p1736
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1737
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1738
sg30
I1
sg61
g48
(g584
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1739
sS'trials.thisTrialN'
p1740
I115
sg32
I0
sg41
g42
sg45
g46
sg33
F3.9534659385681152
sS'trials.thisN'
p1741
I115
sa(dp1742
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_04_orig.jpg'
p1743
sS'trials.thisIndex'
p1744
g48
(g584
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1745
sS'trials.thisRepN'
p1746
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1747
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1748
sg30
I0
sg61
g48
(g584
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1749
sS'trials.thisTrialN'
p1750
I116
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5072109699249268
sS'trials.thisN'
p1751
I116
sa(dp1752
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_10_orig.jpg'
p1753
sS'trials.thisIndex'
p1754
g48
(g584
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1755
sS'trials.thisRepN'
p1756
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1757
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1758
sg30
I1
sg61
g48
(g584
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1759
sS'trials.thisTrialN'
p1760
I117
sg32
I0
sg41
g42
sg45
g46
sg33
F1.842548131942749
sS'trials.thisN'
p1761
I117
sa(dp1762
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_04_orig.jpg'
p1763
sS'trials.thisIndex'
p1764
g48
(g584
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1765
sS'trials.thisRepN'
p1766
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1767
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1768
sg30
I0
sg61
g48
(g584
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1769
sS'trials.thisTrialN'
p1770
I118
sg32
I1
sg41
g42
sg45
g46
sg33
F14.093234062194824
sS'trials.thisN'
p1771
I118
sa(dp1772
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_09_orig.jpg'
p1773
sS'trials.thisIndex'
p1774
g48
(g584
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1775
sS'trials.thisRepN'
p1776
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1777
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1778
sg30
I0
sg61
g48
(g584
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1779
sS'trials.thisTrialN'
p1780
I119
sg32
I1
sg41
g42
sg45
g46
sg33
F2.7632570266723633
sS'trials.thisN'
p1781
I119
sa(dp1782
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_10_orig.jpg'
p1783
sS'trials.thisIndex'
p1784
g48
(g584
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1785
sS'trials.thisRepN'
p1786
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1787
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1788
sg30
I1
sg61
g48
(g584
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1789
sS'trials.thisTrialN'
p1790
I120
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4739789962768555
sS'trials.thisN'
p1791
I120
sa(dp1792
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_04_orig.jpg'
p1793
sS'trials.thisIndex'
p1794
g48
(g584
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1795
sS'trials.thisRepN'
p1796
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1797
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1798
sg30
I0
sg61
g48
(g584
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1799
sS'trials.thisTrialN'
p1800
I121
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2877511978149414
sS'trials.thisN'
p1801
I121
sa(dp1802
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_10_orig.jpg'
p1803
sS'trials.thisIndex'
p1804
g48
(g584
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1805
sS'trials.thisRepN'
p1806
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1807
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1808
sg30
I1
sg61
g48
(g584
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1809
sS'trials.thisTrialN'
p1810
I122
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6248321533203125
sS'trials.thisN'
p1811
I122
sa(dp1812
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_01_orig.jpg'
p1813
sS'trials.thisIndex'
p1814
g48
(g584
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1815
sS'trials.thisRepN'
p1816
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1817
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1818
sg30
I0
sg61
g48
(g584
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1819
sS'trials.thisTrialN'
p1820
I123
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2605900764465332
sS'trials.thisN'
p1821
I123
sa(dp1822
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_07_orig.jpg'
p1823
sS'trials.thisIndex'
p1824
g48
(g584
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1825
sS'trials.thisRepN'
p1826
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1827
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1828
sg30
I0
sg61
g48
(g584
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1829
sS'trials.thisTrialN'
p1830
I124
sg32
I1
sg41
g42
sg45
g46
sg33
F2.244952917098999
sS'trials.thisN'
p1831
I124
sa(dp1832
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_09_orig.jpg'
p1833
sS'trials.thisIndex'
p1834
g48
(g584
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1835
sS'trials.thisRepN'
p1836
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1837
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1838
sg30
I0
sg61
g48
(g584
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1839
sS'trials.thisTrialN'
p1840
I125
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8286900520324707
sS'trials.thisN'
p1841
I125
sa(dp1842
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_04_orig.jpg'
p1843
sS'trials.thisIndex'
p1844
g48
(g584
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1845
sS'trials.thisRepN'
p1846
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1847
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1848
sg30
I0
sg61
g48
(g584
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1849
sS'trials.thisTrialN'
p1850
I126
sg32
I1
sg41
g42
sg45
g46
sg33
F3.5013270378112793
sS'trials.thisN'
p1851
I126
sa(dp1852
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_02_orig.jpg'
p1853
sS'trials.thisIndex'
p1854
g48
(g584
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1855
sS'trials.thisRepN'
p1856
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1857
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1858
sg30
I1
sg61
g48
(g584
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1859
sS'trials.thisTrialN'
p1860
I127
sg32
I0
sg41
g42
sg45
g46
sg33
F4.5896689891815186
sS'trials.thisN'
p1861
I127
sa(dp1862
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_10_orig.jpg'
p1863
sS'trials.thisIndex'
p1864
g48
(g584
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1865
sS'trials.thisRepN'
p1866
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1867
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1868
sg30
I0
sg61
g48
(g584
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1869
sS'trials.thisTrialN'
p1870
I128
sg32
I1
sg41
g42
sg45
g46
sg33
F4.0860850811004639
sS'trials.thisN'
p1871
I128
sa(dp1872
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_07_orig.jpg'
p1873
sS'trials.thisIndex'
p1874
g48
(g584
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1875
sS'trials.thisRepN'
p1876
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1877
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1878
sg30
I1
sg61
g48
(g584
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1879
sS'trials.thisTrialN'
p1880
I129
sg32
I0
sg41
g42
sg45
g46
sg33
F5.5122990608215332
sS'trials.thisN'
p1881
I129
sa(dp1882
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_05_orig.jpg'
p1883
sS'trials.thisIndex'
p1884
g48
(g584
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1885
sS'trials.thisRepN'
p1886
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1887
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1888
sg30
I0
sg61
g48
(g584
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1889
sS'trials.thisTrialN'
p1890
I130
sg32
I1
sg41
g42
sg45
g46
sg33
F13.255269050598145
sS'trials.thisN'
p1891
I130
sa(dp1892
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_06_orig.jpg'
p1893
sS'trials.thisIndex'
p1894
g48
(g584
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1895
sS'trials.thisRepN'
p1896
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1897
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1898
sg30
I1
sg61
g48
(g584
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1899
sS'trials.thisTrialN'
p1900
I131
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4729211330413818
sS'trials.thisN'
p1901
I131
sa(dp1902
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_07_orig.jpg'
p1903
sS'trials.thisIndex'
p1904
g48
(g584
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1905
sS'trials.thisRepN'
p1906
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1907
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1908
sg30
I0
sg61
g48
(g584
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1909
sS'trials.thisTrialN'
p1910
I132
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8422641754150391
sS'trials.thisN'
p1911
I132
sa(dp1912
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_03_orig.jpg'
p1913
sS'trials.thisIndex'
p1914
g48
(g584
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1915
sS'trials.thisRepN'
p1916
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1917
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1918
sg30
I0
sg61
g48
(g584
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1919
sS'trials.thisTrialN'
p1920
I133
sg32
I1
sg41
g42
sg45
g46
sg33
F6.0155141353607178
sS'trials.thisN'
p1921
I133
sa(dp1922
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_09_orig.jpg'
p1923
sS'trials.thisIndex'
p1924
g48
(g584
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1925
sS'trials.thisRepN'
p1926
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1927
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1928
sg30
I1
sg61
g48
(g584
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1929
sS'trials.thisTrialN'
p1930
I134
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4400210380554199
sS'trials.thisN'
p1931
I134
sa(dp1932
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_00_orig.jpg'
p1933
sS'trials.thisIndex'
p1934
g48
(g584
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1935
sS'trials.thisRepN'
p1936
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1937
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1938
sg30
I0
sg61
g48
(g584
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1939
sS'trials.thisTrialN'
p1940
I135
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2041170597076416
sS'trials.thisN'
p1941
I135
sa(dp1942
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_02_orig.jpg'
p1943
sS'trials.thisIndex'
p1944
g48
(g584
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1945
sS'trials.thisRepN'
p1946
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1947
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1948
sg30
I1
sg61
g48
(g584
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1949
sS'trials.thisTrialN'
p1950
I136
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5906860828399658
sS'trials.thisN'
p1951
I136
sa(dp1952
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_04_orig.jpg'
p1953
sS'trials.thisIndex'
p1954
g48
(g584
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1955
sS'trials.thisRepN'
p1956
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1957
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1958
sg30
I0
sg61
g48
(g584
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1959
sS'trials.thisTrialN'
p1960
I137
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4400050640106201
sS'trials.thisN'
p1961
I137
sa(dp1962
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_00_orig.jpg'
p1963
sS'trials.thisIndex'
p1964
g48
(g584
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1965
sS'trials.thisRepN'
p1966
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1967
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1968
sg30
I0
sg61
g48
(g584
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1969
sS'trials.thisTrialN'
p1970
I138
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6910929679870605
sS'trials.thisN'
p1971
I138
sa(dp1972
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_04_orig.jpg'
p1973
sS'trials.thisIndex'
p1974
g48
(g584
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1975
sS'trials.thisRepN'
p1976
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1977
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1978
sg30
I1
sg61
g48
(g584
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1979
sS'trials.thisTrialN'
p1980
I139
sg32
I0
sg41
g42
sg45
g46
sg33
F18.920313119888306
sS'trials.thisN'
p1981
I139
sa(dp1982
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_09_orig.jpg'
p1983
sS'trials.thisIndex'
p1984
g48
(g584
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1985
sS'trials.thisRepN'
p1986
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1987
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1988
sg30
I0
sg61
g48
(g584
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1989
sS'trials.thisTrialN'
p1990
I140
sg32
I1
sg41
g42
sg45
g46
sg33
F0.92058706283569336
sS'trials.thisN'
p1991
I140
sa(dp1992
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_10_orig.jpg'
p1993
sS'trials.thisIndex'
p1994
g48
(g584
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp1995
sS'trials.thisRepN'
p1996
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1997
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1998
sg30
I1
sg61
g48
(g584
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp1999
sS'trials.thisTrialN'
p2000
I141
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4230818748474121
sS'trials.thisN'
p2001
I141
sa(dp2002
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_08_orig.jpg'
p2003
sS'trials.thisIndex'
p2004
g48
(g584
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2005
sS'trials.thisRepN'
p2006
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2007
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2008
sg30
I0
sg61
g48
(g584
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2009
sS'trials.thisTrialN'
p2010
I142
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9650359153747559
sS'trials.thisN'
p2011
I142
sa(dp2012
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_08_orig.jpg'
p2013
sS'trials.thisIndex'
p2014
g48
(g584
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2015
sS'trials.thisRepN'
p2016
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2017
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2018
sg30
I1
sg61
g48
(g584
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2019
sS'trials.thisTrialN'
p2020
I143
sg32
I0
sg41
g42
sg45
g46
sg33
F6.2157998085021973
sS'trials.thisN'
p2021
I143
sa(dp2022
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_10_orig.jpg'
p2023
sS'trials.thisIndex'
p2024
g48
(g584
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2025
sS'trials.thisRepN'
p2026
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2027
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2028
sg30
I0
sg61
g48
(g584
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2029
sS'trials.thisTrialN'
p2030
I144
sg32
I1
sg41
g42
sg45
g46
sg33
F3.2166130542755127
sS'trials.thisN'
p2031
I144
sa(dp2032
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_10_orig.jpg'
p2033
sS'trials.thisIndex'
p2034
g48
(g584
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2035
sS'trials.thisRepN'
p2036
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2037
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2038
sg30
I1
sg61
g48
(g584
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2039
sS'trials.thisTrialN'
p2040
I145
sg32
I0
sg41
g42
sg45
g46
sg33
F5.3782880306243896
sS'trials.thisN'
p2041
I145
sa(dp2042
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_03_orig.jpg'
p2043
sS'trials.thisIndex'
p2044
g48
(g584
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2045
sS'trials.thisRepN'
p2046
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2047
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2048
sg30
I0
sg61
g48
(g584
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2049
sS'trials.thisTrialN'
p2050
I146
sg32
I1
sg41
g42
sg45
g46
sg33
F0.88543891906738281
sS'trials.thisN'
p2051
I146
sa(dp2052
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_04_orig.jpg'
p2053
sS'trials.thisIndex'
p2054
g48
(g584
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2055
sS'trials.thisRepN'
p2056
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2057
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2058
sg30
I1
sg61
g48
(g584
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2059
sS'trials.thisTrialN'
p2060
I147
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5903809070587158
sS'trials.thisN'
p2061
I147
sa(dp2062
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_01_orig.jpg'
p2063
sS'trials.thisIndex'
p2064
g48
(g584
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2065
sS'trials.thisRepN'
p2066
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2067
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2068
sg30
I0
sg61
g48
(g584
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2069
sS'trials.thisTrialN'
p2070
I148
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5396020412445068
sS'trials.thisN'
p2071
I148
sa(dp2072
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_06_orig.jpg'
p2073
sS'trials.thisIndex'
p2074
g48
(g584
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2075
sS'trials.thisRepN'
p2076
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2077
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2078
sg30
I0
sg61
g48
(g584
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2079
sS'trials.thisTrialN'
p2080
I149
sg32
I1
sg41
g42
sg45
g46
sg33
F6.5180718898773193
sS'trials.thisN'
p2081
I149
sa(dp2082
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_05_orig.jpg'
p2083
sS'trials.thisIndex'
p2084
g48
(g584
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2085
sS'trials.thisRepN'
p2086
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2087
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2088
sg30
I1
sg61
g48
(g584
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2089
sS'trials.thisTrialN'
p2090
I150
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6576459407806396
sS'trials.thisN'
p2091
I150
sa(dp2092
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_03_orig.jpg'
p2093
sS'trials.thisIndex'
p2094
g48
(g584
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2095
sS'trials.thisRepN'
p2096
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2097
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2098
sg30
I0
sg61
g48
(g584
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2099
sS'trials.thisTrialN'
p2100
I151
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8909029960632324
sS'trials.thisN'
p2101
I151
sa(dp2102
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_08_orig.jpg'
p2103
sS'trials.thisIndex'
p2104
g48
(g584
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2105
sS'trials.thisRepN'
p2106
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2107
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2108
sg30
I0
sg61
g48
(g584
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2109
sS'trials.thisTrialN'
p2110
I152
sg32
I1
sg41
g42
sg45
g46
sg33
F2.7638230323791504
sS'trials.thisN'
p2111
I152
sa(dp2112
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_02_orig.jpg'
p2113
sS'trials.thisIndex'
p2114
g48
(g584
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2115
sS'trials.thisRepN'
p2116
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2117
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2118
sg30
I1
sg61
g48
(g584
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2119
sS'trials.thisTrialN'
p2120
I153
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8303868770599365
sS'trials.thisN'
p2121
I153
sa(dp2122
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_07_orig.jpg'
p2123
sS'trials.thisIndex'
p2124
g48
(g584
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2125
sS'trials.thisRepN'
p2126
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2127
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2128
sg30
I0
sg61
g48
(g584
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2129
sS'trials.thisTrialN'
p2130
I154
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6568729877471924
sS'trials.thisN'
p2131
I154
sa(dp2132
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_02_orig.jpg'
p2133
sS'trials.thisIndex'
p2134
g48
(g584
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2135
sS'trials.thisRepN'
p2136
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2137
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2138
sg30
I0
sg61
g48
(g584
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2139
sS'trials.thisTrialN'
p2140
I155
sg32
I1
sg41
g42
sg45
g46
sg33
F11.110288858413696
sS'trials.thisN'
p2141
I155
sa(dp2142
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_03_orig.jpg'
p2143
sS'trials.thisIndex'
p2144
g48
(g584
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2145
sS'trials.thisRepN'
p2146
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2147
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2148
sg30
I1
sg61
g48
(g584
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2149
sS'trials.thisTrialN'
p2150
I156
sg32
I0
sg41
g42
sg45
g46
sg33
F3.7522249221801758
sS'trials.thisN'
p2151
I156
sa(dp2152
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_01_orig.jpg'
p2153
sS'trials.thisIndex'
p2154
g48
(g584
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2155
sS'trials.thisRepN'
p2156
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2157
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2158
sg30
I0
sg61
g48
(g584
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2159
sS'trials.thisTrialN'
p2160
I157
sg32
I1
sg41
g42
sg45
g46
sg33
F1.876230001449585
sS'trials.thisN'
p2161
I157
sa(dp2162
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_00_orig.jpg'
p2163
sS'trials.thisIndex'
p2164
g48
(g584
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2165
sS'trials.thisRepN'
p2166
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2167
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2168
sg30
I0
sg61
g48
(g584
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2169
sS'trials.thisTrialN'
p2170
I158
sg32
I1
sg41
g42
sg45
g46
sg33
F2.076350212097168
sS'trials.thisN'
p2171
I158
sa(dp2172
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_08_orig.jpg'
p2173
sS'trials.thisIndex'
p2174
g48
(g584
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2175
sS'trials.thisRepN'
p2176
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2177
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2178
sg30
I1
sg61
g48
(g584
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2179
sS'trials.thisTrialN'
p2180
I159
sg32
I0
sg41
g42
sg45
g46
sg33
F5.6286299228668213
sS'trials.thisN'
p2181
I159
sa(dp2182
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_01_orig.jpg'
p2183
sS'trials.thisIndex'
p2184
g48
(g584
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2185
sS'trials.thisRepN'
p2186
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2187
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2188
sg30
I1
sg61
g48
(g584
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2189
sS'trials.thisTrialN'
p2190
I160
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4227919578552246
sS'trials.thisN'
p2191
I160
sa(dp2192
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_06_orig.jpg'
p2193
sS'trials.thisIndex'
p2194
g48
(g584
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2195
sS'trials.thisRepN'
p2196
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2197
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2198
sg30
I1
sg61
g48
(g584
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2199
sS'trials.thisTrialN'
p2200
I161
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6949949264526367
sS'trials.thisN'
p2201
I161
sa(dp2202
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_07_orig.jpg'
p2203
sS'trials.thisIndex'
p2204
g48
(g584
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2205
sS'trials.thisRepN'
p2206
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2207
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2208
sg30
I1
sg61
g48
(g584
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2209
sS'trials.thisTrialN'
p2210
I162
sg32
I0
sg41
g42
sg45
g46
sg33
F26.228422880172729
sS'trials.thisN'
p2211
I162
sa(dp2212
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_00_orig.jpg'
p2213
sS'trials.thisIndex'
p2214
g48
(g584
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2215
sS'trials.thisRepN'
p2216
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2217
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2218
sg30
I0
sg61
g48
(g584
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2219
sS'trials.thisTrialN'
p2220
I163
sg32
I1
sg41
g42
sg45
g46
sg33
F0.90175294876098633
sS'trials.thisN'
p2221
I163
sa(dp2222
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_00_orig.jpg'
p2223
sS'trials.thisIndex'
p2224
g48
(g584
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2225
sS'trials.thisRepN'
p2226
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2227
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2228
sg30
I1
sg61
g48
(g584
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2229
sS'trials.thisTrialN'
p2230
I164
sg32
I0
sg41
g42
sg45
g46
sg33
F4.4214649200439453
sS'trials.thisN'
p2231
I164
sa(dp2232
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_03_orig.jpg'
p2233
sS'trials.thisIndex'
p2234
g48
(g584
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2235
sS'trials.thisRepN'
p2236
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2237
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2238
sg30
I0
sg61
g48
(g584
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2239
sS'trials.thisTrialN'
p2240
I165
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0209250450134277
sS'trials.thisN'
p2241
I165
sa(dp2242
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_03_orig.jpg'
p2243
sS'trials.thisIndex'
p2244
g48
(g584
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2245
sS'trials.thisRepN'
p2246
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2247
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2248
sg30
I1
sg61
g48
(g584
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2249
sS'trials.thisTrialN'
p2250
I166
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6849899291992188
sS'trials.thisN'
p2251
I166
sa(dp2252
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_05_orig.jpg'
p2253
sS'trials.thisIndex'
p2254
g48
(g584
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2255
sS'trials.thisRepN'
p2256
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2257
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2258
sg30
I0
sg61
g48
(g584
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2259
sS'trials.thisTrialN'
p2260
I167
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0714380741119385
sS'trials.thisN'
p2261
I167
sa(dp2262
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_05_orig.jpg'
p2263
sS'trials.thisIndex'
p2264
g48
(g584
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2265
sS'trials.thisRepN'
p2266
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2267
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2268
sg30
I1
sg61
g48
(g584
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2269
sS'trials.thisTrialN'
p2270
I168
sg32
I0
sg41
g42
sg45
g46
sg33
F7.2722451686859131
sS'trials.thisN'
p2271
I168
sa(dp2272
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_07_orig.jpg'
p2273
sS'trials.thisIndex'
p2274
g48
(g584
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2275
sS'trials.thisRepN'
p2276
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2277
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2278
sg30
I0
sg61
g48
(g584
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2279
sS'trials.thisTrialN'
p2280
I169
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5404801368713379
sS'trials.thisN'
p2281
I169
sa(dp2282
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_04_orig.jpg'
p2283
sS'trials.thisIndex'
p2284
g48
(g584
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2285
sS'trials.thisRepN'
p2286
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2287
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2288
sg30
I1
sg61
g48
(g584
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2289
sS'trials.thisTrialN'
p2290
I170
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7083039283752441
sS'trials.thisN'
p2291
I170
sa(dp2292
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_03_orig.jpg'
p2293
sS'trials.thisIndex'
p2294
g48
(g584
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2295
sS'trials.thisRepN'
p2296
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2297
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2298
sg30
I0
sg61
g48
(g584
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2299
sS'trials.thisTrialN'
p2300
I171
sg32
I1
sg41
g42
sg45
g46
sg33
F4.1027529239654541
sS'trials.thisN'
p2301
I171
sa(dp2302
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_04_orig.jpg'
p2303
sS'trials.thisIndex'
p2304
g48
(g584
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2305
sS'trials.thisRepN'
p2306
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2307
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2308
sg30
I1
sg61
g48
(g584
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2309
sS'trials.thisTrialN'
p2310
I172
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0888521671295166
sS'trials.thisN'
p2311
I172
sa(dp2312
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_10_orig.jpg'
p2313
sS'trials.thisIndex'
p2314
g48
(g584
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2315
sS'trials.thisRepN'
p2316
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2317
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2318
sg30
I0
sg61
g48
(g584
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2319
sS'trials.thisTrialN'
p2320
I173
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3368351459503174
sS'trials.thisN'
p2321
I173
sa(dp2322
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_06_orig.jpg'
p2323
sS'trials.thisIndex'
p2324
g48
(g584
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2325
sS'trials.thisRepN'
p2326
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2327
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2328
sg30
I1
sg61
g48
(g584
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2329
sS'trials.thisTrialN'
p2330
I174
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6522300243377686
sS'trials.thisN'
p2331
I174
sa(dp2332
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_01_orig.jpg'
p2333
sS'trials.thisIndex'
p2334
g48
(g584
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2335
sS'trials.thisRepN'
p2336
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2337
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2338
sg30
I1
sg61
g48
(g584
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2339
sS'trials.thisTrialN'
p2340
I175
sg32
I0
sg41
g42
sg45
g46
sg33
F4.0377850532531738
sS'trials.thisN'
p2341
I175
sa(dp2342
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_05_orig.jpg'
p2343
sS'trials.thisIndex'
p2344
g48
(g584
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2345
sS'trials.thisRepN'
p2346
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2347
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2348
sg30
I1
sg61
g48
(g584
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2349
sS'trials.thisTrialN'
p2350
I176
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2278380393981934
sS'trials.thisN'
p2351
I176
sa(dp2352
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_08_orig.jpg'
p2353
sS'trials.thisIndex'
p2354
g48
(g584
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2355
sS'trials.thisRepN'
p2356
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2357
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2358
sg30
I1
sg61
g48
(g584
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2359
sS'trials.thisTrialN'
p2360
I177
sg32
I0
sg41
g42
sg45
g46
sg33
F29.679672002792358
sS'trials.thisN'
p2361
I177
sa(dp2362
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_00_orig.jpg'
p2363
sS'trials.thisIndex'
p2364
g48
(g584
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2365
sS'trials.thisRepN'
p2366
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2367
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2368
sg30
I0
sg61
g48
(g584
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2369
sS'trials.thisTrialN'
p2370
I178
sg32
I1
sg41
g42
sg45
g46
sg33
F0.81867790222167969
sS'trials.thisN'
p2371
I178
sa(dp2372
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_04_orig.jpg'
p2373
sS'trials.thisIndex'
p2374
g48
(g584
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2375
sS'trials.thisRepN'
p2376
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2377
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2378
sg30
I1
sg61
g48
(g584
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2379
sS'trials.thisTrialN'
p2380
I179
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0548520088195801
sS'trials.thisN'
p2381
I179
sa(dp2382
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_06_orig.jpg'
p2383
sS'trials.thisIndex'
p2384
g48
(g584
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2385
sS'trials.thisRepN'
p2386
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2387
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2388
sg30
I0
sg61
g48
(g584
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2389
sS'trials.thisTrialN'
p2390
I180
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2890849113464355
sS'trials.thisN'
p2391
I180
sa(dp2392
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_06_orig.jpg'
p2393
sS'trials.thisIndex'
p2394
g48
(g584
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2395
sS'trials.thisRepN'
p2396
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2397
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2398
sg30
I1
sg61
g48
(g584
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2399
sS'trials.thisTrialN'
p2400
I181
sg32
I0
sg41
g42
sg45
g46
sg33
F16.557064056396484
sS'trials.thisN'
p2401
I181
sa(dp2402
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_02_orig.jpg'
p2403
sS'trials.thisIndex'
p2404
g48
(g584
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2405
sS'trials.thisRepN'
p2406
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2407
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2408
sg30
I0
sg61
g48
(g584
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2409
sS'trials.thisTrialN'
p2410
I182
sg32
I1
sg41
g42
sg45
g46
sg33
F0.82016897201538086
sS'trials.thisN'
p2411
I182
sa(dp2412
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_04_orig.jpg'
p2413
sS'trials.thisIndex'
p2414
g48
(g584
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2415
sS'trials.thisRepN'
p2416
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2417
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2418
sg30
I1
sg61
g48
(g584
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2419
sS'trials.thisTrialN'
p2420
I183
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0992238521575928
sS'trials.thisN'
p2421
I183
sa(dp2422
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_01_orig.jpg'
p2423
sS'trials.thisIndex'
p2424
g48
(g584
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2425
sS'trials.thisRepN'
p2426
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2427
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2428
sg30
I0
sg61
g48
(g584
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2429
sS'trials.thisTrialN'
p2430
I184
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0543029308319092
sS'trials.thisN'
p2431
I184
sa(dp2432
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_05_orig.jpg'
p2433
sS'trials.thisIndex'
p2434
g48
(g584
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2435
sS'trials.thisRepN'
p2436
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2437
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2438
sg30
I1
sg61
g48
(g584
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2439
sS'trials.thisTrialN'
p2440
I185
sg32
I0
sg41
g42
sg45
g46
sg33
F12.6180260181427
sS'trials.thisN'
p2441
I185
sa(dp2442
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF1_03_orig.jpg'
p2443
sS'trials.thisIndex'
p2444
g48
(g584
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2445
sS'trials.thisRepN'
p2446
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2447
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2448
sg30
I0
sg61
g48
(g584
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2449
sS'trials.thisTrialN'
p2450
I186
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0874011516571045
sS'trials.thisN'
p2451
I186
sa(dp2452
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF6_07_orig.jpg'
p2453
sS'trials.thisIndex'
p2454
g48
(g584
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2455
sS'trials.thisRepN'
p2456
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2457
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2458
sg30
I1
sg61
g48
(g584
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2459
sS'trials.thisTrialN'
p2460
I187
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4070110321044922
sS'trials.thisN'
p2461
I187
sa(dp2462
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF5_05_orig.jpg'
p2463
sS'trials.thisIndex'
p2464
g48
(g584
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2465
sS'trials.thisRepN'
p2466
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2467
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2468
sg30
I1
sg61
g48
(g584
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2469
sS'trials.thisTrialN'
p2470
I188
sg32
I0
sg41
g42
sg45
g46
sg33
F6.6679151058197021
sS'trials.thisN'
p2471
I188
sa(dp2472
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_00_orig.jpg'
p2473
sS'trials.thisIndex'
p2474
g48
(g584
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2475
sS'trials.thisRepN'
p2476
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2477
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2478
sg30
I0
sg61
g48
(g584
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2479
sS'trials.thisTrialN'
p2480
I189
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4401419162750244
sS'trials.thisN'
p2481
I189
sa(dp2482
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_01_orig.jpg'
p2483
sS'trials.thisIndex'
p2484
g48
(g584
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2485
sS'trials.thisRepN'
p2486
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2487
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2488
sg30
I1
sg61
g48
(g584
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2489
sS'trials.thisTrialN'
p2490
I190
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9651789665222168
sS'trials.thisN'
p2491
I190
sa(dp2492
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_08_orig.jpg'
p2493
sS'trials.thisIndex'
p2494
g48
(g584
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2495
sS'trials.thisRepN'
p2496
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2497
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2498
sg30
I0
sg61
g48
(g584
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2499
sS'trials.thisTrialN'
p2500
I191
sg32
I1
sg41
g42
sg45
g46
sg33
F2.997859001159668
sS'trials.thisN'
p2501
I191
sa(dp2502
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_05_orig.jpg'
p2503
sS'trials.thisIndex'
p2504
g48
(g584
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2505
sS'trials.thisRepN'
p2506
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2507
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2508
sg30
I0
sg61
g48
(g584
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2509
sS'trials.thisTrialN'
p2510
I192
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0714211463928223
sS'trials.thisN'
p2511
I192
sa(dp2512
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM2_02_orig.jpg'
p2513
sS'trials.thisIndex'
p2514
g48
(g584
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2515
sS'trials.thisRepN'
p2516
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2517
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2518
sg30
I1
sg61
g48
(g584
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2519
sS'trials.thisTrialN'
p2520
I193
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3557829856872559
sS'trials.thisN'
p2521
I193
sa(dp2522
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_02_orig.jpg'
p2523
sS'trials.thisIndex'
p2524
g48
(g584
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2525
sS'trials.thisRepN'
p2526
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2527
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2528
sg30
I0
sg61
g48
(g584
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2529
sS'trials.thisTrialN'
p2530
I194
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1214179992675781
sS'trials.thisN'
p2531
I194
sa(dp2532
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_06_orig.jpg'
p2533
sS'trials.thisIndex'
p2534
g48
(g584
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2535
sS'trials.thisRepN'
p2536
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2537
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2538
sg30
I0
sg61
g48
(g584
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2539
sS'trials.thisTrialN'
p2540
I195
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7400951385498047
sS'trials.thisN'
p2541
I195
sa(dp2542
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_09_orig.jpg'
p2543
sS'trials.thisIndex'
p2544
g48
(g584
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2545
sS'trials.thisRepN'
p2546
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2547
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2548
sg30
I1
sg61
g48
(g584
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2549
sS'trials.thisTrialN'
p2550
I196
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3897988796234131
sS'trials.thisN'
p2551
I196
sa(dp2552
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_08_orig.jpg'
p2553
sS'trials.thisIndex'
p2554
g48
(g584
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2555
sS'trials.thisRepN'
p2556
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2557
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2558
sg30
I0
sg61
g48
(g584
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2559
sS'trials.thisTrialN'
p2560
I197
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8420000076293945
sS'trials.thisN'
p2561
I197
sa(dp2562
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM10_01_orig.jpg'
p2563
sS'trials.thisIndex'
p2564
g48
(g584
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2565
sS'trials.thisRepN'
p2566
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2567
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2568
sg30
I0
sg61
g48
(g584
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2569
sS'trials.thisTrialN'
p2570
I198
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3063240051269531
sS'trials.thisN'
p2571
I198
sa(dp2572
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_02_orig.jpg'
p2573
sS'trials.thisIndex'
p2574
g48
(g584
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2575
sS'trials.thisRepN'
p2576
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2577
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2578
sg30
I1
sg61
g48
(g584
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2579
sS'trials.thisTrialN'
p2580
I199
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2054870128631592
sS'trials.thisN'
p2581
I199
sa(dp2582
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_06_orig.jpg'
p2583
sS'trials.thisIndex'
p2584
g48
(g584
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2585
sS'trials.thisRepN'
p2586
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2587
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2588
sg30
I1
sg61
g48
(g584
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2589
sS'trials.thisTrialN'
p2590
I200
sg32
I0
sg41
g42
sg45
g46
sg33
F1.50589919090271
sS'trials.thisN'
p2591
I200
sa(dp2592
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_02_orig.jpg'
p2593
sS'trials.thisIndex'
p2594
g48
(g584
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2595
sS'trials.thisRepN'
p2596
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2597
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2598
sg30
I1
sg61
g48
(g584
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2599
sS'trials.thisTrialN'
p2600
I201
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0032460689544678
sS'trials.thisN'
p2601
I201
sa(dp2602
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF10_02_orig.jpg'
p2603
sS'trials.thisIndex'
p2604
g48
(g584
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2605
sS'trials.thisRepN'
p2606
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2607
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2608
sg30
I0
sg61
g48
(g584
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2609
sS'trials.thisTrialN'
p2610
I202
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98773598670959473
sS'trials.thisN'
p2611
I202
sa(dp2612
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_08_orig.jpg'
p2613
sS'trials.thisIndex'
p2614
g48
(g584
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2615
sS'trials.thisRepN'
p2616
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2617
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2618
sg30
I1
sg61
g48
(g584
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2619
sS'trials.thisTrialN'
p2620
I203
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1216650009155273
sS'trials.thisN'
p2621
I203
sa(dp2622
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM8_08_orig.jpg'
p2623
sS'trials.thisIndex'
p2624
g48
(g584
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2625
sS'trials.thisRepN'
p2626
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2627
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2628
sg30
I0
sg61
g48
(g584
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2629
sS'trials.thisTrialN'
p2630
I204
sg32
I1
sg41
g42
sg45
g46
sg33
F2.010037899017334
sS'trials.thisN'
p2631
I204
sa(dp2632
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF7_09_orig.jpg'
p2633
sS'trials.thisIndex'
p2634
g48
(g584
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2635
sS'trials.thisRepN'
p2636
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2637
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2638
sg30
I0
sg61
g48
(g584
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2639
sS'trials.thisTrialN'
p2640
I205
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4884238243103027
sS'trials.thisN'
p2641
I205
sa(dp2642
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM6_06_orig.jpg'
p2643
sS'trials.thisIndex'
p2644
g48
(g584
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2645
sS'trials.thisRepN'
p2646
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2647
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2648
sg30
I1
sg61
g48
(g584
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2649
sS'trials.thisTrialN'
p2650
I206
sg32
I0
sg41
g42
sg45
g46
sg33
F1.28672194480896
sS'trials.thisN'
p2651
I206
sa(dp2652
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_09_orig.jpg'
p2653
sS'trials.thisIndex'
p2654
g48
(g584
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2655
sS'trials.thisRepN'
p2656
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2657
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2658
sg30
I1
sg61
g48
(g584
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2659
sS'trials.thisTrialN'
p2660
I207
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1389930248260498
sS'trials.thisN'
p2661
I207
sa(dp2662
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM1_10_orig.jpg'
p2663
sS'trials.thisIndex'
p2664
g48
(g584
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2665
sS'trials.thisRepN'
p2666
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2667
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2668
sg30
I0
sg61
g48
(g584
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2669
sS'trials.thisTrialN'
p2670
I208
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2888419628143311
sS'trials.thisN'
p2671
I208
sa(dp2672
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM3_02_orig.jpg'
p2673
sS'trials.thisIndex'
p2674
g48
(g584
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2675
sS'trials.thisRepN'
p2676
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2677
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2678
sg30
I1
sg61
g48
(g584
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2679
sS'trials.thisTrialN'
p2680
I209
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2558090686798096
sS'trials.thisN'
p2681
I209
sa(dp2682
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF3_06_orig.jpg'
p2683
sS'trials.thisIndex'
p2684
g48
(g584
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2685
sS'trials.thisRepN'
p2686
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2687
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2688
sg30
I0
sg61
g48
(g584
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2689
sS'trials.thisTrialN'
p2690
I210
sg32
I1
sg41
g42
sg45
g46
sg33
F3.836461067199707
sS'trials.thisN'
p2691
I210
sa(dp2692
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_05_orig.jpg'
p2693
sS'trials.thisIndex'
p2694
g48
(g584
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2695
sS'trials.thisRepN'
p2696
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2697
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2698
sg30
I1
sg61
g48
(g584
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2699
sS'trials.thisTrialN'
p2700
I211
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0313467979431152
sS'trials.thisN'
p2701
I211
sa(dp2702
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM4_09_orig.jpg'
p2703
sS'trials.thisIndex'
p2704
g48
(g584
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2705
sS'trials.thisRepN'
p2706
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2707
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2708
sg30
I0
sg61
g48
(g584
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2709
sS'trials.thisTrialN'
p2710
I212
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8420388698577881
sS'trials.thisN'
p2711
I212
sa(dp2712
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF9_02_orig.jpg'
p2713
sS'trials.thisIndex'
p2714
g48
(g584
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2715
sS'trials.thisRepN'
p2716
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2717
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2718
sg30
I1
sg61
g48
(g584
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2719
sS'trials.thisTrialN'
p2720
I213
sg32
I0
sg41
g42
sg45
g46
sg33
F4.3911058902740479
sS'trials.thisN'
p2721
I213
sa(dp2722
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF8_07_orig.jpg'
p2723
sS'trials.thisIndex'
p2724
g48
(g584
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2725
sS'trials.thisRepN'
p2726
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2727
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2728
sg30
I1
sg61
g48
(g584
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2729
sS'trials.thisTrialN'
p2730
I214
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0699880123138428
sS'trials.thisN'
p2731
I214
sa(dp2732
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM5_07_orig.jpg'
p2733
sS'trials.thisIndex'
p2734
g48
(g584
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2735
sS'trials.thisRepN'
p2736
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2737
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2738
sg30
I0
sg61
g48
(g584
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2739
sS'trials.thisTrialN'
p2740
I215
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1084480285644531
sS'trials.thisN'
p2741
I215
sa(dp2742
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM7_01_orig.jpg'
p2743
sS'trials.thisIndex'
p2744
g48
(g584
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2745
sS'trials.thisRepN'
p2746
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2747
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2748
sg30
I0
sg61
g48
(g584
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2749
sS'trials.thisTrialN'
p2750
I216
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0202240943908691
sS'trials.thisN'
p2751
I216
sa(dp2752
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphM9_00_orig.jpg'
p2753
sS'trials.thisIndex'
p2754
g48
(g584
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2755
sS'trials.thisRepN'
p2756
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2757
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2758
sg30
I1
sg61
g48
(g584
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2759
sS'trials.thisTrialN'
p2760
I217
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1729319095611572
sS'trials.thisN'
p2761
I217
sa(dp2762
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF4_08_orig.jpg'
p2763
sS'trials.thisIndex'
p2764
g48
(g584
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2765
sS'trials.thisRepN'
p2766
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2767
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2768
sg30
I0
sg61
g48
(g584
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2769
sS'trials.thisTrialN'
p2770
I218
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7390480041503906
sS'trials.thisN'
p2771
I218
sa(dp2772
g31
I0
sg44
g11
sg43
VG
sg581
S'./stim/MorphF2_10_orig.jpg'
p2773
sS'trials.thisIndex'
p2774
g48
(g584
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2775
sS'trials.thisRepN'
p2776
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2777
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2778
sg30
I0
sg61
g48
(g584
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2779
sS'trials.thisTrialN'
p2780
I219
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6637392044067383
sS'trials.thisN'
p2781
I219
sa(dp2782
g44
g11
sg34
S'return'
p2783
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg35
F36.972309112548828
sa(dp2784
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2785
g48
(g584
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2786
sS'trials2.thisRepN'
p2787
I0
sS'trials2.thisTrialN'
p2788
I0
sS'img'
p2789
S'./stim/MorphM4_02_orig.jpg'
p2790
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2791
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2792
sg30
I1
sS'num'
p2793
g48
(g584
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2794
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3846189975738525
sS'trials2.thisN'
p2795
I0
sa(dp2796
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2797
g48
(g584
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2798
sS'trials2.thisRepN'
p2799
I0
sS'trials2.thisTrialN'
p2800
I1
sg2789
S'./stim/MorphM8_00_orig.jpg'
p2801
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2802
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2803
sg30
I1
sg2793
g48
(g584
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2804
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0238220691680908
sS'trials2.thisN'
p2805
I1
sa(dp2806
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2807
g48
(g584
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2808
sS'trials2.thisRepN'
p2809
I0
sS'trials2.thisTrialN'
p2810
I2
sg2789
S'./stim/MorphM6_02_orig.jpg'
p2811
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2812
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2813
sg30
I1
sg2793
g48
(g584
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2814
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98659777641296387
sS'trials2.thisN'
p2815
I2
sa(dp2816
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2817
g48
(g584
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2818
sS'trials2.thisRepN'
p2819
I0
sS'trials2.thisTrialN'
p2820
I3
sg2789
S'./stim/MorphF8_00_orig.jpg'
p2821
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2822
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2823
sg30
I0
sg2793
g48
(g584
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2824
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0041739940643311
sS'trials2.thisN'
p2825
I3
sa(dp2826
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2827
g48
(g584
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2828
sS'trials2.thisRepN'
p2829
I0
sS'trials2.thisTrialN'
p2830
I4
sg2789
S'./stim/MorphM8_05_orig.jpg'
p2831
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2832
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2833
sg30
I1
sg2793
g48
(g584
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2834
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95384001731872559
sS'trials2.thisN'
p2835
I4
sa(dp2836
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2837
g48
(g584
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2838
sS'trials2.thisRepN'
p2839
I0
sS'trials2.thisTrialN'
p2840
I5
sg2789
S'./stim/MorphM7_04_orig.jpg'
p2841
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2842
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2843
sg30
I0
sg2793
g48
(g584
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2844
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5576388835906982
sS'trials2.thisN'
p2845
I5
sa(dp2846
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2847
g48
(g584
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2848
sS'trials2.thisRepN'
p2849
I0
sS'trials2.thisTrialN'
p2850
I6
sg2789
S'./stim/MorphM1_07_orig.jpg'
p2851
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2852
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2853
sg30
I1
sg2793
g48
(g584
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2854
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3377549648284912
sS'trials2.thisN'
p2855
I6
sa(dp2856
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2857
g48
(g584
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2858
sS'trials2.thisRepN'
p2859
I0
sS'trials2.thisTrialN'
p2860
I7
sg2789
S'./stim/MorphM7_10_orig.jpg'
p2861
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2862
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2863
sg30
I0
sg2793
g48
(g584
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2864
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7577309608459473
sS'trials2.thisN'
p2865
I7
sa(dp2866
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2867
g48
(g584
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2868
sS'trials2.thisRepN'
p2869
I0
sS'trials2.thisTrialN'
p2870
I8
sg2789
S'./stim/MorphM6_03_orig.jpg'
p2871
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2872
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2873
sg30
I1
sg2793
g48
(g584
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2874
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5726759433746338
sS'trials2.thisN'
p2875
I8
sa(dp2876
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2877
g48
(g584
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2878
sS'trials2.thisRepN'
p2879
I0
sS'trials2.thisTrialN'
p2880
I9
sg2789
S'./stim/MorphM1_09_orig.jpg'
p2881
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2882
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2883
sg30
I0
sg2793
g48
(g584
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2884
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2369279861450195
sS'trials2.thisN'
p2885
I9
sa(dp2886
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2887
g48
(g584
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2888
sS'trials2.thisRepN'
p2889
I0
sS'trials2.thisTrialN'
p2890
I10
sg2789
S'./stim/MorphM10_05_orig.jpg'
p2891
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2892
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2893
sg30
I0
sg2793
g48
(g584
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2894
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5389940738677979
sS'trials2.thisN'
p2895
I10
sa(dp2896
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2897
g48
(g584
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2898
sS'trials2.thisRepN'
p2899
I0
sS'trials2.thisTrialN'
p2900
I11
sg2789
S'./stim/MorphM7_00_orig.jpg'
p2901
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2902
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2903
sg30
I1
sg2793
g48
(g584
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2904
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0377359390258789
sS'trials2.thisN'
p2905
I11
sa(dp2906
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2907
g48
(g584
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2908
sS'trials2.thisRepN'
p2909
I0
sS'trials2.thisTrialN'
p2910
I12
sg2789
S'./stim/MorphF3_00_orig.jpg'
p2911
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2912
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2913
sg30
I1
sg2793
g48
(g584
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2914
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6917111873626709
sS'trials2.thisN'
p2915
I12
sa(dp2916
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2917
g48
(g584
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2918
sS'trials2.thisRepN'
p2919
I0
sS'trials2.thisTrialN'
p2920
I13
sg2789
S'./stim/MorphF2_07_orig.jpg'
p2921
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2922
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2923
sg30
I1
sg2793
g48
(g584
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2924
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3611390590667725
sS'trials2.thisN'
p2925
I13
sa(dp2926
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2927
g48
(g584
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2928
sS'trials2.thisRepN'
p2929
I0
sS'trials2.thisTrialN'
p2930
I14
sg2789
S'./stim/MorphM3_08_orig.jpg'
p2931
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2932
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2933
sg30
I0
sg2793
g48
(g584
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2934
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4403858184814453
sS'trials2.thisN'
p2935
I14
sa(dp2936
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2937
g48
(g584
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2938
sS'trials2.thisRepN'
p2939
I0
sS'trials2.thisTrialN'
p2940
I15
sg2789
S'./stim/MorphF6_09_orig.jpg'
p2941
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2942
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2943
sg30
I0
sg2793
g48
(g584
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2944
sg32
I1
sg41
g42
sg45
g46
sg33
F1.171964168548584
sS'trials2.thisN'
p2945
I15
sa(dp2946
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2947
g48
(g584
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2948
sS'trials2.thisRepN'
p2949
I0
sS'trials2.thisTrialN'
p2950
I16
sg2789
S'./stim/MorphF10_10_orig.jpg'
p2951
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2952
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2953
sg30
I0
sg2793
g48
(g584
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2954
sg32
I1
sg41
g42
sg45
g46
sg33
F0.88567399978637695
sS'trials2.thisN'
p2955
I16
sa(dp2956
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2957
g48
(g584
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2958
sS'trials2.thisRepN'
p2959
I0
sS'trials2.thisTrialN'
p2960
I17
sg2789
S'./stim/MorphM6_01_orig.jpg'
p2961
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2962
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2963
sg30
I1
sg2793
g48
(g584
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2964
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6347849369049072
sS'trials2.thisN'
p2965
I17
sa(dp2966
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2967
g48
(g584
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2968
sS'trials2.thisRepN'
p2969
I0
sS'trials2.thisTrialN'
p2970
I18
sg2789
S'./stim/MorphF6_01_orig.jpg'
p2971
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2972
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2973
sg30
I1
sg2793
g48
(g584
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2974
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0094058513641357
sS'trials2.thisN'
p2975
I18
sa(dp2976
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2977
g48
(g584
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2978
sS'trials2.thisRepN'
p2979
I0
sS'trials2.thisTrialN'
p2980
I19
sg2789
S'./stim/MorphF7_09_orig.jpg'
p2981
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2982
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2983
sg30
I1
sg2793
g48
(g584
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2984
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2102251052856445
sS'trials2.thisN'
p2985
I19
sa(dp2986
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2987
g48
(g584
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2988
sS'trials2.thisRepN'
p2989
I0
sS'trials2.thisTrialN'
p2990
I20
sg2789
S'./stim/MorphF6_04_orig.jpg'
p2991
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2992
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2993
sg30
I1
sg2793
g48
(g584
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2994
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9856419563293457
sS'trials2.thisN'
p2995
I20
sa(dp2996
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2997
g48
(g584
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp2998
sS'trials2.thisRepN'
p2999
I0
sS'trials2.thisTrialN'
p3000
I21
sg2789
S'./stim/MorphM7_01_orig.jpg'
p3001
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3002
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3003
sg30
I0
sg2793
g48
(g584
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3004
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2725760936737061
sS'trials2.thisN'
p3005
I21
sa(dp3006
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3007
g48
(g584
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3008
sS'trials2.thisRepN'
p3009
I0
sS'trials2.thisTrialN'
p3010
I22
sg2789
S'./stim/MorphF4_04_orig.jpg'
p3011
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3012
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3013
sg30
I1
sg2793
g48
(g584
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3014
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5969851016998291
sS'trials2.thisN'
p3015
I22
sa(dp3016
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3017
g48
(g584
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3018
sS'trials2.thisRepN'
p3019
I0
sS'trials2.thisTrialN'
p3020
I23
sg2789
S'./stim/MorphF6_05_orig.jpg'
p3021
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3022
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3023
sg30
I1
sg2793
g48
(g584
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3024
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9232759475708008
sS'trials2.thisN'
p3025
I23
sa(dp3026
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3027
g48
(g584
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3028
sS'trials2.thisRepN'
p3029
I0
sS'trials2.thisTrialN'
p3030
I24
sg2789
S'./stim/MorphF4_09_orig.jpg'
p3031
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3032
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3033
sg30
I1
sg2793
g48
(g584
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3034
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7915289402008057
sS'trials2.thisN'
p3035
I24
sa(dp3036
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3037
g48
(g584
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3038
sS'trials2.thisRepN'
p3039
I0
sS'trials2.thisTrialN'
p3040
I25
sg2789
S'./stim/MorphF10_02_orig.jpg'
p3041
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3042
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3043
sg30
I0
sg2793
g48
(g584
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3044
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2387959957122803
sS'trials2.thisN'
p3045
I25
sa(dp3046
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3047
g48
(g584
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3048
sS'trials2.thisRepN'
p3049
I0
sS'trials2.thisTrialN'
p3050
I26
sg2789
S'./stim/MorphM1_06_orig.jpg'
p3051
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3052
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3053
sg30
I1
sg2793
g48
(g584
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3054
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95435905456542969
sS'trials2.thisN'
p3055
I26
sa(dp3056
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3057
g48
(g584
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3058
sS'trials2.thisRepN'
p3059
I0
sS'trials2.thisTrialN'
p3060
I27
sg2789
S'./stim/MorphF10_04_orig.jpg'
p3061
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3062
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3063
sg30
I0
sg2793
g48
(g584
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3064
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7413439750671387
sS'trials2.thisN'
p3065
I27
sa(dp3066
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3067
g48
(g584
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3068
sS'trials2.thisRepN'
p3069
I0
sS'trials2.thisTrialN'
p3070
I28
sg2789
S'./stim/MorphM7_09_orig.jpg'
p3071
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3072
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3073
sg30
I1
sg2793
g48
(g584
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3074
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1256580352783203
sS'trials2.thisN'
p3075
I28
sa(dp3076
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3077
g48
(g584
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3078
sS'trials2.thisRepN'
p3079
I0
sS'trials2.thisTrialN'
p3080
I29
sg2789
S'./stim/MorphF8_09_orig.jpg'
p3081
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3082
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3083
sg30
I0
sg2793
g48
(g584
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3084
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1534359455108643
sS'trials2.thisN'
p3085
I29
sa(dp3086
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3087
g48
(g584
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3088
sS'trials2.thisRepN'
p3089
I0
sS'trials2.thisTrialN'
p3090
I30
sg2789
S'./stim/MorphF1_03_orig.jpg'
p3091
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3092
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3093
sg30
I1
sg2793
g48
(g584
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3094
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8590631484985352
sS'trials2.thisN'
p3095
I30
sa(dp3096
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3097
g48
(g584
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3098
sS'trials2.thisRepN'
p3099
I0
sS'trials2.thisTrialN'
p3100
I31
sg2789
S'./stim/MorphM8_07_orig.jpg'
p3101
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3102
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3103
sg30
I0
sg2793
g48
(g584
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3104
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1545388698577881
sS'trials2.thisN'
p3105
I31
sa(dp3106
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3107
g48
(g584
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3108
sS'trials2.thisRepN'
p3109
I0
sS'trials2.thisTrialN'
p3110
I32
sg2789
S'./stim/MorphM9_08_orig.jpg'
p3111
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3112
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3113
sg30
I1
sg2793
g48
(g584
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3114
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4572188854217529
sS'trials2.thisN'
p3115
I32
sa(dp3116
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3117
g48
(g584
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3118
sS'trials2.thisRepN'
p3119
I0
sS'trials2.thisTrialN'
p3120
I33
sg2789
S'./stim/MorphF2_04_orig.jpg'
p3121
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3122
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3123
sg30
I0
sg2793
g48
(g584
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3124
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3721051216125488
sS'trials2.thisN'
p3125
I33
sa(dp3126
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3127
g48
(g584
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3128
sS'trials2.thisRepN'
p3129
I0
sS'trials2.thisTrialN'
p3130
I34
sg2789
S'./stim/MorphF1_10_orig.jpg'
p3131
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3132
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3133
sg30
I1
sg2793
g48
(g584
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3134
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9928431510925293
sS'trials2.thisN'
p3135
I34
sa(dp3136
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3137
g48
(g584
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3138
sS'trials2.thisRepN'
p3139
I0
sS'trials2.thisTrialN'
p3140
I35
sg2789
S'./stim/MorphM2_08_orig.jpg'
p3141
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3142
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3143
sg30
I0
sg2793
g48
(g584
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3144
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6618499755859375
sS'trials2.thisN'
p3145
I35
sa(dp3146
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3147
g48
(g584
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3148
sS'trials2.thisRepN'
p3149
I0
sS'trials2.thisTrialN'
p3150
I36
sg2789
S'./stim/MorphF1_02_orig.jpg'
p3151
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3152
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3153
sg30
I1
sg2793
g48
(g584
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3154
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9150419235229492
sS'trials2.thisN'
p3155
I36
sa(dp3156
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3157
g48
(g584
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3158
sS'trials2.thisRepN'
p3159
I0
sS'trials2.thisTrialN'
p3160
I37
sg2789
S'./stim/MorphM2_04_orig.jpg'
p3161
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3162
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3163
sg30
I0
sg2793
g48
(g584
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3164
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3227717876434326
sS'trials2.thisN'
p3165
I37
sa(dp3166
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3167
g48
(g584
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3168
sS'trials2.thisRepN'
p3169
I0
sS'trials2.thisTrialN'
p3170
I38
sg2789
S'./stim/MorphF1_06_orig.jpg'
p3171
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3172
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3173
sg30
I0
sg2793
g48
(g584
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3174
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2445919513702393
sS'trials2.thisN'
p3175
I38
sa(dp3176
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3177
g48
(g584
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3178
sS'trials2.thisRepN'
p3179
I0
sS'trials2.thisTrialN'
p3180
I39
sg2789
S'./stim/MorphF3_02_orig.jpg'
p3181
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3182
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3183
sg30
I1
sg2793
g48
(g584
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3184
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6354639530181885
sS'trials2.thisN'
p3185
I39
sa(dp3186
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3187
g48
(g584
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3188
sS'trials2.thisRepN'
p3189
I0
sS'trials2.thisTrialN'
p3190
I40
sg2789
S'./stim/MorphF6_07_orig.jpg'
p3191
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3192
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3193
sg30
I1
sg2793
g48
(g584
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3194
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9247300624847412
sS'trials2.thisN'
p3195
I40
sa(dp3196
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3197
g48
(g584
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3198
sS'trials2.thisRepN'
p3199
I0
sS'trials2.thisTrialN'
p3200
I41
sg2789
S'./stim/MorphM5_00_orig.jpg'
p3201
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3202
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3203
sg30
I1
sg2793
g48
(g584
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3204
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3733022212982178
sS'trials2.thisN'
p3205
I41
sa(dp3206
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3207
g48
(g584
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3208
sS'trials2.thisRepN'
p3209
I0
sS'trials2.thisTrialN'
p3210
I42
sg2789
S'./stim/MorphM3_05_orig.jpg'
p3211
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3212
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3213
sg30
I1
sg2793
g48
(g584
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3214
sg32
I0
sg41
g42
sg45
g46
sg33
F3.1664278507232666
sS'trials2.thisN'
p3215
I42
sa(dp3216
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3217
g48
(g584
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3218
sS'trials2.thisRepN'
p3219
I0
sS'trials2.thisTrialN'
p3220
I43
sg2789
S'./stim/MorphM4_08_orig.jpg'
p3221
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3222
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3223
sg30
I0
sg2793
g48
(g584
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3224
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2557330131530762
sS'trials2.thisN'
p3225
I43
sa(dp3226
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3227
g48
(g584
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3228
sS'trials2.thisRepN'
p3229
I0
sS'trials2.thisTrialN'
p3230
I44
sg2789
S'./stim/MorphF9_03_orig.jpg'
p3231
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3232
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3233
sg30
I1
sg2793
g48
(g584
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3234
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5405600070953369
sS'trials2.thisN'
p3235
I44
sa(dp3236
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3237
g48
(g584
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3238
sS'trials2.thisRepN'
p3239
I0
sS'trials2.thisTrialN'
p3240
I45
sg2789
S'./stim/MorphF1_07_orig.jpg'
p3241
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3242
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3243
sg30
I1
sg2793
g48
(g584
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3244
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1367969512939453
sS'trials2.thisN'
p3245
I45
sa(dp3246
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3247
g48
(g584
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3248
sS'trials2.thisRepN'
p3249
I0
sS'trials2.thisTrialN'
p3250
I46
sg2789
S'./stim/MorphM4_00_orig.jpg'
p3251
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3252
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3253
sg30
I1
sg2793
g48
(g584
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3254
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8258559703826904
sS'trials2.thisN'
p3255
I46
sa(dp3256
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3257
g48
(g584
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3258
sS'trials2.thisRepN'
p3259
I0
sS'trials2.thisTrialN'
p3260
I47
sg2789
S'./stim/MorphF9_07_orig.jpg'
p3261
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3262
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3263
sg30
I1
sg2793
g48
(g584
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3264
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8415119647979736
sS'trials2.thisN'
p3265
I47
sa(dp3266
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3267
g48
(g584
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3268
sS'trials2.thisRepN'
p3269
I0
sS'trials2.thisTrialN'
p3270
I48
sg2789
S'./stim/MorphF1_05_orig.jpg'
p3271
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3272
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3273
sg30
I1
sg2793
g48
(g584
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3274
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5075440406799316
sS'trials2.thisN'
p3275
I48
sa(dp3276
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3277
g48
(g584
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3278
sS'trials2.thisRepN'
p3279
I0
sS'trials2.thisTrialN'
p3280
I49
sg2789
S'./stim/MorphF3_09_orig.jpg'
p3281
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3282
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3283
sg30
I0
sg2793
g48
(g584
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3284
sg32
I1
sg41
g42
sg45
g46
sg33
F2.864886999130249
sS'trials2.thisN'
p3285
I49
sa(dp3286
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3287
g48
(g584
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3288
sS'trials2.thisRepN'
p3289
I0
sS'trials2.thisTrialN'
p3290
I50
sg2789
S'./stim/MorphF7_01_orig.jpg'
p3291
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3292
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3293
sg30
I0
sg2793
g48
(g584
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3294
sg32
I1
sg41
g42
sg45
g46
sg33
F1.471160888671875
sS'trials2.thisN'
p3295
I50
sa(dp3296
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3297
g48
(g584
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3298
sS'trials2.thisRepN'
p3299
I0
sS'trials2.thisTrialN'
p3300
I51
sg2789
S'./stim/MorphM6_05_orig.jpg'
p3301
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3302
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3303
sg30
I1
sg2793
g48
(g584
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3304
sg32
I0
sg41
g42
sg45
g46
sg33
F5.2457749843597412
sS'trials2.thisN'
p3305
I51
sa(dp3306
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3307
g48
(g584
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3308
sS'trials2.thisRepN'
p3309
I0
sS'trials2.thisTrialN'
p3310
I52
sg2789
S'./stim/MorphF7_02_orig.jpg'
p3311
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3312
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3313
sg30
I1
sg2793
g48
(g584
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3314
sg32
I0
sg41
g42
sg45
g46
sg33
F1.640362024307251
sS'trials2.thisN'
p3315
I52
sa(dp3316
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3317
g48
(g584
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3318
sS'trials2.thisRepN'
p3319
I0
sS'trials2.thisTrialN'
p3320
I53
sg2789
S'./stim/MorphM9_03_orig.jpg'
p3321
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3322
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3323
sg30
I1
sg2793
g48
(g584
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3324
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8244049549102783
sS'trials2.thisN'
p3325
I53
sa(dp3326
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3327
g48
(g584
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3328
sS'trials2.thisRepN'
p3329
I0
sS'trials2.thisTrialN'
p3330
I54
sg2789
S'./stim/MorphM6_08_orig.jpg'
p3331
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3332
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3333
sg30
I1
sg2793
g48
(g584
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3334
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5913009643554688
sS'trials2.thisN'
p3335
I54
sa(dp3336
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3337
g48
(g584
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3338
sS'trials2.thisRepN'
p3339
I0
sS'trials2.thisTrialN'
p3340
I55
sg2789
S'./stim/MorphF2_00_orig.jpg'
p3341
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3342
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3343
sg30
I1
sg2793
g48
(g584
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3344
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9647550582885742
sS'trials2.thisN'
p3345
I55
sa(dp3346
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3347
g48
(g584
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3348
sS'trials2.thisRepN'
p3349
I0
sS'trials2.thisTrialN'
p3350
I56
sg2789
S'./stim/MorphM4_01_orig.jpg'
p3351
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3352
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3353
sg30
I0
sg2793
g48
(g584
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3354
sg32
I1
sg41
g42
sg45
g46
sg33
F4.976179838180542
sS'trials2.thisN'
p3355
I56
sa(dp3356
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3357
g48
(g584
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3358
sS'trials2.thisRepN'
p3359
I0
sS'trials2.thisTrialN'
p3360
I57
sg2789
S'./stim/MorphM1_04_orig.jpg'
p3361
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3362
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3363
sg30
I1
sg2793
g48
(g584
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3364
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4735078811645508
sS'trials2.thisN'
p3365
I57
sa(dp3366
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3367
g48
(g584
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3368
sS'trials2.thisRepN'
p3369
I0
sS'trials2.thisTrialN'
p3370
I58
sg2789
S'./stim/MorphM7_03_orig.jpg'
p3371
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3372
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3373
sg30
I0
sg2793
g48
(g584
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3374
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4399571418762207
sS'trials2.thisN'
p3375
I58
sa(dp3376
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3377
g48
(g584
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3378
sS'trials2.thisRepN'
p3379
I0
sS'trials2.thisTrialN'
p3380
I59
sg2789
S'./stim/MorphF5_10_orig.jpg'
p3381
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3382
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3383
sg30
I1
sg2793
g48
(g584
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3384
sg32
I0
sg41
g42
sg45
g46
sg33
F2.4455080032348633
sS'trials2.thisN'
p3385
I59
sa(dp3386
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3387
g48
(g584
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3388
sS'trials2.thisRepN'
p3389
I0
sS'trials2.thisTrialN'
p3390
I60
sg2789
S'./stim/MorphF1_09_orig.jpg'
p3391
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3392
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3393
sg30
I1
sg2793
g48
(g584
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3394
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0269801616668701
sS'trials2.thisN'
p3395
I60
sa(dp3396
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3397
g48
(g584
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3398
sS'trials2.thisRepN'
p3399
I0
sS'trials2.thisTrialN'
p3400
I61
sg2789
S'./stim/MorphF2_03_orig.jpg'
p3401
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3402
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3403
sg30
I0
sg2793
g48
(g584
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3404
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9648888111114502
sS'trials2.thisN'
p3405
I61
sa(dp3406
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3407
g48
(g584
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3408
sS'trials2.thisRepN'
p3409
I0
sS'trials2.thisTrialN'
p3410
I62
sg2789
S'./stim/MorphF9_06_orig.jpg'
p3411
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3412
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3413
sg30
I1
sg2793
g48
(g584
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3414
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9477090835571289
sS'trials2.thisN'
p3415
I62
sa(dp3416
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3417
g48
(g584
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3418
sS'trials2.thisRepN'
p3419
I0
sS'trials2.thisTrialN'
p3420
I63
sg2789
S'./stim/MorphM4_03_orig.jpg'
p3421
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3422
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3423
sg30
I0
sg2793
g48
(g584
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3424
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9990289211273193
sS'trials2.thisN'
p3425
I63
sa(dp3426
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3427
g48
(g584
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3428
sS'trials2.thisRepN'
p3429
I0
sS'trials2.thisTrialN'
p3430
I64
sg2789
S'./stim/MorphM7_08_orig.jpg'
p3431
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3432
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3433
sg30
I1
sg2793
g48
(g584
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3434
sg32
I0
sg41
g42
sg45
g46
sg33
F3.534837007522583
sS'trials2.thisN'
p3435
I64
sa(dp3436
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3437
g48
(g584
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3438
sS'trials2.thisRepN'
p3439
I0
sS'trials2.thisTrialN'
p3440
I65
sg2789
S'./stim/MorphM9_04_orig.jpg'
p3441
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3442
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3443
sg30
I0
sg2793
g48
(g584
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3444
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8084650039672852
sS'trials2.thisN'
p3445
I65
sa(dp3446
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3447
g48
(g584
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3448
sS'trials2.thisRepN'
p3449
I0
sS'trials2.thisTrialN'
p3450
I66
sg2789
S'./stim/MorphM4_09_orig.jpg'
p3451
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3452
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3453
sg30
I1
sg2793
g48
(g584
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3454
sg32
I0
sg41
g42
sg45
g46
sg33
F5.0259740352630615
sS'trials2.thisN'
p3455
I66
sa(dp3456
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3457
g48
(g584
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3458
sS'trials2.thisRepN'
p3459
I0
sS'trials2.thisTrialN'
p3460
I67
sg2789
S'./stim/MorphM1_00_orig.jpg'
p3461
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3462
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3463
sg30
I0
sg2793
g48
(g584
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3464
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6572020053863525
sS'trials2.thisN'
p3465
I67
sa(dp3466
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3467
g48
(g584
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3468
sS'trials2.thisRepN'
p3469
I0
sS'trials2.thisTrialN'
p3470
I68
sg2789
S'./stim/MorphM6_04_orig.jpg'
p3471
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3472
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3473
sg30
I0
sg2793
g48
(g584
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3474
sg32
I1
sg41
g42
sg45
g46
sg33
F3.8370480537414551
sS'trials2.thisN'
p3475
I68
sa(dp3476
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3477
g48
(g584
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3478
sS'trials2.thisRepN'
p3479
I0
sS'trials2.thisTrialN'
p3480
I69
sg2789
S'./stim/MorphM10_08_orig.jpg'
p3481
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3482
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3483
sg30
I1
sg2793
g48
(g584
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3484
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0819239616394043
sS'trials2.thisN'
p3485
I69
sa(dp3486
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3487
g48
(g584
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3488
sS'trials2.thisRepN'
p3489
I0
sS'trials2.thisTrialN'
p3490
I70
sg2789
S'./stim/MorphM1_01_orig.jpg'
p3491
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3492
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3493
sg30
I0
sg2793
g48
(g584
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3494
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3394589424133301
sS'trials2.thisN'
p3495
I70
sa(dp3496
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3497
g48
(g584
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3498
sS'trials2.thisRepN'
p3499
I0
sS'trials2.thisTrialN'
p3500
I71
sg2789
S'./stim/MorphM6_07_orig.jpg'
p3501
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3502
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3503
sg30
I0
sg2793
g48
(g584
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3504
sg32
I1
sg41
g42
sg45
g46
sg33
F3.2836010456085205
sS'trials2.thisN'
p3505
I71
sa(dp3506
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3507
g48
(g584
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3508
sS'trials2.thisRepN'
p3509
I0
sS'trials2.thisTrialN'
p3510
I72
sg2789
S'./stim/MorphF2_08_orig.jpg'
p3511
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3512
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3513
sg30
I1
sg2793
g48
(g584
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3514
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2054979801177979
sS'trials2.thisN'
p3515
I72
sa(dp3516
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3517
g48
(g584
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3518
sS'trials2.thisRepN'
p3519
I0
sS'trials2.thisTrialN'
p3520
I73
sg2789
S'./stim/MorphF5_00_orig.jpg'
p3521
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3522
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3523
sg30
I1
sg2793
g48
(g584
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3524
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8258709907531738
sS'trials2.thisN'
p3525
I73
sa(dp3526
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3527
g48
(g584
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3528
sS'trials2.thisRepN'
p3529
I0
sS'trials2.thisTrialN'
p3530
I74
sg2789
S'./stim/MorphM8_04_orig.jpg'
p3531
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3532
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3533
sg30
I1
sg2793
g48
(g584
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3534
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2257089614868164
sS'trials2.thisN'
p3535
I74
sa(dp3536
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3537
g48
(g584
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3538
sS'trials2.thisRepN'
p3539
I0
sS'trials2.thisTrialN'
p3540
I75
sg2789
S'./stim/MorphM3_04_orig.jpg'
p3541
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3542
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3543
sg30
I0
sg2793
g48
(g584
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3544
sg32
I1
sg41
g42
sg45
g46
sg33
F4.6746749877929688
sS'trials2.thisN'
p3545
I75
sa(dp3546
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3547
g48
(g584
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3548
sS'trials2.thisRepN'
p3549
I0
sS'trials2.thisTrialN'
p3550
I76
sg2789
S'./stim/MorphF7_03_orig.jpg'
p3551
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3552
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3553
sg30
I1
sg2793
g48
(g584
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3554
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3116309642791748
sS'trials2.thisN'
p3555
I76
sa(dp3556
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3557
g48
(g584
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3558
sS'trials2.thisRepN'
p3559
I0
sS'trials2.thisTrialN'
p3560
I77
sg2789
S'./stim/MorphM2_10_orig.jpg'
p3561
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3562
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3563
sg30
I0
sg2793
g48
(g584
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3564
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6918919086456299
sS'trials2.thisN'
p3565
I77
sa(dp3566
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3567
g48
(g584
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3568
sS'trials2.thisRepN'
p3569
I0
sS'trials2.thisTrialN'
p3570
I78
sg2789
S'./stim/MorphM6_09_orig.jpg'
p3571
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3572
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3573
sg30
I1
sg2793
g48
(g584
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3574
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2550530433654785
sS'trials2.thisN'
p3575
I78
sa(dp3576
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3577
g48
(g584
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3578
sS'trials2.thisRepN'
p3579
I0
sS'trials2.thisTrialN'
p3580
I79
sg2789
S'./stim/MorphM3_10_orig.jpg'
p3581
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3582
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3583
sg30
I0
sg2793
g48
(g584
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3584
sg32
I1
sg41
g42
sg45
g46
sg33
F4.5240240097045898
sS'trials2.thisN'
p3585
I79
sa(dp3586
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3587
g48
(g584
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3588
sS'trials2.thisRepN'
p3589
I0
sS'trials2.thisTrialN'
p3590
I80
sg2789
S'./stim/MorphF9_05_orig.jpg'
p3591
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3592
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3593
sg30
I1
sg2793
g48
(g584
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3594
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5054678916931152
sS'trials2.thisN'
p3595
I80
sa(dp3596
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3597
g48
(g584
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3598
sS'trials2.thisRepN'
p3599
I0
sS'trials2.thisTrialN'
p3600
I81
sg2789
S'./stim/MorphF1_00_orig.jpg'
p3601
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3602
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3603
sg30
I0
sg2793
g48
(g584
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3604
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2433500289916992
sS'trials2.thisN'
p3605
I81
sa(dp3606
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3607
g48
(g584
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3608
sS'trials2.thisRepN'
p3609
I0
sS'trials2.thisTrialN'
p3610
I82
sg2789
S'./stim/MorphM10_07_orig.jpg'
p3611
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3612
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3613
sg30
I1
sg2793
g48
(g584
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3614
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3776500225067139
sS'trials2.thisN'
p3615
I82
sa(dp3616
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3617
g48
(g584
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3618
sS'trials2.thisRepN'
p3619
I0
sS'trials2.thisTrialN'
p3620
I83
sg2789
S'./stim/MorphF3_10_orig.jpg'
p3621
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3622
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3623
sg30
I0
sg2793
g48
(g584
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3624
sg32
I1
sg41
g42
sg45
g46
sg33
F2.730449914932251
sS'trials2.thisN'
p3625
I83
sa(dp3626
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3627
g48
(g584
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3628
sS'trials2.thisRepN'
p3629
I0
sS'trials2.thisTrialN'
p3630
I84
sg2789
S'./stim/MorphM3_03_orig.jpg'
p3631
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3632
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3633
sg30
I1
sg2793
g48
(g584
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3634
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7309868335723877
sS'trials2.thisN'
p3635
I84
sa(dp3636
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3637
g48
(g584
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3638
sS'trials2.thisRepN'
p3639
I0
sS'trials2.thisTrialN'
p3640
I85
sg2789
S'./stim/MorphM2_05_orig.jpg'
p3641
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3642
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3643
sg30
I0
sg2793
g48
(g584
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3644
sg32
I1
sg41
g42
sg45
g46
sg33
F3.3167519569396973
sS'trials2.thisN'
p3645
I85
sa(dp3646
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3647
g48
(g584
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3648
sS'trials2.thisRepN'
p3649
I0
sS'trials2.thisTrialN'
p3650
I86
sg2789
S'./stim/MorphF9_02_orig.jpg'
p3651
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3652
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3653
sg30
I1
sg2793
g48
(g584
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3654
sg32
I0
sg41
g42
sg45
g46
sg33
F2.881566047668457
sS'trials2.thisN'
p3655
I86
sa(dp3656
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3657
g48
(g584
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3658
sS'trials2.thisRepN'
p3659
I0
sS'trials2.thisTrialN'
p3660
I87
sg2789
S'./stim/MorphM1_02_orig.jpg'
p3661
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3662
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3663
sg30
I1
sg2793
g48
(g584
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3664
sg32
I0
sg41
g42
sg45
g46
sg33
F4.0194840431213379
sS'trials2.thisN'
p3665
I87
sa(dp3666
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3667
g48
(g584
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3668
sS'trials2.thisRepN'
p3669
I0
sS'trials2.thisTrialN'
p3670
I88
sg2789
S'./stim/MorphM6_10_orig.jpg'
p3671
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3672
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3673
sg30
I1
sg2793
g48
(g584
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3674
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2053811550140381
sS'trials2.thisN'
p3675
I88
sa(dp3676
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3677
g48
(g584
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3678
sS'trials2.thisRepN'
p3679
I0
sS'trials2.thisTrialN'
p3680
I89
sg2789
S'./stim/MorphF5_05_orig.jpg'
p3681
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3682
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3683
sg30
I1
sg2793
g48
(g584
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3684
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1878042221069336
sS'trials2.thisN'
p3685
I89
sa(dp3686
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3687
g48
(g584
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3688
sS'trials2.thisRepN'
p3689
I0
sS'trials2.thisTrialN'
p3690
I90
sg2789
S'./stim/MorphM3_09_orig.jpg'
p3691
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3692
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3693
sg30
I0
sg2793
g48
(g584
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3694
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2535660266876221
sS'trials2.thisN'
p3695
I90
sa(dp3696
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3697
g48
(g584
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3698
sS'trials2.thisRepN'
p3699
I0
sS'trials2.thisTrialN'
p3700
I91
sg2789
S'./stim/MorphF7_07_orig.jpg'
p3701
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3702
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3703
sg30
I0
sg2793
g48
(g584
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3704
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2219460010528564
sS'trials2.thisN'
p3705
I91
sa(dp3706
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3707
g48
(g584
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3708
sS'trials2.thisRepN'
p3709
I0
sS'trials2.thisTrialN'
p3710
I92
sg2789
S'./stim/MorphM2_07_orig.jpg'
p3711
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3712
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3713
sg30
I1
sg2793
g48
(g584
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3714
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0049080848693848
sS'trials2.thisN'
p3715
I92
sa(dp3716
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3717
g48
(g584
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3718
sS'trials2.thisRepN'
p3719
I0
sS'trials2.thisTrialN'
p3720
I93
sg2789
S'./stim/MorphF1_04_orig.jpg'
p3721
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3722
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3723
sg30
I1
sg2793
g48
(g584
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3724
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5229718685150146
sS'trials2.thisN'
p3725
I93
sa(dp3726
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3727
g48
(g584
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3728
sS'trials2.thisRepN'
p3729
I0
sS'trials2.thisTrialN'
p3730
I94
sg2789
S'./stim/MorphF9_08_orig.jpg'
p3731
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3732
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3733
sg30
I1
sg2793
g48
(g584
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3734
sg32
I0
sg41
g42
sg45
g46
sg33
F1.003986120223999
sS'trials2.thisN'
p3735
I94
sa(dp3736
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3737
g48
(g584
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3738
sS'trials2.thisRepN'
p3739
I0
sS'trials2.thisTrialN'
p3740
I95
sg2789
S'./stim/MorphF4_05_orig.jpg'
p3741
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3742
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3743
sg30
I1
sg2793
g48
(g584
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3744
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2777929306030273
sS'trials2.thisN'
p3745
I95
sa(dp3746
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3747
g48
(g584
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3748
sS'trials2.thisRepN'
p3749
I0
sS'trials2.thisTrialN'
p3750
I96
sg2789
S'./stim/MorphM9_06_orig.jpg'
p3751
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3752
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3753
sg30
I1
sg2793
g48
(g584
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3754
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9092979431152344
sS'trials2.thisN'
p3755
I96
sa(dp3756
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3757
g48
(g584
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3758
sS'trials2.thisRepN'
p3759
I0
sS'trials2.thisTrialN'
p3760
I97
sg2789
S'./stim/MorphF6_08_orig.jpg'
p3761
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3762
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3763
sg30
I0
sg2793
g48
(g584
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3764
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8425438404083252
sS'trials2.thisN'
p3765
I97
sa(dp3766
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3767
g48
(g584
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3768
sS'trials2.thisRepN'
p3769
I0
sS'trials2.thisTrialN'
p3770
I98
sg2789
S'./stim/MorphM7_02_orig.jpg'
p3771
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3772
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3773
sg30
I0
sg2793
g48
(g584
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3774
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1191489696502686
sS'trials2.thisN'
p3775
I98
sa(dp3776
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3777
g48
(g584
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3778
sS'trials2.thisRepN'
p3779
I0
sS'trials2.thisTrialN'
p3780
I99
sg2789
S'./stim/MorphM5_05_orig.jpg'
p3781
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3782
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3783
sg30
I1
sg2793
g48
(g584
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3784
sg32
I0
sg41
g42
sg45
g46
sg33
F0.87003803253173828
sS'trials2.thisN'
p3785
I99
sa(dp3786
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3787
g48
(g584
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3788
sS'trials2.thisRepN'
p3789
I0
sS'trials2.thisTrialN'
p3790
I100
sg2789
S'./stim/MorphM7_07_orig.jpg'
p3791
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3792
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3793
sg30
I0
sg2793
g48
(g584
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3794
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3562600612640381
sS'trials2.thisN'
p3795
I100
sa(dp3796
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3797
g48
(g584
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3798
sS'trials2.thisRepN'
p3799
I0
sS'trials2.thisTrialN'
p3800
I101
sg2789
S'./stim/MorphM10_06_orig.jpg'
p3801
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3802
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3803
sg30
I0
sg2793
g48
(g584
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3804
sg32
I1
sg41
g42
sg45
g46
sg33
F1.808758020401001
sS'trials2.thisN'
p3805
I101
sa(dp3806
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3807
g48
(g584
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3808
sS'trials2.thisRepN'
p3809
I0
sS'trials2.thisTrialN'
p3810
I102
sg2789
S'./stim/MorphF8_02_orig.jpg'
p3811
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3812
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3813
sg30
I0
sg2793
g48
(g584
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3814
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98749804496765137
sS'trials2.thisN'
p3815
I102
sa(dp3816
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3817
g48
(g584
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3818
sS'trials2.thisRepN'
p3819
I0
sS'trials2.thisTrialN'
p3820
I103
sg2789
S'./stim/MorphF7_10_orig.jpg'
p3821
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3822
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3823
sg30
I0
sg2793
g48
(g584
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3824
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1714348793029785
sS'trials2.thisN'
p3825
I103
sa(dp3826
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3827
g48
(g584
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3828
sS'trials2.thisRepN'
p3829
I0
sS'trials2.thisTrialN'
p3830
I104
sg2789
S'./stim/MorphM10_09_orig.jpg'
p3831
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3832
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3833
sg30
I0
sg2793
g48
(g584
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3834
sg32
I1
sg41
g42
sg45
g46
sg33
F0.83669710159301758
sS'trials2.thisN'
p3835
I104
sa(dp3836
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3837
g48
(g584
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3838
sS'trials2.thisRepN'
p3839
I0
sS'trials2.thisTrialN'
p3840
I105
sg2789
S'./stim/MorphF9_10_orig.jpg'
p3841
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3842
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3843
sg30
I1
sg2793
g48
(g584
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3844
sg32
I0
sg41
g42
sg45
g46
sg33
F0.81968402862548828
sS'trials2.thisN'
p3845
I105
sa(dp3846
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3847
g48
(g584
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3848
sS'trials2.thisRepN'
p3849
I0
sS'trials2.thisTrialN'
p3850
I106
sg2789
S'./stim/MorphF7_05_orig.jpg'
p3851
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3852
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3853
sg30
I0
sg2793
g48
(g584
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3854
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1033711433410645
sS'trials2.thisN'
p3855
I106
sa(dp3856
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3857
g48
(g584
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3858
sS'trials2.thisRepN'
p3859
I0
sS'trials2.thisTrialN'
p3860
I107
sg2789
S'./stim/MorphM2_02_orig.jpg'
p3861
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3862
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3863
sg30
I0
sg2793
g48
(g584
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3864
sg32
I1
sg41
g42
sg45
g46
sg33
F1.188377857208252
sS'trials2.thisN'
p3865
I107
sa(dp3866
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3867
g48
(g584
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3868
sS'trials2.thisRepN'
p3869
I0
sS'trials2.thisTrialN'
p3870
I108
sg2789
S'./stim/MorphF8_03_orig.jpg'
p3871
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3872
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3873
sg30
I0
sg2793
g48
(g584
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3874
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9923069477081299
sS'trials2.thisN'
p3875
I108
sa(dp3876
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3877
g48
(g584
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3878
sS'trials2.thisRepN'
p3879
I0
sS'trials2.thisTrialN'
p3880
I109
sg2789
S'./stim/MorphM5_10_orig.jpg'
p3881
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3882
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3883
sg30
I1
sg2793
g48
(g584
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3884
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93721103668212891
sS'trials2.thisN'
p3885
I109
sa(dp3886
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3887
g48
(g584
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3888
sS'trials2.thisRepN'
p3889
I0
sS'trials2.thisTrialN'
p3890
I110
sg2789
S'./stim/MorphM8_01_orig.jpg'
p3891
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3892
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3893
sg30
I0
sg2793
g48
(g584
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3894
sg32
I1
sg41
g42
sg45
g46
sg33
F0.95379090309143066
sS'trials2.thisN'
p3895
I110
sa(dp3896
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3897
g48
(g584
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3898
sS'trials2.thisRepN'
p3899
I0
sS'trials2.thisTrialN'
p3900
I111
sg2789
S'./stim/MorphF4_08_orig.jpg'
p3901
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3902
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3903
sg30
I1
sg2793
g48
(g584
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3904
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9187929630279541
sS'trials2.thisN'
p3905
I111
sa(dp3906
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3907
g48
(g584
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3908
sS'trials2.thisRepN'
p3909
I0
sS'trials2.thisTrialN'
p3910
I112
sg2789
S'./stim/MorphF5_04_orig.jpg'
p3911
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3912
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3913
sg30
I1
sg2793
g48
(g584
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3914
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1553480625152588
sS'trials2.thisN'
p3915
I112
sa(dp3916
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3917
g48
(g584
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3918
sS'trials2.thisRepN'
p3919
I0
sS'trials2.thisTrialN'
p3920
I113
sg2789
S'./stim/MorphM5_07_orig.jpg'
p3921
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3922
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3923
sg30
I1
sg2793
g48
(g584
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3924
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2890830039978027
sS'trials2.thisN'
p3925
I113
sa(dp3926
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3927
g48
(g584
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3928
sS'trials2.thisRepN'
p3929
I0
sS'trials2.thisTrialN'
p3930
I114
sg2789
S'./stim/MorphM3_01_orig.jpg'
p3931
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3932
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3933
sg30
I0
sg2793
g48
(g584
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3934
sg32
I1
sg41
g42
sg45
g46
sg33
F0.92080092430114746
sS'trials2.thisN'
p3935
I114
sa(dp3936
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3937
g48
(g584
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3938
sS'trials2.thisRepN'
p3939
I0
sS'trials2.thisTrialN'
p3940
I115
sg2789
S'./stim/MorphM2_03_orig.jpg'
p3941
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3942
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3943
sg30
I0
sg2793
g48
(g584
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3944
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4232950210571289
sS'trials2.thisN'
p3945
I115
sa(dp3946
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3947
g48
(g584
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3948
sS'trials2.thisRepN'
p3949
I0
sS'trials2.thisTrialN'
p3950
I116
sg2789
S'./stim/MorphM9_07_orig.jpg'
p3951
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3952
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3953
sg30
I1
sg2793
g48
(g584
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3954
sg32
I0
sg41
g42
sg45
g46
sg33
F1.188460111618042
sS'trials2.thisN'
p3955
I116
sa(dp3956
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3957
g48
(g584
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3958
sS'trials2.thisRepN'
p3959
I0
sS'trials2.thisTrialN'
p3960
I117
sg2789
S'./stim/MorphM2_00_orig.jpg'
p3961
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3962
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3963
sg30
I0
sg2793
g48
(g584
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3964
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1218850612640381
sS'trials2.thisN'
p3965
I117
sa(dp3966
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3967
g48
(g584
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3968
sS'trials2.thisRepN'
p3969
I0
sS'trials2.thisTrialN'
p3970
I118
sg2789
S'./stim/MorphF8_08_orig.jpg'
p3971
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3972
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3973
sg30
I0
sg2793
g48
(g584
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3974
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6220710277557373
sS'trials2.thisN'
p3975
I118
sa(dp3976
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3977
g48
(g584
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3978
sS'trials2.thisRepN'
p3979
I0
sS'trials2.thisTrialN'
p3980
I119
sg2789
S'./stim/MorphF2_01_orig.jpg'
p3981
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3982
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3983
sg30
I1
sg2793
g48
(g584
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3984
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4403529167175293
sS'trials2.thisN'
p3985
I119
sa(dp3986
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3987
g48
(g584
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3988
sS'trials2.thisRepN'
p3989
I0
sS'trials2.thisTrialN'
p3990
I120
sg2789
S'./stim/MorphM8_10_orig.jpg'
p3991
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp3992
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3993
sg30
I1
sg2793
g48
(g584
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3994
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8088960647583008
sS'trials2.thisN'
p3995
I120
sa(dp3996
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3997
g48
(g584
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp3998
sS'trials2.thisRepN'
p3999
I0
sS'trials2.thisTrialN'
p4000
I121
sg2789
S'./stim/MorphF5_02_orig.jpg'
p4001
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4002
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4003
sg30
I1
sg2793
g48
(g584
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4004
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1888389587402344
sS'trials2.thisN'
p4005
I121
sa(dp4006
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4007
g48
(g584
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4008
sS'trials2.thisRepN'
p4009
I0
sS'trials2.thisTrialN'
p4010
I122
sg2789
S'./stim/MorphF4_00_orig.jpg'
p4011
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4012
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4013
sg30
I1
sg2793
g48
(g584
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4014
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2890679836273193
sS'trials2.thisN'
p4015
I122
sa(dp4016
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4017
g48
(g584
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4018
sS'trials2.thisRepN'
p4019
I0
sS'trials2.thisTrialN'
p4020
I123
sg2789
S'./stim/MorphF8_07_orig.jpg'
p4021
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4022
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4023
sg30
I0
sg2793
g48
(g584
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4024
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3727049827575684
sS'trials2.thisN'
p4025
I123
sa(dp4026
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4027
g48
(g584
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4028
sS'trials2.thisRepN'
p4029
I0
sS'trials2.thisTrialN'
p4030
I124
sg2789
S'./stim/MorphF3_01_orig.jpg'
p4031
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4032
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4033
sg30
I1
sg2793
g48
(g584
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4034
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1208879947662354
sS'trials2.thisN'
p4035
I124
sa(dp4036
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4037
g48
(g584
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4038
sS'trials2.thisRepN'
p4039
I0
sS'trials2.thisTrialN'
p4040
I125
sg2789
S'./stim/MorphM5_01_orig.jpg'
p4041
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4042
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4043
sg30
I1
sg2793
g48
(g584
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4044
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5737159252166748
sS'trials2.thisN'
p4045
I125
sa(dp4046
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4047
g48
(g584
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4048
sS'trials2.thisRepN'
p4049
I0
sS'trials2.thisTrialN'
p4050
I126
sg2789
S'./stim/MorphF6_00_orig.jpg'
p4051
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4052
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4053
sg30
I0
sg2793
g48
(g584
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4054
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0717620849609375
sS'trials2.thisN'
p4055
I126
sa(dp4056
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4057
g48
(g584
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4058
sS'trials2.thisRepN'
p4059
I0
sS'trials2.thisTrialN'
p4060
I127
sg2789
S'./stim/MorphM8_03_orig.jpg'
p4061
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4062
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4063
sg30
I1
sg2793
g48
(g584
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4064
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5405480861663818
sS'trials2.thisN'
p4065
I127
sa(dp4066
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4067
g48
(g584
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4068
sS'trials2.thisRepN'
p4069
I0
sS'trials2.thisTrialN'
p4070
I128
sg2789
S'./stim/MorphF8_06_orig.jpg'
p4071
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4072
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4073
sg30
I0
sg2793
g48
(g584
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4074
sg32
I1
sg41
g42
sg45
g46
sg33
F0.87036418914794922
sS'trials2.thisN'
p4075
I128
sa(dp4076
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4077
g48
(g584
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4078
sS'trials2.thisRepN'
p4079
I0
sS'trials2.thisTrialN'
p4080
I129
sg2789
S'./stim/MorphM1_05_orig.jpg'
p4081
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4082
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4083
sg30
I1
sg2793
g48
(g584
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4084
sg32
I0
sg41
g42
sg45
g46
sg33
F3.3323838710784912
sS'trials2.thisN'
p4085
I129
sa(dp4086
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4087
g48
(g584
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4088
sS'trials2.thisRepN'
p4089
I0
sS'trials2.thisTrialN'
p4090
I130
sg2789
S'./stim/MorphM6_00_orig.jpg'
p4091
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4092
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4093
sg30
I0
sg2793
g48
(g584
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4094
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3890581130981445
sS'trials2.thisN'
p4095
I130
sa(dp4096
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4097
g48
(g584
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4098
sS'trials2.thisRepN'
p4099
I0
sS'trials2.thisTrialN'
p4100
I131
sg2789
S'./stim/MorphM10_02_orig.jpg'
p4101
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4102
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4103
sg30
I1
sg2793
g48
(g584
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4104
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9258852005004883
sS'trials2.thisN'
p4105
I131
sa(dp4106
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4107
g48
(g584
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4108
sS'trials2.thisRepN'
p4109
I0
sS'trials2.thisTrialN'
p4110
I132
sg2789
S'./stim/MorphF8_05_orig.jpg'
p4111
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4112
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4113
sg30
I0
sg2793
g48
(g584
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4114
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1049671173095703
sS'trials2.thisN'
p4115
I132
sa(dp4116
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4117
g48
(g584
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4118
sS'trials2.thisRepN'
p4119
I0
sS'trials2.thisTrialN'
p4120
I133
sg2789
S'./stim/MorphM2_09_orig.jpg'
p4121
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4122
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4123
sg30
I1
sg2793
g48
(g584
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4124
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3886539936065674
sS'trials2.thisN'
p4125
I133
sa(dp4126
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4127
g48
(g584
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4128
sS'trials2.thisRepN'
p4129
I0
sS'trials2.thisTrialN'
p4130
I134
sg2789
S'./stim/MorphF8_10_orig.jpg'
p4131
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4132
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4133
sg30
I0
sg2793
g48
(g584
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4134
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1941251754760742
sS'trials2.thisN'
p4135
I134
sa(dp4136
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4137
g48
(g584
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4138
sS'trials2.thisRepN'
p4139
I0
sS'trials2.thisTrialN'
p4140
I135
sg2789
S'./stim/MorphM8_02_orig.jpg'
p4141
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4142
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4143
sg30
I0
sg2793
g48
(g584
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4144
sg32
I1
sg41
g42
sg45
g46
sg33
F0.83681702613830566
sS'trials2.thisN'
p4145
I135
sa(dp4146
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4147
g48
(g584
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4148
sS'trials2.thisRepN'
p4149
I0
sS'trials2.thisTrialN'
p4150
I136
sg2789
S'./stim/MorphF10_07_orig.jpg'
p4151
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4152
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4153
sg30
I0
sg2793
g48
(g584
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4154
sg32
I1
sg41
g42
sg45
g46
sg33
F0.65105199813842773
sS'trials2.thisN'
p4155
I136
sa(dp4156
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4157
g48
(g584
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4158
sS'trials2.thisRepN'
p4159
I0
sS'trials2.thisTrialN'
p4160
I137
sg2789
S'./stim/MorphM8_08_orig.jpg'
p4161
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4162
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4163
sg30
I1
sg2793
g48
(g584
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4164
sg32
I0
sg41
g42
sg45
g46
sg33
F0.78605294227600098
sS'trials2.thisN'
p4165
I137
sa(dp4166
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4167
g48
(g584
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4168
sS'trials2.thisRepN'
p4169
I0
sS'trials2.thisTrialN'
p4170
I138
sg2789
S'./stim/MorphF9_04_orig.jpg'
p4171
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4172
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4173
sg30
I0
sg2793
g48
(g584
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4174
sg32
I1
sg41
g42
sg45
g46
sg33
F0.81993412971496582
sS'trials2.thisN'
p4175
I138
sa(dp4176
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4177
g48
(g584
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4178
sS'trials2.thisRepN'
p4179
I0
sS'trials2.thisTrialN'
p4180
I139
sg2789
S'./stim/MorphF6_10_orig.jpg'
p4181
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4182
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4183
sg30
I1
sg2793
g48
(g584
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4184
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95281505584716797
sS'trials2.thisN'
p4185
I139
sa(dp4186
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4187
g48
(g584
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4188
sS'trials2.thisRepN'
p4189
I0
sS'trials2.thisTrialN'
p4190
I140
sg2789
S'./stim/MorphF2_09_orig.jpg'
p4191
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4192
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4193
sg30
I1
sg2793
g48
(g584
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4194
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0936789512634277
sS'trials2.thisN'
p4195
I140
sa(dp4196
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4197
g48
(g584
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4198
sS'trials2.thisRepN'
p4199
I0
sS'trials2.thisTrialN'
p4200
I141
sg2789
S'./stim/MorphM4_10_orig.jpg'
p4201
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4202
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4203
sg30
I1
sg2793
g48
(g584
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4204
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1387360095977783
sS'trials2.thisN'
p4205
I141
sa(dp4206
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4207
g48
(g584
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4208
sS'trials2.thisRepN'
p4209
I0
sS'trials2.thisTrialN'
p4210
I142
sg2789
S'./stim/MorphF10_08_orig.jpg'
p4211
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4212
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4213
sg30
I0
sg2793
g48
(g584
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4214
sg32
I1
sg41
g42
sg45
g46
sg33
F0.90381002426147461
sS'trials2.thisN'
p4215
I142
sa(dp4216
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4217
g48
(g584
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4218
sS'trials2.thisRepN'
p4219
I0
sS'trials2.thisTrialN'
p4220
I143
sg2789
S'./stim/MorphF9_01_orig.jpg'
p4221
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4222
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4223
sg30
I0
sg2793
g48
(g584
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4224
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1552469730377197
sS'trials2.thisN'
p4225
I143
sa(dp4226
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4227
g48
(g584
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4228
sS'trials2.thisRepN'
p4229
I0
sS'trials2.thisTrialN'
p4230
I144
sg2789
S'./stim/MorphF4_10_orig.jpg'
p4231
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4232
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4233
sg30
I1
sg2793
g48
(g584
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4234
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88667893409729004
sS'trials2.thisN'
p4235
I144
sa(dp4236
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4237
g48
(g584
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4238
sS'trials2.thisRepN'
p4239
I0
sS'trials2.thisTrialN'
p4240
I145
sg2789
S'./stim/MorphF2_10_orig.jpg'
p4241
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4242
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4243
sg30
I0
sg2793
g48
(g584
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4244
sg32
I1
sg41
g42
sg45
g46
sg33
F1.440418004989624
sS'trials2.thisN'
p4245
I145
sa(dp4246
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4247
g48
(g584
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4248
sS'trials2.thisRepN'
p4249
I0
sS'trials2.thisTrialN'
p4250
I146
sg2789
S'./stim/MorphM1_08_orig.jpg'
p4251
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4252
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4253
sg30
I1
sg2793
g48
(g584
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4254
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9757671356201172
sS'trials2.thisN'
p4255
I146
sa(dp4256
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4257
g48
(g584
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4258
sS'trials2.thisRepN'
p4259
I0
sS'trials2.thisTrialN'
p4260
I147
sg2789
S'./stim/MorphF7_00_orig.jpg'
p4261
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4262
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4263
sg30
I0
sg2793
g48
(g584
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4264
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2386848926544189
sS'trials2.thisN'
p4265
I147
sa(dp4266
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4267
g48
(g584
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4268
sS'trials2.thisRepN'
p4269
I0
sS'trials2.thisTrialN'
p4270
I148
sg2789
S'./stim/MorphM4_06_orig.jpg'
p4271
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4272
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4273
sg30
I1
sg2793
g48
(g584
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4274
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7250559329986572
sS'trials2.thisN'
p4275
I148
sa(dp4276
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4277
g48
(g584
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4278
sS'trials2.thisRepN'
p4279
I0
sS'trials2.thisTrialN'
p4280
I149
sg2789
S'./stim/MorphF10_03_orig.jpg'
p4281
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4282
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4283
sg30
I0
sg2793
g48
(g584
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4284
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0195310115814209
sS'trials2.thisN'
p4285
I149
sa(dp4286
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4287
g48
(g584
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4288
sS'trials2.thisRepN'
p4289
I0
sS'trials2.thisTrialN'
p4290
I150
sg2789
S'./stim/MorphM5_06_orig.jpg'
p4291
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4292
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4293
sg30
I1
sg2793
g48
(g584
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4294
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6423377990722656
sS'trials2.thisN'
p4295
I150
sa(dp4296
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4297
g48
(g584
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4298
sS'trials2.thisRepN'
p4299
I0
sS'trials2.thisTrialN'
p4300
I151
sg2789
S'./stim/MorphF8_01_orig.jpg'
p4301
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4302
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4303
sg30
I0
sg2793
g48
(g584
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4304
sg32
I1
sg41
g42
sg45
g46
sg33
F0.91971182823181152
sS'trials2.thisN'
p4305
I151
sa(dp4306
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4307
g48
(g584
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4308
sS'trials2.thisRepN'
p4309
I0
sS'trials2.thisTrialN'
p4310
I152
sg2789
S'./stim/MorphF10_01_orig.jpg'
p4311
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4312
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4313
sg30
I1
sg2793
g48
(g584
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4314
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0548858642578125
sS'trials2.thisN'
p4315
I152
sa(dp4316
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4317
g48
(g584
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4318
sS'trials2.thisRepN'
p4319
I0
sS'trials2.thisTrialN'
p4320
I153
sg2789
S'./stim/MorphF5_08_orig.jpg'
p4321
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4322
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4323
sg30
I0
sg2793
g48
(g584
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4324
sg32
I1
sg41
g42
sg45
g46
sg33
F2.460831880569458
sS'trials2.thisN'
p4325
I153
sa(dp4326
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4327
g48
(g584
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4328
sS'trials2.thisRepN'
p4329
I0
sS'trials2.thisTrialN'
p4330
I154
sg2789
S'./stim/MorphM9_10_orig.jpg'
p4331
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4332
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4333
sg30
I1
sg2793
g48
(g584
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4334
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0219509601593018
sS'trials2.thisN'
p4335
I154
sa(dp4336
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4337
g48
(g584
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4338
sS'trials2.thisRepN'
p4339
I0
sS'trials2.thisTrialN'
p4340
I155
sg2789
S'./stim/MorphM5_04_orig.jpg'
p4341
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4342
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4343
sg30
I1
sg2793
g48
(g584
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4344
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7906908988952637
sS'trials2.thisN'
p4345
I155
sa(dp4346
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4347
g48
(g584
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4348
sS'trials2.thisRepN'
p4349
I0
sS'trials2.thisTrialN'
p4350
I156
sg2789
S'./stim/MorphF6_03_orig.jpg'
p4351
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4352
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4353
sg30
I0
sg2793
g48
(g584
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4354
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1550991535186768
sS'trials2.thisN'
p4355
I156
sa(dp4356
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4357
g48
(g584
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4358
sS'trials2.thisRepN'
p4359
I0
sS'trials2.thisTrialN'
p4360
I157
sg2789
S'./stim/MorphM6_06_orig.jpg'
p4361
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4362
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4363
sg30
I1
sg2793
g48
(g584
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4364
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1553280353546143
sS'trials2.thisN'
p4365
I157
sa(dp4366
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4367
g48
(g584
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4368
sS'trials2.thisRepN'
p4369
I0
sS'trials2.thisTrialN'
p4370
I158
sg2789
S'./stim/MorphF9_09_orig.jpg'
p4371
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4372
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4373
sg30
I1
sg2793
g48
(g584
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4374
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0372769832611084
sS'trials2.thisN'
p4375
I158
sa(dp4376
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4377
g48
(g584
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4378
sS'trials2.thisRepN'
p4379
I0
sS'trials2.thisTrialN'
p4380
I159
sg2789
S'./stim/MorphF3_05_orig.jpg'
p4381
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4382
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4383
sg30
I1
sg2793
g48
(g584
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4384
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9261620044708252
sS'trials2.thisN'
p4385
I159
sa(dp4386
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4387
g48
(g584
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4388
sS'trials2.thisRepN'
p4389
I0
sS'trials2.thisTrialN'
p4390
I160
sg2789
S'./stim/MorphM4_07_orig.jpg'
p4391
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4392
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4393
sg30
I1
sg2793
g48
(g584
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4394
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0099611282348633
sS'trials2.thisN'
p4395
I160
sa(dp4396
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4397
g48
(g584
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4398
sS'trials2.thisRepN'
p4399
I0
sS'trials2.thisTrialN'
p4400
I161
sg2789
S'./stim/MorphF5_01_orig.jpg'
p4401
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4402
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4403
sg30
I1
sg2793
g48
(g584
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4404
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5552999973297119
sS'trials2.thisN'
p4405
I161
sa(dp4406
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4407
g48
(g584
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4408
sS'trials2.thisRepN'
p4409
I0
sS'trials2.thisTrialN'
p4410
I162
sg2789
S'./stim/MorphF2_06_orig.jpg'
p4411
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4412
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4413
sg30
I0
sg2793
g48
(g584
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4414
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2542810440063477
sS'trials2.thisN'
p4415
I162
sa(dp4416
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4417
g48
(g584
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4418
sS'trials2.thisRepN'
p4419
I0
sS'trials2.thisTrialN'
p4420
I163
sg2789
S'./stim/MorphF4_07_orig.jpg'
p4421
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4422
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4423
sg30
I1
sg2793
g48
(g584
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4424
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3376171588897705
sS'trials2.thisN'
p4425
I163
sa(dp4426
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4427
g48
(g584
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4428
sS'trials2.thisRepN'
p4429
I0
sS'trials2.thisTrialN'
p4430
I164
sg2789
S'./stim/MorphF1_01_orig.jpg'
p4431
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4432
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4433
sg30
I1
sg2793
g48
(g584
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4434
sg32
I0
sg41
g42
sg45
g46
sg33
F2.244347095489502
sS'trials2.thisN'
p4435
I164
sa(dp4436
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4437
g48
(g584
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4438
sS'trials2.thisRepN'
p4439
I0
sS'trials2.thisTrialN'
p4440
I165
sg2789
S'./stim/MorphF2_02_orig.jpg'
p4441
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4442
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4443
sg30
I1
sg2793
g48
(g584
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4444
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2229049205780029
sS'trials2.thisN'
p4445
I165
sa(dp4446
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4447
g48
(g584
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4448
sS'trials2.thisRepN'
p4449
I0
sS'trials2.thisTrialN'
p4450
I166
sg2789
S'./stim/MorphM2_06_orig.jpg'
p4451
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4452
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4453
sg30
I1
sg2793
g48
(g584
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4454
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1603600978851318
sS'trials2.thisN'
p4455
I166
sa(dp4456
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4457
g48
(g584
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4458
sS'trials2.thisRepN'
p4459
I0
sS'trials2.thisTrialN'
p4460
I167
sg2789
S'./stim/MorphM4_05_orig.jpg'
p4461
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4462
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4463
sg30
I1
sg2793
g48
(g584
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4464
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98579692840576172
sS'trials2.thisN'
p4465
I167
sa(dp4466
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4467
g48
(g584
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4468
sS'trials2.thisRepN'
p4469
I0
sS'trials2.thisTrialN'
p4470
I168
sg2789
S'./stim/MorphM9_05_orig.jpg'
p4471
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4472
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4473
sg30
I1
sg2793
g48
(g584
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4474
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6910088062286377
sS'trials2.thisN'
p4475
I168
sa(dp4476
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4477
g48
(g584
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4478
sS'trials2.thisRepN'
p4479
I0
sS'trials2.thisTrialN'
p4480
I169
sg2789
S'./stim/MorphM2_01_orig.jpg'
p4481
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4482
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4483
sg30
I0
sg2793
g48
(g584
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4484
sg32
I1
sg41
g42
sg45
g46
sg33
F0.90384101867675781
sS'trials2.thisN'
p4485
I169
sa(dp4486
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4487
g48
(g584
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4488
sS'trials2.thisRepN'
p4489
I0
sS'trials2.thisTrialN'
p4490
I170
sg2789
S'./stim/MorphM5_08_orig.jpg'
p4491
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4492
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4493
sg30
I1
sg2793
g48
(g584
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4494
sg32
I0
sg41
g42
sg45
g46
sg33
F0.76955914497375488
sS'trials2.thisN'
p4495
I170
sa(dp4496
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4497
g48
(g584
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4498
sS'trials2.thisRepN'
p4499
I0
sS'trials2.thisTrialN'
p4500
I171
sg2789
S'./stim/MorphM4_04_orig.jpg'
p4501
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4502
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4503
sg30
I1
sg2793
g48
(g584
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4504
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1721749305725098
sS'trials2.thisN'
p4505
I171
sa(dp4506
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4507
g48
(g584
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4508
sS'trials2.thisRepN'
p4509
I0
sS'trials2.thisTrialN'
p4510
I172
sg2789
S'./stim/MorphF6_02_orig.jpg'
p4511
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4512
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4513
sg30
I0
sg2793
g48
(g584
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4514
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1210291385650635
sS'trials2.thisN'
p4515
I172
sa(dp4516
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4517
g48
(g584
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4518
sS'trials2.thisRepN'
p4519
I0
sS'trials2.thisTrialN'
p4520
I173
sg2789
S'./stim/MorphM9_01_orig.jpg'
p4521
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4522
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4523
sg30
I1
sg2793
g48
(g584
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4524
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93704390525817871
sS'trials2.thisN'
p4525
I173
sa(dp4526
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4527
g48
(g584
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4528
sS'trials2.thisRepN'
p4529
I0
sS'trials2.thisTrialN'
p4530
I174
sg2789
S'./stim/MorphM8_06_orig.jpg'
p4531
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4532
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4533
sg30
I1
sg2793
g48
(g584
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4534
sg32
I0
sg41
g42
sg45
g46
sg33
F1.354949951171875
sS'trials2.thisN'
p4535
I174
sa(dp4536
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4537
g48
(g584
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4538
sS'trials2.thisRepN'
p4539
I0
sS'trials2.thisTrialN'
p4540
I175
sg2789
S'./stim/MorphM5_09_orig.jpg'
p4541
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4542
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4543
sg30
I1
sg2793
g48
(g584
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4544
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3394548892974854
sS'trials2.thisN'
p4545
I175
sa(dp4546
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4547
g48
(g584
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4548
sS'trials2.thisRepN'
p4549
I0
sS'trials2.thisTrialN'
p4550
I176
sg2789
S'./stim/MorphF6_06_orig.jpg'
p4551
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4552
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4553
sg30
I1
sg2793
g48
(g584
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4554
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7582309246063232
sS'trials2.thisN'
p4555
I176
sa(dp4556
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4557
g48
(g584
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4558
sS'trials2.thisRepN'
p4559
I0
sS'trials2.thisTrialN'
p4560
I177
sg2789
S'./stim/MorphM7_05_orig.jpg'
p4561
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4562
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4563
sg30
I1
sg2793
g48
(g584
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4564
sg32
I0
sg41
g42
sg45
g46
sg33
F0.97148013114929199
sS'trials2.thisN'
p4565
I177
sa(dp4566
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4567
g48
(g584
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4568
sS'trials2.thisRepN'
p4569
I0
sS'trials2.thisTrialN'
p4570
I178
sg2789
S'./stim/MorphF7_04_orig.jpg'
p4571
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4572
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4573
sg30
I0
sg2793
g48
(g584
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4574
sg32
I1
sg41
g42
sg45
g46
sg33
F0.95450210571289062
sS'trials2.thisN'
p4575
I178
sa(dp4576
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4577
g48
(g584
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4578
sS'trials2.thisRepN'
p4579
I0
sS'trials2.thisTrialN'
p4580
I179
sg2789
S'./stim/MorphF10_00_orig.jpg'
p4581
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4582
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4583
sg30
I0
sg2793
g48
(g584
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4584
sg32
I1
sg41
g42
sg45
g46
sg33
F0.88569402694702148
sS'trials2.thisN'
p4585
I179
sa(dp4586
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4587
g48
(g584
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4588
sS'trials2.thisRepN'
p4589
I0
sS'trials2.thisTrialN'
p4590
I180
sg2789
S'./stim/MorphF5_06_orig.jpg'
p4591
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4592
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4593
sg30
I1
sg2793
g48
(g584
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4594
sg32
I0
sg41
g42
sg45
g46
sg33
F0.97115802764892578
sS'trials2.thisN'
p4595
I180
sa(dp4596
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4597
g48
(g584
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4598
sS'trials2.thisRepN'
p4599
I0
sS'trials2.thisTrialN'
p4600
I181
sg2789
S'./stim/MorphM10_10_orig.jpg'
p4601
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4602
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4603
sg30
I0
sg2793
g48
(g584
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4604
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1549360752105713
sS'trials2.thisN'
p4605
I181
sa(dp4606
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4607
g48
(g584
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4608
sS'trials2.thisRepN'
p4609
I0
sS'trials2.thisTrialN'
p4610
I182
sg2789
S'./stim/MorphM3_02_orig.jpg'
p4611
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4612
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4613
sg30
I0
sg2793
g48
(g584
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4614
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2719998359680176
sS'trials2.thisN'
p4615
I182
sa(dp4616
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4617
g48
(g584
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4618
sS'trials2.thisRepN'
p4619
I0
sS'trials2.thisTrialN'
p4620
I183
sg2789
S'./stim/MorphF4_06_orig.jpg'
p4621
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4622
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4623
sg30
I1
sg2793
g48
(g584
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4624
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83644318580627441
sS'trials2.thisN'
p4625
I183
sa(dp4626
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4627
g48
(g584
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4628
sS'trials2.thisRepN'
p4629
I0
sS'trials2.thisTrialN'
p4630
I184
sg2789
S'./stim/MorphM7_06_orig.jpg'
p4631
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4632
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4633
sg30
I1
sg2793
g48
(g584
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4634
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4388210773468018
sS'trials2.thisN'
p4635
I184
sa(dp4636
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4637
g48
(g584
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4638
sS'trials2.thisRepN'
p4639
I0
sS'trials2.thisTrialN'
p4640
I185
sg2789
S'./stim/MorphM1_10_orig.jpg'
p4641
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4642
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4643
sg30
I1
sg2793
g48
(g584
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4644
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0540511608123779
sS'trials2.thisN'
p4645
I185
sa(dp4646
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4647
g48
(g584
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4648
sS'trials2.thisRepN'
p4649
I0
sS'trials2.thisTrialN'
p4650
I186
sg2789
S'./stim/MorphF3_08_orig.jpg'
p4651
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4652
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4653
sg30
I1
sg2793
g48
(g584
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4654
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5912051200866699
sS'trials2.thisN'
p4655
I186
sa(dp4656
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4657
g48
(g584
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4658
sS'trials2.thisRepN'
p4659
I0
sS'trials2.thisTrialN'
p4660
I187
sg2789
S'./stim/MorphF7_08_orig.jpg'
p4661
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4662
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4663
sg30
I0
sg2793
g48
(g584
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4664
sg32
I1
sg41
g42
sg45
g46
sg33
F0.88596320152282715
sS'trials2.thisN'
p4665
I187
sa(dp4666
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4667
g48
(g584
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4668
sS'trials2.thisRepN'
p4669
I0
sS'trials2.thisTrialN'
p4670
I188
sg2789
S'./stim/MorphM3_06_orig.jpg'
p4671
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4672
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4673
sg30
I0
sg2793
g48
(g584
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4674
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5893170833587646
sS'trials2.thisN'
p4675
I188
sa(dp4676
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4677
g48
(g584
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4678
sS'trials2.thisRepN'
p4679
I0
sS'trials2.thisTrialN'
p4680
I189
sg2789
S'./stim/MorphF3_06_orig.jpg'
p4681
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4682
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4683
sg30
I1
sg2793
g48
(g584
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4684
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83568596839904785
sS'trials2.thisN'
p4685
I189
sa(dp4686
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4687
g48
(g584
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4688
sS'trials2.thisRepN'
p4689
I0
sS'trials2.thisTrialN'
p4690
I190
sg2789
S'./stim/MorphM5_02_orig.jpg'
p4691
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4692
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4693
sg30
I0
sg2793
g48
(g584
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4694
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2220427989959717
sS'trials2.thisN'
p4695
I190
sa(dp4696
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4697
g48
(g584
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4698
sS'trials2.thisRepN'
p4699
I0
sS'trials2.thisTrialN'
p4700
I191
sg2789
S'./stim/MorphM8_09_orig.jpg'
p4701
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4702
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4703
sg30
I1
sg2793
g48
(g584
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4704
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3224990367889404
sS'trials2.thisN'
p4705
I191
sa(dp4706
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4707
g48
(g584
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4708
sS'trials2.thisRepN'
p4709
I0
sS'trials2.thisTrialN'
p4710
I192
sg2789
S'./stim/MorphM9_09_orig.jpg'
p4711
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4712
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4713
sg30
I0
sg2793
g48
(g584
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4714
sg32
I1
sg41
g42
sg45
g46
sg33
F0.9875800609588623
sS'trials2.thisN'
p4715
I192
sa(dp4716
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4717
g48
(g584
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4718
sS'trials2.thisRepN'
p4719
I0
sS'trials2.thisTrialN'
p4720
I193
sg2789
S'./stim/MorphF8_04_orig.jpg'
p4721
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4722
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4723
sg30
I0
sg2793
g48
(g584
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4724
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2726600170135498
sS'trials2.thisN'
p4725
I193
sa(dp4726
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4727
g48
(g584
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4728
sS'trials2.thisRepN'
p4729
I0
sS'trials2.thisTrialN'
p4730
I194
sg2789
S'./stim/MorphM9_00_orig.jpg'
p4731
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4732
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4733
sg30
I0
sg2793
g48
(g584
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4734
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1031320095062256
sS'trials2.thisN'
p4735
I194
sa(dp4736
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4737
g48
(g584
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4738
sS'trials2.thisRepN'
p4739
I0
sS'trials2.thisTrialN'
p4740
I195
sg2789
S'./stim/MorphF3_04_orig.jpg'
p4741
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4742
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4743
sg30
I1
sg2793
g48
(g584
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4744
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0045549869537354
sS'trials2.thisN'
p4745
I195
sa(dp4746
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4747
g48
(g584
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4748
sS'trials2.thisRepN'
p4749
I0
sS'trials2.thisTrialN'
p4750
I196
sg2789
S'./stim/MorphM9_02_orig.jpg'
p4751
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4752
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4753
sg30
I0
sg2793
g48
(g584
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4754
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3546240329742432
sS'trials2.thisN'
p4755
I196
sa(dp4756
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4757
g48
(g584
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4758
sS'trials2.thisRepN'
p4759
I0
sS'trials2.thisTrialN'
p4760
I197
sg2789
S'./stim/MorphF5_09_orig.jpg'
p4761
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4762
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4763
sg30
I1
sg2793
g48
(g584
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4764
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7251460552215576
sS'trials2.thisN'
p4765
I197
sa(dp4766
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4767
g48
(g584
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4768
sS'trials2.thisRepN'
p4769
I0
sS'trials2.thisTrialN'
p4770
I198
sg2789
S'./stim/MorphF10_09_orig.jpg'
p4771
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4772
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4773
sg30
I0
sg2793
g48
(g584
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4774
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6407890319824219
sS'trials2.thisN'
p4775
I198
sa(dp4776
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4777
g48
(g584
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4778
sS'trials2.thisRepN'
p4779
I0
sS'trials2.thisTrialN'
p4780
I199
sg2789
S'./stim/MorphM5_03_orig.jpg'
p4781
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4782
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4783
sg30
I1
sg2793
g48
(g584
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4784
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90397405624389648
sS'trials2.thisN'
p4785
I199
sa(dp4786
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4787
g48
(g584
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4788
sS'trials2.thisRepN'
p4789
I0
sS'trials2.thisTrialN'
p4790
I200
sg2789
S'./stim/MorphF5_07_orig.jpg'
p4791
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4792
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4793
sg30
I1
sg2793
g48
(g584
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4794
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9095869064331055
sS'trials2.thisN'
p4795
I200
sa(dp4796
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4797
g48
(g584
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4798
sS'trials2.thisRepN'
p4799
I0
sS'trials2.thisTrialN'
p4800
I201
sg2789
S'./stim/MorphF7_06_orig.jpg'
p4801
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4802
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4803
sg30
I0
sg2793
g48
(g584
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4804
sg32
I1
sg41
g42
sg45
g46
sg33
F0.85331583023071289
sS'trials2.thisN'
p4805
I201
sa(dp4806
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4807
g48
(g584
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4808
sS'trials2.thisRepN'
p4809
I0
sS'trials2.thisTrialN'
p4810
I202
sg2789
S'./stim/MorphF2_05_orig.jpg'
p4811
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4812
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4813
sg30
I1
sg2793
g48
(g584
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4814
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1873569488525391
sS'trials2.thisN'
p4815
I202
sa(dp4816
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4817
g48
(g584
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4818
sS'trials2.thisRepN'
p4819
I0
sS'trials2.thisTrialN'
p4820
I203
sg2789
S'./stim/MorphF4_01_orig.jpg'
p4821
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4822
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4823
sg30
I1
sg2793
g48
(g584
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4824
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1047308444976807
sS'trials2.thisN'
p4825
I203
sa(dp4826
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4827
g48
(g584
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4828
sS'trials2.thisRepN'
p4829
I0
sS'trials2.thisTrialN'
p4830
I204
sg2789
S'./stim/MorphM10_03_orig.jpg'
p4831
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4832
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4833
sg30
I0
sg2793
g48
(g584
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4834
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0861411094665527
sS'trials2.thisN'
p4835
I204
sa(dp4836
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4837
g48
(g584
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4838
sS'trials2.thisRepN'
p4839
I0
sS'trials2.thisTrialN'
p4840
I205
sg2789
S'./stim/MorphF4_03_orig.jpg'
p4841
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4842
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4843
sg30
I1
sg2793
g48
(g584
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4844
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2721691131591797
sS'trials2.thisN'
p4845
I205
sa(dp4846
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4847
g48
(g584
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4848
sS'trials2.thisRepN'
p4849
I0
sS'trials2.thisTrialN'
p4850
I206
sg2789
S'./stim/MorphF5_03_orig.jpg'
p4851
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4852
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4853
sg30
I1
sg2793
g48
(g584
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4854
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0883679389953613
sS'trials2.thisN'
p4855
I206
sa(dp4856
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4857
g48
(g584
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4858
sS'trials2.thisRepN'
p4859
I0
sS'trials2.thisTrialN'
p4860
I207
sg2789
S'./stim/MorphM10_00_orig.jpg'
p4861
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4862
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4863
sg30
I0
sg2793
g48
(g584
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4864
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98746395111083984
sS'trials2.thisN'
p4865
I207
sa(dp4866
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4867
g48
(g584
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4868
sS'trials2.thisRepN'
p4869
I0
sS'trials2.thisTrialN'
p4870
I208
sg2789
S'./stim/MorphM3_07_orig.jpg'
p4871
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4872
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4873
sg30
I0
sg2793
g48
(g584
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4874
sg32
I1
sg41
g42
sg45
g46
sg33
F0.85377407073974609
sS'trials2.thisN'
p4875
I208
sa(dp4876
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4877
g48
(g584
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4878
sS'trials2.thisRepN'
p4879
I0
sS'trials2.thisTrialN'
p4880
I209
sg2789
S'./stim/MorphM1_03_orig.jpg'
p4881
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4882
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4883
sg30
I1
sg2793
g48
(g584
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4884
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93475890159606934
sS'trials2.thisN'
p4885
I209
sa(dp4886
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4887
g48
(g584
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4888
sS'trials2.thisRepN'
p4889
I0
sS'trials2.thisTrialN'
p4890
I210
sg2789
S'./stim/MorphM10_04_orig.jpg'
p4891
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4892
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4893
sg30
I0
sg2793
g48
(g584
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4894
sg32
I1
sg41
g42
sg45
g46
sg33
F0.87017703056335449
sS'trials2.thisN'
p4895
I210
sa(dp4896
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4897
g48
(g584
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4898
sS'trials2.thisRepN'
p4899
I0
sS'trials2.thisTrialN'
p4900
I211
sg2789
S'./stim/MorphF1_08_orig.jpg'
p4901
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4902
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4903
sg30
I1
sg2793
g48
(g584
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4904
sg32
I0
sg41
g42
sg45
g46
sg33
F0.87065601348876953
sS'trials2.thisN'
p4905
I211
sa(dp4906
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4907
g48
(g584
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4908
sS'trials2.thisRepN'
p4909
I0
sS'trials2.thisTrialN'
p4910
I212
sg2789
S'./stim/MorphF10_05_orig.jpg'
p4911
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4912
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4913
sg30
I0
sg2793
g48
(g584
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4914
sg32
I1
sg41
g42
sg45
g46
sg33
F0.76963710784912109
sS'trials2.thisN'
p4915
I212
sa(dp4916
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4917
g48
(g584
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4918
sS'trials2.thisRepN'
p4919
I0
sS'trials2.thisTrialN'
p4920
I213
sg2789
S'./stim/MorphF3_07_orig.jpg'
p4921
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4922
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4923
sg30
I1
sg2793
g48
(g584
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4924
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85308694839477539
sS'trials2.thisN'
p4925
I213
sa(dp4926
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4927
g48
(g584
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4928
sS'trials2.thisRepN'
p4929
I0
sS'trials2.thisTrialN'
p4930
I214
sg2789
S'./stim/MorphF9_00_orig.jpg'
p4931
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4932
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4933
sg30
I0
sg2793
g48
(g584
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4934
sg32
I1
sg41
g42
sg45
g46
sg33
F0.87001609802246094
sS'trials2.thisN'
p4935
I214
sa(dp4936
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4937
g48
(g584
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4938
sS'trials2.thisRepN'
p4939
I0
sS'trials2.thisTrialN'
p4940
I215
sg2789
S'./stim/MorphM10_01_orig.jpg'
p4941
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4942
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4943
sg30
I1
sg2793
g48
(g584
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4944
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0544672012329102
sS'trials2.thisN'
p4945
I215
sa(dp4946
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4947
g48
(g584
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4948
sS'trials2.thisRepN'
p4949
I0
sS'trials2.thisTrialN'
p4950
I216
sg2789
S'./stim/MorphF10_06_orig.jpg'
p4951
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4952
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4953
sg30
I0
sg2793
g48
(g584
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4954
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1217010021209717
sS'trials2.thisN'
p4955
I216
sa(dp4956
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4957
g48
(g584
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4958
sS'trials2.thisRepN'
p4959
I0
sS'trials2.thisTrialN'
p4960
I217
sg2789
S'./stim/MorphF4_02_orig.jpg'
p4961
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4962
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4963
sg30
I1
sg2793
g48
(g584
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4964
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5628390312194824
sS'trials2.thisN'
p4965
I217
sa(dp4966
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4967
g48
(g584
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4968
sS'trials2.thisRepN'
p4969
I0
sS'trials2.thisTrialN'
p4970
I218
sg2789
S'./stim/MorphM3_00_orig.jpg'
p4971
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4972
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4973
sg30
I0
sg2793
g48
(g584
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4974
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2892649173736572
sS'trials2.thisN'
p4975
I218
sa(dp4976
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4977
g48
(g584
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4978
sS'trials2.thisRepN'
p4979
I0
sS'trials2.thisTrialN'
p4980
I219
sg2789
S'./stim/MorphF3_03_orig.jpg'
p4981
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp4982
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4983
sg30
I1
sg2793
g48
(g584
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4984
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98540687561035156
sS'trials2.thisN'
p4985
I219
sa(dp4986
g44
g11
sg43
VG
sg36
S'return'
p4987
sg41
g42
sg37
F3.4613759517669678
sg45
g46
sg47
g51
sasS'loops'
p4988
(lp4989
g1
(cpsychopy.data
TrialHandler
p4990
g3
NtRp4991
(dp4992
S'origin'
p4993
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p4994
sS'thisTrial'
p4995
(lp4996
sS'_exp'
p4997
I140003122488656
sg10
S'basicLoop'
p4998
sg6
S'/home/labor/faces/emoFaces.py'
p4999
sS'thisRepN'
p5000
I1
sg38
I01
sg39
g40
sS'data'
p5001
g1
(cpsychopy.data
DataHandler
p5002
c__builtin__
dict
p5003
(dp5004
g16
cnumpy.core.multiarray
_reconstruct
p5005
(cnumpy
ndarray
p5006
(I0
tS'b'
tRp5007
(I1
(I84
I1
tg49
(S'O8'
I0
I1
tRp5008
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5009
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNatbsg18
g5005
(g5006
(I0
tS'b'
tRp5010
(I1
(I84
I1
tg5008
I00
(lp5011
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNatbsg21
g5005
(g5006
(I0
tS'b'
tRp5012
(I1
(I84
I1
tg5008
I00
(lp5013
NaF0.438
aNaNaF1.284
aF0.55800000000000005
aNaNaF0.48499999999999999
aNaNaF0.44500000000000001
aNaNaF0.441
aF1.1319999999999999
aNaF0.42499999999999999
aNaF0.879
aF1.4910000000000001
aNaNaNaNaF1.2589999999999999
aF0.54700000000000004
aF1.2
aF1.073
aNaF0.72099999999999997
aF0.44
aNaF1.544
aF1.663
aF0.81999999999999995
aF0.874
aNaNaNaNaNaNaNaNaNaNaF0.41099999999999998
aNaNaNaF0.42299999999999999
aF0.438
aNaF0.49099999999999999
aNaNaNaF0.40799999999999997
aF0.45700000000000002
aNaNaF0.83999999999999997
aF1.26
aNaNaF0.44
aF0.80400000000000005
aNaNaF7.7960000000000003
aNaNaNaF0.42099999999999999
aF0.49199999999999999
aF0.52000000000000002
aNaNaNaF1.228
aF1.4890000000000001
aNaNatbsS'ran'
p5014
cnumpy.ma.core
_mareconstruct
p5015
(cnumpy.ma.core
MaskedArray
p5016
g5006
(I0
tp5017
S'b'
tRp5018
(I1
(I84
I1
tg49
(S'f4'
I0
I1
tRp5019
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5005
(g5006
(I0
tS'b'
tRp5020
(I1
(I84
I1
tg5008
I00
(lp5021
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNatbsg23
g5005
(g5006
(I0
tS'b'
tRp5022
(I1
(I84
I1
tg5008
I00
(lp5023
S'2.'
p5024
aNaF0.41799999999999998
aF0.67200000000000004
aNaNaF0.40600000000000003
aF0.68700000000000006
aNaF0.48599999999999999
aS'0.'
p5025
aNaF0.67200000000000004
aF0.52800000000000002
aNaNaF0.504
aNaF0.48899999999999999
aNaNaF0.98599999999999999
aF0.52600000000000002
aF0.50700000000000001
aF0.41899999999999998
aNaNaNaNaF0.45500000000000002
aNaNaF0.42399999999999999
aNaNaNaNaF0.69299999999999995
aF0.42199999999999999
aS'0.'
p5026
aF0.50800000000000001
aF0.432
aF0.53600000000000003
aS'1.'
p5027
aF0.48799999999999999
aF0.58899999999999997
aF0.58999999999999997
aNaS'1.'
p5028
aF0.41899999999999998
aF0.46999999999999997
aNaNaF1.1659999999999999
aNaF0.56999999999999995
aF0.45700000000000002
aF0.53900000000000003
aNaNaF0.42099999999999999
aF0.504
aNaNaF0.42099999999999999
aF0.52900000000000003
aNaNaF0.53800000000000003
aF1.226
aNaS'1.'
p5029
aS'1.'
p5030
aF0.41899999999999998
aNaNaNaF0.58899999999999997
aF0.622
aF7.3899999999999997
aNaNaF0.626
aF0.50700000000000001
atbsg22
g5005
(g5006
(I0
tS'b'
tRp5031
(I1
(I84
I1
tg5008
I00
(lp5032
g68
aNag68
ag68
aNaNag68
ag68
aNag68
ag68
aNag68
ag68
aNaNag68
aNag68
aNaNag68
ag68
ag68
ag68
aNaNaNaNag68
aNaNag68
aNaNaNaNag68
ag68
ag68
ag68
ag68
ag68
ag68
ag68
ag68
ag68
aNag68
ag68
ag68
aNaNag68
aNag68
ag68
ag68
aNaNag68
ag68
aNaNag68
ag68
aNaNag68
ag68
aNag68
ag68
ag68
aNaNaNag68
ag68
ag68
aNaNag68
ag68
atbsg19
g5005
(g5006
(I0
tS'b'
tRp5033
(I1
(I84
I1
tg5008
I00
(lp5034
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNatbsg20
g5005
(g5006
(I0
tS'b'
tRp5035
(I1
(I84
I1
tg5008
I00
(lp5036
Nag113
aNaNag113
ag113
aNaNag113
aNaNag113
aNaNag113
ag113
aNag113
aNag113
ag113
aNaNaNaNag113
ag113
ag113
ag113
aNag113
ag113
aNag113
ag113
ag113
ag113
aNaNaNaNaNaNaNaNaNaNag113
aNaNaNag113
ag113
aNag113
aNaNaNag113
ag113
aNaNag113
ag113
aNaNag113
ag113
aNaNag113
aNaNaNag113
ag113
ag113
aNaNaNag113
ag113
aNaNatbsS'order'
p5037
g5015
(g5016
g5006
g5017
S'b'
tRp5038
(I1
(I84
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00 B\x00\x00DB\x00\x00\x9aB\x00\x00\xa0A\x00\x00\x88A\x00\x00XB\x00\x00\x88B\x00\x00pA\x00\x00xB\x00\x00@@\x00\x00\x0cB\x00\x00HB\x00\x00\x82B\x00\x00\xb0A\x00\x00@A\x00\x00hB\x00\x00\xe0A\x00\x00`B\x00\x00\xa8A\x00\x00\xe0@\x00\x008B\x00\x00\x9eB\x00\x00\x98B\x00\x00pB\x00\x00$B\x00\x00\xd0A\x00\x00\x10A\x00\x00\x00A\x00\x00dB\x00\x00\xf0A\x00\x00\xb8A\x00\x00<B\x00\x00 A\x00\x00\x08B\x00\x00\x04B\x00\x00\x98A\x00\x00@B\x00\x00\x8aB\x00\x00\x80?\x00\x004B\x00\x00\x8cB\x00\x00PB\x00\x00\xa0@\x00\x00\x94B\x00\x00\x96B\x00\x00\x80B\x00\x00PA\x00\x00\x80@\x00\x00\xa2B\x00\x00\x90B\x00\x000A\x00\x00\x80A\x00\x000B\x00\x00\x00B\x00\x00TB\x00\x00\x86B\x00\x00\x9cB\x00\x00\xc8A\x00\x00\x10B\x00\x00\xa4B\x00\x00\x84B\x00\x00\x14B\x00\x00\xf8A\x00\x00lB\x00\x00\\B\x00\x00(B\x00\x00\x18B\x00\x00tB\x00\x00LB\x00\x00\x90A\x00\x00\xc0@\x00\x00\x00@\x00\x00\x8eB\x00\x00\xe8A\x00\x00\xc0A\x00\x00\xd8A\x00\x00\xa6B\x00\x00\x92B\x00\x00,B\x00\x00\x1cB\x00\x00`A\x00\x00\xa0B\x00\x00|B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5039
(dp5040
S'isNumeric'
p5041
(dp5042
g16
I00
sg18
I00
sg21
I00
sg5014
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5037
I01
ssS'trials'
p5043
g4991
sS'dataTypes'
p5044
(lp5045
g5014
ag5037
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5046
(lp5047
I84
aI1
asbsS'method'
p5048
S'fullRandom'
p5049
sS'sequenceIndices'
p5050
g5005
(g5006
(I0
tS'b'
tRp5051
(I1
(I84
I1
tg5008
I00
(lp5052
I0
aI39
aI72
aI10
aI48
aI43
aI71
aI20
aI28
aI27
aI33
aI51
aI15
aI47
aI81
aI8
aI52
aI5
aI70
aI36
aI4
aI19
aI14
aI31
aI75
aI58
aI26
aI76
aI17
aI74
aI30
aI63
aI54
aI35
aI34
aI11
aI59
aI62
aI67
aI80
aI1
aI25
aI66
aI79
aI53
aI40
aI21
aI32
aI37
aI2
aI12
aI69
aI42
aI55
aI6
aI65
aI18
aI29
aI16
aI64
aI24
aI68
aI9
aI83
aI46
aI13
aI61
aI56
aI7
aI38
aI41
aI73
aI50
aI78
aI44
aI45
aI23
aI3
aI57
aI22
aI82
aI49
aI60
aI77
atbsS'finished'
p5053
I01
sS'nReps'
p5054
I1
sS'nRemaining'
p5055
I-1
sS'trialList'
p5056
(lp5057
g1
(cpsychopy.data
TrialType
p5058
g5003
(dp5059
g60
g67
stRp5060
ag1
(g5058
g5003
(dp5061
g60
g309
stRp5062
ag1
(g5058
g5003
(dp5063
g60
g363
stRp5064
ag1
(g5058
g5003
(dp5065
g60
g531
stRp5066
ag1
(g5058
g5003
(dp5067
g60
g189
stRp5068
ag1
(g5058
g5003
(dp5069
g60
g171
stRp5070
ag1
(g5058
g5003
(dp5071
g60
g393
stRp5072
ag1
(g5058
g5003
(dp5073
g60
g477
stRp5074
ag1
(g5058
g5003
(dp5075
g60
g159
stRp5076
ag1
(g5058
g5003
(dp5077
g60
g441
stRp5078
ag1
(g5058
g5003
(dp5079
g60
g86
stRp5080
ag1
(g5058
g5003
(dp5081
g60
g279
stRp5082
ag1
(g5058
g5003
(dp5083
g60
g369
stRp5084
ag1
(g5058
g5003
(dp5085
g60
g459
stRp5086
ag1
(g5058
g5003
(dp5087
g60
g201
stRp5088
ag1
(g5058
g5003
(dp5089
g60
g141
stRp5090
ag1
(g5058
g5003
(dp5091
g60
g417
stRp5092
ag1
(g5058
g5003
(dp5093
g60
g237
stRp5094
ag1
(g5058
g5003
(dp5095
g60
g405
stRp5096
ag1
(g5058
g5003
(dp5097
g60
g195
stRp5098
ag1
(g5058
g5003
(dp5099
g60
g110
stRp5100
ag1
(g5058
g5003
(dp5101
g60
g345
stRp5102
ag1
(g5058
g5003
(dp5103
g60
g543
stRp5104
ag1
(g5058
g5003
(dp5105
g60
g525
stRp5106
ag1
(g5058
g5003
(dp5107
g60
g429
stRp5108
ag1
(g5058
g5003
(dp5109
g60
g315
stRp5110
ag1
(g5058
g5003
(dp5111
g60
g225
stRp5112
ag1
(g5058
g5003
(dp5113
g60
g123
stRp5114
ag1
(g5058
g5003
(dp5115
g60
g117
stRp5116
ag1
(g5058
g5003
(dp5117
g60
g411
stRp5118
ag1
(g5058
g5003
(dp5119
g60
g249
stRp5120
ag1
(g5058
g5003
(dp5121
g60
g207
stRp5122
ag1
(g5058
g5003
(dp5123
g60
g351
stRp5124
ag1
(g5058
g5003
(dp5125
g60
g129
stRp5126
ag1
(g5058
g5003
(dp5127
g60
g273
stRp5128
ag1
(g5058
g5003
(dp5129
g60
g267
stRp5130
ag1
(g5058
g5003
(dp5131
g60
g183
stRp5132
ag1
(g5058
g5003
(dp5133
g60
g357
stRp5134
ag1
(g5058
g5003
(dp5135
g60
g483
stRp5136
ag1
(g5058
g5003
(dp5137
g60
g74
stRp5138
ag1
(g5058
g5003
(dp5139
g60
g339
stRp5140
ag1
(g5058
g5003
(dp5141
g60
g489
stRp5142
ag1
(g5058
g5003
(dp5143
g60
g381
stRp5144
ag1
(g5058
g5003
(dp5145
g60
g98
stRp5146
ag1
(g5058
g5003
(dp5147
g60
g513
stRp5148
ag1
(g5058
g5003
(dp5149
g60
g519
stRp5150
ag1
(g5058
g5003
(dp5151
g60
g453
stRp5152
ag1
(g5058
g5003
(dp5153
g60
g147
stRp5154
ag1
(g5058
g5003
(dp5155
g60
g92
stRp5156
ag1
(g5058
g5003
(dp5157
g60
g555
stRp5158
ag1
(g5058
g5003
(dp5159
g60
g501
stRp5160
ag1
(g5058
g5003
(dp5161
g60
g135
stRp5162
ag1
(g5058
g5003
(dp5163
g60
g165
stRp5164
ag1
(g5058
g5003
(dp5165
g60
g333
stRp5166
ag1
(g5058
g5003
(dp5167
g60
g261
stRp5168
ag1
(g5058
g5003
(dp5169
g60
g387
stRp5170
ag1
(g5058
g5003
(dp5171
g60
g471
stRp5172
ag1
(g5058
g5003
(dp5173
g60
g537
stRp5174
ag1
(g5058
g5003
(dp5175
g60
g219
stRp5176
ag1
(g5058
g5003
(dp5177
g60
g285
stRp5178
ag1
(g5058
g5003
(dp5179
g60
g561
stRp5180
ag1
(g5058
g5003
(dp5181
g60
g465
stRp5182
ag1
(g5058
g5003
(dp5183
g60
g291
stRp5184
ag1
(g5058
g5003
(dp5185
g60
g255
stRp5186
ag1
(g5058
g5003
(dp5187
g60
g423
stRp5188
ag1
(g5058
g5003
(dp5189
g60
g399
stRp5190
ag1
(g5058
g5003
(dp5191
g60
g321
stRp5192
ag1
(g5058
g5003
(dp5193
g60
g297
stRp5194
ag1
(g5058
g5003
(dp5195
g60
g435
stRp5196
ag1
(g5058
g5003
(dp5197
g60
g375
stRp5198
ag1
(g5058
g5003
(dp5199
g60
g177
stRp5200
ag1
(g5058
g5003
(dp5201
g60
g104
stRp5202
ag1
(g5058
g5003
(dp5203
g60
g80
stRp5204
ag1
(g5058
g5003
(dp5205
g60
g495
stRp5206
ag1
(g5058
g5003
(dp5207
g60
g243
stRp5208
ag1
(g5058
g5003
(dp5209
g60
g213
stRp5210
ag1
(g5058
g5003
(dp5211
g60
g231
stRp5212
ag1
(g5058
g5003
(dp5213
g60
g567
stRp5214
ag1
(g5058
g5003
(dp5215
g60
g507
stRp5216
ag1
(g5058
g5003
(dp5217
g60
g327
stRp5218
ag1
(g5058
g5003
(dp5219
g60
g303
stRp5220
ag1
(g5058
g5003
(dp5221
g60
g153
stRp5222
ag1
(g5058
g5003
(dp5223
g60
g549
stRp5224
ag1
(g5058
g5003
(dp5225
g60
g447
stRp5226
asS'seed'
p5227
NsS'thisIndex'
p5228
I77
sS'thisN'
p5229
I84
sS'thisTrialN'
p5230
I0
sS'nTotal'
p5231
I84
sS'_warnUseOfNext'
p5232
I01
sbag1
(g4990
g3
NtRp5233
(dp5234
g4993
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5235
sg4995
(lp5236
sg4997
I140003122488656
sg10
g5043
sg6
g4999
sg5000
I1
sg38
I01
sg39
g40
sg5001
g1
(g5002
g5003
(dp5237
g30
g5015
(g5016
g5006
g5017
S'b'
tRp5238
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5014
g5015
(g5016
g5006
g5017
S'b'
tRp5239
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5005
(g5006
(I0
tS'b'
tRp5240
(I1
(I220
I1
tg5008
I00
(lp5241
g587
ag597
ag607
ag617
ag627
ag637
ag647
ag657
ag667
ag677
ag687
ag697
ag707
ag717
ag727
ag737
ag747
ag757
ag767
ag777
ag787
ag797
ag807
ag817
ag827
ag837
ag847
ag857
ag867
ag877
ag887
ag897
ag907
ag917
ag927
ag937
ag947
ag957
ag967
ag977
ag987
ag997
ag1007
ag1017
ag1027
ag1037
ag1047
ag1057
ag1067
ag1077
ag1087
ag1097
ag1107
ag1117
ag1127
ag1137
ag1147
ag1157
ag1167
ag1177
ag1187
ag1197
ag1207
ag1217
ag1227
ag1237
ag1247
ag1257
ag1267
ag1277
ag1287
ag1297
ag1307
ag1317
ag1327
ag1337
ag1347
ag1357
ag1367
ag1377
ag1387
ag1397
ag1407
ag1417
ag1427
ag1437
ag1447
ag1457
ag1467
ag1477
ag1487
ag1497
ag1507
ag1517
ag1527
ag1537
ag1547
ag1557
ag1567
ag1577
ag1587
ag1597
ag1607
ag1617
ag1627
ag1637
ag1647
ag1657
ag1667
ag1677
ag1687
ag1697
ag1707
ag1717
ag1727
ag1737
ag1747
ag1757
ag1767
ag1777
ag1787
ag1797
ag1807
ag1817
ag1827
ag1837
ag1847
ag1857
ag1867
ag1877
ag1887
ag1897
ag1907
ag1917
ag1927
ag1937
ag1947
ag1957
ag1967
ag1977
ag1987
ag1997
ag2007
ag2017
ag2027
ag2037
ag2047
ag2057
ag2067
ag2077
ag2087
ag2097
ag2107
ag2117
ag2127
ag2137
ag2147
ag2157
ag2167
ag2177
ag2187
ag2197
ag2207
ag2217
ag2227
ag2237
ag2247
ag2257
ag2267
ag2277
ag2287
ag2297
ag2307
ag2317
ag2327
ag2337
ag2347
ag2357
ag2367
ag2377
ag2387
ag2397
ag2407
ag2417
ag2427
ag2437
ag2447
ag2457
ag2467
ag2477
ag2487
ag2497
ag2507
ag2517
ag2527
ag2537
ag2547
ag2557
ag2567
ag2577
ag2587
ag2597
ag2607
ag2617
ag2627
ag2637
ag2647
ag2657
ag2667
ag2677
ag2687
ag2697
ag2707
ag2717
ag2727
ag2737
ag2747
ag2757
ag2767
ag2777
atbsg29
g5005
(g5006
(I0
tS'b'
tRp5242
(I1
(I220
I1
tg5008
I00
(lp5243
g588
ag598
ag608
ag618
ag628
ag638
ag648
ag658
ag668
ag678
ag688
ag698
ag708
ag718
ag728
ag738
ag748
ag758
ag768
ag778
ag788
ag798
ag808
ag818
ag828
ag838
ag848
ag858
ag868
ag878
ag888
ag898
ag908
ag918
ag928
ag938
ag948
ag958
ag968
ag978
ag988
ag998
ag1008
ag1018
ag1028
ag1038
ag1048
ag1058
ag1068
ag1078
ag1088
ag1098
ag1108
ag1118
ag1128
ag1138
ag1148
ag1158
ag1168
ag1178
ag1188
ag1198
ag1208
ag1218
ag1228
ag1238
ag1248
ag1258
ag1268
ag1278
ag1288
ag1298
ag1308
ag1318
ag1328
ag1338
ag1348
ag1358
ag1368
ag1378
ag1388
ag1398
ag1408
ag1418
ag1428
ag1438
ag1448
ag1458
ag1468
ag1478
ag1488
ag1498
ag1508
ag1518
ag1528
ag1538
ag1548
ag1558
ag1568
ag1578
ag1588
ag1598
ag1608
ag1618
ag1628
ag1638
ag1648
ag1658
ag1668
ag1678
ag1688
ag1698
ag1708
ag1718
ag1728
ag1738
ag1748
ag1758
ag1768
ag1778
ag1788
ag1798
ag1808
ag1818
ag1828
ag1838
ag1848
ag1858
ag1868
ag1878
ag1888
ag1898
ag1908
ag1918
ag1928
ag1938
ag1948
ag1958
ag1968
ag1978
ag1988
ag1998
ag2008
ag2018
ag2028
ag2038
ag2048
ag2058
ag2068
ag2078
ag2088
ag2098
ag2108
ag2118
ag2128
ag2138
ag2148
ag2158
ag2168
ag2178
ag2188
ag2198
ag2208
ag2218
ag2228
ag2238
ag2248
ag2258
ag2268
ag2278
ag2288
ag2298
ag2308
ag2318
ag2328
ag2338
ag2348
ag2358
ag2368
ag2378
ag2388
ag2398
ag2408
ag2418
ag2428
ag2438
ag2448
ag2458
ag2468
ag2478
ag2488
ag2498
ag2508
ag2518
ag2528
ag2538
ag2548
ag2558
ag2568
ag2578
ag2588
ag2598
ag2608
ag2618
ag2628
ag2638
ag2648
ag2658
ag2668
ag2678
ag2688
ag2698
ag2708
ag2718
ag2728
ag2738
ag2748
ag2758
ag2768
ag2778
atbsg31
g5015
(g5016
g5006
g5017
S'b'
tRp5244
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5015
(g5016
g5006
g5017
S'b'
tRp5245
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5015
(g5016
g5006
g5017
S'b'
tRp5246
(I1
(I220
I1
tg5019
I00
S' \xf1\xdb?\xba\xef\xe2?:\xad\xef?\xc0d\xc7?t\xd3\xa6?|%\xb6?0\xbb\xcf?\x08\xac\xf8?\xa0\xff\x14@\xca8\x9c?\xba\xdb\x93?\x82\x1f\xc5?\xb0y\xc9?(\xf1\xed?\xc4\x96\xf6?P\xe0\x03@Y\xa1\x0f@.\xa4\xeb?\xf02\xa9?Y\x11\x07@\xbb\xea0@L^\xe9?X\x8c\x1d@\xd7\x13\x16@\x81&R@\xedHq@k\xee\x13@8\x10\xd0?\xf4\xa3\x1f@\xb1\xb8YA\xb2\xf4\xbf@~\xb00A\'\x10n@\xb4\x85KA\x86\xb20@\x90\xbe\xf7@\xb6\x88\xa0?\x98\xfdl@T[\xbc?\xa8\xc7\xff@3\xa9Y@\xa4\xe6O@Pk\x1c@|!\xf0?~s\xe7?j\x1b\xe1?\xa8Ur@\x8aF\xa9?\x19\xba\xb4@\x98\xdb\x95?y\x92I@f\xb8\x04A}\xfa4A\xf6\x00\xfd?\x9b\xc9\x1fAc\xec2@\xae?\x8d?\\p\x80A6\x8f\xad?\xbc\xfa\xdd@p\x85\xf6?\x04\xe6\x8b@\x85\xf0\x15@\xba\xa1\xe9?\x14"\x18@\x1d\x94;@\xd8\xd4\rA\xa4\x02$@\x17\x81\r@\xa0\r\x86@\xd0\x05\xe1?\xe9D6@$\x0f\xba@\xd8\'a@\xe4\xbb\x82?@\xba @\xa6\x81H@\rJWAj\xc2=@]\x165@\xa48\x98@\xa6\xd3\x88?\xd1\xaf\xca@\xda\xaf\xeb?\x97\x8fg@\x82\x18\x1dA:\xcdy@S\xe9\x12@\xa4S\xf9@DkG@\xac\x93\x93?\x01\xd8\x12@8\x85H@\xe4\xee\xd1?\xaeH\xf2?\xa9\x16`@\xce\xe1\xa2?2\x93\xbe?\x15\xe7\x05@\xe2R\xa9?\xb2\x9a\x0e@+1\t@t\xd7\xde?nH\xa9?F\x97\x00@\xe2\xe3\x12@0Gc@\xde\xe8\x05@N\xda\xfa?\x01\xdcjAY\xc0\x81@\xd1(\xbbA\xecw\x13A\x8c(\x8b?H\xdd\xc0?\x96\x05}@J\xec\xc0?\x9e\xd8\xeb?\xe3}aA4\xd90@X\xab\xbc?\x08\xd5\xa4?\x80\xfa\xcf?\x82\xad\x10@O\xad\x0f@B\t5@\xbe\x15`@\x92\xde\x92@6\xc1\x82@\xc1d\xb0@\x95\x15TA\xae\x88\xbc?P\xcf\xeb?\x18\x7f\xc0@\x9cR\xb8?\x82 \x9a?\x9a\x9b\xcb?\x16R\xb8?\xbcu\xd8?\xcd\\\x97A\x98\xabk?\x8c\'\xb6?&\xc3=@\xd5\xe7\xc6@\xfd\xdcM@\xf0\x1a\xac@ \xacb?\x9a\x91\xcb?\xae\x11\xc5?\x0c\x94\xd0@\xbe-\xd4?\x1c\t\xf2?z\xe20@\x0f%5@j\x14\xd4?\xbe\xc31At$p@N(\xf0?\xec\xe2\x04@\xbc\x1d\xb4@\x0c\x1e\xb6?\xccz,@\xcf\xd3\xd1AH\xd9f?\xa4|\x8d@\xac\xad\x82?\xe0\xd6k@\xe2$\x89?<\xb6\xe8@t.\xc5?\xb4\xa9\xda?\xc0I\x83@\x82_\x8b?j\x1d\xab?#\xbei@\x895\x81@\xe6\x94\x0e@\xf8o\xedA\xe0\x94Q?d\x05\x87?\xbc\x00\xa5?\xdet\x84A\x98\xf6Q?\xafYF@f\xf3\x86?o\xe3IA\xf6/\x8b?\xf0\x18\xb4?\x90_\xd5@\x92V\xb8?~\xc5=@\xec\xdc?@T$\x89?L\x8a\xad?\xa0\x8a\x8f?p\xbb\xde?\xee\xe4\xb1?\xa8\xc6\xeb?\xa05\xa7?fM\x9a?N\xc1\xc0?^j\x80?D\xdc|?\xb8\x92\x8f?v\xa4\x00@\xac\x84\xbe?N\xb3\xa4?\x86\xca\x91?\xc6\xf8\xa4?Z\xbe\xa0?\x94\x88u@\x96\x01B@\xee\xc7\xeb?\xf0\x83\x8c@^\xf5\x88?\xd0\xf0\x06@\xb4\x96\x82?\xa2"\x96? \x99\xde?\xb4z*@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5037
g5015
(g5016
g5006
g5017
S'b'
tRp5247
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5248
(dp5249
g5041
(dp5250
g31
I01
sg5014
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5037
I01
ssg5043
g5233
sg5044
(lp5251
g5014
ag5037
ag28
ag29
ag30
ag31
ag32
ag33
asg5046
(lp5252
I220
aI1
asbsg5048
S'sequential'
p5253
sg5050
g5005
(g5006
(I0
tS'b'
tRp5254
(I1
(I220
I1
tg584
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5053
I01
sg5054
I1
sg5055
I-1
sg5056
(lp5255
g1
(g5058
g5003
(dp5256
g61
g589
sg581
g582
stRp5257
ag1
(g5058
g5003
(dp5258
g61
g599
sg581
g593
stRp5259
ag1
(g5058
g5003
(dp5260
g61
g609
sg581
g603
stRp5261
ag1
(g5058
g5003
(dp5262
g61
g619
sg581
g613
stRp5263
ag1
(g5058
g5003
(dp5264
g61
g629
sg581
g623
stRp5265
ag1
(g5058
g5003
(dp5266
g61
g639
sg581
g633
stRp5267
ag1
(g5058
g5003
(dp5268
g61
g649
sg581
g643
stRp5269
ag1
(g5058
g5003
(dp5270
g61
g659
sg581
g653
stRp5271
ag1
(g5058
g5003
(dp5272
g61
g669
sg581
g663
stRp5273
ag1
(g5058
g5003
(dp5274
g61
g679
sg581
g673
stRp5275
ag1
(g5058
g5003
(dp5276
g61
g689
sg581
g683
stRp5277
ag1
(g5058
g5003
(dp5278
g61
g699
sg581
g693
stRp5279
ag1
(g5058
g5003
(dp5280
g61
g709
sg581
g703
stRp5281
ag1
(g5058
g5003
(dp5282
g61
g719
sg581
g713
stRp5283
ag1
(g5058
g5003
(dp5284
g61
g729
sg581
g723
stRp5285
ag1
(g5058
g5003
(dp5286
g61
g739
sg581
g733
stRp5287
ag1
(g5058
g5003
(dp5288
g61
g749
sg581
g743
stRp5289
ag1
(g5058
g5003
(dp5290
g61
g759
sg581
g753
stRp5291
ag1
(g5058
g5003
(dp5292
g61
g769
sg581
g763
stRp5293
ag1
(g5058
g5003
(dp5294
g61
g779
sg581
g773
stRp5295
ag1
(g5058
g5003
(dp5296
g61
g789
sg581
g783
stRp5297
ag1
(g5058
g5003
(dp5298
g61
g799
sg581
g793
stRp5299
ag1
(g5058
g5003
(dp5300
g61
g809
sg581
g803
stRp5301
ag1
(g5058
g5003
(dp5302
g61
g819
sg581
g813
stRp5303
ag1
(g5058
g5003
(dp5304
g61
g829
sg581
g823
stRp5305
ag1
(g5058
g5003
(dp5306
g61
g839
sg581
g833
stRp5307
ag1
(g5058
g5003
(dp5308
g61
g849
sg581
g843
stRp5309
ag1
(g5058
g5003
(dp5310
g61
g859
sg581
g853
stRp5311
ag1
(g5058
g5003
(dp5312
g61
g869
sg581
g863
stRp5313
ag1
(g5058
g5003
(dp5314
g61
g879
sg581
g873
stRp5315
ag1
(g5058
g5003
(dp5316
g61
g889
sg581
g883
stRp5317
ag1
(g5058
g5003
(dp5318
g61
g899
sg581
g893
stRp5319
ag1
(g5058
g5003
(dp5320
g61
g909
sg581
g903
stRp5321
ag1
(g5058
g5003
(dp5322
g61
g919
sg581
g913
stRp5323
ag1
(g5058
g5003
(dp5324
g61
g929
sg581
g923
stRp5325
ag1
(g5058
g5003
(dp5326
g61
g939
sg581
g933
stRp5327
ag1
(g5058
g5003
(dp5328
g61
g949
sg581
g943
stRp5329
ag1
(g5058
g5003
(dp5330
g61
g959
sg581
g953
stRp5331
ag1
(g5058
g5003
(dp5332
g61
g969
sg581
g963
stRp5333
ag1
(g5058
g5003
(dp5334
g61
g979
sg581
g973
stRp5335
ag1
(g5058
g5003
(dp5336
g61
g989
sg581
g983
stRp5337
ag1
(g5058
g5003
(dp5338
g61
g999
sg581
g993
stRp5339
ag1
(g5058
g5003
(dp5340
g61
g1009
sg581
g1003
stRp5341
ag1
(g5058
g5003
(dp5342
g61
g1019
sg581
g1013
stRp5343
ag1
(g5058
g5003
(dp5344
g61
g1029
sg581
g1023
stRp5345
ag1
(g5058
g5003
(dp5346
g61
g1039
sg581
g1033
stRp5347
ag1
(g5058
g5003
(dp5348
g61
g1049
sg581
g1043
stRp5349
ag1
(g5058
g5003
(dp5350
g61
g1059
sg581
g1053
stRp5351
ag1
(g5058
g5003
(dp5352
g61
g1069
sg581
g1063
stRp5353
ag1
(g5058
g5003
(dp5354
g61
g1079
sg581
g1073
stRp5355
ag1
(g5058
g5003
(dp5356
g61
g1089
sg581
g1083
stRp5357
ag1
(g5058
g5003
(dp5358
g61
g1099
sg581
g1093
stRp5359
ag1
(g5058
g5003
(dp5360
g61
g1109
sg581
g1103
stRp5361
ag1
(g5058
g5003
(dp5362
g61
g1119
sg581
g1113
stRp5363
ag1
(g5058
g5003
(dp5364
g61
g1129
sg581
g1123
stRp5365
ag1
(g5058
g5003
(dp5366
g61
g1139
sg581
g1133
stRp5367
ag1
(g5058
g5003
(dp5368
g61
g1149
sg581
g1143
stRp5369
ag1
(g5058
g5003
(dp5370
g61
g1159
sg581
g1153
stRp5371
ag1
(g5058
g5003
(dp5372
g61
g1169
sg581
g1163
stRp5373
ag1
(g5058
g5003
(dp5374
g61
g1179
sg581
g1173
stRp5375
ag1
(g5058
g5003
(dp5376
g61
g1189
sg581
g1183
stRp5377
ag1
(g5058
g5003
(dp5378
g61
g1199
sg581
g1193
stRp5379
ag1
(g5058
g5003
(dp5380
g61
g1209
sg581
g1203
stRp5381
ag1
(g5058
g5003
(dp5382
g61
g1219
sg581
g1213
stRp5383
ag1
(g5058
g5003
(dp5384
g61
g1229
sg581
g1223
stRp5385
ag1
(g5058
g5003
(dp5386
g61
g1239
sg581
g1233
stRp5387
ag1
(g5058
g5003
(dp5388
g61
g1249
sg581
g1243
stRp5389
ag1
(g5058
g5003
(dp5390
g61
g1259
sg581
g1253
stRp5391
ag1
(g5058
g5003
(dp5392
g61
g1269
sg581
g1263
stRp5393
ag1
(g5058
g5003
(dp5394
g61
g1279
sg581
g1273
stRp5395
ag1
(g5058
g5003
(dp5396
g61
g1289
sg581
g1283
stRp5397
ag1
(g5058
g5003
(dp5398
g61
g1299
sg581
g1293
stRp5399
ag1
(g5058
g5003
(dp5400
g61
g1309
sg581
g1303
stRp5401
ag1
(g5058
g5003
(dp5402
g61
g1319
sg581
g1313
stRp5403
ag1
(g5058
g5003
(dp5404
g61
g1329
sg581
g1323
stRp5405
ag1
(g5058
g5003
(dp5406
g61
g1339
sg581
g1333
stRp5407
ag1
(g5058
g5003
(dp5408
g61
g1349
sg581
g1343
stRp5409
ag1
(g5058
g5003
(dp5410
g61
g1359
sg581
g1353
stRp5411
ag1
(g5058
g5003
(dp5412
g61
g1369
sg581
g1363
stRp5413
ag1
(g5058
g5003
(dp5414
g61
g1379
sg581
g1373
stRp5415
ag1
(g5058
g5003
(dp5416
g61
g1389
sg581
g1383
stRp5417
ag1
(g5058
g5003
(dp5418
g61
g1399
sg581
g1393
stRp5419
ag1
(g5058
g5003
(dp5420
g61
g1409
sg581
g1403
stRp5421
ag1
(g5058
g5003
(dp5422
g61
g1419
sg581
g1413
stRp5423
ag1
(g5058
g5003
(dp5424
g61
g1429
sg581
g1423
stRp5425
ag1
(g5058
g5003
(dp5426
g61
g1439
sg581
g1433
stRp5427
ag1
(g5058
g5003
(dp5428
g61
g1449
sg581
g1443
stRp5429
ag1
(g5058
g5003
(dp5430
g61
g1459
sg581
g1453
stRp5431
ag1
(g5058
g5003
(dp5432
g61
g1469
sg581
g1463
stRp5433
ag1
(g5058
g5003
(dp5434
g61
g1479
sg581
g1473
stRp5435
ag1
(g5058
g5003
(dp5436
g61
g1489
sg581
g1483
stRp5437
ag1
(g5058
g5003
(dp5438
g61
g1499
sg581
g1493
stRp5439
ag1
(g5058
g5003
(dp5440
g61
g1509
sg581
g1503
stRp5441
ag1
(g5058
g5003
(dp5442
g61
g1519
sg581
g1513
stRp5443
ag1
(g5058
g5003
(dp5444
g61
g1529
sg581
g1523
stRp5445
ag1
(g5058
g5003
(dp5446
g61
g1539
sg581
g1533
stRp5447
ag1
(g5058
g5003
(dp5448
g61
g1549
sg581
g1543
stRp5449
ag1
(g5058
g5003
(dp5450
g61
g1559
sg581
g1553
stRp5451
ag1
(g5058
g5003
(dp5452
g61
g1569
sg581
g1563
stRp5453
ag1
(g5058
g5003
(dp5454
g61
g1579
sg581
g1573
stRp5455
ag1
(g5058
g5003
(dp5456
g61
g1589
sg581
g1583
stRp5457
ag1
(g5058
g5003
(dp5458
g61
g1599
sg581
g1593
stRp5459
ag1
(g5058
g5003
(dp5460
g61
g1609
sg581
g1603
stRp5461
ag1
(g5058
g5003
(dp5462
g61
g1619
sg581
g1613
stRp5463
ag1
(g5058
g5003
(dp5464
g61
g1629
sg581
g1623
stRp5465
ag1
(g5058
g5003
(dp5466
g61
g1639
sg581
g1633
stRp5467
ag1
(g5058
g5003
(dp5468
g61
g1649
sg581
g1643
stRp5469
ag1
(g5058
g5003
(dp5470
g61
g1659
sg581
g1653
stRp5471
ag1
(g5058
g5003
(dp5472
g61
g1669
sg581
g1663
stRp5473
ag1
(g5058
g5003
(dp5474
g61
g1679
sg581
g1673
stRp5475
ag1
(g5058
g5003
(dp5476
g61
g1689
sg581
g1683
stRp5477
ag1
(g5058
g5003
(dp5478
g61
g1699
sg581
g1693
stRp5479
ag1
(g5058
g5003
(dp5480
g61
g1709
sg581
g1703
stRp5481
ag1
(g5058
g5003
(dp5482
g61
g1719
sg581
g1713
stRp5483
ag1
(g5058
g5003
(dp5484
g61
g1729
sg581
g1723
stRp5485
ag1
(g5058
g5003
(dp5486
g61
g1739
sg581
g1733
stRp5487
ag1
(g5058
g5003
(dp5488
g61
g1749
sg581
g1743
stRp5489
ag1
(g5058
g5003
(dp5490
g61
g1759
sg581
g1753
stRp5491
ag1
(g5058
g5003
(dp5492
g61
g1769
sg581
g1763
stRp5493
ag1
(g5058
g5003
(dp5494
g61
g1779
sg581
g1773
stRp5495
ag1
(g5058
g5003
(dp5496
g61
g1789
sg581
g1783
stRp5497
ag1
(g5058
g5003
(dp5498
g61
g1799
sg581
g1793
stRp5499
ag1
(g5058
g5003
(dp5500
g61
g1809
sg581
g1803
stRp5501
ag1
(g5058
g5003
(dp5502
g61
g1819
sg581
g1813
stRp5503
ag1
(g5058
g5003
(dp5504
g61
g1829
sg581
g1823
stRp5505
ag1
(g5058
g5003
(dp5506
g61
g1839
sg581
g1833
stRp5507
ag1
(g5058
g5003
(dp5508
g61
g1849
sg581
g1843
stRp5509
ag1
(g5058
g5003
(dp5510
g61
g1859
sg581
g1853
stRp5511
ag1
(g5058
g5003
(dp5512
g61
g1869
sg581
g1863
stRp5513
ag1
(g5058
g5003
(dp5514
g61
g1879
sg581
g1873
stRp5515
ag1
(g5058
g5003
(dp5516
g61
g1889
sg581
g1883
stRp5517
ag1
(g5058
g5003
(dp5518
g61
g1899
sg581
g1893
stRp5519
ag1
(g5058
g5003
(dp5520
g61
g1909
sg581
g1903
stRp5521
ag1
(g5058
g5003
(dp5522
g61
g1919
sg581
g1913
stRp5523
ag1
(g5058
g5003
(dp5524
g61
g1929
sg581
g1923
stRp5525
ag1
(g5058
g5003
(dp5526
g61
g1939
sg581
g1933
stRp5527
ag1
(g5058
g5003
(dp5528
g61
g1949
sg581
g1943
stRp5529
ag1
(g5058
g5003
(dp5530
g61
g1959
sg581
g1953
stRp5531
ag1
(g5058
g5003
(dp5532
g61
g1969
sg581
g1963
stRp5533
ag1
(g5058
g5003
(dp5534
g61
g1979
sg581
g1973
stRp5535
ag1
(g5058
g5003
(dp5536
g61
g1989
sg581
g1983
stRp5537
ag1
(g5058
g5003
(dp5538
g61
g1999
sg581
g1993
stRp5539
ag1
(g5058
g5003
(dp5540
g61
g2009
sg581
g2003
stRp5541
ag1
(g5058
g5003
(dp5542
g61
g2019
sg581
g2013
stRp5543
ag1
(g5058
g5003
(dp5544
g61
g2029
sg581
g2023
stRp5545
ag1
(g5058
g5003
(dp5546
g61
g2039
sg581
g2033
stRp5547
ag1
(g5058
g5003
(dp5548
g61
g2049
sg581
g2043
stRp5549
ag1
(g5058
g5003
(dp5550
g61
g2059
sg581
g2053
stRp5551
ag1
(g5058
g5003
(dp5552
g61
g2069
sg581
g2063
stRp5553
ag1
(g5058
g5003
(dp5554
g61
g2079
sg581
g2073
stRp5555
ag1
(g5058
g5003
(dp5556
g61
g2089
sg581
g2083
stRp5557
ag1
(g5058
g5003
(dp5558
g61
g2099
sg581
g2093
stRp5559
ag1
(g5058
g5003
(dp5560
g61
g2109
sg581
g2103
stRp5561
ag1
(g5058
g5003
(dp5562
g61
g2119
sg581
g2113
stRp5563
ag1
(g5058
g5003
(dp5564
g61
g2129
sg581
g2123
stRp5565
ag1
(g5058
g5003
(dp5566
g61
g2139
sg581
g2133
stRp5567
ag1
(g5058
g5003
(dp5568
g61
g2149
sg581
g2143
stRp5569
ag1
(g5058
g5003
(dp5570
g61
g2159
sg581
g2153
stRp5571
ag1
(g5058
g5003
(dp5572
g61
g2169
sg581
g2163
stRp5573
ag1
(g5058
g5003
(dp5574
g61
g2179
sg581
g2173
stRp5575
ag1
(g5058
g5003
(dp5576
g61
g2189
sg581
g2183
stRp5577
ag1
(g5058
g5003
(dp5578
g61
g2199
sg581
g2193
stRp5579
ag1
(g5058
g5003
(dp5580
g61
g2209
sg581
g2203
stRp5581
ag1
(g5058
g5003
(dp5582
g61
g2219
sg581
g2213
stRp5583
ag1
(g5058
g5003
(dp5584
g61
g2229
sg581
g2223
stRp5585
ag1
(g5058
g5003
(dp5586
g61
g2239
sg581
g2233
stRp5587
ag1
(g5058
g5003
(dp5588
g61
g2249
sg581
g2243
stRp5589
ag1
(g5058
g5003
(dp5590
g61
g2259
sg581
g2253
stRp5591
ag1
(g5058
g5003
(dp5592
g61
g2269
sg581
g2263
stRp5593
ag1
(g5058
g5003
(dp5594
g61
g2279
sg581
g2273
stRp5595
ag1
(g5058
g5003
(dp5596
g61
g2289
sg581
g2283
stRp5597
ag1
(g5058
g5003
(dp5598
g61
g2299
sg581
g2293
stRp5599
ag1
(g5058
g5003
(dp5600
g61
g2309
sg581
g2303
stRp5601
ag1
(g5058
g5003
(dp5602
g61
g2319
sg581
g2313
stRp5603
ag1
(g5058
g5003
(dp5604
g61
g2329
sg581
g2323
stRp5605
ag1
(g5058
g5003
(dp5606
g61
g2339
sg581
g2333
stRp5607
ag1
(g5058
g5003
(dp5608
g61
g2349
sg581
g2343
stRp5609
ag1
(g5058
g5003
(dp5610
g61
g2359
sg581
g2353
stRp5611
ag1
(g5058
g5003
(dp5612
g61
g2369
sg581
g2363
stRp5613
ag1
(g5058
g5003
(dp5614
g61
g2379
sg581
g2373
stRp5615
ag1
(g5058
g5003
(dp5616
g61
g2389
sg581
g2383
stRp5617
ag1
(g5058
g5003
(dp5618
g61
g2399
sg581
g2393
stRp5619
ag1
(g5058
g5003
(dp5620
g61
g2409
sg581
g2403
stRp5621
ag1
(g5058
g5003
(dp5622
g61
g2419
sg581
g2413
stRp5623
ag1
(g5058
g5003
(dp5624
g61
g2429
sg581
g2423
stRp5625
ag1
(g5058
g5003
(dp5626
g61
g2439
sg581
g2433
stRp5627
ag1
(g5058
g5003
(dp5628
g61
g2449
sg581
g2443
stRp5629
ag1
(g5058
g5003
(dp5630
g61
g2459
sg581
g2453
stRp5631
ag1
(g5058
g5003
(dp5632
g61
g2469
sg581
g2463
stRp5633
ag1
(g5058
g5003
(dp5634
g61
g2479
sg581
g2473
stRp5635
ag1
(g5058
g5003
(dp5636
g61
g2489
sg581
g2483
stRp5637
ag1
(g5058
g5003
(dp5638
g61
g2499
sg581
g2493
stRp5639
ag1
(g5058
g5003
(dp5640
g61
g2509
sg581
g2503
stRp5641
ag1
(g5058
g5003
(dp5642
g61
g2519
sg581
g2513
stRp5643
ag1
(g5058
g5003
(dp5644
g61
g2529
sg581
g2523
stRp5645
ag1
(g5058
g5003
(dp5646
g61
g2539
sg581
g2533
stRp5647
ag1
(g5058
g5003
(dp5648
g61
g2549
sg581
g2543
stRp5649
ag1
(g5058
g5003
(dp5650
g61
g2559
sg581
g2553
stRp5651
ag1
(g5058
g5003
(dp5652
g61
g2569
sg581
g2563
stRp5653
ag1
(g5058
g5003
(dp5654
g61
g2579
sg581
g2573
stRp5655
ag1
(g5058
g5003
(dp5656
g61
g2589
sg581
g2583
stRp5657
ag1
(g5058
g5003
(dp5658
g61
g2599
sg581
g2593
stRp5659
ag1
(g5058
g5003
(dp5660
g61
g2609
sg581
g2603
stRp5661
ag1
(g5058
g5003
(dp5662
g61
g2619
sg581
g2613
stRp5663
ag1
(g5058
g5003
(dp5664
g61
g2629
sg581
g2623
stRp5665
ag1
(g5058
g5003
(dp5666
g61
g2639
sg581
g2633
stRp5667
ag1
(g5058
g5003
(dp5668
g61
g2649
sg581
g2643
stRp5669
ag1
(g5058
g5003
(dp5670
g61
g2659
sg581
g2653
stRp5671
ag1
(g5058
g5003
(dp5672
g61
g2669
sg581
g2663
stRp5673
ag1
(g5058
g5003
(dp5674
g61
g2679
sg581
g2673
stRp5675
ag1
(g5058
g5003
(dp5676
g61
g2689
sg581
g2683
stRp5677
ag1
(g5058
g5003
(dp5678
g61
g2699
sg581
g2693
stRp5679
ag1
(g5058
g5003
(dp5680
g61
g2709
sg581
g2703
stRp5681
ag1
(g5058
g5003
(dp5682
g61
g2719
sg581
g2713
stRp5683
ag1
(g5058
g5003
(dp5684
g61
g2729
sg581
g2723
stRp5685
ag1
(g5058
g5003
(dp5686
g61
g2739
sg581
g2733
stRp5687
ag1
(g5058
g5003
(dp5688
g61
g2749
sg581
g2743
stRp5689
ag1
(g5058
g5003
(dp5690
g61
g2759
sg581
g2753
stRp5691
ag1
(g5058
g5003
(dp5692
g61
g2769
sg581
g2763
stRp5693
ag1
(g5058
g5003
(dp5694
g61
g2779
sg581
g2773
stRp5695
asg5227
Nsg5228
g2775
sg5229
I220
sg5230
I0
sg5231
I220
sg5232
I01
sbag1
(g4990
g3
NtRp5696
(dp5697
g4993
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5698
sg4995
(lp5699
sg4997
I140003122488656
sg10
S'trials2'
p5700
sg6
g4999
sg5000
I1
sg38
I01
sg39
g40
sg5001
g1
(g5002
g5003
(dp5701
g30
g5015
(g5016
g5006
g5017
S'b'
tRp5702
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5014
g5015
(g5016
g5006
g5017
S'b'
tRp5703
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5005
(g5006
(I0
tS'b'
tRp5704
(I1
(I220
I1
tg5008
I00
(lp5705
g2791
ag2802
ag2812
ag2822
ag2832
ag2842
ag2852
ag2862
ag2872
ag2882
ag2892
ag2902
ag2912
ag2922
ag2932
ag2942
ag2952
ag2962
ag2972
ag2982
ag2992
ag3002
ag3012
ag3022
ag3032
ag3042
ag3052
ag3062
ag3072
ag3082
ag3092
ag3102
ag3112
ag3122
ag3132
ag3142
ag3152
ag3162
ag3172
ag3182
ag3192
ag3202
ag3212
ag3222
ag3232
ag3242
ag3252
ag3262
ag3272
ag3282
ag3292
ag3302
ag3312
ag3322
ag3332
ag3342
ag3352
ag3362
ag3372
ag3382
ag3392
ag3402
ag3412
ag3422
ag3432
ag3442
ag3452
ag3462
ag3472
ag3482
ag3492
ag3502
ag3512
ag3522
ag3532
ag3542
ag3552
ag3562
ag3572
ag3582
ag3592
ag3602
ag3612
ag3622
ag3632
ag3642
ag3652
ag3662
ag3672
ag3682
ag3692
ag3702
ag3712
ag3722
ag3732
ag3742
ag3752
ag3762
ag3772
ag3782
ag3792
ag3802
ag3812
ag3822
ag3832
ag3842
ag3852
ag3862
ag3872
ag3882
ag3892
ag3902
ag3912
ag3922
ag3932
ag3942
ag3952
ag3962
ag3972
ag3982
ag3992
ag4002
ag4012
ag4022
ag4032
ag4042
ag4052
ag4062
ag4072
ag4082
ag4092
ag4102
ag4112
ag4122
ag4132
ag4142
ag4152
ag4162
ag4172
ag4182
ag4192
ag4202
ag4212
ag4222
ag4232
ag4242
ag4252
ag4262
ag4272
ag4282
ag4292
ag4302
ag4312
ag4322
ag4332
ag4342
ag4352
ag4362
ag4372
ag4382
ag4392
ag4402
ag4412
ag4422
ag4432
ag4442
ag4452
ag4462
ag4472
ag4482
ag4492
ag4502
ag4512
ag4522
ag4532
ag4542
ag4552
ag4562
ag4572
ag4582
ag4592
ag4602
ag4612
ag4622
ag4632
ag4642
ag4652
ag4662
ag4672
ag4682
ag4692
ag4702
ag4712
ag4722
ag4732
ag4742
ag4752
ag4762
ag4772
ag4782
ag4792
ag4802
ag4812
ag4822
ag4832
ag4842
ag4852
ag4862
ag4872
ag4882
ag4892
ag4902
ag4912
ag4922
ag4932
ag4942
ag4952
ag4962
ag4972
ag4982
atbsg29
g5005
(g5006
(I0
tS'b'
tRp5706
(I1
(I220
I1
tg5008
I00
(lp5707
g2792
ag2803
ag2813
ag2823
ag2833
ag2843
ag2853
ag2863
ag2873
ag2883
ag2893
ag2903
ag2913
ag2923
ag2933
ag2943
ag2953
ag2963
ag2973
ag2983
ag2993
ag3003
ag3013
ag3023
ag3033
ag3043
ag3053
ag3063
ag3073
ag3083
ag3093
ag3103
ag3113
ag3123
ag3133
ag3143
ag3153
ag3163
ag3173
ag3183
ag3193
ag3203
ag3213
ag3223
ag3233
ag3243
ag3253
ag3263
ag3273
ag3283
ag3293
ag3303
ag3313
ag3323
ag3333
ag3343
ag3353
ag3363
ag3373
ag3383
ag3393
ag3403
ag3413
ag3423
ag3433
ag3443
ag3453
ag3463
ag3473
ag3483
ag3493
ag3503
ag3513
ag3523
ag3533
ag3543
ag3553
ag3563
ag3573
ag3583
ag3593
ag3603
ag3613
ag3623
ag3633
ag3643
ag3653
ag3663
ag3673
ag3683
ag3693
ag3703
ag3713
ag3723
ag3733
ag3743
ag3753
ag3763
ag3773
ag3783
ag3793
ag3803
ag3813
ag3823
ag3833
ag3843
ag3853
ag3863
ag3873
ag3883
ag3893
ag3903
ag3913
ag3923
ag3933
ag3943
ag3953
ag3963
ag3973
ag3983
ag3993
ag4003
ag4013
ag4023
ag4033
ag4043
ag4053
ag4063
ag4073
ag4083
ag4093
ag4103
ag4113
ag4123
ag4133
ag4143
ag4153
ag4163
ag4173
ag4183
ag4193
ag4203
ag4213
ag4223
ag4233
ag4243
ag4253
ag4263
ag4273
ag4283
ag4293
ag4303
ag4313
ag4323
ag4333
ag4343
ag4353
ag4363
ag4373
ag4383
ag4393
ag4403
ag4413
ag4423
ag4433
ag4443
ag4453
ag4463
ag4473
ag4483
ag4493
ag4503
ag4513
ag4523
ag4533
ag4543
ag4553
ag4563
ag4573
ag4583
ag4593
ag4603
ag4613
ag4623
ag4633
ag4643
ag4653
ag4663
ag4673
ag4683
ag4693
ag4703
ag4713
ag4723
ag4733
ag4743
ag4753
ag4763
ag4773
ag4783
ag4793
ag4803
ag4813
ag4823
ag4833
ag4843
ag4853
ag4863
ag4873
ag4883
ag4893
ag4903
ag4913
ag4923
ag4933
ag4943
ag4953
ag4963
ag4973
ag4983
atbsg31
g5015
(g5016
g5006
g5017
S'b'
tRp5708
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5015
(g5016
g5006
g5017
S'b'
tRp5709
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5015
(g5016
g5006
g5017
S'b'
tRp5710
(I1
(I220
I1
tg5019
I00
S'\x99\x9d\x18@M\x86\x01@\xac\x91|?\xc6\x88\x80?\xdc.t?\xb6`\xc7?\x8e;\xab?T\xfd\xe0?rM\xc9?\xa8S\x9e?\xc2\xfd\xc4?\x88\xd4\x84?\xfe\x89\xd8?\xe7\x1c\x17@\x90^\xb8?\xec\x02\x96?\x88\xbbb?Q\xa0h@\x1b\x9a\x00@Tt\r@\x08S|?\xc6\xe3\xa2?\x015&@\xe8-\xf6?\xd2P\xe5?\xde\x90\x9e?\xe0Pt?\\\xe4\xde?\xc8\n\x08@\xca\xa3\x93?\xc8\xf5\xed?\xee\xc7\x93?&\x86\xba?$\xa1\xaf?|\x15\xff?\xc0[*@\x0c\x90:@\x96P\xa9?e\xa7\x0f@q\xabh@\x8e]\xf6?^\xc8\xaf?\xc1\xa6J@\xdc\xbb\xa0?\x121\xc5?\x90\x82\x91?\xa6\xb5\xe9?\xaa\xb6\xeb?4\xf7\xc0?OZ7@\x00O\xbc?d\xdd\xa7@b\xf7\xd1?\x1a\x86\xe9?\xc0\xaf\xcb?\x8c\xbe=@\xde<\x9f@\xe8\x9b\xbc?\x84P\xb8?4\x83\x1c@\x0b\xba\x01@\xbd\xc0=@D\xa7<@\x17\xf0?@\xc5:b@\xc8{\xe7?\xc8\xd4\xa0@2\x1f\xd4?2\x92u@>>E@ds\xab?\x85&R@\xc2M\x9a?$\xb6\xe9?\x04r\x0e@\xf0\x96\x95@\xc3\xf1\x13@\xea\x8f\xd8?\x94\xa5\xa0?\xce\xc4\x90@,\xb3\xc0?\x0c\x93\x0f@k+\x18@\xb1\xbf.@}\xc8.@\xaaET@\x94k8@\x9d\x9f\x80@\xeeI\x9a?\xf8\t\x98?\xdat\xa0?\xbah\x9c?\xd4\xa0\x80?\xbe\xf0\xc2?\x9e\x82\x80?\\\xc7\x11@\xe0c\xf4?z\xd8\xeb?F@\x8f?\xd0\xba^?\xee\x99\xad?b\x85\xe7?\xac\xcc|?\x94\xf1\x95?\xc81V?\xd0\xd6Q?D;\x8d?\xc4\x1c\x98?\xea\x03\xff?\x10\xedo?\xa4+t?\x046k?r\xe2\x93?\xac\x00\xa5?\x9c\xb9k?\x88.\xb6?v\x1f\x98?\xee\x99\x8f?\x06\xa0\xcf?|]\xb8?\xe8\x89\xe7?\xe0+\x98?.\x00\xa5?\xcc\xb4\xaf?By\x8f?\x86o\xc9?\x80/\x89?\xae0\xc5?0\xd0^?\xc7EU@\xa8\xcc\xb1?h\x83\xf6?\x90o\x8d?j\xbf\xb1?\x8cl\x0c@\xa49V?X\xab&?\xc4:I?4\xe7Q?\xb0\xebs?\xd6\xfe\x05@\x1a\xc2\x91?\x18`g?"\xdf\x93?d\xfdb?\x9e_\xb8?\xf0\xe5\xfc?:\x8d\x9e?\xa2\xce\xdc?\xfe\x7f\x82? 8\xd2?<rk?\x80\x06\x87?E~\x1d@J\xcf\x82?\\5\xe5?J\xda\x93?\xca\xe1\x93?~\xc5\x84?z\x8c\xf6?4\xa3\x00@\x12\x14\xc7?H\x8c\xa0?\n7\xab?b\xa3\x0f@&\x88\x9c?WC\n@0]|?\xfar\xd8? bg?\xd4\x01E?\xd4\t\x96?\xe2}\x8f?\x1c\xe2o?\x00o\xad?Bs\xab?\xb6\r\xe1?\xec\xb2x?@Zt?\xd8\xbcb?\xd0\x9dx?\xf2\xd4\x93?\xe4\xd0\xa2?$!V?J+\xb8?&\xeb\x86?\x9c\xac\xcb?|\xceb?\xben\xcb?\x84\xefU?\xe6k\x9c?\xa6G\xa9?\x0c\xd2|?\x86\xe6\xa2?n3\x8d?B\x95\x80?Rd\xad?\x96\xd1\xdc?`\x05\xd2?\xd8jg?Xm\xf4?\xe8rZ?P\xfb\x97?\xd2g\x8d?\xac\x06\x8b?p\xd6\xa2?\xa4O\x8b?p\xca|?\xf0\x90Z?\\Lo?\xec\xc3^?P\xe3^?\xf0\x06E?\xe8cZ?`\xb9^?\xc8\xf8\x86?\xe6\x93\x8f?\x8e\x05$@\xa2\x06\xa5?\xa0C|?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5037
g5015
(g5016
g5006
g5017
S'b'
tRp5711
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5712
(dp5713
g5041
(dp5714
g31
I01
sg5014
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5037
I01
ssg5043
g5696
sg5044
(lp5715
g5014
ag5037
ag28
ag29
ag30
ag31
ag32
ag33
asg5046
(lp5716
I220
aI1
asbsg5048
g5253
sg5050
g5005
(g5006
(I0
tS'b'
tRp5717
(I1
(I220
I1
tg584
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5053
I01
sg5054
I1
sg5055
I-1
sg5056
(lp5718
g1
(g5058
g5003
(dp5719
g2793
g2794
sg2789
g2790
stRp5720
ag1
(g5058
g5003
(dp5721
g2793
g2804
sg2789
g2801
stRp5722
ag1
(g5058
g5003
(dp5723
g2793
g2814
sg2789
g2811
stRp5724
ag1
(g5058
g5003
(dp5725
g2793
g2824
sg2789
g2821
stRp5726
ag1
(g5058
g5003
(dp5727
g2793
g2834
sg2789
g2831
stRp5728
ag1
(g5058
g5003
(dp5729
g2793
g2844
sg2789
g2841
stRp5730
ag1
(g5058
g5003
(dp5731
g2793
g2854
sg2789
g2851
stRp5732
ag1
(g5058
g5003
(dp5733
g2793
g2864
sg2789
g2861
stRp5734
ag1
(g5058
g5003
(dp5735
g2793
g2874
sg2789
g2871
stRp5736
ag1
(g5058
g5003
(dp5737
g2793
g2884
sg2789
g2881
stRp5738
ag1
(g5058
g5003
(dp5739
g2793
g2894
sg2789
g2891
stRp5740
ag1
(g5058
g5003
(dp5741
g2793
g2904
sg2789
g2901
stRp5742
ag1
(g5058
g5003
(dp5743
g2793
g2914
sg2789
g2911
stRp5744
ag1
(g5058
g5003
(dp5745
g2793
g2924
sg2789
g2921
stRp5746
ag1
(g5058
g5003
(dp5747
g2793
g2934
sg2789
g2931
stRp5748
ag1
(g5058
g5003
(dp5749
g2793
g2944
sg2789
g2941
stRp5750
ag1
(g5058
g5003
(dp5751
g2793
g2954
sg2789
g2951
stRp5752
ag1
(g5058
g5003
(dp5753
g2793
g2964
sg2789
g2961
stRp5754
ag1
(g5058
g5003
(dp5755
g2793
g2974
sg2789
g2971
stRp5756
ag1
(g5058
g5003
(dp5757
g2793
g2984
sg2789
g2981
stRp5758
ag1
(g5058
g5003
(dp5759
g2793
g2994
sg2789
g2991
stRp5760
ag1
(g5058
g5003
(dp5761
g2793
g3004
sg2789
g3001
stRp5762
ag1
(g5058
g5003
(dp5763
g2793
g3014
sg2789
g3011
stRp5764
ag1
(g5058
g5003
(dp5765
g2793
g3024
sg2789
g3021
stRp5766
ag1
(g5058
g5003
(dp5767
g2793
g3034
sg2789
g3031
stRp5768
ag1
(g5058
g5003
(dp5769
g2793
g3044
sg2789
g3041
stRp5770
ag1
(g5058
g5003
(dp5771
g2793
g3054
sg2789
g3051
stRp5772
ag1
(g5058
g5003
(dp5773
g2793
g3064
sg2789
g3061
stRp5774
ag1
(g5058
g5003
(dp5775
g2793
g3074
sg2789
g3071
stRp5776
ag1
(g5058
g5003
(dp5777
g2793
g3084
sg2789
g3081
stRp5778
ag1
(g5058
g5003
(dp5779
g2793
g3094
sg2789
g3091
stRp5780
ag1
(g5058
g5003
(dp5781
g2793
g3104
sg2789
g3101
stRp5782
ag1
(g5058
g5003
(dp5783
g2793
g3114
sg2789
g3111
stRp5784
ag1
(g5058
g5003
(dp5785
g2793
g3124
sg2789
g3121
stRp5786
ag1
(g5058
g5003
(dp5787
g2793
g3134
sg2789
g3131
stRp5788
ag1
(g5058
g5003
(dp5789
g2793
g3144
sg2789
g3141
stRp5790
ag1
(g5058
g5003
(dp5791
g2793
g3154
sg2789
g3151
stRp5792
ag1
(g5058
g5003
(dp5793
g2793
g3164
sg2789
g3161
stRp5794
ag1
(g5058
g5003
(dp5795
g2793
g3174
sg2789
g3171
stRp5796
ag1
(g5058
g5003
(dp5797
g2793
g3184
sg2789
g3181
stRp5798
ag1
(g5058
g5003
(dp5799
g2793
g3194
sg2789
g3191
stRp5800
ag1
(g5058
g5003
(dp5801
g2793
g3204
sg2789
g3201
stRp5802
ag1
(g5058
g5003
(dp5803
g2793
g3214
sg2789
g3211
stRp5804
ag1
(g5058
g5003
(dp5805
g2793
g3224
sg2789
g3221
stRp5806
ag1
(g5058
g5003
(dp5807
g2793
g3234
sg2789
g3231
stRp5808
ag1
(g5058
g5003
(dp5809
g2793
g3244
sg2789
g3241
stRp5810
ag1
(g5058
g5003
(dp5811
g2793
g3254
sg2789
g3251
stRp5812
ag1
(g5058
g5003
(dp5813
g2793
g3264
sg2789
g3261
stRp5814
ag1
(g5058
g5003
(dp5815
g2793
g3274
sg2789
g3271
stRp5816
ag1
(g5058
g5003
(dp5817
g2793
g3284
sg2789
g3281
stRp5818
ag1
(g5058
g5003
(dp5819
g2793
g3294
sg2789
g3291
stRp5820
ag1
(g5058
g5003
(dp5821
g2793
g3304
sg2789
g3301
stRp5822
ag1
(g5058
g5003
(dp5823
g2793
g3314
sg2789
g3311
stRp5824
ag1
(g5058
g5003
(dp5825
g2793
g3324
sg2789
g3321
stRp5826
ag1
(g5058
g5003
(dp5827
g2793
g3334
sg2789
g3331
stRp5828
ag1
(g5058
g5003
(dp5829
g2793
g3344
sg2789
g3341
stRp5830
ag1
(g5058
g5003
(dp5831
g2793
g3354
sg2789
g3351
stRp5832
ag1
(g5058
g5003
(dp5833
g2793
g3364
sg2789
g3361
stRp5834
ag1
(g5058
g5003
(dp5835
g2793
g3374
sg2789
g3371
stRp5836
ag1
(g5058
g5003
(dp5837
g2793
g3384
sg2789
g3381
stRp5838
ag1
(g5058
g5003
(dp5839
g2793
g3394
sg2789
g3391
stRp5840
ag1
(g5058
g5003
(dp5841
g2793
g3404
sg2789
g3401
stRp5842
ag1
(g5058
g5003
(dp5843
g2793
g3414
sg2789
g3411
stRp5844
ag1
(g5058
g5003
(dp5845
g2793
g3424
sg2789
g3421
stRp5846
ag1
(g5058
g5003
(dp5847
g2793
g3434
sg2789
g3431
stRp5848
ag1
(g5058
g5003
(dp5849
g2793
g3444
sg2789
g3441
stRp5850
ag1
(g5058
g5003
(dp5851
g2793
g3454
sg2789
g3451
stRp5852
ag1
(g5058
g5003
(dp5853
g2793
g3464
sg2789
g3461
stRp5854
ag1
(g5058
g5003
(dp5855
g2793
g3474
sg2789
g3471
stRp5856
ag1
(g5058
g5003
(dp5857
g2793
g3484
sg2789
g3481
stRp5858
ag1
(g5058
g5003
(dp5859
g2793
g3494
sg2789
g3491
stRp5860
ag1
(g5058
g5003
(dp5861
g2793
g3504
sg2789
g3501
stRp5862
ag1
(g5058
g5003
(dp5863
g2793
g3514
sg2789
g3511
stRp5864
ag1
(g5058
g5003
(dp5865
g2793
g3524
sg2789
g3521
stRp5866
ag1
(g5058
g5003
(dp5867
g2793
g3534
sg2789
g3531
stRp5868
ag1
(g5058
g5003
(dp5869
g2793
g3544
sg2789
g3541
stRp5870
ag1
(g5058
g5003
(dp5871
g2793
g3554
sg2789
g3551
stRp5872
ag1
(g5058
g5003
(dp5873
g2793
g3564
sg2789
g3561
stRp5874
ag1
(g5058
g5003
(dp5875
g2793
g3574
sg2789
g3571
stRp5876
ag1
(g5058
g5003
(dp5877
g2793
g3584
sg2789
g3581
stRp5878
ag1
(g5058
g5003
(dp5879
g2793
g3594
sg2789
g3591
stRp5880
ag1
(g5058
g5003
(dp5881
g2793
g3604
sg2789
g3601
stRp5882
ag1
(g5058
g5003
(dp5883
g2793
g3614
sg2789
g3611
stRp5884
ag1
(g5058
g5003
(dp5885
g2793
g3624
sg2789
g3621
stRp5886
ag1
(g5058
g5003
(dp5887
g2793
g3634
sg2789
g3631
stRp5888
ag1
(g5058
g5003
(dp5889
g2793
g3644
sg2789
g3641
stRp5890
ag1
(g5058
g5003
(dp5891
g2793
g3654
sg2789
g3651
stRp5892
ag1
(g5058
g5003
(dp5893
g2793
g3664
sg2789
g3661
stRp5894
ag1
(g5058
g5003
(dp5895
g2793
g3674
sg2789
g3671
stRp5896
ag1
(g5058
g5003
(dp5897
g2793
g3684
sg2789
g3681
stRp5898
ag1
(g5058
g5003
(dp5899
g2793
g3694
sg2789
g3691
stRp5900
ag1
(g5058
g5003
(dp5901
g2793
g3704
sg2789
g3701
stRp5902
ag1
(g5058
g5003
(dp5903
g2793
g3714
sg2789
g3711
stRp5904
ag1
(g5058
g5003
(dp5905
g2793
g3724
sg2789
g3721
stRp5906
ag1
(g5058
g5003
(dp5907
g2793
g3734
sg2789
g3731
stRp5908
ag1
(g5058
g5003
(dp5909
g2793
g3744
sg2789
g3741
stRp5910
ag1
(g5058
g5003
(dp5911
g2793
g3754
sg2789
g3751
stRp5912
ag1
(g5058
g5003
(dp5913
g2793
g3764
sg2789
g3761
stRp5914
ag1
(g5058
g5003
(dp5915
g2793
g3774
sg2789
g3771
stRp5916
ag1
(g5058
g5003
(dp5917
g2793
g3784
sg2789
g3781
stRp5918
ag1
(g5058
g5003
(dp5919
g2793
g3794
sg2789
g3791
stRp5920
ag1
(g5058
g5003
(dp5921
g2793
g3804
sg2789
g3801
stRp5922
ag1
(g5058
g5003
(dp5923
g2793
g3814
sg2789
g3811
stRp5924
ag1
(g5058
g5003
(dp5925
g2793
g3824
sg2789
g3821
stRp5926
ag1
(g5058
g5003
(dp5927
g2793
g3834
sg2789
g3831
stRp5928
ag1
(g5058
g5003
(dp5929
g2793
g3844
sg2789
g3841
stRp5930
ag1
(g5058
g5003
(dp5931
g2793
g3854
sg2789
g3851
stRp5932
ag1
(g5058
g5003
(dp5933
g2793
g3864
sg2789
g3861
stRp5934
ag1
(g5058
g5003
(dp5935
g2793
g3874
sg2789
g3871
stRp5936
ag1
(g5058
g5003
(dp5937
g2793
g3884
sg2789
g3881
stRp5938
ag1
(g5058
g5003
(dp5939
g2793
g3894
sg2789
g3891
stRp5940
ag1
(g5058
g5003
(dp5941
g2793
g3904
sg2789
g3901
stRp5942
ag1
(g5058
g5003
(dp5943
g2793
g3914
sg2789
g3911
stRp5944
ag1
(g5058
g5003
(dp5945
g2793
g3924
sg2789
g3921
stRp5946
ag1
(g5058
g5003
(dp5947
g2793
g3934
sg2789
g3931
stRp5948
ag1
(g5058
g5003
(dp5949
g2793
g3944
sg2789
g3941
stRp5950
ag1
(g5058
g5003
(dp5951
g2793
g3954
sg2789
g3951
stRp5952
ag1
(g5058
g5003
(dp5953
g2793
g3964
sg2789
g3961
stRp5954
ag1
(g5058
g5003
(dp5955
g2793
g3974
sg2789
g3971
stRp5956
ag1
(g5058
g5003
(dp5957
g2793
g3984
sg2789
g3981
stRp5958
ag1
(g5058
g5003
(dp5959
g2793
g3994
sg2789
g3991
stRp5960
ag1
(g5058
g5003
(dp5961
g2793
g4004
sg2789
g4001
stRp5962
ag1
(g5058
g5003
(dp5963
g2793
g4014
sg2789
g4011
stRp5964
ag1
(g5058
g5003
(dp5965
g2793
g4024
sg2789
g4021
stRp5966
ag1
(g5058
g5003
(dp5967
g2793
g4034
sg2789
g4031
stRp5968
ag1
(g5058
g5003
(dp5969
g2793
g4044
sg2789
g4041
stRp5970
ag1
(g5058
g5003
(dp5971
g2793
g4054
sg2789
g4051
stRp5972
ag1
(g5058
g5003
(dp5973
g2793
g4064
sg2789
g4061
stRp5974
ag1
(g5058
g5003
(dp5975
g2793
g4074
sg2789
g4071
stRp5976
ag1
(g5058
g5003
(dp5977
g2793
g4084
sg2789
g4081
stRp5978
ag1
(g5058
g5003
(dp5979
g2793
g4094
sg2789
g4091
stRp5980
ag1
(g5058
g5003
(dp5981
g2793
g4104
sg2789
g4101
stRp5982
ag1
(g5058
g5003
(dp5983
g2793
g4114
sg2789
g4111
stRp5984
ag1
(g5058
g5003
(dp5985
g2793
g4124
sg2789
g4121
stRp5986
ag1
(g5058
g5003
(dp5987
g2793
g4134
sg2789
g4131
stRp5988
ag1
(g5058
g5003
(dp5989
g2793
g4144
sg2789
g4141
stRp5990
ag1
(g5058
g5003
(dp5991
g2793
g4154
sg2789
g4151
stRp5992
ag1
(g5058
g5003
(dp5993
g2793
g4164
sg2789
g4161
stRp5994
ag1
(g5058
g5003
(dp5995
g2793
g4174
sg2789
g4171
stRp5996
ag1
(g5058
g5003
(dp5997
g2793
g4184
sg2789
g4181
stRp5998
ag1
(g5058
g5003
(dp5999
g2793
g4194
sg2789
g4191
stRp6000
ag1
(g5058
g5003
(dp6001
g2793
g4204
sg2789
g4201
stRp6002
ag1
(g5058
g5003
(dp6003
g2793
g4214
sg2789
g4211
stRp6004
ag1
(g5058
g5003
(dp6005
g2793
g4224
sg2789
g4221
stRp6006
ag1
(g5058
g5003
(dp6007
g2793
g4234
sg2789
g4231
stRp6008
ag1
(g5058
g5003
(dp6009
g2793
g4244
sg2789
g4241
stRp6010
ag1
(g5058
g5003
(dp6011
g2793
g4254
sg2789
g4251
stRp6012
ag1
(g5058
g5003
(dp6013
g2793
g4264
sg2789
g4261
stRp6014
ag1
(g5058
g5003
(dp6015
g2793
g4274
sg2789
g4271
stRp6016
ag1
(g5058
g5003
(dp6017
g2793
g4284
sg2789
g4281
stRp6018
ag1
(g5058
g5003
(dp6019
g2793
g4294
sg2789
g4291
stRp6020
ag1
(g5058
g5003
(dp6021
g2793
g4304
sg2789
g4301
stRp6022
ag1
(g5058
g5003
(dp6023
g2793
g4314
sg2789
g4311
stRp6024
ag1
(g5058
g5003
(dp6025
g2793
g4324
sg2789
g4321
stRp6026
ag1
(g5058
g5003
(dp6027
g2793
g4334
sg2789
g4331
stRp6028
ag1
(g5058
g5003
(dp6029
g2793
g4344
sg2789
g4341
stRp6030
ag1
(g5058
g5003
(dp6031
g2793
g4354
sg2789
g4351
stRp6032
ag1
(g5058
g5003
(dp6033
g2793
g4364
sg2789
g4361
stRp6034
ag1
(g5058
g5003
(dp6035
g2793
g4374
sg2789
g4371
stRp6036
ag1
(g5058
g5003
(dp6037
g2793
g4384
sg2789
g4381
stRp6038
ag1
(g5058
g5003
(dp6039
g2793
g4394
sg2789
g4391
stRp6040
ag1
(g5058
g5003
(dp6041
g2793
g4404
sg2789
g4401
stRp6042
ag1
(g5058
g5003
(dp6043
g2793
g4414
sg2789
g4411
stRp6044
ag1
(g5058
g5003
(dp6045
g2793
g4424
sg2789
g4421
stRp6046
ag1
(g5058
g5003
(dp6047
g2793
g4434
sg2789
g4431
stRp6048
ag1
(g5058
g5003
(dp6049
g2793
g4444
sg2789
g4441
stRp6050
ag1
(g5058
g5003
(dp6051
g2793
g4454
sg2789
g4451
stRp6052
ag1
(g5058
g5003
(dp6053
g2793
g4464
sg2789
g4461
stRp6054
ag1
(g5058
g5003
(dp6055
g2793
g4474
sg2789
g4471
stRp6056
ag1
(g5058
g5003
(dp6057
g2793
g4484
sg2789
g4481
stRp6058
ag1
(g5058
g5003
(dp6059
g2793
g4494
sg2789
g4491
stRp6060
ag1
(g5058
g5003
(dp6061
g2793
g4504
sg2789
g4501
stRp6062
ag1
(g5058
g5003
(dp6063
g2793
g4514
sg2789
g4511
stRp6064
ag1
(g5058
g5003
(dp6065
g2793
g4524
sg2789
g4521
stRp6066
ag1
(g5058
g5003
(dp6067
g2793
g4534
sg2789
g4531
stRp6068
ag1
(g5058
g5003
(dp6069
g2793
g4544
sg2789
g4541
stRp6070
ag1
(g5058
g5003
(dp6071
g2793
g4554
sg2789
g4551
stRp6072
ag1
(g5058
g5003
(dp6073
g2793
g4564
sg2789
g4561
stRp6074
ag1
(g5058
g5003
(dp6075
g2793
g4574
sg2789
g4571
stRp6076
ag1
(g5058
g5003
(dp6077
g2793
g4584
sg2789
g4581
stRp6078
ag1
(g5058
g5003
(dp6079
g2793
g4594
sg2789
g4591
stRp6080
ag1
(g5058
g5003
(dp6081
g2793
g4604
sg2789
g4601
stRp6082
ag1
(g5058
g5003
(dp6083
g2793
g4614
sg2789
g4611
stRp6084
ag1
(g5058
g5003
(dp6085
g2793
g4624
sg2789
g4621
stRp6086
ag1
(g5058
g5003
(dp6087
g2793
g4634
sg2789
g4631
stRp6088
ag1
(g5058
g5003
(dp6089
g2793
g4644
sg2789
g4641
stRp6090
ag1
(g5058
g5003
(dp6091
g2793
g4654
sg2789
g4651
stRp6092
ag1
(g5058
g5003
(dp6093
g2793
g4664
sg2789
g4661
stRp6094
ag1
(g5058
g5003
(dp6095
g2793
g4674
sg2789
g4671
stRp6096
ag1
(g5058
g5003
(dp6097
g2793
g4684
sg2789
g4681
stRp6098
ag1
(g5058
g5003
(dp6099
g2793
g4694
sg2789
g4691
stRp6100
ag1
(g5058
g5003
(dp6101
g2793
g4704
sg2789
g4701
stRp6102
ag1
(g5058
g5003
(dp6103
g2793
g4714
sg2789
g4711
stRp6104
ag1
(g5058
g5003
(dp6105
g2793
g4724
sg2789
g4721
stRp6106
ag1
(g5058
g5003
(dp6107
g2793
g4734
sg2789
g4731
stRp6108
ag1
(g5058
g5003
(dp6109
g2793
g4744
sg2789
g4741
stRp6110
ag1
(g5058
g5003
(dp6111
g2793
g4754
sg2789
g4751
stRp6112
ag1
(g5058
g5003
(dp6113
g2793
g4764
sg2789
g4761
stRp6114
ag1
(g5058
g5003
(dp6115
g2793
g4774
sg2789
g4771
stRp6116
ag1
(g5058
g5003
(dp6117
g2793
g4784
sg2789
g4781
stRp6118
ag1
(g5058
g5003
(dp6119
g2793
g4794
sg2789
g4791
stRp6120
ag1
(g5058
g5003
(dp6121
g2793
g4804
sg2789
g4801
stRp6122
ag1
(g5058
g5003
(dp6123
g2793
g4814
sg2789
g4811
stRp6124
ag1
(g5058
g5003
(dp6125
g2793
g4824
sg2789
g4821
stRp6126
ag1
(g5058
g5003
(dp6127
g2793
g4834
sg2789
g4831
stRp6128
ag1
(g5058
g5003
(dp6129
g2793
g4844
sg2789
g4841
stRp6130
ag1
(g5058
g5003
(dp6131
g2793
g4854
sg2789
g4851
stRp6132
ag1
(g5058
g5003
(dp6133
g2793
g4864
sg2789
g4861
stRp6134
ag1
(g5058
g5003
(dp6135
g2793
g4874
sg2789
g4871
stRp6136
ag1
(g5058
g5003
(dp6137
g2793
g4884
sg2789
g4881
stRp6138
ag1
(g5058
g5003
(dp6139
g2793
g4894
sg2789
g4891
stRp6140
ag1
(g5058
g5003
(dp6141
g2793
g4904
sg2789
g4901
stRp6142
ag1
(g5058
g5003
(dp6143
g2793
g4914
sg2789
g4911
stRp6144
ag1
(g5058
g5003
(dp6145
g2793
g4924
sg2789
g4921
stRp6146
ag1
(g5058
g5003
(dp6147
g2793
g4934
sg2789
g4931
stRp6148
ag1
(g5058
g5003
(dp6149
g2793
g4944
sg2789
g4941
stRp6150
ag1
(g5058
g5003
(dp6151
g2793
g4954
sg2789
g4951
stRp6152
ag1
(g5058
g5003
(dp6153
g2793
g4964
sg2789
g4961
stRp6154
ag1
(g5058
g5003
(dp6155
g2793
g4974
sg2789
g4971
stRp6156
ag1
(g5058
g5003
(dp6157
g2793
g4984
sg2789
g4981
stRp6158
asg5227
Nsg5228
g4978
sg5229
I220
sg5230
I0
sg5231
I220
sg5232
I01
sbasS'savePickle'
p6159
I00
sb.