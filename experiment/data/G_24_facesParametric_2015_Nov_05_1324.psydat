ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/G_24_facesParametric_2015_Nov_05_1324
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
aS'key_resp_7.keys'
p36
aS'key_resp_7.rt'
p37
asS'autoLog'
p38
I01
sS'extraInfo'
p39
(dp40
S'date'
p41
V2015_Nov_05_1324
p42
sVgroup
p43
VG
sS'expName'
p44
g11
sVparticipant
p45
V24
p46
sS'frameRate'
p47
cnumpy.core.multiarray
scalar
p48
(cnumpy
dtype
p49
(S'f8'
I0
I1
tRp50
(I3
S'<'
NNNI-1
I-1
I0
tbS'Hn.z\xdc\xe5M@'
tRp51
ssS'loopsUnfinished'
p52
(lp53
sS'saveWideText'
p54
I01
sS'thisEntry'
p55
(dp56
sS'version'
p57
S''
sS'_paramNamesSoFar'
p58
(lp59
S'img'
p60
aS'num'
p61
asS'entries'
p62
(lp63
(dp64
g15
F33.930233955383301
sg44
g11
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg14
S'return'
p65
sa(dp66
g16
Nsg18
Nsg60
S'./basicStim/28M_NE_C.jpg'
p67
sg21
F14.422000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p68
I0
sg44
g11
sS'basicLoop.thisRepN'
p69
I0
sg20
S'SUP'
p70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p71
I0
sS'basicLoop.thisIndex'
p72
I69
sa(dp73
g16
S'SAD'
p74
sg18
Nsg60
S'./basicStim/36M_SA_C.jpg'
p75
sg21
Nsg19
Nsg17
F5.2670000000000003
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p76
I1
sg44
g11
sS'basicLoop.thisRepN'
p77
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p78
I1
sS'basicLoop.thisIndex'
p79
I81
sa(dp80
g16
Nsg18
Nsg60
S'./basicStim/21M_DI_O.jpg'
p81
sg21
F7.6440000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p82
I2
sg44
g11
sS'basicLoop.thisRepN'
p83
I0
sg20
S'DIS'
p84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p85
I2
sS'basicLoop.thisIndex'
p86
I43
sa(dp87
g16
Nsg18
Nsg60
S'./basicStim/34M_SP_O.jpg'
p88
sg21
F1.865
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p89
I3
sg44
g11
sS'basicLoop.thisRepN'
p90
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p91
I3
sS'basicLoop.thisIndex'
p92
I75
sa(dp93
g16
Nsg18
S'ANG'
p94
sg60
S'./basicStim/01F_AN_O.jpg'
p95
sg21
Nsg19
F3.843
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p96
I4
sg44
g11
sS'basicLoop.thisRepN'
p97
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p98
I4
sS'basicLoop.thisIndex'
p99
I0
sa(dp100
g16
Nsg18
S'FEA'
p101
sg60
S'./basicStim/03F_AN_O.jpg'
p102
sg21
Nsg19
F9.7110000000000003
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p103
I5
sg44
g11
sS'basicLoop.thisRepN'
p104
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p105
I5
sS'basicLoop.thisIndex'
p106
I14
sa(dp107
g16
Nsg18
Nsg60
S'./basicStim/36M_NE_C.jpg'
p108
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F14.266999999999999
sg22
S'NTR'
p109
sS'basicLoop.thisTrialN'
p110
I6
sg44
g11
sS'basicLoop.thisRepN'
p111
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p112
I6
sS'basicLoop.thisIndex'
p113
I83
sa(dp114
g16
Nsg18
g94
sg60
S'./basicStim/34M_AN_O.jpg'
p115
sg21
Nsg19
F3.3410000000000002
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p116
I7
sg44
g11
sS'basicLoop.thisRepN'
p117
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p118
I7
sS'basicLoop.thisIndex'
p119
I70
sa(dp120
g16
Nsg18
Nsg60
S'./basicStim/06F_SP_O.jpg'
p121
sg21
F3.0840000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p122
I8
sg44
g11
sS'basicLoop.thisRepN'
p123
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p124
I8
sS'basicLoop.thisIndex'
p125
I26
sa(dp126
g16
Nsg18
g101
sg60
S'./basicStim/06F_FE_O.jpg'
p127
sg21
Nsg19
F1.986
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p128
I9
sg44
g11
sS'basicLoop.thisRepN'
p129
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p130
I9
sS'basicLoop.thisIndex'
p131
I23
sa(dp132
g16
Nsg18
Nsg60
S'./basicStim/21M_NE_C.jpg'
p133
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.2650000000000001
sg22
g109
sS'basicLoop.thisTrialN'
p134
I10
sg44
g11
sS'basicLoop.thisRepN'
p135
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p136
I10
sS'basicLoop.thisIndex'
p137
I48
sa(dp138
g16
Nsg18
Nsg60
S'./basicStim/07F_SP_O.jpg'
p139
sg21
F6.7699999999999996
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p140
I11
sg44
g11
sS'basicLoop.thisRepN'
p141
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p142
I11
sS'basicLoop.thisIndex'
p143
I33
sa(dp144
g16
Nsg18
Nsg60
S'./basicStim/07F_DI_O.jpg'
p145
sg21
F3.9430000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p146
I12
sg44
g11
sS'basicLoop.thisRepN'
p147
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p148
I12
sS'basicLoop.thisIndex'
p149
I29
sa(dp150
g16
Nsg18
g101
sg60
S'./basicStim/21M_FE_O.jpg'
p151
sg21
Nsg19
F2.351
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p152
I13
sg44
g11
sS'basicLoop.thisRepN'
p153
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p154
I13
sS'basicLoop.thisIndex'
p155
I44
sa(dp156
g16
Nsg18
g94
sg60
S'./basicStim/01F_DI_O.jpg'
p157
sg21
Nsg19
F11.443
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p158
I14
sg44
g11
sS'basicLoop.thisRepN'
p159
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p160
I14
sS'basicLoop.thisIndex'
p161
I1
sa(dp162
g16
Nsg18
Nsg60
S'./basicStim/34M_DI_O.jpg'
p163
sg21
F2.629
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p164
I15
sg44
g11
sS'basicLoop.thisRepN'
p165
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p166
I15
sS'basicLoop.thisIndex'
p167
I71
sa(dp168
g16
S'HAP'
p169
sg18
Nsg60
S'./basicStim/23M_HA_O.jpg'
p170
sg21
Nsg19
Nsg17
F3.0710000000000002
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p171
I16
sg44
g11
sS'basicLoop.thisRepN'
p172
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p173
I16
sS'basicLoop.thisIndex'
p174
I52
sa(dp175
g16
g169
sg18
Nsg60
S'./basicStim/28M_HA_O.jpg'
p176
sg21
Nsg19
Nsg17
F2.786
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p177
I17
sg44
g11
sS'basicLoop.thisRepN'
p178
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p179
I17
sS'basicLoop.thisIndex'
p180
I66
sa(dp181
g16
Nsg18
Nsg60
S'./basicStim/02F_SP_O.jpg'
p182
sg21
F2.3149999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p183
I18
sg44
g11
sS'basicLoop.thisRepN'
p184
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p185
I18
sS'basicLoop.thisIndex'
p186
I12
sa(dp187
g16
g74
sg18
Nsg60
S'./basicStim/01F_SA_C.jpg'
p188
sg21
Nsg19
Nsg17
F2.6579999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p189
I19
sg44
g11
sS'basicLoop.thisRepN'
p190
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p191
I19
sS'basicLoop.thisIndex'
p192
I4
sa(dp193
g16
Nsg18
Nsg60
S'./basicStim/06F_DI_O.jpg'
p194
sg21
F1.5129999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p195
I20
sg44
g11
sS'basicLoop.thisRepN'
p196
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p197
I20
sS'basicLoop.thisIndex'
p198
I22
sa(dp199
g16
Nsg18
Nsg60
S'./basicStim/24M_DI_O.jpg'
p200
sg21
F6.7229999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p201
I21
sg44
g11
sS'basicLoop.thisRepN'
p202
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p203
I21
sS'basicLoop.thisIndex'
p204
I57
sa(dp205
g16
Nsg18
g94
sg60
S'./basicStim/36M_AN_O.jpg'
p206
sg21
Nsg19
F6.0090000000000003
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p207
I22
sg44
g11
sS'basicLoop.thisRepN'
p208
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p209
I22
sS'basicLoop.thisIndex'
p210
I77
sa(dp211
g16
Nsg18
g101
sg60
S'./basicStim/36M_FE_O.jpg'
p212
sg21
Nsg19
F1.4330000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p213
I23
sg44
g11
sS'basicLoop.thisRepN'
p214
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p215
I23
sS'basicLoop.thisIndex'
p216
I79
sa(dp217
g16
Nsg18
g94
sg60
S'./basicStim/06F_SA_C.jpg'
p218
sg21
Nsg19
F5.4000000000000004
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p219
I24
sg44
g11
sS'basicLoop.thisRepN'
p220
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p221
I24
sS'basicLoop.thisIndex'
p222
I25
sa(dp223
g16
Nsg18
Nsg60
S'./basicStim/01F_FE_O.jpg'
p224
sg21
F3.29
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p225
I25
sg44
g11
sS'basicLoop.thisRepN'
p226
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p227
I25
sS'basicLoop.thisIndex'
p228
I2
sa(dp229
g16
Nsg18
Nsg60
S'./basicStim/07F_NE_C.jpg'
p230
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.0640000000000001
sg22
g109
sS'basicLoop.thisTrialN'
p231
I26
sg44
g11
sS'basicLoop.thisRepN'
p232
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p233
I26
sS'basicLoop.thisIndex'
p234
I34
sa(dp235
g16
Nsg18
Nsg60
S'./basicStim/03F_DI_O.jpg'
p236
sg21
F3.2360000000000002
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p237
I27
sg44
g11
sS'basicLoop.thisRepN'
p238
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p239
I27
sS'basicLoop.thisIndex'
p240
I15
sa(dp241
g16
Nsg18
g101
sg60
S'./basicStim/23M_FE_O.jpg'
p242
sg21
Nsg19
F3.1019999999999999
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p243
I28
sg44
g11
sS'basicLoop.thisRepN'
p244
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p245
I28
sS'basicLoop.thisIndex'
p246
I51
sa(dp247
g16
Nsg18
Nsg60
S'./basicStim/02F_DI_O.jpg'
p248
sg21
F8.048
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p249
I29
sg44
g11
sS'basicLoop.thisRepN'
p250
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p251
I29
sS'basicLoop.thisIndex'
p252
I8
sa(dp253
g16
Nsg18
Nsg60
S'./basicStim/28M_DI_O.jpg'
p254
sg21
F4.3780000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p255
I30
sg44
g11
sS'basicLoop.thisRepN'
p256
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p257
I30
sS'basicLoop.thisIndex'
p258
I64
sa(dp259
g16
g169
sg18
Nsg60
S'./basicStim/34M_HA_O.jpg'
p260
sg21
Nsg19
Nsg17
F1.982
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p261
I31
sg44
g11
sS'basicLoop.thisRepN'
p262
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p263
I31
sS'basicLoop.thisIndex'
p264
I73
sa(dp265
g16
Nsg18
Nsg60
S'./basicStim/03F_NE_C.jpg'
p266
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.8919999999999999
sg22
g109
sS'basicLoop.thisTrialN'
p267
I32
sg44
g11
sS'basicLoop.thisRepN'
p268
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p269
I32
sS'basicLoop.thisIndex'
p270
I20
sa(dp271
g16
Nsg18
Nsg60
S'./basicStim/34M_NE_C.jpg'
p272
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F0.76200000000000001
sg22
g109
sS'basicLoop.thisTrialN'
p273
I33
sg44
g11
sS'basicLoop.thisRepN'
p274
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p275
I33
sS'basicLoop.thisIndex'
p276
I76
sa(dp277
g16
Nsg18
g101
sg60
S'./basicStim/28M_FE_O.jpg'
p278
sg21
Nsg19
F1.8620000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p279
I34
sg44
g11
sS'basicLoop.thisRepN'
p280
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p281
I34
sS'basicLoop.thisIndex'
p282
I65
sa(dp283
g16
Nsg18
Nsg60
S'./basicStim/24M_SP_O.jpg'
p284
sg21
F1.327
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p285
I35
sg44
g11
sS'basicLoop.thisRepN'
p286
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p287
I35
sS'basicLoop.thisIndex'
p288
I61
sa(dp289
g16
Nsg18
g101
sg60
S'./basicStim/28M_SA_C.jpg'
p290
sg21
Nsg19
F7.9480000000000004
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p291
I36
sg44
g11
sS'basicLoop.thisRepN'
p292
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p293
I36
sS'basicLoop.thisIndex'
p294
I67
sa(dp295
g16
Nsg18
g101
sg60
S'./basicStim/03F_FE_O.jpg'
p296
sg21
Nsg19
F0.77700000000000002
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p297
I37
sg44
g11
sS'basicLoop.thisRepN'
p298
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p299
I37
sS'basicLoop.thisIndex'
p300
I16
sa(dp301
g16
g169
sg18
Nsg60
S'./basicStim/24M_HA_O.jpg'
p302
sg21
Nsg19
Nsg17
F1.044
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p303
I38
sg44
g11
sS'basicLoop.thisRepN'
p304
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p305
I38
sS'basicLoop.thisIndex'
p306
I59
sa(dp307
g16
Nsg18
Nsg60
S'./basicStim/09F_NE_C.jpg'
p308
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.5609999999999999
sg22
g109
sS'basicLoop.thisTrialN'
p309
I39
sg44
g11
sS'basicLoop.thisRepN'
p310
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p311
I39
sS'basicLoop.thisIndex'
p312
I41
sa(dp313
g16
Nsg18
g94
sg60
S'./basicStim/09F_SA_C.jpg'
p314
sg21
Nsg19
F6.5259999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p315
I40
sg44
g11
sS'basicLoop.thisRepN'
p316
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p317
I40
sS'basicLoop.thisIndex'
p318
I39
sa(dp319
g16
g169
sg18
Nsg60
S'./basicStim/06F_HA_O.jpg'
p320
sg21
Nsg19
Nsg17
F1.599
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p321
I41
sg44
g11
sS'basicLoop.thisRepN'
p322
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p323
I41
sS'basicLoop.thisIndex'
p324
I24
sa(dp325
g16
Nsg18
g101
sg60
S'./basicStim/09F_FE_O.jpg'
p326
sg21
Nsg19
F4.577
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p327
I42
sg44
g11
sS'basicLoop.thisRepN'
p328
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p329
I42
sS'basicLoop.thisIndex'
p330
I37
sa(dp331
g16
Nsg18
Nsg60
S'./basicStim/23M_NE_C.jpg'
p332
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.6659999999999999
sg22
g109
sS'basicLoop.thisTrialN'
p333
I43
sg44
g11
sS'basicLoop.thisRepN'
p334
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p335
I43
sS'basicLoop.thisIndex'
p336
I55
sa(dp337
g16
g169
sg18
Nsg60
S'./basicStim/09F_HA_O.jpg'
p338
sg21
Nsg19
Nsg17
F1.296
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p339
I44
sg44
g11
sS'basicLoop.thisRepN'
p340
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p341
I44
sS'basicLoop.thisIndex'
p342
I38
sa(dp343
g16
Nsg18
Nsg60
S'./basicStim/28M_SP_O.jpg'
p344
sg21
F5.8200000000000003
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p345
I45
sg44
g11
sS'basicLoop.thisRepN'
p346
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p347
I45
sS'basicLoop.thisIndex'
p348
I68
sa(dp349
g16
Nsg18
g94
sg60
S'./basicStim/24M_AN_O.jpg'
p350
sg21
Nsg19
F2.9420000000000002
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p351
I46
sg44
g11
sS'basicLoop.thisRepN'
p352
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p353
I46
sS'basicLoop.thisIndex'
p354
I56
sa(dp355
g16
Nsg18
g101
sg60
S'./basicStim/34M_FE_O.jpg'
p356
sg21
Nsg19
F2.4870000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p357
I47
sg44
g11
sS'basicLoop.thisRepN'
p358
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p359
I47
sS'basicLoop.thisIndex'
p360
I72
sa(dp361
g16
Nsg18
g94
sg60
S'./basicStim/07F_AN_O.jpg'
p362
sg21
Nsg19
F1.613
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p363
I48
sg44
g11
sS'basicLoop.thisRepN'
p364
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p365
I48
sS'basicLoop.thisIndex'
p366
I28
sa(dp367
g16
Nsg18
Nsg60
S'./basicStim/23M_SP_O.jpg'
p368
sg21
F2.0459999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p369
I49
sg44
g11
sS'basicLoop.thisRepN'
p370
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p371
I49
sS'basicLoop.thisIndex'
p372
I54
sa(dp373
g16
Nsg18
g101
sg60
S'./basicStim/02F_FE_O.jpg'
p374
sg21
Nsg19
F2.0630000000000002
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p375
I50
sg44
g11
sS'basicLoop.thisRepN'
p376
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p377
I50
sS'basicLoop.thisIndex'
p378
I9
sa(dp379
g16
Nsg18
Nsg60
S'./basicStim/24M_NE_C.jpg'
p380
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.5600000000000001
sg22
g109
sS'basicLoop.thisTrialN'
p381
I51
sg44
g11
sS'basicLoop.thisRepN'
p382
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p383
I51
sS'basicLoop.thisIndex'
p384
I62
sa(dp385
g16
g74
sg18
Nsg60
S'./basicStim/03F_SA_C.jpg'
p386
sg21
Nsg19
Nsg17
F3.8929999999999998
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p387
I52
sg44
g11
sS'basicLoop.thisRepN'
p388
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p389
I52
sS'basicLoop.thisIndex'
p390
I18
sa(dp391
g16
Nsg18
g101
sg60
S'./basicStim/07F_FE_O.jpg'
p392
sg21
Nsg19
F3.1669999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p393
I53
sg44
g11
sS'basicLoop.thisRepN'
p394
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p395
I53
sS'basicLoop.thisIndex'
p396
I30
sa(dp397
g16
Nsg18
g101
sg60
S'./basicStim/36M_SP_O.jpg'
p398
sg21
Nsg19
F3.657
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p399
I54
sg44
g11
sS'basicLoop.thisRepN'
p400
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p401
I54
sS'basicLoop.thisIndex'
p402
I82
sa(dp403
g16
Nsg18
Nsg60
S'./basicStim/02F_NE_C.jpg'
p404
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.0549999999999999
sg22
g109
sS'basicLoop.thisTrialN'
p405
I55
sg44
g11
sS'basicLoop.thisRepN'
p406
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p407
I55
sS'basicLoop.thisIndex'
p408
I13
sa(dp409
g16
Nsg18
Nsg60
S'./basicStim/09F_DI_O.jpg'
p410
sg21
F7.0279999999999996
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p411
I56
sg44
g11
sS'basicLoop.thisRepN'
p412
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p413
I56
sS'basicLoop.thisIndex'
p414
I36
sa(dp415
g16
Nsg18
g94
sg60
S'./basicStim/21M_SA_C.jpg'
p416
sg21
Nsg19
F3.746
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p417
I57
sg44
g11
sS'basicLoop.thisRepN'
p418
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p419
I57
sS'basicLoop.thisIndex'
p420
I46
sa(dp421
g16
g74
sg18
Nsg60
S'./basicStim/24M_SA_C.jpg'
p422
sg21
Nsg19
Nsg17
F3.3889999999999998
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p423
I58
sg44
g11
sS'basicLoop.thisRepN'
p424
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p425
I58
sS'basicLoop.thisIndex'
p426
I60
sa(dp427
g16
g169
sg18
Nsg60
S'./basicStim/03F_HA_O.jpg'
p428
sg21
Nsg19
Nsg17
F1.448
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p429
I59
sg44
g11
sS'basicLoop.thisRepN'
p430
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p431
I59
sS'basicLoop.thisIndex'
p432
I17
sa(dp433
g16
g169
sg18
Nsg60
S'./basicStim/21M_HA_O.jpg'
p434
sg21
Nsg19
Nsg17
F0.91800000000000004
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p435
I60
sg44
g11
sS'basicLoop.thisRepN'
p436
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p437
I60
sS'basicLoop.thisIndex'
p438
I45
sa(dp439
g16
Nsg18
g94
sg60
S'./basicStim/02F_AN_O.jpg'
p440
sg21
Nsg19
F2.5649999999999999
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p441
I61
sg44
g11
sS'basicLoop.thisRepN'
p442
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p443
I61
sS'basicLoop.thisIndex'
p444
I7
sa(dp445
g16
Nsg18
g94
sg60
S'./basicStim/09F_AN_O.jpg'
p446
sg21
Nsg19
F1.831
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p447
I62
sg44
g11
sS'basicLoop.thisRepN'
p448
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p449
I62
sS'basicLoop.thisIndex'
p450
I35
sa(dp451
g16
Nsg18
Nsg60
S'./basicStim/01F_SP_O.jpg'
p452
sg21
F1.2050000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p453
I63
sg44
g11
sS'basicLoop.thisRepN'
p454
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p455
I63
sS'basicLoop.thisIndex'
p456
I5
sa(dp457
g16
Nsg18
g101
sg60
S'./basicStim/23M_DI_O.jpg'
p458
sg21
Nsg19
F3.7879999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p459
I64
sg44
g11
sS'basicLoop.thisRepN'
p460
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p461
I64
sS'basicLoop.thisIndex'
p462
I50
sa(dp463
g16
g169
sg18
Nsg60
S'./basicStim/02F_HA_O.jpg'
p464
sg21
Nsg19
Nsg17
F0.76600000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p465
I65
sg44
g11
sS'basicLoop.thisRepN'
p466
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p467
I65
sS'basicLoop.thisIndex'
p468
I10
sa(dp469
g16
g169
sg18
Nsg60
S'./basicStim/36M_HA_O.jpg'
p470
sg21
Nsg19
Nsg17
F0.40699999999999997
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p471
I66
sg44
g11
sS'basicLoop.thisRepN'
p472
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p473
I66
sS'basicLoop.thisIndex'
p474
I80
sa(dp475
g16
Nsg18
Nsg60
S'./basicStim/21M_SP_O.jpg'
p476
sg21
F1.8180000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p477
I67
sg44
g11
sS'basicLoop.thisRepN'
p478
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p479
I67
sS'basicLoop.thisIndex'
p480
I47
sa(dp481
g16
Nsg18
Nsg60
S'./basicStim/06F_AN_O.jpg'
p482
sg21
F2.3159999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p483
I68
sg44
g11
sS'basicLoop.thisRepN'
p484
I0
sg20
g84
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p485
I68
sS'basicLoop.thisIndex'
p486
I21
sa(dp487
g16
g169
sg18
Nsg60
S'./basicStim/01F_HA_O.jpg'
p488
sg21
Nsg19
Nsg17
F0.80900000000000005
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p489
I69
sg44
g11
sS'basicLoop.thisRepN'
p490
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p491
I69
sS'basicLoop.thisIndex'
p492
I3
sa(dp493
g16
Nsg18
Nsg60
S'./basicStim/06F_NE_C.jpg'
p494
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.597
sg22
g109
sS'basicLoop.thisTrialN'
p495
I70
sg44
g11
sS'basicLoop.thisRepN'
p496
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p497
I70
sS'basicLoop.thisIndex'
p498
I27
sa(dp499
g16
Nsg18
g94
sg60
S'./basicStim/28M_AN_O.jpg'
p500
sg21
Nsg19
F2.282
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p501
I71
sg44
g11
sS'basicLoop.thisRepN'
p502
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p503
I71
sS'basicLoop.thisIndex'
p504
I63
sa(dp505
g16
Nsg18
g94
sg60
S'./basicStim/21M_AN_O.jpg'
p506
sg21
Nsg19
F3.7719999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p507
I72
sg44
g11
sS'basicLoop.thisRepN'
p508
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p509
I72
sS'basicLoop.thisIndex'
p510
I42
sa(dp511
g16
Nsg18
Nsg60
S'./basicStim/01F_NE_C.jpg'
p512
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.272
sg22
g109
sS'basicLoop.thisTrialN'
p513
I73
sg44
g11
sS'basicLoop.thisRepN'
p514
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p515
I73
sS'basicLoop.thisIndex'
p516
I6
sa(dp517
g16
g74
sg18
Nsg60
S'./basicStim/34M_SA_C.jpg'
p518
sg21
Nsg19
Nsg17
F1.514
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p519
I74
sg44
g11
sS'basicLoop.thisRepN'
p520
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p521
I74
sS'basicLoop.thisIndex'
p522
I74
sa(dp523
g16
g169
sg18
Nsg60
S'./basicStim/03F_SP_O.jpg'
p524
sg21
Nsg19
Nsg17
F1.431
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p525
I75
sg44
g11
sS'basicLoop.thisRepN'
p526
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p527
I75
sS'basicLoop.thisIndex'
p528
I19
sa(dp529
g16
g74
sg18
Nsg60
S'./basicStim/07F_SA_C.jpg'
p530
sg21
Nsg19
Nsg17
F4.5469999999999997
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p531
I76
sg44
g11
sS'basicLoop.thisRepN'
p532
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p533
I76
sS'basicLoop.thisIndex'
p534
I32
sa(dp535
g16
g74
sg18
Nsg60
S'./basicStim/23M_SA_C.jpg'
p536
sg21
Nsg19
Nsg17
F2.7360000000000002
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p537
I77
sg44
g11
sS'basicLoop.thisRepN'
p538
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p539
I77
sS'basicLoop.thisIndex'
p540
I53
sa(dp541
g16
g169
sg18
Nsg60
S'./basicStim/07F_HA_O.jpg'
p542
sg21
Nsg19
Nsg17
F1.0189999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p543
I78
sg44
g11
sS'basicLoop.thisRepN'
p544
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p545
I78
sS'basicLoop.thisIndex'
p546
I31
sa(dp547
g16
Nsg18
Nsg60
S'./basicStim/09F_SP_O.jpg'
p548
sg21
F2.2799999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p549
I79
sg44
g11
sS'basicLoop.thisRepN'
p550
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p551
I79
sS'basicLoop.thisIndex'
p552
I40
sa(dp553
g16
Nsg18
g94
sg60
S'./basicStim/23M_AN_O.jpg'
p554
sg21
Nsg19
F3.6970000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p555
I80
sg44
g11
sS'basicLoop.thisRepN'
p556
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p557
I80
sS'basicLoop.thisIndex'
p558
I49
sa(dp559
g16
g74
sg18
Nsg60
S'./basicStim/02F_SA_C.jpg'
p560
sg21
Nsg19
Nsg17
F1.482
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p561
I81
sg44
g11
sS'basicLoop.thisRepN'
p562
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p563
I81
sS'basicLoop.thisIndex'
p564
I11
sa(dp565
g16
Nsg18
g101
sg60
S'./basicStim/24M_FE_O.jpg'
p566
sg21
Nsg19
F3.1379999999999999
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p567
I82
sg44
g11
sS'basicLoop.thisRepN'
p568
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p569
I82
sS'basicLoop.thisIndex'
p570
I58
sa(dp571
g16
Nsg18
g94
sg60
S'./basicStim/36M_DI_O.jpg'
p572
sg21
Nsg19
F3.4609999999999999
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p573
I83
sg44
g11
sS'basicLoop.thisRepN'
p574
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p575
I83
sS'basicLoop.thisIndex'
p576
I78
sa(dp577
g44
g11
sg43
VG
sg41
g42
sg24
S'return'
p578
sg45
g46
sg47
g51
sg25
F13.941361904144287
sa(dp579
g15
F3.5524959564208984
sg44
g11
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg14
S'return'
p580
sa(dp581
g44
g11
sg43
VG
sg41
g42
sg24
S'return'
p582
sg45
g46
sg47
g51
sg25
F29.379724979400635
sa(dp583
g41
g42
sg44
g11
sg27
F7.5079061985015869
sg26
S'return'
p584
sg43
VG
sg45
g46
sg47
g51
sa(dp585
g31
I0
sg44
g11
sg43
VG
sS'img'
p586
S'./stim/MorphM6_00_orig.jpg'
p587
sS'trials.thisIndex'
p588
g48
(g49
(S'i8'
I0
I1
tRp589
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp590
sS'trials.thisRepN'
p591
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp592
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\xe8'\xc0"
tRp593
sg30
I0
sg61
g48
(g589
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp594
sS'trials.thisTrialN'
p595
I0
sg32
I1
sg41
g42
sg45
g46
sg33
F3.1950399875640869
sS'trials.thisN'
p596
I0
sa(dp597
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_08_orig.jpg'
p598
sS'trials.thisIndex'
p599
g48
(g589
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp600
sS'trials.thisRepN'
p601
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x876\xc0'
tRp602
sg29
g48
(g50
S'\x00\x00\x00\x00\x00<\x1e\xc0'
tRp603
sg30
I1
sg61
g48
(g589
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp604
sS'trials.thisTrialN'
p605
I1
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3558928966522217
sS'trials.thisN'
p606
I1
sa(dp607
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_04_orig.jpg'
p608
sS'trials.thisIndex'
p609
g48
(g589
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp610
sS'trials.thisRepN'
p611
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xc36\xc0'
tRp612
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x0e\x1f\xc0'
tRp613
sg30
I0
sg61
g48
(g589
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp614
sS'trials.thisTrialN'
p615
I2
sg32
I1
sg41
g42
sg45
g46
sg33
F1.322706937789917
sS'trials.thisN'
p616
I2
sa(dp617
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_03_orig.jpg'
p618
sS'trials.thisIndex'
p619
g48
(g589
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp620
sS'trials.thisRepN'
p621
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80J7\xc0'
tRp622
sg29
g48
(g50
S'\x00\x00\x00\x00\x00; \xc0'
tRp623
sg30
I0
sg61
g48
(g589
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp624
sS'trials.thisTrialN'
p625
I3
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1103591918945312
sS'trials.thisN'
p626
I3
sa(dp627
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_07_orig.jpg'
p628
sS'trials.thisIndex'
p629
g48
(g589
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp630
sS'trials.thisRepN'
p631
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp632
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Y \xc0'
tRp633
sg30
I0
sg61
g48
(g589
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp634
sS'trials.thisTrialN'
p635
I4
sg32
I1
sg41
g42
sg45
g46
sg33
F0.92082810401916504
sS'trials.thisN'
p636
I4
sa(dp637
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_03_orig.jpg'
p638
sS'trials.thisIndex'
p639
g48
(g589
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp640
sS'trials.thisRepN'
p641
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp642
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x95 \xc0'
tRp643
sg30
I0
sg61
g48
(g589
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp644
sS'trials.thisTrialN'
p645
I5
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6283199787139893
sS'trials.thisN'
p646
I5
sa(dp647
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_03_orig.jpg'
p648
sS'trials.thisIndex'
p649
g48
(g589
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp650
sS'trials.thisRepN'
p651
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp652
sg29
g48
(g50
S'\x00\x00\x00\x00\x00W"\xc0'
tRp653
sg30
I0
sg61
g48
(g589
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp654
sS'trials.thisTrialN'
p655
I6
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6302468776702881
sS'trials.thisN'
p656
I6
sa(dp657
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_08_orig.jpg'
p658
sS'trials.thisIndex'
p659
g48
(g589
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp660
sS'trials.thisRepN'
p661
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp662
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xec#\xc0'
tRp663
sg30
I1
sg61
g48
(g589
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp664
sS'trials.thisTrialN'
p665
I7
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1384820938110352
sS'trials.thisN'
p666
I7
sa(dp667
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_07_orig.jpg'
p668
sS'trials.thisIndex'
p669
g48
(g589
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp670
sS'trials.thisRepN'
p671
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp672
sg29
g48
(g50
S'\x00\x00\x00\x00\x007$\xc0'
tRp673
sg30
I1
sg61
g48
(g589
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp674
sS'trials.thisTrialN'
p675
I8
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75282502174377441
sS'trials.thisN'
p676
I8
sa(dp677
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_07_orig.jpg'
p678
sS'trials.thisIndex'
p679
g48
(g589
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp680
sS'trials.thisRepN'
p681
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp682
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdd#\xc0'
tRp683
sg30
I1
sg61
g48
(g589
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp684
sS'trials.thisTrialN'
p685
I9
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75135207176208496
sS'trials.thisN'
p686
I9
sa(dp687
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_03_orig.jpg'
p688
sS'trials.thisIndex'
p689
g48
(g589
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp690
sS'trials.thisRepN'
p691
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80J7\xc0'
tRp692
sg29
g48
(g50
S'\x00\x00\x00\x00\x00t#\xc0'
tRp693
sg30
I0
sg61
g48
(g589
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp694
sS'trials.thisTrialN'
p695
I10
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9928178787231445
sS'trials.thisN'
p696
I10
sa(dp697
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_04_orig.jpg'
p698
sS'trials.thisIndex'
p699
g48
(g589
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp700
sS'trials.thisRepN'
p701
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R7\xc0'
tRp702
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x83#\xc0'
tRp703
sg30
I1
sg61
g48
(g589
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp704
sS'trials.thisTrialN'
p705
I11
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80290079116821289
sS'trials.thisN'
p706
I11
sa(dp707
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_04_orig.jpg'
p708
sS'trials.thisIndex'
p709
g48
(g589
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp710
sS'trials.thisRepN'
p711
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp712
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp713
sg30
I1
sg61
g48
(g589
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp714
sS'trials.thisTrialN'
p715
I12
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7146039009094238
sS'trials.thisN'
p716
I12
sa(dp717
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_05_orig.jpg'
p718
sS'trials.thisIndex'
p719
g48
(g589
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp720
sS'trials.thisRepN'
p721
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp722
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp723
sg30
I1
sg61
g48
(g589
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp724
sS'trials.thisTrialN'
p725
I13
sg32
I0
sg41
g42
sg45
g46
sg33
F0.81891298294067383
sS'trials.thisN'
p726
I13
sa(dp727
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_05_orig.jpg'
p728
sS'trials.thisIndex'
p729
g48
(g589
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp730
sS'trials.thisRepN'
p731
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp732
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp733
sg30
I1
sg61
g48
(g589
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp734
sS'trials.thisTrialN'
p735
I14
sg32
I0
sg41
g42
sg45
g46
sg33
F0.81992602348327637
sS'trials.thisN'
p736
I14
sa(dp737
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_07_orig.jpg'
p738
sS'trials.thisIndex'
p739
g48
(g589
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp740
sS'trials.thisRepN'
p741
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp742
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp743
sg30
I1
sg61
g48
(g589
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp744
sS'trials.thisTrialN'
p745
I15
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5562450885772705
sS'trials.thisN'
p746
I15
sa(dp747
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_02_orig.jpg'
p748
sS'trials.thisIndex'
p749
g48
(g589
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp750
sS'trials.thisRepN'
p751
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp752
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp753
sg30
I1
sg61
g48
(g589
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp754
sS'trials.thisTrialN'
p755
I16
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1610019207000732
sS'trials.thisN'
p756
I16
sa(dp757
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_01_orig.jpg'
p758
sS'trials.thisIndex'
p759
g48
(g589
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp760
sS'trials.thisRepN'
p761
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp762
sg29
g48
(g50
S'\x00\x00\x00\x00\x00E%\xc0'
tRp763
sg30
I0
sg61
g48
(g589
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp764
sS'trials.thisTrialN'
p765
I17
sg32
I1
sg41
g42
sg45
g46
sg33
F0.93623709678649902
sS'trials.thisN'
p766
I17
sa(dp767
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_00_orig.jpg'
p768
sS'trials.thisIndex'
p769
g48
(g589
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp770
sS'trials.thisRepN'
p771
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp772
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcc%\xc0'
tRp773
sg30
I0
sg61
g48
(g589
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp774
sS'trials.thisTrialN'
p775
I18
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5405960083007812
sS'trials.thisN'
p776
I18
sa(dp777
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_10_orig.jpg'
p778
sS'trials.thisIndex'
p779
g48
(g589
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp780
sS'trials.thisRepN'
p781
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp782
sg29
g48
(g50
S'\x00\x00\x00\x00\x00q&\xc0'
tRp783
sg30
I1
sg61
g48
(g589
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp784
sS'trials.thisTrialN'
p785
I19
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90193390846252441
sS'trials.thisN'
p786
I19
sa(dp787
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_08_orig.jpg'
p788
sS'trials.thisIndex'
p789
g48
(g589
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp790
sS'trials.thisRepN'
p791
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp792
sg29
g48
(g50
S'\x00\x00\x00\x00\x00q&\xc0'
tRp793
sg30
I1
sg61
g48
(g589
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp794
sS'trials.thisTrialN'
p795
I20
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88680410385131836
sS'trials.thisN'
p796
I20
sa(dp797
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_03_orig.jpg'
p798
sS'trials.thisIndex'
p799
g48
(g589
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp800
sS'trials.thisRepN'
p801
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp802
sg29
g48
(g50
S'\x00\x00\x00\x00\x00q&\xc0'
tRp803
sg30
I1
sg61
g48
(g589
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp804
sS'trials.thisTrialN'
p805
I21
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0044200420379639
sS'trials.thisN'
p806
I21
sa(dp807
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_03_orig.jpg'
p808
sS'trials.thisIndex'
p809
g48
(g589
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp810
sS'trials.thisRepN'
p811
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp812
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp813
sg30
I0
sg61
g48
(g589
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp814
sS'trials.thisTrialN'
p815
I22
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1050748825073242
sS'trials.thisN'
p816
I22
sa(dp817
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_06_orig.jpg'
p818
sS'trials.thisIndex'
p819
g48
(g589
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp820
sS'trials.thisRepN'
p821
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp822
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp823
sg30
I1
sg61
g48
(g589
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp824
sS'trials.thisTrialN'
p825
I23
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1214518547058105
sS'trials.thisN'
p826
I23
sa(dp827
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_05_orig.jpg'
p828
sS'trials.thisIndex'
p829
g48
(g589
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp830
sS'trials.thisRepN'
p831
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp832
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp833
sg30
I1
sg61
g48
(g589
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp834
sS'trials.thisTrialN'
p835
I24
sg32
I0
sg41
g42
sg45
g46
sg33
F0.66801810264587402
sS'trials.thisN'
p836
I24
sa(dp837
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_08_orig.jpg'
p838
sS'trials.thisIndex'
p839
g48
(g589
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp840
sS'trials.thisRepN'
p841
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp842
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp843
sg30
I1
sg61
g48
(g589
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp844
sS'trials.thisTrialN'
p845
I25
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1553270816802979
sS'trials.thisN'
p846
I25
sa(dp847
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_06_orig.jpg'
p848
sS'trials.thisIndex'
p849
g48
(g589
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp850
sS'trials.thisRepN'
p851
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp852
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp853
sg30
I1
sg61
g48
(g589
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp854
sS'trials.thisTrialN'
p855
I26
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0051660537719727
sS'trials.thisN'
p856
I26
sa(dp857
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_07_orig.jpg'
p858
sS'trials.thisIndex'
p859
g48
(g589
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp860
sS'trials.thisRepN'
p861
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp862
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp863
sg30
I1
sg61
g48
(g589
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp864
sS'trials.thisTrialN'
p865
I27
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7575159072875977
sS'trials.thisN'
p866
I27
sa(dp867
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_07_orig.jpg'
p868
sS'trials.thisIndex'
p869
g48
(g589
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp870
sS'trials.thisRepN'
p871
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp872
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp873
sg30
I1
sg61
g48
(g589
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp874
sS'trials.thisTrialN'
p875
I28
sg32
I0
sg41
g42
sg45
g46
sg33
F0.70076799392700195
sS'trials.thisN'
p876
I28
sa(dp877
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_02_orig.jpg'
p878
sS'trials.thisIndex'
p879
g48
(g589
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp880
sS'trials.thisRepN'
p881
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp882
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x07'\xc0"
tRp883
sg30
I0
sg61
g48
(g589
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp884
sS'trials.thisTrialN'
p885
I29
sg32
I1
sg41
g42
sg45
g46
sg33
F0.93527483940124512
sS'trials.thisN'
p886
I29
sa(dp887
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_00_orig.jpg'
p888
sS'trials.thisIndex'
p889
g48
(g589
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp890
sS'trials.thisRepN'
p891
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp892
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp893
sg30
I0
sg61
g48
(g589
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp894
sS'trials.thisTrialN'
p895
I30
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1216108798980713
sS'trials.thisN'
p896
I30
sa(dp897
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_08_orig.jpg'
p898
sS'trials.thisIndex'
p899
g48
(g589
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp900
sS'trials.thisRepN'
p901
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp902
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp903
sg30
I1
sg61
g48
(g589
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp904
sS'trials.thisTrialN'
p905
I31
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0377850532531738
sS'trials.thisN'
p906
I31
sa(dp907
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_04_orig.jpg'
p908
sS'trials.thisIndex'
p909
g48
(g589
S' \x00\x00\x00\x00\x00\x00\x00'
tRp910
sS'trials.thisRepN'
p911
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp912
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp913
sg30
I1
sg61
g48
(g589
S' \x00\x00\x00\x00\x00\x00\x00'
tRp914
sS'trials.thisTrialN'
p915
I32
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7920119762420654
sS'trials.thisN'
p916
I32
sa(dp917
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_06_orig.jpg'
p918
sS'trials.thisIndex'
p919
g48
(g589
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp920
sS'trials.thisRepN'
p921
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp922
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp923
sg30
I1
sg61
g48
(g589
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp924
sS'trials.thisTrialN'
p925
I33
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93752598762512207
sS'trials.thisN'
p926
I33
sa(dp927
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_02_orig.jpg'
p928
sS'trials.thisIndex'
p929
g48
(g589
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp930
sS'trials.thisRepN'
p931
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp932
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp933
sg30
I1
sg61
g48
(g589
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp934
sS'trials.thisTrialN'
p935
I34
sg32
I0
sg41
g42
sg45
g46
sg33
F0.68352103233337402
sS'trials.thisN'
p936
I34
sa(dp937
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_08_orig.jpg'
p938
sS'trials.thisIndex'
p939
g48
(g589
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp940
sS'trials.thisRepN'
p941
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp942
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp943
sg30
I1
sg61
g48
(g589
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp944
sS'trials.thisTrialN'
p945
I35
sg32
I0
sg41
g42
sg45
g46
sg33
F0.73548698425292969
sS'trials.thisN'
p946
I35
sa(dp947
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_01_orig.jpg'
p948
sS'trials.thisIndex'
p949
g48
(g589
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp950
sS'trials.thisRepN'
p951
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp952
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp953
sg30
I1
sg61
g48
(g589
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp954
sS'trials.thisTrialN'
p955
I36
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5907809734344482
sS'trials.thisN'
p956
I36
sa(dp957
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_05_orig.jpg'
p958
sS'trials.thisIndex'
p959
g48
(g589
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp960
sS'trials.thisRepN'
p961
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp962
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp963
sg30
I1
sg61
g48
(g589
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp964
sS'trials.thisTrialN'
p965
I37
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6804869174957275
sS'trials.thisN'
p966
I37
sa(dp967
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_05_orig.jpg'
p968
sS'trials.thisIndex'
p969
g48
(g589
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp970
sS'trials.thisRepN'
p971
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp972
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp973
sg30
I0
sg61
g48
(g589
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp974
sS'trials.thisTrialN'
p975
I38
sg32
I1
sg41
g42
sg45
g46
sg33
F2.0432009696960449
sS'trials.thisN'
p976
I38
sa(dp977
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_09_orig.jpg'
p978
sS'trials.thisIndex'
p979
g48
(g589
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp980
sS'trials.thisRepN'
p981
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80,7\xc0'
tRp982
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x07'\xc0"
tRp983
sg30
I1
sg61
g48
(g589
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp984
sS'trials.thisTrialN'
p985
I39
sg32
I0
sg41
g42
sg45
g46
sg33
F0.92021083831787109
sS'trials.thisN'
p986
I39
sa(dp987
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_04_orig.jpg'
p988
sS'trials.thisIndex'
p989
g48
(g589
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp990
sS'trials.thisRepN'
p991
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80,7\xc0'
tRp992
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x07'\xc0"
tRp993
sg30
I1
sg61
g48
(g589
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp994
sS'trials.thisTrialN'
p995
I40
sg32
I0
sg41
g42
sg45
g46
sg33
F0.65222501754760742
sS'trials.thisN'
p996
I40
sa(dp997
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_09_orig.jpg'
p998
sS'trials.thisIndex'
p999
g48
(g589
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1000
sS'trials.thisRepN'
p1001
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80,7\xc0'
tRp1002
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x07'\xc0"
tRp1003
sg30
I1
sg61
g48
(g589
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1004
sS'trials.thisTrialN'
p1005
I41
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85324215888977051
sS'trials.thisN'
p1006
I41
sa(dp1007
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_10_orig.jpg'
p1008
sS'trials.thisIndex'
p1009
g48
(g589
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1010
sS'trials.thisRepN'
p1011
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00%7\xc0'
tRp1012
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf8&\xc0'
tRp1013
sg30
I1
sg61
g48
(g589
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1014
sS'trials.thisTrialN'
p1015
I42
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83703112602233887
sS'trials.thisN'
p1016
I42
sa(dp1017
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_00_orig.jpg'
p1018
sS'trials.thisIndex'
p1019
g48
(g589
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1020
sS'trials.thisRepN'
p1021
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x167\xc0'
tRp1022
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp1023
sg30
I1
sg61
g48
(g589
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1024
sS'trials.thisTrialN'
p1025
I43
sg32
I0
sg41
g42
sg45
g46
sg33
F0.68459320068359375
sS'trials.thisN'
p1026
I43
sa(dp1027
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_00_orig.jpg'
p1028
sS'trials.thisIndex'
p1029
g48
(g589
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1030
sS'trials.thisRepN'
p1031
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x167\xc0'
tRp1032
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp1033
sg30
I0
sg61
g48
(g589
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1034
sS'trials.thisTrialN'
p1035
I44
sg32
I1
sg41
g42
sg45
g46
sg33
F4.054811954498291
sS'trials.thisN'
p1036
I44
sa(dp1037
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_06_orig.jpg'
p1038
sS'trials.thisIndex'
p1039
g48
(g589
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1040
sS'trials.thisRepN'
p1041
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1042
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp1043
sg30
I1
sg61
g48
(g589
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1044
sS'trials.thisTrialN'
p1045
I45
sg32
I0
sg41
g42
sg45
g46
sg33
F0.8361051082611084
sS'trials.thisN'
p1046
I45
sa(dp1047
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_00_orig.jpg'
p1048
sS'trials.thisIndex'
p1049
g48
(g589
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1050
sS'trials.thisRepN'
p1051
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1052
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf8&\xc0'
tRp1053
sg30
I0
sg61
g48
(g589
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1054
sS'trials.thisTrialN'
p1055
I46
sg32
I1
sg41
g42
sg45
g46
sg33
F2.7977719306945801
sS'trials.thisN'
p1056
I46
sa(dp1057
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_00_orig.jpg'
p1058
sS'trials.thisIndex'
p1059
g48
(g589
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1060
sS'trials.thisRepN'
p1061
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1062
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xba(\xc0'
tRp1063
sg30
I0
sg61
g48
(g589
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1064
sS'trials.thisTrialN'
p1065
I47
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3544578552246094
sS'trials.thisN'
p1066
I47
sa(dp1067
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_07_orig.jpg'
p1068
sS'trials.thisIndex'
p1069
g48
(g589
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1070
sS'trials.thisRepN'
p1071
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1072
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xba(\xc0'
tRp1073
sg30
I1
sg61
g48
(g589
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1074
sS'trials.thisTrialN'
p1075
I48
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1886730194091797
sS'trials.thisN'
p1076
I48
sa(dp1077
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_04_orig.jpg'
p1078
sS'trials.thisIndex'
p1079
g48
(g589
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1080
sS'trials.thisRepN'
p1081
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1082
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xaa)\xc0'
tRp1083
sg30
I0
sg61
g48
(g589
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1084
sS'trials.thisTrialN'
p1085
I49
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7417621612548828
sS'trials.thisN'
p1086
I49
sa(dp1087
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_03_orig.jpg'
p1088
sS'trials.thisIndex'
p1089
g48
(g589
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1090
sS'trials.thisRepN'
p1091
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1092
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb9)\xc0'
tRp1093
sg30
I0
sg61
g48
(g589
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1094
sS'trials.thisTrialN'
p1095
I50
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3118000030517578
sS'trials.thisN'
p1096
I50
sa(dp1097
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_09_orig.jpg'
p1098
sS'trials.thisIndex'
p1099
g48
(g589
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1100
sS'trials.thisRepN'
p1101
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1102
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp1103
sg30
I1
sg61
g48
(g589
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1104
sS'trials.thisTrialN'
p1105
I51
sg32
I0
sg41
g42
sg45
g46
sg33
F0.66880702972412109
sS'trials.thisN'
p1106
I51
sa(dp1107
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_00_orig.jpg'
p1108
sS'trials.thisIndex'
p1109
g48
(g589
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1110
sS'trials.thisRepN'
p1111
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1112
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1113
sg30
I1
sg61
g48
(g589
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1114
sS'trials.thisTrialN'
p1115
I52
sg32
I0
sg41
g42
sg45
g46
sg33
F0.71956896781921387
sS'trials.thisN'
p1116
I52
sa(dp1117
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_07_orig.jpg'
p1118
sS'trials.thisIndex'
p1119
g48
(g589
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1120
sS'trials.thisRepN'
p1121
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1122
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1123
sg30
I1
sg61
g48
(g589
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1124
sS'trials.thisTrialN'
p1125
I53
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8083829879760742
sS'trials.thisN'
p1126
I53
sa(dp1127
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_08_orig.jpg'
p1128
sS'trials.thisIndex'
p1129
g48
(g589
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1130
sS'trials.thisRepN'
p1131
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1132
sg29
g48
(g50
S'\x00\x00\x00\x00\x001*\xc0'
tRp1133
sg30
I1
sg61
g48
(g589
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1134
sS'trials.thisTrialN'
p1135
I54
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0710670948028564
sS'trials.thisN'
p1136
I54
sa(dp1137
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_05_orig.jpg'
p1138
sS'trials.thisIndex'
p1139
g48
(g589
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1140
sS'trials.thisRepN'
p1141
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80x6\xc0'
tRp1142
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp1143
sg30
I1
sg61
g48
(g589
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1144
sS'trials.thisTrialN'
p1145
I55
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0475120544433594
sS'trials.thisN'
p1146
I55
sa(dp1147
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_01_orig.jpg'
p1148
sS'trials.thisIndex'
p1149
g48
(g589
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1150
sS'trials.thisRepN'
p1151
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80x6\xc0'
tRp1152
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp1153
sg30
I1
sg61
g48
(g589
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1154
sS'trials.thisTrialN'
p1155
I56
sg32
I0
sg41
g42
sg45
g46
sg33
F3.9208011627197266
sS'trials.thisN'
p1156
I56
sa(dp1157
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_10_orig.jpg'
p1158
sS'trials.thisIndex'
p1159
g48
(g589
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1160
sS'trials.thisRepN'
p1161
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x1e6\xc0'
tRp1162
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp1163
sg30
I1
sg61
g48
(g589
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1164
sS'trials.thisTrialN'
p1165
I57
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5379290580749512
sS'trials.thisN'
p1166
I57
sa(dp1167
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_09_orig.jpg'
p1168
sS'trials.thisIndex'
p1169
g48
(g589
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1170
sS'trials.thisRepN'
p1171
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x086\xc0'
tRp1172
sg29
g48
(g50
S'\x00\x00\x00\x00\x00})\xc0'
tRp1173
sg30
I1
sg61
g48
(g589
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1174
sS'trials.thisTrialN'
p1175
I58
sg32
I0
sg41
g42
sg45
g46
sg33
F3.5018270015716553
sS'trials.thisN'
p1176
I58
sa(dp1177
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_10_orig.jpg'
p1178
sS'trials.thisIndex'
p1179
g48
(g589
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1180
sS'trials.thisRepN'
p1181
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x086\xc0'
tRp1182
sg29
g48
(g50
S'\x00\x00\x00\x00\x00})\xc0'
tRp1183
sg30
I1
sg61
g48
(g589
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1184
sS'trials.thisTrialN'
p1185
I59
sg32
I0
sg41
g42
sg45
g46
sg33
F0.87004899978637695
sS'trials.thisN'
p1186
I59
sa(dp1187
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_03_orig.jpg'
p1188
sS'trials.thisIndex'
p1189
g48
(g589
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1190
sS'trials.thisRepN'
p1191
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x086\xc0'
tRp1192
sg29
g48
(g50
S'\x00\x00\x00\x00\x00})\xc0'
tRp1193
sg30
I0
sg61
g48
(g589
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1194
sS'trials.thisTrialN'
p1195
I60
sg32
I1
sg41
g42
sg45
g46
sg33
F0.95216894149780273
sS'trials.thisN'
p1196
I60
sa(dp1197
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_04_orig.jpg'
p1198
sS'trials.thisIndex'
p1199
g48
(g589
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1200
sS'trials.thisRepN'
p1201
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x006\xc0'
tRp1202
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp1203
sg30
I0
sg61
g48
(g589
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1204
sS'trials.thisTrialN'
p1205
I61
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0861079692840576
sS'trials.thisN'
p1206
I61
sa(dp1207
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_08_orig.jpg'
p1208
sS'trials.thisIndex'
p1209
g48
(g589
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1210
sS'trials.thisRepN'
p1211
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x086\xc0'
tRp1212
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9b)\xc0'
tRp1213
sg30
I1
sg61
g48
(g589
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1214
sS'trials.thisTrialN'
p1215
I62
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1552889347076416
sS'trials.thisN'
p1216
I62
sa(dp1217
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_09_orig.jpg'
p1218
sS'trials.thisIndex'
p1219
g48
(g589
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1220
sS'trials.thisRepN'
p1221
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x086\xc0'
tRp1222
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9b)\xc0'
tRp1223
sg30
I1
sg61
g48
(g589
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1224
sS'trials.thisTrialN'
p1225
I63
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88708710670471191
sS'trials.thisN'
p1226
I63
sa(dp1227
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_04_orig.jpg'
p1228
sS'trials.thisIndex'
p1229
g48
(g589
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1230
sS'trials.thisRepN'
p1231
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xd26\xc0'
tRp1232
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1233
sg30
I0
sg61
g48
(g589
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1234
sS'trials.thisTrialN'
p1235
I64
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7413051128387451
sS'trials.thisN'
p1236
I64
sa(dp1237
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_08_orig.jpg'
p1238
sS'trials.thisIndex'
p1239
g48
(g589
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1240
sS'trials.thisRepN'
p1241
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe16\xc0'
tRp1242
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1243
sg30
I1
sg61
g48
(g589
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1244
sS'trials.thisTrialN'
p1245
I65
sg32
I0
sg41
g42
sg45
g46
sg33
F1.791964054107666
sS'trials.thisN'
p1246
I65
sa(dp1247
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_05_orig.jpg'
p1248
sS'trials.thisIndex'
p1249
g48
(g589
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1250
sS'trials.thisRepN'
p1251
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp1252
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1253
sg30
I1
sg61
g48
(g589
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1254
sS'trials.thisTrialN'
p1255
I66
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3622598648071289
sS'trials.thisN'
p1256
I66
sa(dp1257
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_05_orig.jpg'
p1258
sS'trials.thisIndex'
p1259
g48
(g589
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1260
sS'trials.thisRepN'
p1261
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp1262
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1263
sg30
I1
sg61
g48
(g589
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1264
sS'trials.thisTrialN'
p1265
I67
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6802139282226562
sS'trials.thisN'
p1266
I67
sa(dp1267
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_08_orig.jpg'
p1268
sS'trials.thisIndex'
p1269
g48
(g589
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1270
sS'trials.thisRepN'
p1271
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp1272
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1273
sg30
I1
sg61
g48
(g589
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1274
sS'trials.thisTrialN'
p1275
I68
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2726078033447266
sS'trials.thisN'
p1276
I68
sa(dp1277
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_05_orig.jpg'
p1278
sS'trials.thisIndex'
p1279
g48
(g589
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1280
sS'trials.thisRepN'
p1281
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp1282
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1283
sg30
I1
sg61
g48
(g589
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1284
sS'trials.thisTrialN'
p1285
I69
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2443358898162842
sS'trials.thisN'
p1286
I69
sa(dp1287
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_03_orig.jpg'
p1288
sS'trials.thisIndex'
p1289
g48
(g589
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1290
sS'trials.thisRepN'
p1291
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1292
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1293
sg30
I0
sg61
g48
(g589
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1294
sS'trials.thisTrialN'
p1295
I70
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98760390281677246
sS'trials.thisN'
p1296
I70
sa(dp1297
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_03_orig.jpg'
p1298
sS'trials.thisIndex'
p1299
g48
(g589
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1300
sS'trials.thisRepN'
p1301
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1302
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1303
sg30
I0
sg61
g48
(g589
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1304
sS'trials.thisTrialN'
p1305
I71
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7905409336090088
sS'trials.thisN'
p1306
I71
sa(dp1307
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_08_orig.jpg'
p1308
sS'trials.thisIndex'
p1309
g48
(g589
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1310
sS'trials.thisRepN'
p1311
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1312
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1313
sg30
I1
sg61
g48
(g589
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1314
sS'trials.thisTrialN'
p1315
I72
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9299368858337402
sS'trials.thisN'
p1316
I72
sa(dp1317
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_08_orig.jpg'
p1318
sS'trials.thisIndex'
p1319
g48
(g589
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1320
sS'trials.thisRepN'
p1321
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1322
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1323
sg30
I1
sg61
g48
(g589
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1324
sS'trials.thisTrialN'
p1325
I73
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5069789886474609
sS'trials.thisN'
p1326
I73
sa(dp1327
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_09_orig.jpg'
p1328
sS'trials.thisIndex'
p1329
g48
(g589
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1330
sS'trials.thisRepN'
p1331
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1332
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1333
sg30
I1
sg61
g48
(g589
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1334
sS'trials.thisTrialN'
p1335
I74
sg32
I0
sg41
g42
sg45
g46
sg33
F1.842116117477417
sS'trials.thisN'
p1336
I74
sa(dp1337
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_00_orig.jpg'
p1338
sS'trials.thisIndex'
p1339
g48
(g589
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1340
sS'trials.thisRepN'
p1341
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1342
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1343
sg30
I0
sg61
g48
(g589
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1344
sS'trials.thisTrialN'
p1345
I75
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3899118900299072
sS'trials.thisN'
p1346
I75
sa(dp1347
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_05_orig.jpg'
p1348
sS'trials.thisIndex'
p1349
g48
(g589
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1350
sS'trials.thisRepN'
p1351
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1352
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1353
sg30
I1
sg61
g48
(g589
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1354
sS'trials.thisTrialN'
p1355
I76
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0860300064086914
sS'trials.thisN'
p1356
I76
sa(dp1357
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_09_orig.jpg'
p1358
sS'trials.thisIndex'
p1359
g48
(g589
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1360
sS'trials.thisRepN'
p1361
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1362
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1363
sg30
I1
sg61
g48
(g589
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1364
sS'trials.thisTrialN'
p1365
I77
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2557320594787598
sS'trials.thisN'
p1366
I77
sa(dp1367
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_02_orig.jpg'
p1368
sS'trials.thisIndex'
p1369
g48
(g589
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1370
sS'trials.thisRepN'
p1371
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1372
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1373
sg30
I0
sg61
g48
(g589
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1374
sS'trials.thisTrialN'
p1375
I78
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2390182018280029
sS'trials.thisN'
p1376
I78
sa(dp1377
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_08_orig.jpg'
p1378
sS'trials.thisIndex'
p1379
g48
(g589
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1380
sS'trials.thisRepN'
p1381
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1382
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1383
sg30
I1
sg61
g48
(g589
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1384
sS'trials.thisTrialN'
p1385
I79
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0035908222198486
sS'trials.thisN'
p1386
I79
sa(dp1387
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_02_orig.jpg'
p1388
sS'trials.thisIndex'
p1389
g48
(g589
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1390
sS'trials.thisRepN'
p1391
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1392
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1393
sg30
I0
sg61
g48
(g589
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1394
sS'trials.thisTrialN'
p1395
I80
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1365799903869629
sS'trials.thisN'
p1396
I80
sa(dp1397
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_10_orig.jpg'
p1398
sS'trials.thisIndex'
p1399
g48
(g589
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1400
sS'trials.thisRepN'
p1401
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1402
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1403
sg30
I1
sg61
g48
(g589
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1404
sS'trials.thisTrialN'
p1405
I81
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85283207893371582
sS'trials.thisN'
p1406
I81
sa(dp1407
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_05_orig.jpg'
p1408
sS'trials.thisIndex'
p1409
g48
(g589
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1410
sS'trials.thisRepN'
p1411
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1412
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1413
sg30
I0
sg61
g48
(g589
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1414
sS'trials.thisTrialN'
p1415
I82
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8144140243530273
sS'trials.thisN'
p1416
I82
sa(dp1417
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_01_orig.jpg'
p1418
sS'trials.thisIndex'
p1419
g48
(g589
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1420
sS'trials.thisRepN'
p1421
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1422
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1423
sg30
I0
sg61
g48
(g589
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1424
sS'trials.thisTrialN'
p1425
I83
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1213169097900391
sS'trials.thisN'
p1426
I83
sa(dp1427
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_06_orig.jpg'
p1428
sS'trials.thisIndex'
p1429
g48
(g589
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1430
sS'trials.thisRepN'
p1431
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1432
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1433
sg30
I1
sg61
g48
(g589
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1434
sS'trials.thisTrialN'
p1435
I84
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1382172107696533
sS'trials.thisN'
p1436
I84
sa(dp1437
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_04_orig.jpg'
p1438
sS'trials.thisIndex'
p1439
g48
(g589
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1440
sS'trials.thisRepN'
p1441
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1442
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1443
sg30
I0
sg61
g48
(g589
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1444
sS'trials.thisTrialN'
p1445
I85
sg32
I1
sg41
g42
sg45
g46
sg33
F3.754162073135376
sS'trials.thisN'
p1446
I85
sa(dp1447
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_05_orig.jpg'
p1448
sS'trials.thisIndex'
p1449
g48
(g589
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1450
sS'trials.thisRepN'
p1451
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1452
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1453
sg30
I1
sg61
g48
(g589
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1454
sS'trials.thisTrialN'
p1455
I86
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90089702606201172
sS'trials.thisN'
p1456
I86
sa(dp1457
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_07_orig.jpg'
p1458
sS'trials.thisIndex'
p1459
g48
(g589
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1460
sS'trials.thisRepN'
p1461
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1462
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1463
sg30
I0
sg61
g48
(g589
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1464
sS'trials.thisTrialN'
p1465
I87
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2722198963165283
sS'trials.thisN'
p1466
I87
sa(dp1467
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_09_orig.jpg'
p1468
sS'trials.thisIndex'
p1469
g48
(g589
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1470
sS'trials.thisRepN'
p1471
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1472
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1473
sg30
I1
sg61
g48
(g589
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1474
sS'trials.thisTrialN'
p1475
I88
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83707094192504883
sS'trials.thisN'
p1476
I88
sa(dp1477
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_02_orig.jpg'
p1478
sS'trials.thisIndex'
p1479
g48
(g589
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1480
sS'trials.thisRepN'
p1481
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1482
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1483
sg30
I0
sg61
g48
(g589
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1484
sS'trials.thisTrialN'
p1485
I89
sg32
I1
sg41
g42
sg45
g46
sg33
F4.5047779083251953
sS'trials.thisN'
p1486
I89
sa(dp1487
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_01_orig.jpg'
p1488
sS'trials.thisIndex'
p1489
g48
(g589
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1490
sS'trials.thisRepN'
p1491
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1492
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1493
sg30
I0
sg61
g48
(g589
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1494
sS'trials.thisTrialN'
p1495
I90
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4233150482177734
sS'trials.thisN'
p1496
I90
sa(dp1497
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_06_orig.jpg'
p1498
sS'trials.thisIndex'
p1499
g48
(g589
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1500
sS'trials.thisRepN'
p1501
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1502
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1503
sg30
I1
sg61
g48
(g589
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1504
sS'trials.thisTrialN'
p1505
I91
sg32
I0
sg41
g42
sg45
g46
sg33
F0.8532719612121582
sS'trials.thisN'
p1506
I91
sa(dp1507
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_09_orig.jpg'
p1508
sS'trials.thisIndex'
p1509
g48
(g589
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1510
sS'trials.thisRepN'
p1511
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp1512
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1513
sg30
I1
sg61
g48
(g589
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1514
sS'trials.thisTrialN'
p1515
I92
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90196704864501953
sS'trials.thisN'
p1516
I92
sa(dp1517
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_10_orig.jpg'
p1518
sS'trials.thisIndex'
p1519
g48
(g589
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1520
sS'trials.thisRepN'
p1521
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R7\xc0'
tRp1522
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1523
sg30
I1
sg61
g48
(g589
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1524
sS'trials.thisTrialN'
p1525
I93
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0268959999084473
sS'trials.thisN'
p1526
I93
sa(dp1527
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_03_orig.jpg'
p1528
sS'trials.thisIndex'
p1529
g48
(g589
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1530
sS'trials.thisRepN'
p1531
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1532
sg29
g48
(g50
S'\x00\x00\x00\x00\x001*\xc0'
tRp1533
sg30
I0
sg61
g48
(g589
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1534
sS'trials.thisTrialN'
p1535
I94
sg32
I1
sg41
g42
sg45
g46
sg33
F3.2167627811431885
sS'trials.thisN'
p1536
I94
sa(dp1537
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_00_orig.jpg'
p1538
sS'trials.thisIndex'
p1539
g48
(g589
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1540
sS'trials.thisRepN'
p1541
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1542
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1543
sg30
I0
sg61
g48
(g589
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1544
sS'trials.thisTrialN'
p1545
I95
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4228849411010742
sS'trials.thisN'
p1546
I95
sa(dp1547
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_04_orig.jpg'
p1548
sS'trials.thisIndex'
p1549
g48
(g589
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1550
sS'trials.thisRepN'
p1551
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1552
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1553
sg30
I1
sg61
g48
(g589
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1554
sS'trials.thisTrialN'
p1555
I96
sg32
I0
sg41
g42
sg45
g46
sg33
F0.76988506317138672
sS'trials.thisN'
p1556
I96
sa(dp1557
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_01_orig.jpg'
p1558
sS'trials.thisIndex'
p1559
g48
(g589
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1560
sS'trials.thisRepN'
p1561
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1562
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1563
sg30
I1
sg61
g48
(g589
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1564
sS'trials.thisTrialN'
p1565
I97
sg32
I0
sg41
g42
sg45
g46
sg33
F0.78673720359802246
sS'trials.thisN'
p1566
I97
sa(dp1567
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_05_orig.jpg'
p1568
sS'trials.thisIndex'
p1569
g48
(g589
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1570
sS'trials.thisRepN'
p1571
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00C7\xc0'
tRp1572
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1573
sg30
I0
sg61
g48
(g589
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1574
sS'trials.thisTrialN'
p1575
I98
sg32
I1
sg41
g42
sg45
g46
sg33
F3.3673479557037354
sS'trials.thisN'
p1576
I98
sa(dp1577
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_01_orig.jpg'
p1578
sS'trials.thisIndex'
p1579
g48
(g589
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1580
sS'trials.thisRepN'
p1581
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80;7\xc0'
tRp1582
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1583
sg30
I0
sg61
g48
(g589
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1584
sS'trials.thisTrialN'
p1585
I99
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2612588405609131
sS'trials.thisN'
p1586
I99
sa(dp1587
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_07_orig.jpg'
p1588
sS'trials.thisIndex'
p1589
g48
(g589
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1590
sS'trials.thisRepN'
p1591
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R7\xc0'
tRp1592
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1593
sg30
I1
sg61
g48
(g589
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1594
sS'trials.thisTrialN'
p1595
I100
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93699002265930176
sS'trials.thisN'
p1596
I100
sa(dp1597
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_10_orig.jpg'
p1598
sS'trials.thisIndex'
p1599
g48
(g589
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1600
sS'trials.thisRepN'
p1601
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R7\xc0'
tRp1602
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1603
sg30
I1
sg61
g48
(g589
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1604
sS'trials.thisTrialN'
p1605
I101
sg32
I0
sg41
g42
sg45
g46
sg33
F0.68532395362854004
sS'trials.thisN'
p1606
I101
sa(dp1607
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_09_orig.jpg'
p1608
sS'trials.thisIndex'
p1609
g48
(g589
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1610
sS'trials.thisRepN'
p1611
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R7\xc0'
tRp1612
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1613
sg30
I1
sg61
g48
(g589
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1614
sS'trials.thisTrialN'
p1615
I102
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90314388275146484
sS'trials.thisN'
p1616
I102
sa(dp1617
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_02_orig.jpg'
p1618
sS'trials.thisIndex'
p1619
g48
(g589
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1620
sS'trials.thisRepN'
p1621
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp1622
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1623
sg30
I0
sg61
g48
(g589
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1624
sS'trials.thisTrialN'
p1625
I103
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1362159252166748
sS'trials.thisN'
p1626
I103
sa(dp1627
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_09_orig.jpg'
p1628
sS'trials.thisIndex'
p1629
g48
(g589
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1630
sS'trials.thisRepN'
p1631
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1632
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1633
sg30
I1
sg61
g48
(g589
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1634
sS'trials.thisTrialN'
p1635
I104
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2889800071716309
sS'trials.thisN'
p1636
I104
sa(dp1637
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_04_orig.jpg'
p1638
sS'trials.thisIndex'
p1639
g48
(g589
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1640
sS'trials.thisRepN'
p1641
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1642
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1643
sg30
I1
sg61
g48
(g589
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1644
sS'trials.thisTrialN'
p1645
I105
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0260930061340332
sS'trials.thisN'
p1646
I105
sa(dp1647
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_06_orig.jpg'
p1648
sS'trials.thisIndex'
p1649
g48
(g589
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1650
sS'trials.thisRepN'
p1651
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1652
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1653
sg30
I1
sg61
g48
(g589
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1654
sS'trials.thisTrialN'
p1655
I106
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9598278999328613
sS'trials.thisN'
p1656
I106
sa(dp1657
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_04_orig.jpg'
p1658
sS'trials.thisIndex'
p1659
g48
(g589
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1660
sS'trials.thisRepN'
p1661
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00C7\xc0'
tRp1662
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1663
sg30
I0
sg61
g48
(g589
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1664
sS'trials.thisTrialN'
p1665
I107
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8321042060852051
sS'trials.thisN'
p1666
I107
sa(dp1667
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_08_orig.jpg'
p1668
sS'trials.thisIndex'
p1669
g48
(g589
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1670
sS'trials.thisRepN'
p1671
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00C7\xc0'
tRp1672
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1673
sg30
I1
sg61
g48
(g589
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1674
sS'trials.thisTrialN'
p1675
I108
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6718008518218994
sS'trials.thisN'
p1676
I108
sa(dp1677
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_09_orig.jpg'
p1678
sS'trials.thisIndex'
p1679
g48
(g589
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1680
sS'trials.thisRepN'
p1681
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1682
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1683
sg30
I1
sg61
g48
(g589
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1684
sS'trials.thisTrialN'
p1685
I109
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0318169593811035
sS'trials.thisN'
p1686
I109
sa(dp1687
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_00_orig.jpg'
p1688
sS'trials.thisIndex'
p1689
g48
(g589
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1690
sS'trials.thisRepN'
p1691
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1692
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1693
sg30
I0
sg61
g48
(g589
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1694
sS'trials.thisTrialN'
p1695
I110
sg32
I1
sg41
g42
sg45
g46
sg33
F3.0653879642486572
sS'trials.thisN'
p1696
I110
sa(dp1697
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_10_orig.jpg'
p1698
sS'trials.thisIndex'
p1699
g48
(g589
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1700
sS'trials.thisRepN'
p1701
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1702
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1703
sg30
I1
sg61
g48
(g589
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1704
sS'trials.thisTrialN'
p1705
I111
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0208621025085449
sS'trials.thisN'
p1706
I111
sa(dp1707
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_01_orig.jpg'
p1708
sS'trials.thisIndex'
p1709
g48
(g589
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1710
sS'trials.thisRepN'
p1711
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1712
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1713
sg30
I0
sg61
g48
(g589
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1714
sS'trials.thisTrialN'
p1715
I112
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3394110202789307
sS'trials.thisN'
p1716
I112
sa(dp1717
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_02_orig.jpg'
p1718
sS'trials.thisIndex'
p1719
g48
(g589
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1720
sS'trials.thisRepN'
p1721
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1722
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1723
sg30
I0
sg61
g48
(g589
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1724
sS'trials.thisTrialN'
p1725
I113
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0885579586029053
sS'trials.thisN'
p1726
I113
sa(dp1727
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_10_orig.jpg'
p1728
sS'trials.thisIndex'
p1729
g48
(g589
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1730
sS'trials.thisRepN'
p1731
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1732
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1733
sg30
I1
sg61
g48
(g589
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1734
sS'trials.thisTrialN'
p1735
I114
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80079102516174316
sS'trials.thisN'
p1736
I114
sa(dp1737
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_05_orig.jpg'
p1738
sS'trials.thisIndex'
p1739
g48
(g589
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1740
sS'trials.thisRepN'
p1741
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1742
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1743
sg30
I1
sg61
g48
(g589
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1744
sS'trials.thisTrialN'
p1745
I115
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75302910804748535
sS'trials.thisN'
p1746
I115
sa(dp1747
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_01_orig.jpg'
p1748
sS'trials.thisIndex'
p1749
g48
(g589
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1750
sS'trials.thisRepN'
p1751
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1752
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1753
sg30
I0
sg61
g48
(g589
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1754
sS'trials.thisTrialN'
p1755
I116
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2388019561767578
sS'trials.thisN'
p1756
I116
sa(dp1757
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_02_orig.jpg'
p1758
sS'trials.thisIndex'
p1759
g48
(g589
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1760
sS'trials.thisRepN'
p1761
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1762
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1763
sg30
I1
sg61
g48
(g589
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1764
sS'trials.thisTrialN'
p1765
I117
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0544350147247314
sS'trials.thisN'
p1766
I117
sa(dp1767
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_02_orig.jpg'
p1768
sS'trials.thisIndex'
p1769
g48
(g589
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1770
sS'trials.thisRepN'
p1771
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1772
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1773
sg30
I0
sg61
g48
(g589
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1774
sS'trials.thisTrialN'
p1775
I118
sg32
I1
sg41
g42
sg45
g46
sg33
F0.83644700050354004
sS'trials.thisN'
p1776
I118
sa(dp1777
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_03_orig.jpg'
p1778
sS'trials.thisIndex'
p1779
g48
(g589
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1780
sS'trials.thisRepN'
p1781
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1782
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1783
sg30
I1
sg61
g48
(g589
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1784
sS'trials.thisTrialN'
p1785
I119
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80318307876586914
sS'trials.thisN'
p1786
I119
sa(dp1787
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_00_orig.jpg'
p1788
sS'trials.thisIndex'
p1789
g48
(g589
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1790
sS'trials.thisRepN'
p1791
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1792
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1793
sg30
I0
sg61
g48
(g589
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1794
sS'trials.thisTrialN'
p1795
I120
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5128099918365479
sS'trials.thisN'
p1796
I120
sa(dp1797
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_01_orig.jpg'
p1798
sS'trials.thisIndex'
p1799
g48
(g589
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1800
sS'trials.thisRepN'
p1801
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1802
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1803
sg30
I1
sg61
g48
(g589
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1804
sS'trials.thisTrialN'
p1805
I121
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8755290508270264
sS'trials.thisN'
p1806
I121
sa(dp1807
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_05_orig.jpg'
p1808
sS'trials.thisIndex'
p1809
g48
(g589
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1810
sS'trials.thisRepN'
p1811
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1812
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1813
sg30
I1
sg61
g48
(g589
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1814
sS'trials.thisTrialN'
p1815
I122
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6718871593475342
sS'trials.thisN'
p1816
I122
sa(dp1817
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_10_orig.jpg'
p1818
sS'trials.thisIndex'
p1819
g48
(g589
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1820
sS'trials.thisRepN'
p1821
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1822
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1823
sg30
I1
sg61
g48
(g589
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1824
sS'trials.thisTrialN'
p1825
I123
sg32
I0
sg41
g42
sg45
g46
sg33
F0.71769404411315918
sS'trials.thisN'
p1826
I123
sa(dp1827
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_04_orig.jpg'
p1828
sS'trials.thisIndex'
p1829
g48
(g589
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1830
sS'trials.thisRepN'
p1831
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp1832
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1833
sg30
I0
sg61
g48
(g589
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1834
sS'trials.thisTrialN'
p1835
I124
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6410508155822754
sS'trials.thisN'
p1836
I124
sa(dp1837
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_02_orig.jpg'
p1838
sS'trials.thisIndex'
p1839
g48
(g589
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1840
sS'trials.thisRepN'
p1841
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1842
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1843
sg30
I0
sg61
g48
(g589
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1844
sS'trials.thisTrialN'
p1845
I125
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3718280792236328
sS'trials.thisN'
p1846
I125
sa(dp1847
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_06_orig.jpg'
p1848
sS'trials.thisIndex'
p1849
g48
(g589
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1850
sS'trials.thisRepN'
p1851
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1852
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1853
sg30
I1
sg61
g48
(g589
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1854
sS'trials.thisTrialN'
p1855
I126
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4064650535583496
sS'trials.thisN'
p1856
I126
sa(dp1857
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_00_orig.jpg'
p1858
sS'trials.thisIndex'
p1859
g48
(g589
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1860
sS'trials.thisRepN'
p1861
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1862
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1863
sg30
I0
sg61
g48
(g589
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1864
sS'trials.thisTrialN'
p1865
I127
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5573599338531494
sS'trials.thisN'
p1866
I127
sa(dp1867
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_00_orig.jpg'
p1868
sS'trials.thisIndex'
p1869
g48
(g589
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1870
sS'trials.thisRepN'
p1871
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1872
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1873
sg30
I0
sg61
g48
(g589
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1874
sS'trials.thisTrialN'
p1875
I128
sg32
I1
sg41
g42
sg45
g46
sg33
F1.572350025177002
sS'trials.thisN'
p1876
I128
sa(dp1877
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_07_orig.jpg'
p1878
sS'trials.thisIndex'
p1879
g48
(g589
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1880
sS'trials.thisRepN'
p1881
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1882
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1883
sg30
I1
sg61
g48
(g589
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1884
sS'trials.thisTrialN'
p1885
I129
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4888529777526855
sS'trials.thisN'
p1886
I129
sa(dp1887
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_08_orig.jpg'
p1888
sS'trials.thisIndex'
p1889
g48
(g589
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1890
sS'trials.thisRepN'
p1891
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1892
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1893
sg30
I1
sg61
g48
(g589
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1894
sS'trials.thisTrialN'
p1895
I130
sg32
I0
sg41
g42
sg45
g46
sg33
F0.71844696998596191
sS'trials.thisN'
p1896
I130
sa(dp1897
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_01_orig.jpg'
p1898
sS'trials.thisIndex'
p1899
g48
(g589
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1900
sS'trials.thisRepN'
p1901
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp1902
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp1903
sg30
I0
sg61
g48
(g589
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1904
sS'trials.thisTrialN'
p1905
I131
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3714659214019775
sS'trials.thisN'
p1906
I131
sa(dp1907
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_07_orig.jpg'
p1908
sS'trials.thisIndex'
p1909
g48
(g589
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1910
sS'trials.thisRepN'
p1911
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp1912
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1913
sg30
I1
sg61
g48
(g589
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1914
sS'trials.thisTrialN'
p1915
I132
sg32
I0
sg41
g42
sg45
g46
sg33
F0.70274186134338379
sS'trials.thisN'
p1916
I132
sa(dp1917
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_05_orig.jpg'
p1918
sS'trials.thisIndex'
p1919
g48
(g589
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1920
sS'trials.thisRepN'
p1921
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp1922
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1923
sg30
I0
sg61
g48
(g589
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1924
sS'trials.thisTrialN'
p1925
I133
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3735859394073486
sS'trials.thisN'
p1926
I133
sa(dp1927
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_10_orig.jpg'
p1928
sS'trials.thisIndex'
p1929
g48
(g589
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1930
sS'trials.thisRepN'
p1931
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1932
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1933
sg30
I1
sg61
g48
(g589
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1934
sS'trials.thisTrialN'
p1935
I134
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80099010467529297
sS'trials.thisN'
p1936
I134
sa(dp1937
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_06_orig.jpg'
p1938
sS'trials.thisIndex'
p1939
g48
(g589
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1940
sS'trials.thisRepN'
p1941
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1942
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1943
sg30
I1
sg61
g48
(g589
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1944
sS'trials.thisTrialN'
p1945
I135
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6799471378326416
sS'trials.thisN'
p1946
I135
sa(dp1947
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_03_orig.jpg'
p1948
sS'trials.thisIndex'
p1949
g48
(g589
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1950
sS'trials.thisRepN'
p1951
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1952
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1953
sg30
I0
sg61
g48
(g589
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1954
sS'trials.thisTrialN'
p1955
I136
sg32
I1
sg41
g42
sg45
g46
sg33
F3.082420825958252
sS'trials.thisN'
p1956
I136
sa(dp1957
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_09_orig.jpg'
p1958
sS'trials.thisIndex'
p1959
g48
(g589
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1960
sS'trials.thisRepN'
p1961
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1962
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1963
sg30
I1
sg61
g48
(g589
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1964
sS'trials.thisTrialN'
p1965
I137
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85398101806640625
sS'trials.thisN'
p1966
I137
sa(dp1967
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_03_orig.jpg'
p1968
sS'trials.thisIndex'
p1969
g48
(g589
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1970
sS'trials.thisRepN'
p1971
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1972
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1973
sg30
I0
sg61
g48
(g589
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1974
sS'trials.thisTrialN'
p1975
I138
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3896160125732422
sS'trials.thisN'
p1976
I138
sa(dp1977
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_01_orig.jpg'
p1978
sS'trials.thisIndex'
p1979
g48
(g589
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1980
sS'trials.thisRepN'
p1981
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1982
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1983
sg30
I0
sg61
g48
(g589
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1984
sS'trials.thisTrialN'
p1985
I139
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4554498195648193
sS'trials.thisN'
p1986
I139
sa(dp1987
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_02_orig.jpg'
p1988
sS'trials.thisIndex'
p1989
g48
(g589
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1990
sS'trials.thisRepN'
p1991
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp1992
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp1993
sg30
I1
sg61
g48
(g589
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1994
sS'trials.thisTrialN'
p1995
I140
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95357394218444824
sS'trials.thisN'
p1996
I140
sa(dp1997
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_05_orig.jpg'
p1998
sS'trials.thisIndex'
p1999
g48
(g589
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2000
sS'trials.thisRepN'
p2001
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2002
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2003
sg30
I0
sg61
g48
(g589
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2004
sS'trials.thisTrialN'
p2005
I141
sg32
I1
sg41
g42
sg45
g46
sg33
F10.82548999786377
sS'trials.thisN'
p2006
I141
sa(dp2007
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_06_orig.jpg'
p2008
sS'trials.thisIndex'
p2009
g48
(g589
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2010
sS'trials.thisRepN'
p2011
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2012
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2013
sg30
I1
sg61
g48
(g589
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2014
sS'trials.thisTrialN'
p2015
I142
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95254302024841309
sS'trials.thisN'
p2016
I142
sa(dp2017
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_08_orig.jpg'
p2018
sS'trials.thisIndex'
p2019
g48
(g589
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2020
sS'trials.thisRepN'
p2021
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00b6\xc0'
tRp2022
sg29
g48
(g50
S'\x00\x00\x00\x00\x00b&\xc0'
tRp2023
sg30
I1
sg61
g48
(g589
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2024
sS'trials.thisTrialN'
p2025
I143
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7963378429412842
sS'trials.thisN'
p2026
I143
sa(dp2027
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_01_orig.jpg'
p2028
sS'trials.thisIndex'
p2029
g48
(g589
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2030
sS'trials.thisRepN'
p2031
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Z6\xc0'
tRp2032
sg29
g48
(g50
S'\x00\x00\x00\x00\x00b&\xc0'
tRp2033
sg30
I0
sg61
g48
(g589
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2034
sS'trials.thisTrialN'
p2035
I144
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8922569751739502
sS'trials.thisN'
p2036
I144
sa(dp2037
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_04_orig.jpg'
p2038
sS'trials.thisIndex'
p2039
g48
(g589
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2040
sS'trials.thisRepN'
p2041
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80i6\xc0'
tRp2042
sg29
g48
(g50
S'\x00\x00\x00\x00\x00q&\xc0'
tRp2043
sg30
I1
sg61
g48
(g589
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2044
sS'trials.thisTrialN'
p2045
I145
sg32
I0
sg41
g42
sg45
g46
sg33
F0.86876511573791504
sS'trials.thisN'
p2046
I145
sa(dp2047
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_02_orig.jpg'
p2048
sS'trials.thisIndex'
p2049
g48
(g589
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2050
sS'trials.thisRepN'
p2051
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x806\xc0'
tRp2052
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp2053
sg30
I0
sg61
g48
(g589
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2054
sS'trials.thisTrialN'
p2055
I146
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1532320976257324
sS'trials.thisN'
p2056
I146
sa(dp2057
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_09_orig.jpg'
p2058
sS'trials.thisIndex'
p2059
g48
(g589
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2060
sS'trials.thisRepN'
p2061
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x806\xc0'
tRp2062
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp2063
sg30
I1
sg61
g48
(g589
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2064
sS'trials.thisTrialN'
p2065
I147
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1870620250701904
sS'trials.thisN'
p2066
I147
sa(dp2067
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_04_orig.jpg'
p2068
sS'trials.thisIndex'
p2069
g48
(g589
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2070
sS'trials.thisRepN'
p2071
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x876\xc0'
tRp2072
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2073
sg30
I0
sg61
g48
(g589
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2074
sS'trials.thisTrialN'
p2075
I148
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6244649887084961
sS'trials.thisN'
p2076
I148
sa(dp2077
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_02_orig.jpg'
p2078
sS'trials.thisIndex'
p2079
g48
(g589
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2080
sS'trials.thisRepN'
p2081
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x966\xc0'
tRp2082
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp2083
sg30
I0
sg61
g48
(g589
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2084
sS'trials.thisTrialN'
p2085
I149
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6232640743255615
sS'trials.thisN'
p2086
I149
sa(dp2087
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_03_orig.jpg'
p2088
sS'trials.thisIndex'
p2089
g48
(g589
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2090
sS'trials.thisRepN'
p2091
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2092
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp2093
sg30
I0
sg61
g48
(g589
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2094
sS'trials.thisTrialN'
p2095
I150
sg32
I1
sg41
g42
sg45
g46
sg33
F4.8925981521606445
sS'trials.thisN'
p2096
I150
sa(dp2097
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_06_orig.jpg'
p2098
sS'trials.thisIndex'
p2099
g48
(g589
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2100
sS'trials.thisRepN'
p2101
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe16\xc0'
tRp2102
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\xf7'\xc0"
tRp2103
sg30
I1
sg61
g48
(g589
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2104
sS'trials.thisTrialN'
p2105
I151
sg32
I0
sg41
g42
sg45
g46
sg33
F0.97099995613098145
sS'trials.thisN'
p2106
I151
sa(dp2107
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_08_orig.jpg'
p2108
sS'trials.thisIndex'
p2109
g48
(g589
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2110
sS'trials.thisRepN'
p2111
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xda6\xc0'
tRp2112
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x06(\xc0'
tRp2113
sg30
I1
sg61
g48
(g589
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2114
sS'trials.thisTrialN'
p2115
I152
sg32
I0
sg41
g42
sg45
g46
sg33
F0.7342379093170166
sS'trials.thisN'
p2116
I152
sa(dp2117
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_10_orig.jpg'
p2118
sS'trials.thisIndex'
p2119
g48
(g589
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2120
sS'trials.thisRepN'
p2121
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xda6\xc0'
tRp2122
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x06(\xc0'
tRp2123
sg30
I1
sg61
g48
(g589
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2124
sS'trials.thisTrialN'
p2125
I153
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80315303802490234
sS'trials.thisN'
p2126
I153
sa(dp2127
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_00_orig.jpg'
p2128
sS'trials.thisIndex'
p2129
g48
(g589
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2130
sS'trials.thisRepN'
p2131
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xd26\xc0'
tRp2132
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp2133
sg30
I0
sg61
g48
(g589
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2134
sS'trials.thisTrialN'
p2135
I154
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2054660320281982
sS'trials.thisN'
p2136
I154
sa(dp2137
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_10_orig.jpg'
p2138
sS'trials.thisIndex'
p2139
g48
(g589
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2140
sS'trials.thisRepN'
p2141
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xda6\xc0'
tRp2142
sg29
g48
(g50
S'\x00\x00\x00\x00\x00$(\xc0'
tRp2143
sg30
I1
sg61
g48
(g589
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2144
sS'trials.thisTrialN'
p2145
I155
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0189330577850342
sS'trials.thisN'
p2146
I155
sa(dp2147
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_00_orig.jpg'
p2148
sS'trials.thisIndex'
p2149
g48
(g589
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2150
sS'trials.thisRepN'
p2151
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xd26\xc0'
tRp2152
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp2153
sg30
I0
sg61
g48
(g589
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2154
sS'trials.thisTrialN'
p2155
I156
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5573921203613281
sS'trials.thisN'
p2156
I156
sa(dp2157
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_07_orig.jpg'
p2158
sS'trials.thisIndex'
p2159
g48
(g589
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2160
sS'trials.thisRepN'
p2161
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2162
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp2163
sg30
I1
sg61
g48
(g589
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2164
sS'trials.thisTrialN'
p2165
I157
sg32
I0
sg41
g42
sg45
g46
sg33
F0.82018780708312988
sS'trials.thisN'
p2166
I157
sa(dp2167
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_01_orig.jpg'
p2168
sS'trials.thisIndex'
p2169
g48
(g589
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2170
sS'trials.thisRepN'
p2171
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2172
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp2173
sg30
I0
sg61
g48
(g589
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2174
sS'trials.thisTrialN'
p2175
I158
sg32
I1
sg41
g42
sg45
g46
sg33
F3.5344188213348389
sS'trials.thisN'
p2176
I158
sa(dp2177
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_03_orig.jpg'
p2178
sS'trials.thisIndex'
p2179
g48
(g589
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2180
sS'trials.thisRepN'
p2181
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2182
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp2183
sg30
I0
sg61
g48
(g589
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2184
sS'trials.thisTrialN'
p2185
I159
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1219370365142822
sS'trials.thisN'
p2186
I159
sa(dp2187
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_04_orig.jpg'
p2188
sS'trials.thisIndex'
p2189
g48
(g589
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2190
sS'trials.thisRepN'
p2191
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp2192
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp2193
sg30
I0
sg61
g48
(g589
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2194
sS'trials.thisTrialN'
p2195
I160
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3059890270233154
sS'trials.thisN'
p2196
I160
sa(dp2197
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_09_orig.jpg'
p2198
sS'trials.thisIndex'
p2199
g48
(g589
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2200
sS'trials.thisRepN'
p2201
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp2202
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp2203
sg30
I1
sg61
g48
(g589
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2204
sS'trials.thisTrialN'
p2205
I161
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0545899868011475
sS'trials.thisN'
p2206
I161
sa(dp2207
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_07_orig.jpg'
p2208
sS'trials.thisIndex'
p2209
g48
(g589
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2210
sS'trials.thisRepN'
p2211
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xda6\xc0'
tRp2212
sg29
g48
(g50
S'\x00\x00\x00\x00\x00$(\xc0'
tRp2213
sg30
I1
sg61
g48
(g589
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2214
sS'trials.thisTrialN'
p2215
I162
sg32
I0
sg41
g42
sg45
g46
sg33
F0.78626108169555664
sS'trials.thisN'
p2216
I162
sa(dp2217
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_07_orig.jpg'
p2218
sS'trials.thisIndex'
p2219
g48
(g589
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2220
sS'trials.thisRepN'
p2221
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcb6\xc0'
tRp2222
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\xe8'\xc0"
tRp2223
sg30
I1
sg61
g48
(g589
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2224
sS'trials.thisTrialN'
p2225
I163
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5720579624176025
sS'trials.thisN'
p2226
I163
sa(dp2227
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF3_02_orig.jpg'
p2228
sS'trials.thisIndex'
p2229
g48
(g589
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2230
sS'trials.thisRepN'
p2231
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe16\xc0'
tRp2232
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp2233
sg30
I0
sg61
g48
(g589
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2234
sS'trials.thisTrialN'
p2235
I164
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8077061176300049
sS'trials.thisN'
p2236
I164
sa(dp2237
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_00_orig.jpg'
p2238
sS'trials.thisIndex'
p2239
g48
(g589
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2240
sS'trials.thisRepN'
p2241
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2242
sg29
g48
(g50
S'\x00\x00\x00\x00\x00o(\xc0'
tRp2243
sg30
I0
sg61
g48
(g589
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2244
sS'trials.thisTrialN'
p2245
I165
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0379898548126221
sS'trials.thisN'
p2246
I165
sa(dp2247
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_08_orig.jpg'
p2248
sS'trials.thisIndex'
p2249
g48
(g589
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2250
sS'trials.thisRepN'
p2251
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2252
sg29
g48
(g50
S'\x00\x00\x00\x00\x00o(\xc0'
tRp2253
sg30
I1
sg61
g48
(g589
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2254
sS'trials.thisTrialN'
p2255
I166
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98716902732849121
sS'trials.thisN'
p2256
I166
sa(dp2257
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_02_orig.jpg'
p2258
sS'trials.thisIndex'
p2259
g48
(g589
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2260
sS'trials.thisRepN'
p2261
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf86\xc0'
tRp2262
sg29
g48
(g50
S'\x00\x00\x00\x00\x00~(\xc0'
tRp2263
sg30
I0
sg61
g48
(g589
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2264
sS'trials.thisTrialN'
p2265
I167
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6086668968200684
sS'trials.thisN'
p2266
I167
sa(dp2267
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_06_orig.jpg'
p2268
sS'trials.thisIndex'
p2269
g48
(g589
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2270
sS'trials.thisRepN'
p2271
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xff6\xc0'
tRp2272
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9c(\xc0'
tRp2273
sg30
I1
sg61
g48
(g589
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2274
sS'trials.thisTrialN'
p2275
I168
sg32
I0
sg41
g42
sg45
g46
sg33
F0.86886692047119141
sS'trials.thisN'
p2276
I168
sa(dp2277
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_05_orig.jpg'
p2278
sS'trials.thisIndex'
p2279
g48
(g589
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2280
sS'trials.thisRepN'
p2281
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf86\xc0'
tRp2282
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xab(\xc0'
tRp2283
sg30
I1
sg61
g48
(g589
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2284
sS'trials.thisTrialN'
p2285
I169
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4402329921722412
sS'trials.thisN'
p2286
I169
sa(dp2287
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_01_orig.jpg'
p2288
sS'trials.thisIndex'
p2289
g48
(g589
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2290
sS'trials.thisRepN'
p2291
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x077\xc0'
tRp2292
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8(\xc0'
tRp2293
sg30
I0
sg61
g48
(g589
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2294
sS'trials.thisTrialN'
p2295
I170
sg32
I1
sg41
g42
sg45
g46
sg33
F2.14382004737854
sS'trials.thisN'
p2296
I170
sa(dp2297
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_10_orig.jpg'
p2298
sS'trials.thisIndex'
p2299
g48
(g589
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2300
sS'trials.thisRepN'
p2301
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x0e7\xc0'
tRp2302
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe7(\xc0'
tRp2303
sg30
I1
sg61
g48
(g589
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2304
sS'trials.thisTrialN'
p2305
I171
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2200851440429688
sS'trials.thisN'
p2306
I171
sa(dp2307
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_03_orig.jpg'
p2308
sS'trials.thisIndex'
p2309
g48
(g589
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2310
sS'trials.thisRepN'
p2311
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80,7\xc0'
tRp2312
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf6(\xc0'
tRp2313
sg30
I0
sg61
g48
(g589
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2314
sS'trials.thisTrialN'
p2315
I172
sg32
I1
sg41
g42
sg45
g46
sg33
F3.4168047904968262
sS'trials.thisN'
p2316
I172
sa(dp2317
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_00_orig.jpg'
p2318
sS'trials.thisIndex'
p2319
g48
(g589
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2320
sS'trials.thisRepN'
p2321
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp2322
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp2323
sg30
I1
sg61
g48
(g589
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2324
sS'trials.thisTrialN'
p2325
I173
sg32
I0
sg41
g42
sg45
g46
sg33
F0.73578095436096191
sS'trials.thisN'
p2326
I173
sa(dp2327
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_07_orig.jpg'
p2328
sS'trials.thisIndex'
p2329
g48
(g589
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2330
sS'trials.thisRepN'
p2331
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp2332
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp2333
sg30
I1
sg61
g48
(g589
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2334
sS'trials.thisTrialN'
p2335
I174
sg32
I0
sg41
g42
sg45
g46
sg33
F4.1047708988189697
sS'trials.thisN'
p2336
I174
sa(dp2337
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_05_orig.jpg'
p2338
sS'trials.thisIndex'
p2339
g48
(g589
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2340
sS'trials.thisRepN'
p2341
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp2342
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp2343
sg30
I1
sg61
g48
(g589
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2344
sS'trials.thisTrialN'
p2345
I175
sg32
I0
sg41
g42
sg45
g46
sg33
F0.752716064453125
sS'trials.thisN'
p2346
I175
sa(dp2347
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_06_orig.jpg'
p2348
sS'trials.thisIndex'
p2349
g48
(g589
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2350
sS'trials.thisRepN'
p2351
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00a7\xc0'
tRp2352
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp2353
sg30
I1
sg61
g48
(g589
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2354
sS'trials.thisTrialN'
p2355
I176
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88705110549926758
sS'trials.thisN'
p2356
I176
sa(dp2357
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF9_02_orig.jpg'
p2358
sS'trials.thisIndex'
p2359
g48
(g589
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2360
sS'trials.thisRepN'
p2361
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2362
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp2363
sg30
I0
sg61
g48
(g589
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2364
sS'trials.thisTrialN'
p2365
I177
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5408120155334473
sS'trials.thisN'
p2366
I177
sa(dp2367
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_06_orig.jpg'
p2368
sS'trials.thisIndex'
p2369
g48
(g589
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2370
sS'trials.thisRepN'
p2371
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2372
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9b)\xc0'
tRp2373
sg30
I1
sg61
g48
(g589
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2374
sS'trials.thisTrialN'
p2375
I178
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0431430339813232
sS'trials.thisN'
p2376
I178
sa(dp2377
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM2_03_orig.jpg'
p2378
sS'trials.thisIndex'
p2379
g48
(g589
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2380
sS'trials.thisRepN'
p2381
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2382
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp2383
sg30
I0
sg61
g48
(g589
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2384
sS'trials.thisTrialN'
p2385
I179
sg32
I1
sg41
g42
sg45
g46
sg33
F2.0093691349029541
sS'trials.thisN'
p2386
I179
sa(dp2387
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_06_orig.jpg'
p2388
sS'trials.thisIndex'
p2389
g48
(g589
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2390
sS'trials.thisRepN'
p2391
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80h7\xc0'
tRp2392
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp2393
sg30
I1
sg61
g48
(g589
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2394
sS'trials.thisTrialN'
p2395
I180
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5406138896942139
sS'trials.thisN'
p2396
I180
sa(dp2397
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_01_orig.jpg'
p2398
sS'trials.thisIndex'
p2399
g48
(g589
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2400
sS'trials.thisRepN'
p2401
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2402
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp2403
sg30
I0
sg61
g48
(g589
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2404
sS'trials.thisTrialN'
p2405
I181
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3732991218566895
sS'trials.thisN'
p2406
I181
sa(dp2407
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_07_orig.jpg'
p2408
sS'trials.thisIndex'
p2409
g48
(g589
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2410
sS'trials.thisRepN'
p2411
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2412
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp2413
sg30
I1
sg61
g48
(g589
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2414
sS'trials.thisTrialN'
p2415
I182
sg32
I0
sg41
g42
sg45
g46
sg33
F1.842595100402832
sS'trials.thisN'
p2416
I182
sa(dp2417
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_03_orig.jpg'
p2418
sS'trials.thisIndex'
p2419
g48
(g589
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2420
sS'trials.thisRepN'
p2421
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00W2\xc0'
tRp2422
sg29
g48
(g50
S'\x00\x00\x00\x00\x00>\x1c\xc0'
tRp2423
sg30
I1
sg61
g48
(g589
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2424
sS'trials.thisTrialN'
p2425
I183
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7962491512298584
sS'trials.thisN'
p2426
I183
sa(dp2427
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM3_09_orig.jpg'
p2428
sS'trials.thisIndex'
p2429
g48
(g589
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2430
sS'trials.thisRepN'
p2431
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xb91\xc0'
tRp2432
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"\x1a\xc0'
tRp2433
sg30
I1
sg61
g48
(g589
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2434
sS'trials.thisTrialN'
p2435
I184
sg32
I0
sg41
g42
sg45
g46
sg33
F0.7868199348449707
sS'trials.thisN'
p2436
I184
sa(dp2437
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM1_06_orig.jpg'
p2438
sS'trials.thisIndex'
p2439
g48
(g589
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2440
sS'trials.thisRepN'
p2441
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80?3\xc0'
tRp2442
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x06\xc0'
tRp2443
sg30
I1
sg61
g48
(g589
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2444
sS'trials.thisTrialN'
p2445
I185
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4403941631317139
sS'trials.thisN'
p2446
I185
sa(dp2447
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_06_orig.jpg'
p2448
sS'trials.thisIndex'
p2449
g48
(g589
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2450
sS'trials.thisRepN'
p2451
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00e3\xc0'
tRp2452
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2453
sg30
I1
sg61
g48
(g589
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2454
sS'trials.thisTrialN'
p2455
I186
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1435949802398682
sS'trials.thisN'
p2456
I186
sa(dp2457
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_10_orig.jpg'
p2458
sS'trials.thisIndex'
p2459
g48
(g589
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2460
sS'trials.thisRepN'
p2461
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00t3\xc0'
tRp2462
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe8\x07\xc0'
tRp2463
sg30
I1
sg61
g48
(g589
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2464
sS'trials.thisTrialN'
p2465
I187
sg32
I0
sg41
g42
sg45
g46
sg33
F0.86929607391357422
sS'trials.thisN'
p2466
I187
sa(dp2467
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_01_orig.jpg'
p2468
sS'trials.thisIndex'
p2469
g48
(g589
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2470
sS'trials.thisRepN'
p2471
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp2472
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp2473
sg30
I0
sg61
g48
(g589
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2474
sS'trials.thisTrialN'
p2475
I188
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1097280979156494
sS'trials.thisN'
p2476
I188
sa(dp2477
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_02_orig.jpg'
p2478
sS'trials.thisIndex'
p2479
g48
(g589
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2480
sS'trials.thisRepN'
p2481
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2482
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp2483
sg30
I1
sg61
g48
(g589
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2484
sS'trials.thisTrialN'
p2485
I189
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2219579219818115
sS'trials.thisN'
p2486
I189
sa(dp2487
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_09_orig.jpg'
p2488
sS'trials.thisIndex'
p2489
g48
(g589
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2490
sS'trials.thisRepN'
p2491
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2492
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp2493
sg30
I1
sg61
g48
(g589
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2494
sS'trials.thisTrialN'
p2495
I190
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95398402214050293
sS'trials.thisN'
p2496
I190
sa(dp2497
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF7_03_orig.jpg'
p2498
sS'trials.thisIndex'
p2499
g48
(g589
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2500
sS'trials.thisRepN'
p2501
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2502
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp2503
sg30
I1
sg61
g48
(g589
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2504
sS'trials.thisTrialN'
p2505
I191
sg32
I0
sg41
g42
sg45
g46
sg33
F0.63548493385314941
sS'trials.thisN'
p2506
I191
sa(dp2507
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF2_10_orig.jpg'
p2508
sS'trials.thisIndex'
p2509
g48
(g589
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2510
sS'trials.thisRepN'
p2511
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2512
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\t\xc0'
tRp2513
sg30
I1
sg61
g48
(g589
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2514
sS'trials.thisTrialN'
p2515
I192
sg32
I0
sg41
g42
sg45
g46
sg33
F1.054710865020752
sS'trials.thisN'
p2516
I192
sa(dp2517
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_04_orig.jpg'
p2518
sS'trials.thisIndex'
p2519
g48
(g589
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2520
sS'trials.thisRepN'
p2521
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2522
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@\n\xc0'
tRp2523
sg30
I1
sg61
g48
(g589
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2524
sS'trials.thisTrialN'
p2525
I193
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3057460784912109
sS'trials.thisN'
p2526
I193
sa(dp2527
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_05_orig.jpg'
p2528
sS'trials.thisIndex'
p2529
g48
(g589
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2530
sS'trials.thisRepN'
p2531
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2532
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n\xc0'
tRp2533
sg30
I1
sg61
g48
(g589
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2534
sS'trials.thisTrialN'
p2535
I194
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5903470516204834
sS'trials.thisN'
p2536
I194
sa(dp2537
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_06_orig.jpg'
p2538
sS'trials.thisIndex'
p2539
g48
(g589
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2540
sS'trials.thisRepN'
p2541
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2542
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n\xc0'
tRp2543
sg30
I1
sg61
g48
(g589
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2544
sS'trials.thisTrialN'
p2545
I195
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95360302925109863
sS'trials.thisN'
p2546
I195
sa(dp2547
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_01_orig.jpg'
p2548
sS'trials.thisIndex'
p2549
g48
(g589
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2550
sS'trials.thisRepN'
p2551
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2552
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp2553
sg30
I0
sg61
g48
(g589
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2554
sS'trials.thisTrialN'
p2555
I196
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4234449863433838
sS'trials.thisN'
p2556
I196
sa(dp2557
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_01_orig.jpg'
p2558
sS'trials.thisIndex'
p2559
g48
(g589
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2560
sS'trials.thisRepN'
p2561
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp2562
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x88\r\xc0'
tRp2563
sg30
I0
sg61
g48
(g589
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2564
sS'trials.thisTrialN'
p2565
I197
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5577421188354492
sS'trials.thisN'
p2566
I197
sa(dp2567
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_10_orig.jpg'
p2568
sS'trials.thisIndex'
p2569
g48
(g589
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2570
sS'trials.thisRepN'
p2571
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp2572
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x10\xc0'
tRp2573
sg30
I1
sg61
g48
(g589
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2574
sS'trials.thisTrialN'
p2575
I198
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93569302558898926
sS'trials.thisN'
p2576
I198
sa(dp2577
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_10_orig.jpg'
p2578
sS'trials.thisIndex'
p2579
g48
(g589
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2580
sS'trials.thisRepN'
p2581
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp2582
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb2\x11\xc0'
tRp2583
sg30
I1
sg61
g48
(g589
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2584
sS'trials.thisTrialN'
p2585
I199
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80306696891784668
sS'trials.thisN'
p2586
I199
sa(dp2587
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_09_orig.jpg'
p2588
sS'trials.thisIndex'
p2589
g48
(g589
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2590
sS'trials.thisRepN'
p2591
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp2592
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11\xc0'
tRp2593
sg30
I1
sg61
g48
(g589
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2594
sS'trials.thisTrialN'
p2595
I200
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1723568439483643
sS'trials.thisN'
p2596
I200
sa(dp2597
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_07_orig.jpg'
p2598
sS'trials.thisIndex'
p2599
g48
(g589
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2600
sS'trials.thisRepN'
p2601
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp2602
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xda\x16\xc0'
tRp2603
sg30
I1
sg61
g48
(g589
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2604
sS'trials.thisTrialN'
p2605
I201
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5132369995117188
sS'trials.thisN'
p2606
I201
sa(dp2607
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF10_07_orig.jpg'
p2608
sS'trials.thisIndex'
p2609
g48
(g589
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2610
sS'trials.thisRepN'
p2611
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp2612
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x06\x18\xc0'
tRp2613
sg30
I1
sg61
g48
(g589
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2614
sS'trials.thisTrialN'
p2615
I202
sg32
I0
sg41
g42
sg45
g46
sg33
F0.86937093734741211
sS'trials.thisN'
p2616
I202
sa(dp2617
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_00_orig.jpg'
p2618
sS'trials.thisIndex'
p2619
g48
(g589
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2620
sS'trials.thisRepN'
p2621
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbf3\xc0'
tRp2622
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9c\x18\xc0'
tRp2623
sg30
I0
sg61
g48
(g589
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2624
sS'trials.thisTrialN'
p2625
I203
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98628115653991699
sS'trials.thisN'
p2626
I203
sa(dp2627
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF1_09_orig.jpg'
p2628
sS'trials.thisIndex'
p2629
g48
(g589
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2630
sS'trials.thisRepN'
p2631
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xdd3\xc0'
tRp2632
sg29
g48
(g50
S'\x00\x00\x00\x00\x00|\x1a\xc0'
tRp2633
sg30
I1
sg61
g48
(g589
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2634
sS'trials.thisTrialN'
p2635
I204
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2388560771942139
sS'trials.thisN'
p2636
I204
sa(dp2637
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF8_04_orig.jpg'
p2638
sS'trials.thisIndex'
p2639
g48
(g589
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2640
sS'trials.thisRepN'
p2641
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xdd3\xc0'
tRp2642
sg29
g48
(g50
S'\x00\x00\x00\x00\x00|\x1a\xc0'
tRp2643
sg30
I1
sg61
g48
(g589
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2644
sS'trials.thisTrialN'
p2645
I205
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6857810020446777
sS'trials.thisN'
p2646
I205
sa(dp2647
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM10_01_orig.jpg'
p2648
sS'trials.thisIndex'
p2649
g48
(g589
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2650
sS'trials.thisRepN'
p2651
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe43\xc0'
tRp2652
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp2653
sg30
I0
sg61
g48
(g589
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2654
sS'trials.thisTrialN'
p2655
I206
sg32
I1
sg41
g42
sg45
g46
sg33
F3.1327469348907471
sS'trials.thisN'
p2656
I206
sa(dp2657
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_02_orig.jpg'
p2658
sS'trials.thisIndex'
p2659
g48
(g589
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2660
sS'trials.thisRepN'
p2661
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe43\xc0'
tRp2662
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp2663
sg30
I0
sg61
g48
(g589
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2664
sS'trials.thisTrialN'
p2665
I207
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1930930614471436
sS'trials.thisN'
p2666
I207
sa(dp2667
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_06_orig.jpg'
p2668
sS'trials.thisIndex'
p2669
g48
(g589
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2670
sS'trials.thisRepN'
p2671
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xd53\xc0'
tRp2672
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp2673
sg30
I1
sg61
g48
(g589
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2674
sS'trials.thisTrialN'
p2675
I208
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93554210662841797
sS'trials.thisN'
p2676
I208
sa(dp2677
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_08_orig.jpg'
p2678
sS'trials.thisIndex'
p2679
g48
(g589
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2680
sS'trials.thisRepN'
p2681
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp2682
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp2683
sg30
I1
sg61
g48
(g589
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2684
sS'trials.thisTrialN'
p2685
I209
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5235798358917236
sS'trials.thisN'
p2686
I209
sa(dp2687
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM9_04_orig.jpg'
p2688
sS'trials.thisIndex'
p2689
g48
(g589
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2690
sS'trials.thisRepN'
p2691
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2692
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\x1a\xc0'
tRp2693
sg30
I1
sg61
g48
(g589
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2694
sS'trials.thisTrialN'
p2695
I210
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2268359661102295
sS'trials.thisN'
p2696
I210
sa(dp2697
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF5_02_orig.jpg'
p2698
sS'trials.thisIndex'
p2699
g48
(g589
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2700
sS'trials.thisRepN'
p2701
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2702
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\x1a\xc0'
tRp2703
sg30
I0
sg61
g48
(g589
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2704
sS'trials.thisTrialN'
p2705
I211
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2274441719055176
sS'trials.thisN'
p2706
I211
sa(dp2707
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM4_08_orig.jpg'
p2708
sS'trials.thisIndex'
p2709
g48
(g589
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2710
sS'trials.thisRepN'
p2711
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2712
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\x1a\xc0'
tRp2713
sg30
I1
sg61
g48
(g589
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2714
sS'trials.thisTrialN'
p2715
I212
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98760986328125
sS'trials.thisN'
p2716
I212
sa(dp2717
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF6_00_orig.jpg'
p2718
sS'trials.thisIndex'
p2719
g48
(g589
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2720
sS'trials.thisRepN'
p2721
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp2722
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp2723
sg30
I1
sg61
g48
(g589
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2724
sS'trials.thisTrialN'
p2725
I213
sg32
I0
sg41
g42
sg45
g46
sg33
F0.73571896553039551
sS'trials.thisN'
p2726
I213
sa(dp2727
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM8_10_orig.jpg'
p2728
sS'trials.thisIndex'
p2729
g48
(g589
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2730
sS'trials.thisRepN'
p2731
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp2732
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp2733
sg30
I1
sg61
g48
(g589
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2734
sS'trials.thisTrialN'
p2735
I214
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8745439052581787
sS'trials.thisN'
p2736
I214
sa(dp2737
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_04_orig.jpg'
p2738
sS'trials.thisIndex'
p2739
g48
(g589
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2740
sS'trials.thisRepN'
p2741
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp2742
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp2743
sg30
I0
sg61
g48
(g589
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2744
sS'trials.thisTrialN'
p2745
I215
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3566751480102539
sS'trials.thisN'
p2746
I215
sa(dp2747
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM5_07_orig.jpg'
p2748
sS'trials.thisIndex'
p2749
g48
(g589
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2750
sS'trials.thisRepN'
p2751
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xb73\xc0'
tRp2752
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp2753
sg30
I1
sg61
g48
(g589
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2754
sS'trials.thisTrialN'
p2755
I216
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2052052021026611
sS'trials.thisN'
p2756
I216
sa(dp2757
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphF4_10_orig.jpg'
p2758
sS'trials.thisIndex'
p2759
g48
(g589
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2760
sS'trials.thisRepN'
p2761
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp2762
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x1b\xc0'
tRp2763
sg30
I1
sg61
g48
(g589
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2764
sS'trials.thisTrialN'
p2765
I217
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0373411178588867
sS'trials.thisN'
p2766
I217
sa(dp2767
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM6_09_orig.jpg'
p2768
sS'trials.thisIndex'
p2769
g48
(g589
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2770
sS'trials.thisRepN'
p2771
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp2772
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x1b\xc0'
tRp2773
sg30
I1
sg61
g48
(g589
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2774
sS'trials.thisTrialN'
p2775
I218
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1369891166687012
sS'trials.thisN'
p2776
I218
sa(dp2777
g31
I0
sg44
g11
sg43
VG
sg586
S'./stim/MorphM7_06_orig.jpg'
p2778
sS'trials.thisIndex'
p2779
g48
(g589
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2780
sS'trials.thisRepN'
p2781
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp2782
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x02\x1c\xc0'
tRp2783
sg30
I1
sg61
g48
(g589
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2784
sS'trials.thisTrialN'
p2785
I219
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83532619476318359
sS'trials.thisN'
p2786
I219
sa(dp2787
g44
g11
sg34
S'return'
p2788
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg35
F38.11138391494751
sa(dp2789
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2790
g48
(g589
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2791
sS'trials2.thisRepN'
p2792
I0
sS'trials2.thisTrialN'
p2793
I0
sS'img'
p2794
S'./stim/MorphM10_06_orig.jpg'
p2795
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xce?'
tRp2796
sg29
g48
(g50
S'\x00\x00\x00\x00\x000\x0b@'
tRp2797
sg30
I1
sS'num'
p2798
g48
(g589
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2799
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6747839450836182
sS'trials2.thisN'
p2800
I0
sa(dp2801
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2802
g48
(g589
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2803
sS'trials2.thisRepN'
p2804
I0
sS'trials2.thisTrialN'
p2805
I1
sg2794
S'./stim/MorphM8_03_orig.jpg'
p2806
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xdf?'
tRp2807
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp2808
sg30
I1
sg2798
g48
(g589
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2809
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3084409236907959
sS'trials2.thisN'
p2810
I1
sa(dp2811
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2812
g48
(g589
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2813
sS'trials2.thisRepN'
p2814
I0
sS'trials2.thisTrialN'
p2815
I2
sg2794
S'./stim/MorphM10_05_orig.jpg'
p2816
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\xe4?'
tRp2817
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x10\r@'
tRp2818
sg30
I1
sg2798
g48
(g589
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2819
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88809609413146973
sS'trials2.thisN'
p2820
I2
sa(dp2821
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2822
g48
(g589
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2823
sS'trials2.thisRepN'
p2824
I0
sS'trials2.thisTrialN'
p2825
I3
sg2794
S'./stim/MorphF8_07_orig.jpg'
p2826
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp2827
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp2828
sg30
I1
sg2798
g48
(g589
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2829
sg32
I0
sg41
g42
sg45
g46
sg33
F0.68486690521240234
sS'trials2.thisN'
p2830
I3
sa(dp2831
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2832
g48
(g589
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2833
sS'trials2.thisRepN'
p2834
I0
sS'trials2.thisTrialN'
p2835
I4
sg2794
S'./stim/MorphM10_01_orig.jpg'
p2836
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\xf0?'
tRp2837
sg29
g48
(g50
S'\x00\x00\x00\x00\x00H\x12@'
tRp2838
sg30
I0
sg2798
g48
(g589
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2839
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0044879913330078
sS'trials2.thisN'
p2840
I4
sa(dp2841
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2842
g48
(g589
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2843
sS'trials2.thisRepN'
p2844
I0
sS'trials2.thisTrialN'
p2845
I5
sg2794
S'./stim/MorphM9_05_orig.jpg'
p2846
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp2847
sg29
g48
(g50
S'\x00\x00\x00\x00\x00v\x11@'
tRp2848
sg30
I1
sg2798
g48
(g589
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2849
sg32
I0
sg41
g42
sg45
g46
sg33
F2.412067174911499
sS'trials2.thisN'
p2850
I5
sa(dp2851
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2852
g48
(g589
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2853
sS'trials2.thisRepN'
p2854
I0
sS'trials2.thisTrialN'
p2855
I6
sg2794
S'./stim/MorphM8_07_orig.jpg'
p2856
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp2857
sg29
g48
(g50
S'\x00\x00\x00\x00\x00X\x11@'
tRp2858
sg30
I1
sg2798
g48
(g589
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2859
sg32
I0
sg41
g42
sg45
g46
sg33
F0.71818304061889648
sS'trials2.thisN'
p2860
I6
sa(dp2861
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2862
g48
(g589
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2863
sS'trials2.thisRepN'
p2864
I0
sS'trials2.thisTrialN'
p2865
I7
sg2794
S'./stim/MorphF9_08_orig.jpg'
p2866
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp2867
sg29
g48
(g50
S'\x00\x00\x00\x00\x00X\x11@'
tRp2868
sg30
I1
sg2798
g48
(g589
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2869
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75151300430297852
sS'trials2.thisN'
p2870
I7
sa(dp2871
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2872
g48
(g589
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2873
sS'trials2.thisRepN'
p2874
I0
sS'trials2.thisTrialN'
p2875
I8
sg2794
S'./stim/MorphM5_00_orig.jpg'
p2876
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp2877
sg29
g48
(g50
S'\x00\x00\x00\x00\x00X\x11@'
tRp2878
sg30
I0
sg2798
g48
(g589
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2879
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0548880100250244
sS'trials2.thisN'
p2880
I8
sa(dp2881
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2882
g48
(g589
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2883
sS'trials2.thisRepN'
p2884
I0
sS'trials2.thisTrialN'
p2885
I9
sg2794
S'./stim/MorphM4_09_orig.jpg'
p2886
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\xea?'
tRp2887
sg29
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp2888
sg30
I1
sg2798
g48
(g589
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2889
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80285811424255371
sS'trials2.thisN'
p2890
I9
sa(dp2891
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2892
g48
(g589
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2893
sS'trials2.thisRepN'
p2894
I0
sS'trials2.thisTrialN'
p2895
I10
sg2794
S'./stim/MorphM10_07_orig.jpg'
p2896
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\xea?'
tRp2897
sg29
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp2898
sg30
I1
sg2798
g48
(g589
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2899
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1051120758056641
sS'trials2.thisN'
p2900
I10
sa(dp2901
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2902
g48
(g589
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2903
sS'trials2.thisRepN'
p2904
I0
sS'trials2.thisTrialN'
p2905
I11
sg2794
S'./stim/MorphM2_02_orig.jpg'
p2906
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp2907
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp2908
sg30
I1
sg2798
g48
(g589
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2909
sg32
I0
sg41
g42
sg45
g46
sg33
F0.70283603668212891
sS'trials2.thisN'
p2910
I11
sa(dp2911
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2912
g48
(g589
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2913
sS'trials2.thisRepN'
p2914
I0
sS'trials2.thisTrialN'
p2915
I12
sg2794
S'./stim/MorphF6_09_orig.jpg'
p2916
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp2917
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp2918
sg30
I1
sg2798
g48
(g589
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2919
sg32
I0
sg41
g42
sg45
g46
sg33
F1.138124942779541
sS'trials2.thisN'
p2920
I12
sa(dp2921
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2922
g48
(g589
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2923
sS'trials2.thisRepN'
p2924
I0
sS'trials2.thisTrialN'
p2925
I13
sg2794
S'./stim/MorphM8_10_orig.jpg'
p2926
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp2927
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp2928
sg30
I1
sg2798
g48
(g589
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2929
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7397189140319824
sS'trials2.thisN'
p2930
I13
sa(dp2931
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2932
g48
(g589
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2933
sS'trials2.thisRepN'
p2934
I0
sS'trials2.thisTrialN'
p2935
I14
sg2794
S'./stim/MorphM5_05_orig.jpg'
p2936
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\xea?'
tRp2937
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp2938
sg30
I1
sg2798
g48
(g589
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2939
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9644441604614258
sS'trials2.thisN'
p2940
I14
sa(dp2941
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2942
g48
(g589
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2943
sS'trials2.thisRepN'
p2944
I0
sS'trials2.thisTrialN'
p2945
I15
sg2794
S'./stim/MorphF2_03_orig.jpg'
p2946
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\xea?'
tRp2947
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp2948
sg30
I1
sg2798
g48
(g589
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2949
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85338807106018066
sS'trials2.thisN'
p2950
I15
sa(dp2951
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2952
g48
(g589
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2953
sS'trials2.thisRepN'
p2954
I0
sS'trials2.thisTrialN'
p2955
I16
sg2794
S'./stim/MorphM6_01_orig.jpg'
p2956
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp2957
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp2958
sg30
I0
sg2798
g48
(g589
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2959
sg32
I1
sg41
g42
sg45
g46
sg33
F0.97058200836181641
sS'trials2.thisN'
p2960
I16
sa(dp2961
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2962
g48
(g589
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2963
sS'trials2.thisRepN'
p2964
I0
sS'trials2.thisTrialN'
p2965
I17
sg2794
S'./stim/MorphM9_08_orig.jpg'
p2966
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp2967
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp2968
sg30
I1
sg2798
g48
(g589
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2969
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1881668567657471
sS'trials2.thisN'
p2970
I17
sa(dp2971
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2972
g48
(g589
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2973
sS'trials2.thisRepN'
p2974
I0
sS'trials2.thisTrialN'
p2975
I18
sg2794
S'./stim/MorphF1_03_orig.jpg'
p2976
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp2977
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp2978
sg30
I0
sg2798
g48
(g589
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2979
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1891391277313232
sS'trials2.thisN'
p2980
I18
sa(dp2981
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2982
g48
(g589
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2983
sS'trials2.thisRepN'
p2984
I0
sS'trials2.thisTrialN'
p2985
I19
sg2794
S'./stim/MorphM1_04_orig.jpg'
p2986
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp2987
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp2988
sg30
I0
sg2798
g48
(g589
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2989
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1219139099121094
sS'trials2.thisN'
p2990
I19
sa(dp2991
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2992
g48
(g589
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2993
sS'trials2.thisRepN'
p2994
I0
sS'trials2.thisTrialN'
p2995
I20
sg2794
S'./stim/MorphF10_02_orig.jpg'
p2996
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp2997
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp2998
sg30
I1
sg2798
g48
(g589
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2999
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0193741321563721
sS'trials2.thisN'
p3000
I20
sa(dp3001
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3002
g48
(g589
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3003
sS'trials2.thisRepN'
p3004
I0
sS'trials2.thisTrialN'
p3005
I21
sg2794
S'./stim/MorphM10_02_orig.jpg'
p3006
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp3007
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3008
sg30
I0
sg2798
g48
(g589
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3009
sg32
I1
sg41
g42
sg45
g46
sg33
F4.7083849906921387
sS'trials2.thisN'
p3010
I21
sa(dp3011
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3012
g48
(g589
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3013
sS'trials2.thisRepN'
p3014
I0
sS'trials2.thisTrialN'
p3015
I22
sg2794
S'./stim/MorphF6_02_orig.jpg'
p3016
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp3017
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3018
sg30
I0
sg2798
g48
(g589
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3019
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3939478397369385
sS'trials2.thisN'
p3020
I22
sa(dp3021
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3022
g48
(g589
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3023
sS'trials2.thisRepN'
p3024
I0
sS'trials2.thisTrialN'
p3025
I23
sg2794
S'./stim/MorphM5_10_orig.jpg'
p3026
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp3027
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3028
sg30
I1
sg2798
g48
(g589
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3029
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5901570320129395
sS'trials2.thisN'
p3030
I23
sa(dp3031
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3032
g48
(g589
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3033
sS'trials2.thisRepN'
p3034
I0
sS'trials2.thisTrialN'
p3035
I24
sg2794
S'./stim/MorphM8_05_orig.jpg'
p3036
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9?'
tRp3037
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3038
sg30
I1
sg2798
g48
(g589
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3039
sg32
I0
sg41
g42
sg45
g46
sg33
F1.705747127532959
sS'trials2.thisN'
p3040
I24
sa(dp3041
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3042
g48
(g589
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3043
sS'trials2.thisRepN'
p3044
I0
sS'trials2.thisTrialN'
p3045
I25
sg2794
S'./stim/MorphM2_00_orig.jpg'
p3046
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\xea?'
tRp3047
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3048
sg30
I0
sg2798
g48
(g589
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3049
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3557898998260498
sS'trials2.thisN'
p3050
I25
sa(dp3051
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3052
g48
(g589
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3053
sS'trials2.thisRepN'
p3054
I0
sS'trials2.thisTrialN'
p3055
I26
sg2794
S'./stim/MorphM4_04_orig.jpg'
p3056
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\xea?'
tRp3057
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3058
sg30
I0
sg2798
g48
(g589
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3059
sg32
I1
sg41
g42
sg45
g46
sg33
F0.97108793258666992
sS'trials2.thisN'
p3060
I26
sa(dp3061
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3062
g48
(g589
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3063
sS'trials2.thisRepN'
p3064
I0
sS'trials2.thisTrialN'
p3065
I27
sg2794
S'./stim/MorphM6_09_orig.jpg'
p3066
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp3067
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3068
sg30
I1
sg2798
g48
(g589
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3069
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5281579494476318
sS'trials2.thisN'
p3070
I27
sa(dp3071
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3072
g48
(g589
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3073
sS'trials2.thisRepN'
p3074
I0
sS'trials2.thisTrialN'
p3075
I28
sg2794
S'./stim/MorphM4_07_orig.jpg'
p3076
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp3077
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3078
sg30
I1
sg2798
g48
(g589
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3079
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2613182067871094
sS'trials2.thisN'
p3080
I28
sa(dp3081
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3082
g48
(g589
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3083
sS'trials2.thisRepN'
p3084
I0
sS'trials2.thisTrialN'
p3085
I29
sg2794
S'./stim/MorphF8_06_orig.jpg'
p3086
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp3087
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3088
sg30
I1
sg2798
g48
(g589
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3089
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0712640285491943
sS'trials2.thisN'
p3090
I29
sa(dp3091
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3092
g48
(g589
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3093
sS'trials2.thisRepN'
p3094
I0
sS'trials2.thisTrialN'
p3095
I30
sg2794
S'./stim/MorphM9_07_orig.jpg'
p3096
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp3097
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3098
sg30
I1
sg2798
g48
(g589
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3099
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3896808624267578
sS'trials2.thisN'
p3100
I30
sa(dp3101
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3102
g48
(g589
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3103
sS'trials2.thisRepN'
p3104
I0
sS'trials2.thisTrialN'
p3105
I31
sg2794
S'./stim/MorphF5_07_orig.jpg'
p3106
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp3107
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3108
sg30
I1
sg2798
g48
(g589
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3109
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7400119304656982
sS'trials2.thisN'
p3110
I31
sa(dp3111
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3112
g48
(g589
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3113
sS'trials2.thisRepN'
p3114
I0
sS'trials2.thisTrialN'
p3115
I32
sg2794
S'./stim/MorphM4_06_orig.jpg'
p3116
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp3117
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3118
sg30
I1
sg2798
g48
(g589
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3119
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2939050197601318
sS'trials2.thisN'
p3120
I32
sa(dp3121
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3122
g48
(g589
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3123
sS'trials2.thisRepN'
p3124
I0
sS'trials2.thisTrialN'
p3125
I33
sg2794
S'./stim/MorphM9_02_orig.jpg'
p3126
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp3127
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3128
sg30
I0
sg2798
g48
(g589
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3129
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4289798736572266
sS'trials2.thisN'
p3130
I33
sa(dp3131
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3132
g48
(g589
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3133
sS'trials2.thisRepN'
p3134
I0
sS'trials2.thisTrialN'
p3135
I34
sg2794
S'./stim/MorphF1_09_orig.jpg'
p3136
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3137
sg29
g48
(g50
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3138
sg30
I1
sg2798
g48
(g589
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3139
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4232490062713623
sS'trials2.thisN'
p3140
I34
sa(dp3141
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3142
g48
(g589
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3143
sS'trials2.thisRepN'
p3144
I0
sS'trials2.thisTrialN'
p3145
I35
sg2794
S'./stim/MorphM1_10_orig.jpg'
p3146
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xf5?'
tRp3147
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3148
sg30
I1
sg2798
g48
(g589
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3149
sg32
I0
sg41
g42
sg45
g46
sg33
F0.97109699249267578
sS'trials2.thisN'
p3150
I35
sa(dp3151
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3152
g48
(g589
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3153
sS'trials2.thisRepN'
p3154
I0
sS'trials2.thisTrialN'
p3155
I36
sg2794
S'./stim/MorphF8_08_orig.jpg'
p3156
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3157
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp3158
sg30
I1
sg2798
g48
(g589
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3159
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9039459228515625
sS'trials2.thisN'
p3160
I36
sa(dp3161
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3162
g48
(g589
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3163
sS'trials2.thisRepN'
p3164
I0
sS'trials2.thisTrialN'
p3165
I37
sg2794
S'./stim/MorphM8_04_orig.jpg'
p3166
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3167
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp3168
sg30
I1
sg2798
g48
(g589
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3169
sg32
I0
sg41
g42
sg45
g46
sg33
F4.6072440147399902
sS'trials2.thisN'
p3170
I37
sa(dp3171
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3172
g48
(g589
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3173
sS'trials2.thisRepN'
p3174
I0
sS'trials2.thisTrialN'
p3175
I38
sg2794
S'./stim/MorphM1_06_orig.jpg'
p3176
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3177
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x0f@'
tRp3178
sg30
I0
sg2798
g48
(g589
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3179
sg32
I1
sg41
g42
sg45
g46
sg33
F3.3990509510040283
sS'trials2.thisN'
p3180
I38
sa(dp3181
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3182
g48
(g589
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3183
sS'trials2.thisRepN'
p3184
I0
sS'trials2.thisTrialN'
p3185
I39
sg2794
S'./stim/MorphF7_05_orig.jpg'
p3186
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3187
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp3188
sg30
I0
sg2798
g48
(g589
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3189
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9760611057281494
sS'trials2.thisN'
p3190
I39
sa(dp3191
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3192
g48
(g589
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3193
sS'trials2.thisRepN'
p3194
I0
sS'trials2.thisTrialN'
p3195
I40
sg2794
S'./stim/MorphM5_09_orig.jpg'
p3196
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3197
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp3198
sg30
I1
sg2798
g48
(g589
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3199
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3048629760742188
sS'trials2.thisN'
p3200
I40
sa(dp3201
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3202
g48
(g589
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3203
sS'trials2.thisRepN'
p3204
I0
sS'trials2.thisTrialN'
p3205
I41
sg2794
S'./stim/MorphF8_01_orig.jpg'
p3206
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa8\xfb?'
tRp3207
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3208
sg30
I0
sg2798
g48
(g589
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3209
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2049810886383057
sS'trials2.thisN'
p3210
I41
sa(dp3211
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3212
g48
(g589
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3213
sS'trials2.thisRepN'
p3214
I0
sS'trials2.thisTrialN'
p3215
I42
sg2794
S'./stim/MorphF3_03_orig.jpg'
p3216
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xfc?'
tRp3217
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3218
sg30
I0
sg2798
g48
(g589
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3219
sg32
I1
sg41
g42
sg45
g46
sg33
F1.121675968170166
sS'trials2.thisN'
p3220
I42
sa(dp3221
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3222
g48
(g589
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3223
sS'trials2.thisRepN'
p3224
I0
sS'trials2.thisTrialN'
p3225
I43
sg2794
S'./stim/MorphM10_08_orig.jpg'
p3226
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x00@'
tRp3227
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10@'
tRp3228
sg30
I1
sg2798
g48
(g589
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3229
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0211560726165771
sS'trials2.thisN'
p3230
I43
sa(dp3231
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3232
g48
(g589
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3233
sS'trials2.thisRepN'
p3234
I0
sS'trials2.thisTrialN'
p3235
I44
sg2794
S'./stim/MorphM3_09_orig.jpg'
p3236
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd0\x01@'
tRp3237
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3238
sg30
I1
sg2798
g48
(g589
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3239
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3053269386291504
sS'trials2.thisN'
p3240
I44
sa(dp3241
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3242
g48
(g589
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3243
sS'trials2.thisRepN'
p3244
I0
sS'trials2.thisTrialN'
p3245
I45
sg2794
S'./stim/MorphM4_02_orig.jpg'
p3246
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c\x02@'
tRp3247
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3248
sg30
I0
sg2798
g48
(g589
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3249
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0715467929840088
sS'trials2.thisN'
p3250
I45
sa(dp3251
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3252
g48
(g589
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3253
sS'trials2.thisRepN'
p3254
I0
sS'trials2.thisTrialN'
p3255
I46
sg2794
S'./stim/MorphF7_06_orig.jpg'
p3256
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\x02@'
tRp3257
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h\x10@'
tRp3258
sg30
I1
sg2798
g48
(g589
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3259
sg32
I0
sg41
g42
sg45
g46
sg33
F0.8361058235168457
sS'trials2.thisN'
p3260
I46
sa(dp3261
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3262
g48
(g589
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3263
sS'trials2.thisRepN'
p3264
I0
sS'trials2.thisTrialN'
p3265
I47
sg2794
S'./stim/MorphF6_04_orig.jpg'
p3266
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x02@'
tRp3267
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3268
sg30
I0
sg2798
g48
(g589
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3269
sg32
I1
sg41
g42
sg45
g46
sg33
F0.97190499305725098
sS'trials2.thisN'
p3270
I47
sa(dp3271
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3272
g48
(g589
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3273
sS'trials2.thisRepN'
p3274
I0
sS'trials2.thisTrialN'
p3275
I48
sg2794
S'./stim/MorphF1_00_orig.jpg'
p3276
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x02@'
tRp3277
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3278
sg30
I0
sg2798
g48
(g589
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3279
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0700070858001709
sS'trials2.thisN'
p3280
I48
sa(dp3281
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3282
g48
(g589
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3283
sS'trials2.thisRepN'
p3284
I0
sS'trials2.thisTrialN'
p3285
I49
sg2794
S'./stim/MorphF2_07_orig.jpg'
p3286
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x02@'
tRp3287
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3288
sg30
I1
sg2798
g48
(g589
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3289
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1218550205230713
sS'trials2.thisN'
p3290
I49
sa(dp3291
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3292
g48
(g589
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3293
sS'trials2.thisRepN'
p3294
I0
sS'trials2.thisTrialN'
p3295
I50
sg2794
S'./stim/MorphF9_07_orig.jpg'
p3296
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x04@'
tRp3297
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp3298
sg30
I1
sg2798
g48
(g589
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3299
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6556079387664795
sS'trials2.thisN'
p3300
I50
sa(dp3301
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3302
g48
(g589
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3303
sS'trials2.thisRepN'
p3304
I0
sS'trials2.thisTrialN'
p3305
I51
sg2794
S'./stim/MorphF7_08_orig.jpg'
p3306
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00d\x04@'
tRp3307
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3308
sg30
I1
sg2798
g48
(g589
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3309
sg32
I0
sg41
g42
sg45
g46
sg33
F0.86985111236572266
sS'trials2.thisN'
p3310
I51
sa(dp3311
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3312
g48
(g589
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3313
sS'trials2.thisRepN'
p3314
I0
sS'trials2.thisTrialN'
p3315
I52
sg2794
S'./stim/MorphM1_07_orig.jpg'
p3316
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00d\x04@'
tRp3317
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3318
sg30
I1
sg2798
g48
(g589
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3319
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8243851661682129
sS'trials2.thisN'
p3320
I52
sa(dp3321
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3322
g48
(g589
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3323
sS'trials2.thisRepN'
p3324
I0
sS'trials2.thisTrialN'
p3325
I53
sg2794
S'./stim/MorphM7_03_orig.jpg'
p3326
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x18\x05@'
tRp3327
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3328
sg30
I0
sg2798
g48
(g589
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3329
sg32
I1
sg41
g42
sg45
g46
sg33
F3.9036540985107422
sS'trials2.thisN'
p3330
I53
sa(dp3331
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3332
g48
(g589
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3333
sS'trials2.thisRepN'
p3334
I0
sS'trials2.thisTrialN'
p3335
I54
sg2794
S'./stim/MorphF2_01_orig.jpg'
p3336
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x18\x05@'
tRp3337
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3338
sg30
I1
sg2798
g48
(g589
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3339
sg32
I0
sg41
g42
sg45
g46
sg33
F0.78650093078613281
sS'trials2.thisN'
p3340
I54
sa(dp3341
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3342
g48
(g589
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3343
sS'trials2.thisRepN'
p3344
I0
sS'trials2.thisTrialN'
p3345
I55
sg2794
S'./stim/MorphF10_03_orig.jpg'
p3346
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x06@'
tRp3347
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp3348
sg30
I1
sg2798
g48
(g589
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3349
sg32
I0
sg41
g42
sg45
g46
sg33
F3.552358865737915
sS'trials2.thisN'
p3350
I55
sa(dp3351
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3352
g48
(g589
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3353
sS'trials2.thisRepN'
p3354
I0
sS'trials2.thisTrialN'
p3355
I56
sg2794
S'./stim/MorphF7_07_orig.jpg'
p3356
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06@'
tRp3357
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3358
sg30
I1
sg2798
g48
(g589
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3359
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2200679779052734
sS'trials2.thisN'
p3360
I56
sa(dp3361
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3362
g48
(g589
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3363
sS'trials2.thisRepN'
p3364
I0
sS'trials2.thisTrialN'
p3365
I57
sg2794
S'./stim/MorphF3_10_orig.jpg'
p3366
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06@'
tRp3367
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp3368
sg30
I1
sg2798
g48
(g589
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3369
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0364761352539062
sS'trials2.thisN'
p3370
I57
sa(dp3371
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3372
g48
(g589
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3373
sS'trials2.thisRepN'
p3374
I0
sS'trials2.thisTrialN'
p3375
I58
sg2794
S'./stim/MorphF6_03_orig.jpg'
p3376
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x06@'
tRp3377
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10@'
tRp3378
sg30
I0
sg2798
g48
(g589
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3379
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6080348491668701
sS'trials2.thisN'
p3380
I58
sa(dp3381
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3382
g48
(g589
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3383
sS'trials2.thisRepN'
p3384
I0
sS'trials2.thisTrialN'
p3385
I59
sg2794
S'./stim/MorphM4_03_orig.jpg'
p3386
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x004\x07@'
tRp3387
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10@'
tRp3388
sg30
I0
sg2798
g48
(g589
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3389
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3611910343170166
sS'trials2.thisN'
p3390
I59
sa(dp3391
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3392
g48
(g589
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3393
sS'trials2.thisRepN'
p3394
I0
sS'trials2.thisTrialN'
p3395
I60
sg2794
S'./stim/MorphM6_07_orig.jpg'
p3396
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x004\x07@'
tRp3397
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10@'
tRp3398
sg30
I1
sg2798
g48
(g589
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3399
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88674688339233398
sS'trials2.thisN'
p3400
I60
sa(dp3401
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3402
g48
(g589
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3403
sS'trials2.thisRepN'
p3404
I0
sS'trials2.thisTrialN'
p3405
I61
sg2794
S'./stim/MorphM5_08_orig.jpg'
p3406
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9c\x08@'
tRp3407
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3408
sg30
I1
sg2798
g48
(g589
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3409
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3565340042114258
sS'trials2.thisN'
p3410
I61
sa(dp3411
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3412
g48
(g589
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3413
sS'trials2.thisRepN'
p3414
I0
sS'trials2.thisTrialN'
p3415
I62
sg2794
S'./stim/MorphF9_06_orig.jpg'
p3416
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x008\x03@'
tRp3417
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb2\x11@'
tRp3418
sg30
I1
sg2798
g48
(g589
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3419
sg32
I0
sg41
g42
sg45
g46
sg33
F5.8464140892028809
sS'trials2.thisN'
p3420
I62
sa(dp3421
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3422
g48
(g589
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3423
sS'trials2.thisRepN'
p3424
I0
sS'trials2.thisTrialN'
p3425
I63
sg2794
S'./stim/MorphM3_04_orig.jpg'
p3426
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x02@'
tRp3427
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3428
sg30
I1
sg2798
g48
(g589
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3429
sg32
I0
sg41
g42
sg45
g46
sg33
F1.841972827911377
sS'trials2.thisN'
p3430
I63
sa(dp3431
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3432
g48
(g589
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3433
sS'trials2.thisRepN'
p3434
I0
sS'trials2.thisTrialN'
p3435
I64
sg2794
S'./stim/MorphM4_05_orig.jpg'
p3436
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x04@'
tRp3437
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp3438
sg30
I1
sg2798
g48
(g589
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3439
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6247220039367676
sS'trials2.thisN'
p3440
I64
sa(dp3441
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3442
g48
(g589
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3443
sS'trials2.thisRepN'
p3444
I0
sS'trials2.thisTrialN'
p3445
I65
sg2794
S'./stim/MorphF2_09_orig.jpg'
p3446
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00T\x05@'
tRp3447
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp3448
sg30
I1
sg2798
g48
(g589
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3449
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75370287895202637
sS'trials2.thisN'
p3450
I65
sa(dp3451
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3452
g48
(g589
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3453
sS'trials2.thisRepN'
p3454
I0
sS'trials2.thisTrialN'
p3455
I66
sg2794
S'./stim/MorphM1_00_orig.jpg'
p3456
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x05@'
tRp3457
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfe\x10@'
tRp3458
sg30
I0
sg2798
g48
(g589
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3459
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0031819343566895
sS'trials2.thisN'
p3460
I66
sa(dp3461
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3462
g48
(g589
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3463
sS'trials2.thisRepN'
p3464
I0
sS'trials2.thisTrialN'
p3465
I67
sg2794
S'./stim/MorphF1_02_orig.jpg'
p3466
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00T\x05@'
tRp3467
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x10@'
tRp3468
sg30
I0
sg2798
g48
(g589
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3469
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6082010269165039
sS'trials2.thisN'
p3470
I67
sa(dp3471
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3472
g48
(g589
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3473
sS'trials2.thisRepN'
p3474
I0
sS'trials2.thisTrialN'
p3475
I68
sg2794
S'./stim/MorphM4_10_orig.jpg'
p3476
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xdc\x04@'
tRp3477
sg29
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3478
sg30
I1
sg2798
g48
(g589
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3479
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1203241348266602
sS'trials2.thisN'
p3480
I68
sa(dp3481
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3482
g48
(g589
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3483
sS'trials2.thisRepN'
p3484
I0
sS'trials2.thisTrialN'
p3485
I69
sg2794
S'./stim/MorphF7_02_orig.jpg'
p3486
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x05@'
tRp3487
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp3488
sg30
I0
sg2798
g48
(g589
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3489
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2393851280212402
sS'trials2.thisN'
p3490
I69
sa(dp3491
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3492
g48
(g589
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3493
sS'trials2.thisRepN'
p3494
I0
sS'trials2.thisTrialN'
p3495
I70
sg2794
S'./stim/MorphM2_09_orig.jpg'
p3496
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x06@'
tRp3497
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x0e\x10@'
tRp3498
sg30
I1
sg2798
g48
(g589
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3499
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3896450996398926
sS'trials2.thisN'
p3500
I70
sa(dp3501
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3502
g48
(g589
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3503
sS'trials2.thisRepN'
p3504
I0
sS'trials2.thisTrialN'
p3505
I71
sg2794
S'./stim/MorphF1_05_orig.jpg'
p3506
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06@'
tRp3507
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3508
sg30
I0
sg2798
g48
(g589
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3509
sg32
I1
sg41
g42
sg45
g46
sg33
F5.1105668544769287
sS'trials2.thisN'
p3510
I71
sa(dp3511
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3512
g48
(g589
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3513
sS'trials2.thisRepN'
p3514
I0
sS'trials2.thisTrialN'
p3515
I72
sg2794
S'./stim/MorphF4_05_orig.jpg'
p3516
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x05@'
tRp3517
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3518
sg30
I1
sg2798
g48
(g589
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3519
sg32
I0
sg41
g42
sg45
g46
sg33
F0.87026596069335938
sS'trials2.thisN'
p3520
I72
sa(dp3521
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3522
g48
(g589
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3523
sS'trials2.thisRepN'
p3524
I0
sS'trials2.thisTrialN'
p3525
I73
sg2794
S'./stim/MorphF9_05_orig.jpg'
p3526
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x06@'
tRp3527
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3528
sg30
I1
sg2798
g48
(g589
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3529
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8250279426574707
sS'trials2.thisN'
p3530
I73
sa(dp3531
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3532
g48
(g589
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3533
sS'trials2.thisRepN'
p3534
I0
sS'trials2.thisTrialN'
p3535
I74
sg2794
S'./stim/MorphF1_04_orig.jpg'
p3536
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06@'
tRp3537
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\\\x0c@'
tRp3538
sg30
I1
sg2798
g48
(g589
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3539
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6572558879852295
sS'trials2.thisN'
p3540
I74
sa(dp3541
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3542
g48
(g589
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3543
sS'trials2.thisRepN'
p3544
I0
sS'trials2.thisTrialN'
p3545
I75
sg2794
S'./stim/MorphF3_04_orig.jpg'
p3546
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp3547
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp3548
sg30
I0
sg2798
g48
(g589
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3549
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2890479564666748
sS'trials2.thisN'
p3550
I75
sa(dp3551
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3552
g48
(g589
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3553
sS'trials2.thisRepN'
p3554
I0
sS'trials2.thisTrialN'
p3555
I76
sg2794
S'./stim/MorphM3_08_orig.jpg'
p3556
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\t@'
tRp3557
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp3558
sg30
I1
sg2798
g48
(g589
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3559
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1386928558349609
sS'trials2.thisN'
p3560
I76
sa(dp3561
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3562
g48
(g589
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3563
sS'trials2.thisRepN'
p3564
I0
sS'trials2.thisTrialN'
p3565
I77
sg2794
S'./stim/MorphF1_06_orig.jpg'
p3566
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n@'
tRp3567
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp3568
sg30
I1
sg2798
g48
(g589
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3569
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1549839973449707
sS'trials2.thisN'
p3570
I77
sa(dp3571
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3572
g48
(g589
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3573
sS'trials2.thisRepN'
p3574
I0
sS'trials2.thisTrialN'
p3575
I78
sg2794
S'./stim/MorphF5_01_orig.jpg'
p3576
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\n@'
tRp3577
sg29
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp3578
sg30
I0
sg2798
g48
(g589
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3579
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2891128063201904
sS'trials2.thisN'
p3580
I78
sa(dp3581
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3582
g48
(g589
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3583
sS'trials2.thisRepN'
p3584
I0
sS'trials2.thisTrialN'
p3585
I79
sg2794
S'./stim/MorphF8_00_orig.jpg'
p3586
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\n@'
tRp3587
sg29
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp3588
sg30
I0
sg2798
g48
(g589
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3589
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5227940082550049
sS'trials2.thisN'
p3590
I79
sa(dp3591
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3592
g48
(g589
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3593
sS'trials2.thisRepN'
p3594
I0
sS'trials2.thisTrialN'
p3595
I80
sg2794
S'./stim/MorphM7_00_orig.jpg'
p3596
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\n@'
tRp3597
sg29
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp3598
sg30
I0
sg2798
g48
(g589
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3599
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5911359786987305
sS'trials2.thisN'
p3600
I80
sa(dp3601
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3602
g48
(g589
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3603
sS'trials2.thisRepN'
p3604
I0
sS'trials2.thisTrialN'
p3605
I81
sg2794
S'./stim/MorphF8_02_orig.jpg'
p3606
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp3607
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n@'
tRp3608
sg30
I0
sg2798
g48
(g589
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3609
sg32
I1
sg41
g42
sg45
g46
sg33
F1.506227970123291
sS'trials2.thisN'
p3610
I81
sa(dp3611
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3612
g48
(g589
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3613
sS'trials2.thisRepN'
p3614
I0
sS'trials2.thisTrialN'
p3615
I82
sg2794
S'./stim/MorphF9_01_orig.jpg'
p3616
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp3617
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n@'
tRp3618
sg30
I0
sg2798
g48
(g589
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3619
sg32
I1
sg41
g42
sg45
g46
sg33
F1.524116039276123
sS'trials2.thisN'
p3620
I82
sa(dp3621
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3622
g48
(g589
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3623
sS'trials2.thisRepN'
p3624
I0
sS'trials2.thisTrialN'
p3625
I83
sg2794
S'./stim/MorphM6_10_orig.jpg'
p3626
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp3627
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n@'
tRp3628
sg30
I1
sg2798
g48
(g589
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3629
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1551108360290527
sS'trials2.thisN'
p3630
I83
sa(dp3631
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3632
g48
(g589
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3633
sS'trials2.thisRepN'
p3634
I0
sS'trials2.thisTrialN'
p3635
I84
sg2794
S'./stim/MorphF2_00_orig.jpg'
p3636
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa8\x0b@'
tRp3637
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n@'
tRp3638
sg30
I1
sg2798
g48
(g589
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3639
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6968338489532471
sS'trials2.thisN'
p3640
I84
sa(dp3641
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3642
g48
(g589
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3643
sS'trials2.thisRepN'
p3644
I0
sS'trials2.thisTrialN'
p3645
I85
sg2794
S'./stim/MorphF3_08_orig.jpg'
p3646
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp3647
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n@'
tRp3648
sg30
I1
sg2798
g48
(g589
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3649
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95443105697631836
sS'trials2.thisN'
p3650
I85
sa(dp3651
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3652
g48
(g589
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3653
sS'trials2.thisRepN'
p3654
I0
sS'trials2.thisTrialN'
p3655
I86
sg2794
S'./stim/MorphF7_04_orig.jpg'
p3656
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp3657
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n@'
tRp3658
sg30
I0
sg2798
g48
(g589
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3659
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5573289394378662
sS'trials2.thisN'
p3660
I86
sa(dp3661
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3662
g48
(g589
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3663
sS'trials2.thisRepN'
p3664
I0
sS'trials2.thisTrialN'
p3665
I87
sg2794
S'./stim/MorphF4_00_orig.jpg'
p3666
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\x0b@'
tRp3667
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\t@'
tRp3668
sg30
I0
sg2798
g48
(g589
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3669
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5231640338897705
sS'trials2.thisN'
p3670
I87
sa(dp3671
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3672
g48
(g589
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3673
sS'trials2.thisRepN'
p3674
I0
sS'trials2.thisTrialN'
p3675
I88
sg2794
S'./stim/MorphF1_01_orig.jpg'
p3676
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\x0b@'
tRp3677
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\t@'
tRp3678
sg30
I0
sg2798
g48
(g589
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3679
sg32
I1
sg41
g42
sg45
g46
sg33
F3.4826531410217285
sS'trials2.thisN'
p3680
I88
sa(dp3681
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3682
g48
(g589
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3683
sS'trials2.thisRepN'
p3684
I0
sS'trials2.thisTrialN'
p3685
I89
sg2794
S'./stim/MorphM9_10_orig.jpg'
p3686
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n@'
tRp3687
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xac\x07@'
tRp3688
sg30
I1
sg2798
g48
(g589
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3689
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80356502532958984
sS'trials2.thisN'
p3690
I89
sa(dp3691
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3692
g48
(g589
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3693
sS'trials2.thisRepN'
p3694
I0
sS'trials2.thisTrialN'
p3695
I90
sg2794
S'./stim/MorphM6_00_orig.jpg'
p3696
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c@'
tRp3697
sg29
g48
(g50
S'\x00\x00\x00\x00\x004\x07@'
tRp3698
sg30
I0
sg2798
g48
(g589
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3699
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5403850078582764
sS'trials2.thisN'
p3700
I90
sa(dp3701
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3702
g48
(g589
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3703
sS'trials2.thisRepN'
p3704
I0
sS'trials2.thisTrialN'
p3705
I91
sg2794
S'./stim/MorphM7_10_orig.jpg'
p3706
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c@'
tRp3707
sg29
g48
(g50
S'\x00\x00\x00\x00\x004\x07@'
tRp3708
sg30
I1
sg2798
g48
(g589
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3709
sg32
I0
sg41
g42
sg45
g46
sg33
F0.8714299201965332
sS'trials2.thisN'
p3710
I91
sa(dp3711
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3712
g48
(g589
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3713
sS'trials2.thisRepN'
p3714
I0
sS'trials2.thisTrialN'
p3715
I92
sg2794
S'./stim/MorphM5_04_orig.jpg'
p3716
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c@'
tRp3717
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x06@'
tRp3718
sg30
I1
sg2798
g48
(g589
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3719
sg32
I0
sg41
g42
sg45
g46
sg33
F0.81900191307067871
sS'trials2.thisN'
p3720
I92
sa(dp3721
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3722
g48
(g589
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3723
sS'trials2.thisRepN'
p3724
I0
sS'trials2.thisTrialN'
p3725
I93
sg2794
S'./stim/MorphF4_02_orig.jpg'
p3726
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp3727
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x06@'
tRp3728
sg30
I0
sg2798
g48
(g589
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3729
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8583590984344482
sS'trials2.thisN'
p3730
I93
sa(dp3731
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3732
g48
(g589
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3733
sS'trials2.thisRepN'
p3734
I0
sS'trials2.thisTrialN'
p3735
I94
sg2794
S'./stim/MorphF5_05_orig.jpg'
p3736
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c@'
tRp3737
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06@'
tRp3738
sg30
I1
sg2798
g48
(g589
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3739
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6749448776245117
sS'trials2.thisN'
p3740
I94
sa(dp3741
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3742
g48
(g589
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3743
sS'trials2.thisRepN'
p3744
I0
sS'trials2.thisTrialN'
p3745
I95
sg2794
S'./stim/MorphF10_08_orig.jpg'
p3746
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp3747
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x05@'
tRp3748
sg30
I1
sg2798
g48
(g589
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3749
sg32
I0
sg41
g42
sg45
g46
sg33
F0.97086405754089355
sS'trials2.thisN'
p3750
I95
sa(dp3751
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3752
g48
(g589
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3753
sS'trials2.thisRepN'
p3754
I0
sS'trials2.thisTrialN'
p3755
I96
sg2794
S'./stim/MorphM5_03_orig.jpg'
p3756
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x10\r@'
tRp3757
sg29
g48
(g50
S'\x00\x00\x00\x00\x008\x03@'
tRp3758
sg30
I1
sg2798
g48
(g589
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3759
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2111210823059082
sS'trials2.thisN'
p3760
I96
sa(dp3761
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3762
g48
(g589
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3763
sS'trials2.thisRepN'
p3764
I0
sS'trials2.thisTrialN'
p3765
I97
sg2794
S'./stim/MorphM8_06_orig.jpg'
p3766
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3767
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x10\xfd?'
tRp3768
sg30
I1
sg2798
g48
(g589
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3769
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0212130546569824
sS'trials2.thisN'
p3770
I97
sa(dp3771
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3772
g48
(g589
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3773
sS'trials2.thisRepN'
p3774
I0
sS'trials2.thisTrialN'
p3775
I98
sg2794
S'./stim/MorphF3_06_orig.jpg'
p3776
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp3777
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa8\xfb?'
tRp3778
sg30
I1
sg2798
g48
(g589
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3779
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2923848628997803
sS'trials2.thisN'
p3780
I98
sa(dp3781
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3782
g48
(g589
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3783
sS'trials2.thisRepN'
p3784
I0
sS'trials2.thisTrialN'
p3785
I99
sg2794
S'./stim/MorphM1_01_orig.jpg'
p3786
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp3787
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3788
sg30
I0
sg2798
g48
(g589
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3789
sg32
I1
sg41
g42
sg45
g46
sg33
F0.80301904678344727
sS'trials2.thisN'
p3790
I99
sa(dp3791
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3792
g48
(g589
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3793
sS'trials2.thisRepN'
p3794
I0
sS'trials2.thisTrialN'
p3795
I100
sg2794
S'./stim/MorphM4_00_orig.jpg'
p3796
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00L\r@'
tRp3797
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3798
sg30
I0
sg2798
g48
(g589
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3799
sg32
I1
sg41
g42
sg45
g46
sg33
F0.92038202285766602
sS'trials2.thisN'
p3800
I100
sa(dp3801
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3802
g48
(g589
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3803
sS'trials2.thisRepN'
p3804
I0
sS'trials2.thisTrialN'
p3805
I101
sg2794
S'./stim/MorphM3_05_orig.jpg'
p3806
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp3807
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x10\xfd?'
tRp3808
sg30
I1
sg2798
g48
(g589
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3809
sg32
I0
sg41
g42
sg45
g46
sg33
F4.6913678646087646
sS'trials2.thisN'
p3810
I101
sa(dp3811
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3812
g48
(g589
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3813
sS'trials2.thisRepN'
p3814
I0
sS'trials2.thisTrialN'
p3815
I102
sg2794
S'./stim/MorphM5_06_orig.jpg'
p3816
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3817
sg29
g48
(g50
S'\x00\x00\x00\x00\x00 \xfc?'
tRp3818
sg30
I1
sg2798
g48
(g589
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3819
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1370270252227783
sS'trials2.thisN'
p3820
I102
sa(dp3821
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3822
g48
(g589
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3823
sS'trials2.thisRepN'
p3824
I0
sS'trials2.thisTrialN'
p3825
I103
sg2794
S'./stim/MorphM7_04_orig.jpg'
p3826
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3827
sg29
g48
(g50
S'\x00\x00\x00\x00\x00 \xfc?'
tRp3828
sg30
I1
sg2798
g48
(g589
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3829
sg32
I0
sg41
g42
sg45
g46
sg33
F5.210827112197876
sS'trials2.thisN'
p3830
I103
sa(dp3831
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3832
g48
(g589
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3833
sS'trials2.thisRepN'
p3834
I0
sS'trials2.thisTrialN'
p3835
I104
sg2794
S'./stim/MorphF3_09_orig.jpg'
p3836
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3837
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp3838
sg30
I1
sg2798
g48
(g589
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3839
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83566999435424805
sS'trials2.thisN'
p3840
I104
sa(dp3841
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3842
g48
(g589
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3843
sS'trials2.thisRepN'
p3844
I0
sS'trials2.thisTrialN'
p3845
I105
sg2794
S'./stim/MorphM7_07_orig.jpg'
p3846
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3847
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp3848
sg30
I1
sg2798
g48
(g589
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3849
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85322809219360352
sS'trials2.thisN'
p3850
I105
sa(dp3851
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3852
g48
(g589
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3853
sS'trials2.thisRepN'
p3854
I0
sS'trials2.thisTrialN'
p3855
I106
sg2794
S'./stim/MorphF2_05_orig.jpg'
p3856
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10@'
tRp3857
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xf5?'
tRp3858
sg30
I1
sg2798
g48
(g589
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3859
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8070478439331055
sS'trials2.thisN'
p3860
I106
sa(dp3861
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3862
g48
(g589
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3863
sS'trials2.thisRepN'
p3864
I0
sS'trials2.thisTrialN'
p3865
I107
sg2794
S'./stim/MorphM10_09_orig.jpg'
p3866
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfe\x10@'
tRp3867
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd0\xf1?'
tRp3868
sg30
I1
sg2798
g48
(g589
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3869
sg32
I0
sg41
g42
sg45
g46
sg33
F1.071342945098877
sS'trials2.thisN'
p3870
I107
sa(dp3871
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3872
g48
(g589
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3873
sS'trials2.thisRepN'
p3874
I0
sS'trials2.thisTrialN'
p3875
I108
sg2794
S'./stim/MorphM5_02_orig.jpg'
p3876
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb2\x11@'
tRp3877
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@\xda?'
tRp3878
sg30
I1
sg2798
g48
(g589
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3879
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4898550510406494
sS'trials2.thisN'
p3880
I108
sa(dp3881
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3882
g48
(g589
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3883
sS'trials2.thisRepN'
p3884
I0
sS'trials2.thisTrialN'
p3885
I109
sg2794
S'./stim/MorphF4_06_orig.jpg'
p3886
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00f\x12@'
tRp3887
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp3888
sg30
I1
sg2798
g48
(g589
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3889
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4231750965118408
sS'trials2.thisN'
p3890
I109
sa(dp3891
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3892
g48
(g589
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3893
sS'trials2.thisRepN'
p3894
I0
sS'trials2.thisTrialN'
p3895
I110
sg2794
S'./stim/MorphM10_03_orig.jpg'
p3896
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xde\x12@'
tRp3897
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@\xca\xbf'
tRp3898
sg30
I0
sg2798
g48
(g589
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3899
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7926421165466309
sS'trials2.thisN'
p3900
I110
sa(dp3901
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3902
g48
(g589
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3903
sS'trials2.thisRepN'
p3904
I0
sS'trials2.thisTrialN'
p3905
I111
sg2794
S'./stim/MorphF5_03_orig.jpg'
p3906
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00f\x12@'
tRp3907
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xd2\xbf'
tRp3908
sg30
I0
sg2798
g48
(g589
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3909
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4877591133117676
sS'trials2.thisN'
p3910
I111
sa(dp3911
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3912
g48
(g589
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3913
sS'trials2.thisRepN'
p3914
I0
sS'trials2.thisTrialN'
p3915
I112
sg2794
S'./stim/MorphF7_00_orig.jpg'
p3916
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00f\x12@'
tRp3917
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xd2\xbf'
tRp3918
sg30
I0
sg2798
g48
(g589
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3919
sg32
I1
sg41
g42
sg45
g46
sg33
F1.958733081817627
sS'trials2.thisN'
p3920
I112
sa(dp3921
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3922
g48
(g589
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3923
sS'trials2.thisRepN'
p3924
I0
sS'trials2.thisTrialN'
p3925
I113
sg2794
S'./stim/MorphF2_06_orig.jpg'
p3926
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xee\x11@'
tRp3927
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp3928
sg30
I1
sg2798
g48
(g589
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3929
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83637404441833496
sS'trials2.thisN'
p3930
I113
sa(dp3931
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3932
g48
(g589
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3933
sS'trials2.thisRepN'
p3934
I0
sS'trials2.thisTrialN'
p3935
I114
sg2794
S'./stim/MorphM2_06_orig.jpg'
p3936
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\x12@'
tRp3937
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3938
sg30
I1
sg2798
g48
(g589
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3939
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93690800666809082
sS'trials2.thisN'
p3940
I114
sa(dp3941
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3942
g48
(g589
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3943
sS'trials2.thisRepN'
p3944
I0
sS'trials2.thisTrialN'
p3945
I115
sg2794
S'./stim/MorphM9_00_orig.jpg'
p3946
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10@'
tRp3947
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xbe\xbf'
tRp3948
sg30
I0
sg2798
g48
(g589
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3949
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2066020965576172
sS'trials2.thisN'
p3950
I115
sa(dp3951
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3952
g48
(g589
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3953
sS'trials2.thisRepN'
p3954
I0
sS'trials2.thisTrialN'
p3955
I116
sg2794
S'./stim/MorphM7_09_orig.jpg'
p3956
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp3957
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp3958
sg30
I1
sg2798
g48
(g589
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3959
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9863429069519043
sS'trials2.thisN'
p3960
I116
sa(dp3961
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3962
g48
(g589
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3963
sS'trials2.thisRepN'
p3964
I0
sS'trials2.thisTrialN'
p3965
I117
sg2794
S'./stim/MorphM3_01_orig.jpg'
p3966
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00X\x11@'
tRp3967
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xbe\xbf'
tRp3968
sg30
I1
sg2798
g48
(g589
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3969
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6191539764404297
sS'trials2.thisN'
p3970
I117
sa(dp3971
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3972
g48
(g589
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3973
sS'trials2.thisRepN'
p3974
I0
sS'trials2.thisTrialN'
p3975
I118
sg2794
S'./stim/MorphM1_03_orig.jpg'
p3976
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp3977
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp3978
sg30
I0
sg2798
g48
(g589
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3979
sg32
I1
sg41
g42
sg45
g46
sg33
F2.0433239936828613
sS'trials2.thisN'
p3980
I118
sa(dp3981
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3982
g48
(g589
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3983
sS'trials2.thisRepN'
p3984
I0
sS'trials2.thisTrialN'
p3985
I119
sg2794
S'./stim/MorphM6_03_orig.jpg'
p3986
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x10@'
tRp3987
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3988
sg30
I1
sg2798
g48
(g589
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3989
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2385959625244141
sS'trials2.thisN'
p3990
I119
sa(dp3991
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3992
g48
(g589
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3993
sS'trials2.thisRepN'
p3994
I0
sS'trials2.thisTrialN'
p3995
I120
sg2794
S'./stim/MorphF8_04_orig.jpg'
p3996
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3997
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp3998
sg30
I0
sg2798
g48
(g589
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3999
sg32
I1
sg41
g42
sg45
g46
sg33
F3.6190099716186523
sS'trials2.thisN'
p4000
I120
sa(dp4001
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4002
g48
(g589
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4003
sS'trials2.thisRepN'
p4004
I0
sS'trials2.thisTrialN'
p4005
I121
sg2794
S'./stim/MorphF7_03_orig.jpg'
p4006
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\x0e@'
tRp4007
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4008
sg30
I1
sg2798
g48
(g589
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4009
sg32
I0
sg41
g42
sg45
g46
sg33
F0.78624892234802246
sS'trials2.thisN'
p4010
I121
sa(dp4011
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4012
g48
(g589
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4013
sS'trials2.thisRepN'
p4014
I0
sS'trials2.thisTrialN'
p4015
I122
sg2794
S'./stim/MorphF1_08_orig.jpg'
p4016
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp4017
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4018
sg30
I1
sg2798
g48
(g589
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4019
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2224268913269043
sS'trials2.thisN'
p4020
I122
sa(dp4021
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4022
g48
(g589
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4023
sS'trials2.thisRepN'
p4024
I0
sS'trials2.thisTrialN'
p4025
I123
sg2794
S'./stim/MorphF5_02_orig.jpg'
p4026
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp4027
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4028
sg30
I0
sg2798
g48
(g589
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4029
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0212621688842773
sS'trials2.thisN'
p4030
I123
sa(dp4031
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4032
g48
(g589
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4033
sS'trials2.thisRepN'
p4034
I0
sS'trials2.thisTrialN'
p4035
I124
sg2794
S'./stim/MorphM3_10_orig.jpg'
p4036
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp4037
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4038
sg30
I1
sg2798
g48
(g589
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4039
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4392471313476562
sS'trials2.thisN'
p4040
I124
sa(dp4041
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4042
g48
(g589
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4043
sS'trials2.thisRepN'
p4044
I0
sS'trials2.thisTrialN'
p4045
I125
sg2794
S'./stim/MorphF3_00_orig.jpg'
p4046
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp4047
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4048
sg30
I0
sg2798
g48
(g589
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4049
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9313089847564697
sS'trials2.thisN'
p4050
I125
sa(dp4051
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4052
g48
(g589
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4053
sS'trials2.thisRepN'
p4054
I0
sS'trials2.thisTrialN'
p4055
I126
sg2794
S'./stim/MorphF8_09_orig.jpg'
p4056
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\\\x0c@'
tRp4057
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp4058
sg30
I1
sg2798
g48
(g589
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4059
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4396159648895264
sS'trials2.thisN'
p4060
I126
sa(dp4061
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4062
g48
(g589
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4063
sS'trials2.thisRepN'
p4064
I0
sS'trials2.thisTrialN'
p4065
I127
sg2794
S'./stim/MorphM2_03_orig.jpg'
p4066
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp4067
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4068
sg30
I1
sg2798
g48
(g589
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4069
sg32
I0
sg41
g42
sg45
g46
sg33
F0.71980094909667969
sS'trials2.thisN'
p4070
I127
sa(dp4071
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4072
g48
(g589
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4073
sS'trials2.thisRepN'
p4074
I0
sS'trials2.thisTrialN'
p4075
I128
sg2794
S'./stim/MorphM7_08_orig.jpg'
p4076
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp4077
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4078
sg30
I1
sg2798
g48
(g589
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4079
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2260780334472656
sS'trials2.thisN'
p4080
I128
sa(dp4081
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4082
g48
(g589
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4083
sS'trials2.thisRepN'
p4084
I0
sS'trials2.thisTrialN'
p4085
I129
sg2794
S'./stim/MorphF10_00_orig.jpg'
p4086
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n@'
tRp4087
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp4088
sg30
I1
sg2798
g48
(g589
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4089
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7753949165344238
sS'trials2.thisN'
p4090
I129
sa(dp4091
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4092
g48
(g589
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4093
sS'trials2.thisRepN'
p4094
I0
sS'trials2.thisTrialN'
p4095
I130
sg2794
S'./stim/MorphF9_00_orig.jpg'
p4096
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|\n@'
tRp4097
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4098
sg30
I0
sg2798
g48
(g589
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4099
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0882859230041504
sS'trials2.thisN'
p4100
I130
sa(dp4101
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4102
g48
(g589
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4103
sS'trials2.thisRepN'
p4104
I0
sS'trials2.thisTrialN'
p4105
I131
sg2794
S'./stim/MorphF4_07_orig.jpg'
p4106
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xac\x07@'
tRp4107
sg29
g48
(g50
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp4108
sg30
I1
sg2798
g48
(g589
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4109
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6299760341644287
sS'trials2.thisN'
p4110
I131
sa(dp4111
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4112
g48
(g589
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4113
sS'trials2.thisRepN'
p4114
I0
sS'trials2.thisTrialN'
p4115
I132
sg2794
S'./stim/MorphM2_01_orig.jpg'
p4116
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xac\x07@'
tRp4117
sg29
g48
(g50
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp4118
sg30
I0
sg2798
g48
(g589
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4119
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2553350925445557
sS'trials2.thisN'
p4120
I132
sa(dp4121
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4122
g48
(g589
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4123
sS'trials2.thisRepN'
p4124
I0
sS'trials2.thisTrialN'
p4125
I133
sg2794
S'./stim/MorphM4_08_orig.jpg'
p4126
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe8\x07@'
tRp4127
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp4128
sg30
I1
sg2798
g48
(g589
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4129
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95426392555236816
sS'trials2.thisN'
p4130
I133
sa(dp4131
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4132
g48
(g589
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4133
sS'trials2.thisRepN'
p4134
I0
sS'trials2.thisTrialN'
p4135
I134
sg2794
S'./stim/MorphF6_05_orig.jpg'
p4136
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x08@'
tRp4137
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\xfa\xbf'
tRp4138
sg30
I0
sg2798
g48
(g589
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4139
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3560550212860107
sS'trials2.thisN'
p4140
I134
sa(dp4141
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4142
g48
(g589
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4143
sS'trials2.thisRepN'
p4144
I0
sS'trials2.thisTrialN'
p4145
I135
sg2794
S'./stim/MorphF10_05_orig.jpg'
p4146
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x08@'
tRp4147
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x88\xfd\xbf'
tRp4148
sg30
I1
sg2798
g48
(g589
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4149
sg32
I0
sg41
g42
sg45
g46
sg33
F3.3489658832550049
sS'trials2.thisN'
p4150
I135
sa(dp4151
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4152
g48
(g589
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4153
sS'trials2.thisRepN'
p4154
I0
sS'trials2.thisTrialN'
p4155
I136
sg2794
S'./stim/MorphF9_09_orig.jpg'
p4156
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9c\x08@'
tRp4157
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\xe4\xbf'
tRp4158
sg30
I1
sg2798
g48
(g589
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4159
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83486485481262207
sS'trials2.thisN'
p4160
I136
sa(dp4161
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4162
g48
(g589
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4163
sS'trials2.thisRepN'
p4164
I0
sS'trials2.thisTrialN'
p4165
I137
sg2794
S'./stim/MorphM6_02_orig.jpg'
p4166
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x08@'
tRp4167
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4168
sg30
I0
sg2798
g48
(g589
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4169
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2114949226379395
sS'trials2.thisN'
p4170
I137
sa(dp4171
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4172
g48
(g589
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4173
sS'trials2.thisRepN'
p4174
I0
sS'trials2.thisTrialN'
p4175
I138
sg2794
S'./stim/MorphM5_01_orig.jpg'
p4176
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x08@'
tRp4177
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4178
sg30
I1
sg2798
g48
(g589
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4179
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1720869541168213
sS'trials2.thisN'
p4180
I138
sa(dp4181
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4182
g48
(g589
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4183
sS'trials2.thisRepN'
p4184
I0
sS'trials2.thisTrialN'
p4185
I139
sg2794
S'./stim/MorphF10_10_orig.jpg'
p4186
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp4187
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp4188
sg30
I0
sg2798
g48
(g589
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4189
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3227410316467285
sS'trials2.thisN'
p4190
I139
sa(dp4191
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4192
g48
(g589
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4193
sS'trials2.thisRepN'
p4194
I0
sS'trials2.thisTrialN'
p4195
I140
sg2794
S'./stim/MorphF6_01_orig.jpg'
p4196
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp4197
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4198
sg30
I0
sg2798
g48
(g589
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4199
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0713489055633545
sS'trials2.thisN'
p4200
I140
sa(dp4201
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4202
g48
(g589
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4203
sS'trials2.thisRepN'
p4204
I0
sS'trials2.thisTrialN'
p4205
I141
sg2794
S'./stim/MorphF7_10_orig.jpg'
p4206
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp4207
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x10\xed\xbf'
tRp4208
sg30
I1
sg2798
g48
(g589
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4209
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0201010704040527
sS'trials2.thisN'
p4210
I141
sa(dp4211
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4212
g48
(g589
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4213
sS'trials2.thisRepN'
p4214
I0
sS'trials2.thisTrialN'
p4215
I142
sg2794
S'./stim/MorphM5_07_orig.jpg'
p4216
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp4217
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xae\xbf'
tRp4218
sg30
I1
sg2798
g48
(g589
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4219
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6409330368041992
sS'trials2.thisN'
p4220
I142
sa(dp4221
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4222
g48
(g589
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4223
sS'trials2.thisRepN'
p4224
I0
sS'trials2.thisTrialN'
p4225
I143
sg2794
S'./stim/MorphF10_06_orig.jpg'
p4226
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00V\x13@'
tRp4227
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xc2\xbf'
tRp4228
sg30
I1
sg2798
g48
(g589
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4229
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4071788787841797
sS'trials2.thisN'
p4230
I143
sa(dp4231
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4232
g48
(g589
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4233
sS'trials2.thisRepN'
p4234
I0
sS'trials2.thisTrialN'
p4235
I144
sg2794
S'./stim/MorphM2_04_orig.jpg'
p4236
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xba(@'
tRp4237
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*@'
tRp4238
sg30
I0
sg2798
g48
(g589
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4239
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2384340763092041
sS'trials2.thisN'
p4240
I144
sa(dp4241
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4242
g48
(g589
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4243
sS'trials2.thisRepN'
p4244
I0
sS'trials2.thisTrialN'
p4245
I145
sg2794
S'./stim/MorphM3_02_orig.jpg'
p4246
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x06(@'
tRp4247
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x7f'@"
tRp4248
sg30
I0
sg2798
g48
(g589
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4249
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1946649551391602
sS'trials2.thisN'
p4250
I145
sa(dp4251
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4252
g48
(g589
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4253
sS'trials2.thisRepN'
p4254
I0
sS'trials2.thisTrialN'
p4255
I146
sg2794
S'./stim/MorphF3_07_orig.jpg'
p4256
sg47
g51
sg28
g48
(g50
S"\x00\x00\x00\x00\x00\xf7'@"
tRp4257
sg29
g48
(g50
S"\x00\x00\x00\x00\x00p'@"
tRp4258
sg30
I1
sg2798
g48
(g589
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4259
sg32
I0
sg41
g42
sg45
g46
sg33
F0.93480205535888672
sS'trials2.thisN'
p4260
I146
sa(dp4261
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4262
g48
(g589
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4263
sS'trials2.thisRepN'
p4264
I0
sS'trials2.thisTrialN'
p4265
I147
sg2794
S'./stim/MorphM3_00_orig.jpg'
p4266
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00A)@'
tRp4267
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08&@'
tRp4268
sg30
I0
sg2798
g48
(g589
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4269
sg32
I1
sg41
g42
sg45
g46
sg33
F0.97114300727844238
sS'trials2.thisN'
p4270
I147
sa(dp4271
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4272
g48
(g589
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4273
sS'trials2.thisRepN'
p4274
I0
sS'trials2.thisTrialN'
p4275
I148
sg2794
S'./stim/MorphF1_07_orig.jpg'
p4276
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xab(@'
tRp4277
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x81%@'
tRp4278
sg30
I1
sg2798
g48
(g589
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4279
sg32
I0
sg41
g42
sg45
g46
sg33
F3.6683259010314941
sS'trials2.thisN'
p4280
I148
sa(dp4281
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4282
g48
(g589
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4283
sS'trials2.thisRepN'
p4284
I0
sS'trials2.thisTrialN'
p4285
I149
sg2794
S'./stim/MorphF5_09_orig.jpg'
p4286
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00~(@'
tRp4287
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#@'
tRp4288
sg30
I1
sg2798
g48
(g589
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4289
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0716049671173096
sS'trials2.thisN'
p4290
I149
sa(dp4291
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4292
g48
(g589
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4293
sS'trials2.thisRepN'
p4294
I0
sS'trials2.thisTrialN'
p4295
I150
sg2794
S'./stim/MorphF6_00_orig.jpg'
p4296
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&@'
tRp4297
sg29
g48
(g50
S'\x00\x00\x00\x00\x00G#@'
tRp4298
sg30
I0
sg2798
g48
(g589
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4299
sg32
I1
sg41
g42
sg45
g46
sg33
F0.83790302276611328
sS'trials2.thisN'
p4300
I150
sa(dp4301
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4302
g48
(g589
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4303
sS'trials2.thisRepN'
p4304
I0
sS'trials2.thisTrialN'
p4305
I151
sg2794
S'./stim/MorphF5_00_orig.jpg'
p4306
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\n$@'
tRp4307
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0 @'
tRp4308
sg30
I1
sg2798
g48
(g589
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4309
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90280699729919434
sS'trials2.thisN'
p4310
I151
sa(dp4311
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4312
g48
(g589
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4313
sS'trials2.thisRepN'
p4314
I0
sS'trials2.thisTrialN'
p4315
I152
sg2794
S'./stim/MorphF4_10_orig.jpg'
p4316
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbf#@'
tRp4317
sg29
g48
(g50
S'\x00\x00\x00\x00\x00w @'
tRp4318
sg30
I1
sg2798
g48
(g589
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4319
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6078810691833496
sS'trials2.thisN'
p4320
I152
sa(dp4321
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4322
g48
(g589
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4323
sS'trials2.thisRepN'
p4324
I0
sS'trials2.thisTrialN'
p4325
I153
sg2794
S'./stim/MorphM8_02_orig.jpg'
p4326
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00s$@'
tRp4327
sg29
g48
(g50
S'\x00\x00\x00\x00\x00w @'
tRp4328
sg30
I1
sg2798
g48
(g589
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4329
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0217850208282471
sS'trials2.thisN'
p4330
I153
sa(dp4331
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4332
g48
(g589
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4333
sS'trials2.thisRepN'
p4334
I0
sS'trials2.thisTrialN'
p4335
I154
sg2794
S'./stim/MorphF8_03_orig.jpg'
p4336
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00t#@'
tRp4337
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp4338
sg30
I0
sg2798
g48
(g589
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4339
sg32
I1
sg41
g42
sg45
g46
sg33
F0.93624401092529297
sS'trials2.thisN'
p4340
I154
sa(dp4341
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4342
g48
(g589
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4343
sS'trials2.thisRepN'
p4344
I0
sS'trials2.thisTrialN'
p4345
I155
sg2794
S'./stim/MorphM7_02_orig.jpg'
p4346
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c"@'
tRp4347
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa6\x1d@'
tRp4348
sg30
I0
sg2798
g48
(g589
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4349
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0877830982208252
sS'trials2.thisN'
p4350
I155
sa(dp4351
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4352
g48
(g589
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4353
sS'trials2.thisRepN'
p4354
I0
sS'trials2.thisTrialN'
p4355
I156
sg2794
S'./stim/MorphM10_04_orig.jpg'
p4356
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00v!@'
tRp4357
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x1c@'
tRp4358
sg30
I1
sg2798
g48
(g589
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4359
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1040568351745605
sS'trials2.thisN'
p4360
I156
sa(dp4361
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4362
g48
(g589
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4363
sS'trials2.thisRepN'
p4364
I0
sS'trials2.thisTrialN'
p4365
I157
sg2794
S'./stim/MorphF3_02_orig.jpg'
p4366
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x15(@'
tRp4367
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\n\x14@'
tRp4368
sg30
I0
sg2798
g48
(g589
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4369
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2442810535430908
sS'trials2.thisN'
p4370
I157
sa(dp4371
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4372
g48
(g589
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4373
sS'trials2.thisRepN'
p4374
I0
sS'trials2.thisTrialN'
p4375
I158
sg2794
S'./stim/MorphM10_10_orig.jpg'
p4376
sg47
g51
sg28
g48
(g50
S"\x00\x00\x00\x00\x00\xd9'@"
tRp4377
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xec\x13@'
tRp4378
sg30
I1
sg2798
g48
(g589
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4379
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88656306266784668
sS'trials2.thisN'
p4380
I158
sa(dp4381
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4382
g48
(g589
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4383
sS'trials2.thisRepN'
p4384
I0
sS'trials2.thisTrialN'
p4385
I159
sg2794
S'./stim/MorphF4_04_orig.jpg'
p4386
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9f%@'
tRp4387
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\x04@'
tRp4388
sg30
I1
sg2798
g48
(g589
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4389
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4712028503417969
sS'trials2.thisN'
p4390
I159
sa(dp4391
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4392
g48
(g589
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4393
sS'trials2.thisRepN'
p4394
I0
sS'trials2.thisTrialN'
p4395
I160
sg2794
S'./stim/MorphF9_04_orig.jpg'
p4396
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00~(@'
tRp4397
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xf5?'
tRp4398
sg30
I1
sg2798
g48
(g589
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4399
sg32
I0
sg41
g42
sg45
g46
sg33
F1.573491096496582
sS'trials2.thisN'
p4400
I160
sa(dp4401
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4402
g48
(g589
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4403
sS'trials2.thisRepN'
p4404
I0
sS'trials2.thisTrialN'
p4405
I161
sg2794
S'./stim/MorphM7_01_orig.jpg'
p4406
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc9(@'
tRp4407
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4408
sg30
I1
sg2798
g48
(g589
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4409
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9932429790496826
sS'trials2.thisN'
p4410
I161
sa(dp4411
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4412
g48
(g589
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4413
sS'trials2.thisRepN'
p4414
I0
sS'trials2.thisTrialN'
p4415
I162
sg2794
S'./stim/MorphM1_09_orig.jpg'
p4416
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00_)@'
tRp4417
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\xfc\xbf'
tRp4418
sg30
I1
sg2798
g48
(g589
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4419
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0386929512023926
sS'trials2.thisN'
p4420
I162
sa(dp4421
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4422
g48
(g589
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4423
sS'trials2.thisRepN'
p4424
I0
sS'trials2.thisTrialN'
p4425
I163
sg2794
S'./stim/MorphF4_08_orig.jpg'
p4426
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00{+@'
tRp4427
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp4428
sg30
I1
sg2798
g48
(g589
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4429
sg32
I0
sg41
g42
sg45
g46
sg33
F0.8526759147644043
sS'trials2.thisN'
p4430
I163
sa(dp4431
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4432
g48
(g589
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4433
sS'trials2.thisRepN'
p4434
I0
sS'trials2.thisTrialN'
p4435
I164
sg2794
S'./stim/MorphF9_02_orig.jpg'
p4436
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfe/@'
tRp4437
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb6\x1c\xc0'
tRp4438
sg30
I0
sg2798
g48
(g589
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4439
sg32
I1
sg41
g42
sg45
g46
sg33
F3.4004459381103516
sS'trials2.thisN'
p4440
I164
sa(dp4441
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4442
g48
(g589
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4443
sS'trials2.thisRepN'
p4444
I0
sS'trials2.thisTrialN'
p4445
I165
sg2794
S'./stim/MorphF5_08_orig.jpg'
p4446
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00-.@'
tRp4447
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\x1e\xc0'
tRp4448
sg30
I1
sg2798
g48
(g589
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4449
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83652496337890625
sS'trials2.thisN'
p4450
I165
sa(dp4451
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4452
g48
(g589
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4453
sS'trials2.thisRepN'
p4454
I0
sS'trials2.thisTrialN'
p4455
I166
sg2794
S'./stim/MorphF9_10_orig.jpg'
p4456
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x8c1@'
tRp4457
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x05)\xc0'
tRp4458
sg30
I1
sg2798
g48
(g589
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4459
sg32
I0
sg41
g42
sg45
g46
sg33
F1.121351957321167
sS'trials2.thisN'
p4460
I166
sa(dp4461
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4462
g48
(g589
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4463
sS'trials2.thisRepN'
p4464
I0
sS'trials2.thisTrialN'
p4465
I167
sg2794
S'./stim/MorphF4_01_orig.jpg'
p4466
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4467
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4468
sg30
I0
sg2798
g48
(g589
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4469
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4742131233215332
sS'trials2.thisN'
p4470
I167
sa(dp4471
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4472
g48
(g589
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4473
sS'trials2.thisRepN'
p4474
I0
sS'trials2.thisTrialN'
p4475
I168
sg2794
S'./stim/MorphF6_07_orig.jpg'
p4476
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfd1@'
tRp4477
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4478
sg30
I1
sg2798
g48
(g589
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4479
sg32
I0
sg41
g42
sg45
g46
sg33
F0.80292415618896484
sS'trials2.thisN'
p4480
I168
sa(dp4481
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4482
g48
(g589
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4483
sS'trials2.thisRepN'
p4484
I0
sS'trials2.thisTrialN'
p4485
I169
sg2794
S'./stim/MorphF5_06_orig.jpg'
p4486
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80"2@'
tRp4487
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp4488
sg30
I1
sg2798
g48
(g589
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4489
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1884529590606689
sS'trials2.thisN'
p4490
I169
sa(dp4491
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4492
g48
(g589
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4493
sS'trials2.thisRepN'
p4494
I0
sS'trials2.thisTrialN'
p4495
I170
sg2794
S'./stim/MorphF4_03_orig.jpg'
p4496
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x051@'
tRp4497
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4498
sg30
I0
sg2798
g48
(g589
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4499
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4063658714294434
sS'trials2.thisN'
p4500
I170
sa(dp4501
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4502
g48
(g589
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4503
sS'trials2.thisRepN'
p4504
I0
sS'trials2.thisTrialN'
p4505
I171
sg2794
S'./stim/MorphM1_05_orig.jpg'
p4506
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xd80@'
tRp4507
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4508
sg30
I0
sg2798
g48
(g589
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4509
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4288561344146729
sS'trials2.thisN'
p4510
I171
sa(dp4511
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4512
g48
(g589
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4513
sS'trials2.thisRepN'
p4514
I0
sS'trials2.thisTrialN'
p4515
I172
sg2794
S'./stim/MorphF10_09_orig.jpg'
p4516
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xba0@'
tRp4517
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4518
sg30
I1
sg2798
g48
(g589
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4519
sg32
I0
sg41
g42
sg45
g46
sg33
F0.78619289398193359
sS'trials2.thisN'
p4520
I172
sa(dp4521
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4522
g48
(g589
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4523
sS'trials2.thisRepN'
p4524
I0
sS'trials2.thisTrialN'
p4525
I173
sg2794
S'./stim/MorphM7_06_orig.jpg'
p4526
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe00@'
tRp4527
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4528
sg30
I1
sg2798
g48
(g589
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4529
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3451969623565674
sS'trials2.thisN'
p4530
I173
sa(dp4531
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4532
g48
(g589
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4533
sS'trials2.thisRepN'
p4534
I0
sS'trials2.thisTrialN'
p4535
I174
sg2794
S'./stim/MorphF2_10_orig.jpg'
p4536
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x051@'
tRp4537
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4538
sg30
I1
sg2798
g48
(g589
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4539
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83687591552734375
sS'trials2.thisN'
p4540
I174
sa(dp4541
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4542
g48
(g589
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4543
sS'trials2.thisRepN'
p4544
I0
sS'trials2.thisTrialN'
p4545
I175
sg2794
S'./stim/MorphM8_08_orig.jpg'
p4546
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00X1@'
tRp4547
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp4548
sg30
I1
sg2798
g48
(g589
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4549
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0882308483123779
sS'trials2.thisN'
p4550
I175
sa(dp4551
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4552
g48
(g589
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4553
sS'trials2.thisRepN'
p4554
I0
sS'trials2.thisTrialN'
p4555
I176
sg2794
S'./stim/MorphM9_06_orig.jpg'
p4556
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x8c1@'
tRp4557
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4558
sg30
I0
sg2798
g48
(g589
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4559
sg32
I1
sg41
g42
sg45
g46
sg33
F1.641071081161499
sS'trials2.thisN'
p4560
I176
sa(dp4561
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4562
g48
(g589
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4563
sS'trials2.thisRepN'
p4564
I0
sS'trials2.thisTrialN'
p4565
I177
sg2794
S'./stim/MorphF2_08_orig.jpg'
p4566
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb21@'
tRp4567
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp4568
sg30
I1
sg2798
g48
(g589
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4569
sg32
I0
sg41
g42
sg45
g46
sg33
F0.63541603088378906
sS'trials2.thisN'
p4570
I177
sa(dp4571
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4572
g48
(g589
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4573
sS'trials2.thisRepN'
p4574
I0
sS'trials2.thisTrialN'
p4575
I178
sg2794
S'./stim/MorphM3_03_orig.jpg'
p4576
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xdf1@'
tRp4577
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x13*\xc0'
tRp4578
sg30
I0
sg2798
g48
(g589
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4579
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6246590614318848
sS'trials2.thisN'
p4580
I178
sa(dp4581
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4582
g48
(g589
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4583
sS'trials2.thisRepN'
p4584
I0
sS'trials2.thisTrialN'
p4585
I179
sg2794
S'./stim/MorphF3_05_orig.jpg'
p4586
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf51@'
tRp4587
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x04*\xc0'
tRp4588
sg30
I1
sg2798
g48
(g589
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4589
sg32
I0
sg41
g42
sg45
g46
sg33
F1.070979118347168
sS'trials2.thisN'
p4590
I179
sa(dp4591
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4592
g48
(g589
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4593
sS'trials2.thisRepN'
p4594
I0
sS'trials2.thisTrialN'
p4595
I180
sg2794
S'./stim/MorphF10_01_orig.jpg'
p4596
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0092@'
tRp4597
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x04*\xc0'
tRp4598
sg30
I0
sg2798
g48
(g589
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4599
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5776059627532959
sS'trials2.thisN'
p4600
I180
sa(dp4601
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4602
g48
(g589
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4603
sS'trials2.thisRepN'
p4604
I0
sS'trials2.thisTrialN'
p4605
I181
sg2794
S'./stim/MorphF5_04_orig.jpg'
p4606
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x8012@'
tRp4607
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x13*\xc0'
tRp4608
sg30
I0
sg2798
g48
(g589
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4609
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8816308975219727
sS'trials2.thisN'
p4610
I181
sa(dp4611
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4612
g48
(g589
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4613
sS'trials2.thisRepN'
p4614
I0
sS'trials2.thisTrialN'
p4615
I182
sg2794
S'./stim/MorphF7_09_orig.jpg'
p4616
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H2@'
tRp4617
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp4618
sg30
I1
sg2798
g48
(g589
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4619
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85145211219787598
sS'trials2.thisN'
p4620
I182
sa(dp4621
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4622
g48
(g589
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4623
sS'trials2.thisRepN'
p4624
I0
sS'trials2.thisTrialN'
p4625
I183
sg2794
S'./stim/MorphM2_05_orig.jpg'
p4626
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80^2@'
tRp4627
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp4628
sg30
I0
sg2798
g48
(g589
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4629
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1388950347900391
sS'trials2.thisN'
p4630
I183
sa(dp4631
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4632
g48
(g589
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4633
sS'trials2.thisRepN'
p4634
I0
sS'trials2.thisTrialN'
p4635
I184
sg2794
S'./stim/MorphM8_09_orig.jpg'
p4636
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80^2@'
tRp4637
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x04*\xc0'
tRp4638
sg30
I1
sg2798
g48
(g589
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4639
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75292181968688965
sS'trials2.thisN'
p4640
I184
sa(dp4641
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4642
g48
(g589
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4643
sS'trials2.thisRepN'
p4644
I0
sS'trials2.thisTrialN'
p4645
I185
sg2794
S'./stim/MorphM4_01_orig.jpg'
p4646
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00f2@'
tRp4647
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp4648
sg30
I0
sg2798
g48
(g589
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4649
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3559198379516602
sS'trials2.thisN'
p4650
I185
sa(dp4651
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4652
g48
(g589
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4653
sS'trials2.thisRepN'
p4654
I0
sS'trials2.thisTrialN'
p4655
I186
sg2794
S'./stim/MorphF3_01_orig.jpg'
p4656
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80^2@'
tRp4657
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp4658
sg30
I0
sg2798
g48
(g589
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4659
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5741209983825684
sS'trials2.thisN'
p4660
I186
sa(dp4661
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4662
g48
(g589
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4663
sS'trials2.thisRepN'
p4664
I0
sS'trials2.thisTrialN'
p4665
I187
sg2794
S'./stim/MorphM1_02_orig.jpg'
p4666
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80^2@'
tRp4667
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp4668
sg30
I0
sg2798
g48
(g589
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4669
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0209980010986328
sS'trials2.thisN'
p4670
I187
sa(dp4671
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4672
g48
(g589
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4673
sS'trials2.thisRepN'
p4674
I0
sS'trials2.thisTrialN'
p4675
I188
sg2794
S'./stim/MorphM8_01_orig.jpg'
p4676
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00W2@'
tRp4677
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp4678
sg30
I1
sg2798
g48
(g589
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4679
sg32
I0
sg41
g42
sg45
g46
sg33
F4.5899438858032227
sS'trials2.thisN'
p4680
I188
sa(dp4681
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4682
g48
(g589
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4683
sS'trials2.thisRepN'
p4684
I0
sS'trials2.thisTrialN'
p4685
I189
sg2794
S'./stim/MorphM6_05_orig.jpg'
p4686
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x132@'
tRp4687
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8(\xc0'
tRp4688
sg30
I1
sg2798
g48
(g589
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4689
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2100479602813721
sS'trials2.thisN'
p4690
I189
sa(dp4691
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4692
g48
(g589
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4693
sS'trials2.thisRepN'
p4694
I0
sS'trials2.thisTrialN'
p4695
I190
sg2794
S'./stim/MorphM9_09_orig.jpg'
p4696
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c2@'
tRp4697
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc9(\xc0'
tRp4698
sg30
I1
sg2798
g48
(g589
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4699
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90234112739562988
sS'trials2.thisN'
p4700
I190
sa(dp4701
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4702
g48
(g589
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4703
sS'trials2.thisRepN'
p4704
I0
sS'trials2.thisTrialN'
p4705
I191
sg2794
S'./stim/MorphM6_06_orig.jpg'
p4706
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c2@'
tRp4707
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc9(\xc0'
tRp4708
sg30
I1
sg2798
g48
(g589
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4709
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2725279331207275
sS'trials2.thisN'
p4710
I191
sa(dp4711
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4712
g48
(g589
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4713
sS'trials2.thisRepN'
p4714
I0
sS'trials2.thisTrialN'
p4715
I192
sg2794
S'./stim/MorphF4_09_orig.jpg'
p4716
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H2@'
tRp4717
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8d(\xc0'
tRp4718
sg30
I1
sg2798
g48
(g589
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4719
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9886631965637207
sS'trials2.thisN'
p4720
I192
sa(dp4721
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4722
g48
(g589
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4723
sS'trials2.thisRepN'
p4724
I0
sS'trials2.thisTrialN'
p4725
I193
sg2794
S'./stim/MorphM2_08_orig.jpg'
p4726
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80@2@'
tRp4727
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8(\xc0'
tRp4728
sg30
I0
sg2798
g48
(g589
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4729
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0013837814331055
sS'trials2.thisN'
p4730
I193
sa(dp4731
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4732
g48
(g589
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4733
sS'trials2.thisRepN'
p4734
I0
sS'trials2.thisTrialN'
p4735
I194
sg2794
S'./stim/MorphF2_04_orig.jpg'
p4736
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00W2@'
tRp4737
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe7(\xc0'
tRp4738
sg30
I1
sg2798
g48
(g589
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4739
sg32
I0
sg41
g42
sg45
g46
sg33
F0.7692110538482666
sS'trials2.thisN'
p4740
I194
sa(dp4741
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4742
g48
(g589
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4743
sS'trials2.thisRepN'
p4744
I0
sS'trials2.thisTrialN'
p4745
I195
sg2794
S'./stim/MorphM9_01_orig.jpg'
p4746
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc02@'
tRp4747
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B(\xc0'
tRp4748
sg30
I0
sg2798
g48
(g589
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4749
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1030299663543701
sS'trials2.thisN'
p4750
I195
sa(dp4751
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4752
g48
(g589
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4753
sS'trials2.thisRepN'
p4754
I0
sS'trials2.thisTrialN'
p4755
I196
sg2794
S'./stim/MorphM6_08_orig.jpg'
p4756
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xb82@'
tRp4757
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Q(\xc0'
tRp4758
sg30
I1
sg2798
g48
(g589
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4759
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0549278259277344
sS'trials2.thisN'
p4760
I196
sa(dp4761
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4762
g48
(g589
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4763
sS'trials2.thisRepN'
p4764
I0
sS'trials2.thisTrialN'
p4765
I197
sg2794
S'./stim/MorphF9_03_orig.jpg'
p4766
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc02@'
tRp4767
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B(\xc0'
tRp4768
sg30
I0
sg2798
g48
(g589
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4769
sg32
I1
sg41
g42
sg45
g46
sg33
F0.92025089263916016
sS'trials2.thisN'
p4770
I197
sa(dp4771
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4772
g48
(g589
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4773
sS'trials2.thisRepN'
p4774
I0
sS'trials2.thisTrialN'
p4775
I198
sg2794
S'./stim/MorphM6_04_orig.jpg'
p4776
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xc72@'
tRp4777
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B(\xc0'
tRp4778
sg30
I1
sg2798
g48
(g589
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4779
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0193140506744385
sS'trials2.thisN'
p4780
I198
sa(dp4781
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4782
g48
(g589
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4783
sS'trials2.thisRepN'
p4784
I0
sS'trials2.thisTrialN'
p4785
I199
sg2794
S'./stim/MorphM3_06_orig.jpg'
p4786
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcf2@'
tRp4787
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp4788
sg30
I1
sg2798
g48
(g589
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4789
sg32
I0
sg41
g42
sg45
g46
sg33
F1.775521993637085
sS'trials2.thisN'
p4790
I199
sa(dp4791
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4792
g48
(g589
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4793
sS'trials2.thisRepN'
p4794
I0
sS'trials2.thisTrialN'
p4795
I200
sg2794
S'./stim/MorphF10_04_orig.jpg'
p4796
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcf2@'
tRp4797
sg29
g48
(g50
S'\x00\x00\x00\x00\x003(\xc0'
tRp4798
sg30
I1
sg2798
g48
(g589
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4799
sg32
I0
sg41
g42
sg45
g46
sg33
F0.8363189697265625
sS'trials2.thisN'
p4800
I200
sa(dp4801
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4802
g48
(g589
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4803
sS'trials2.thisRepN'
p4804
I0
sS'trials2.thisTrialN'
p4805
I201
sg2794
S'./stim/MorphF5_10_orig.jpg'
p4806
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xde2@'
tRp4807
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B(\xc0'
tRp4808
sg30
I1
sg2798
g48
(g589
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4809
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3228671550750732
sS'trials2.thisN'
p4810
I201
sa(dp4811
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4812
g48
(g589
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4813
sS'trials2.thisRepN'
p4814
I0
sS'trials2.thisTrialN'
p4815
I202
sg2794
S'./stim/MorphF8_05_orig.jpg'
p4816
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc02@'
tRp4817
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Q(\xc0'
tRp4818
sg30
I1
sg2798
g48
(g589
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4819
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7642760276794434
sS'trials2.thisN'
p4820
I202
sa(dp4821
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4822
g48
(g589
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4823
sS'trials2.thisRepN'
p4824
I0
sS'trials2.thisTrialN'
p4825
I203
sg2794
S'./stim/MorphM2_07_orig.jpg'
p4826
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf42@'
tRp4827
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf6(\xc0'
tRp4828
sg30
I1
sg2798
g48
(g589
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4829
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3789129257202148
sS'trials2.thisN'
p4830
I203
sa(dp4831
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4832
g48
(g589
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4833
sS'trials2.thisRepN'
p4834
I0
sS'trials2.thisTrialN'
p4835
I204
sg2794
S'./stim/MorphF2_02_orig.jpg'
p4836
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x033@'
tRp4837
sg29
g48
(g50
S'\x00\x00\x00\x00\x00A)\xc0'
tRp4838
sg30
I1
sg2798
g48
(g589
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4839
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2385168075561523
sS'trials2.thisN'
p4840
I204
sa(dp4841
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4842
g48
(g589
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4843
sS'trials2.thisRepN'
p4844
I0
sS'trials2.thisTrialN'
p4845
I205
sg2794
S'./stim/MorphF6_10_orig.jpg'
p4846
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xc72@'
tRp4847
sg29
g48
(g50
S'\x00\x00\x00\x00\x00})\xc0'
tRp4848
sg30
I1
sg2798
g48
(g589
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4849
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7081849575042725
sS'trials2.thisN'
p4850
I205
sa(dp4851
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4852
g48
(g589
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4853
sS'trials2.thisRepN'
p4854
I0
sS'trials2.thisTrialN'
p4855
I206
sg2794
S'./stim/MorphF8_10_orig.jpg'
p4856
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa92@'
tRp4857
sg29
g48
(g50
S'\x00\x00\x00\x00\x00_)\xc0'
tRp4858
sg30
I1
sg2798
g48
(g589
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4859
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0703918933868408
sS'trials2.thisN'
p4860
I206
sa(dp4861
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4862
g48
(g589
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4863
sS'trials2.thisRepN'
p4864
I0
sS'trials2.thisTrialN'
p4865
I207
sg2794
S'./stim/MorphM9_03_orig.jpg'
p4866
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00W2@'
tRp4867
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp4868
sg30
I0
sg2798
g48
(g589
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4869
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2389340400695801
sS'trials2.thisN'
p4870
I207
sa(dp4871
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4872
g48
(g589
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4873
sS'trials2.thisRepN'
p4874
I0
sS'trials2.thisTrialN'
p4875
I208
sg2794
S'./stim/MorphM2_10_orig.jpg'
p4876
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x123@'
tRp4877
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4878
sg30
I1
sg2798
g48
(g589
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4879
sg32
I0
sg41
g42
sg45
g46
sg33
F0.73558497428894043
sS'trials2.thisN'
p4880
I208
sa(dp4881
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4882
g48
(g589
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4883
sS'trials2.thisRepN'
p4884
I0
sS'trials2.thisTrialN'
p4885
I209
sg2794
S'./stim/MorphM1_08_orig.jpg'
p4886
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x8a3@'
tRp4887
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp4888
sg30
I1
sg2798
g48
(g589
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4889
sg32
I0
sg41
g42
sg45
g46
sg33
F7.3569221496582031
sS'trials2.thisN'
p4890
I209
sa(dp4891
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4892
g48
(g589
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4893
sS'trials2.thisRepN'
p4894
I0
sS'trials2.thisTrialN'
p4895
I210
sg2794
S'./stim/MorphF6_08_orig.jpg'
p4896
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00t3@'
tRp4897
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp4898
sg30
I1
sg2798
g48
(g589
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4899
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4723160266876221
sS'trials2.thisN'
p4900
I210
sa(dp4901
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4902
g48
(g589
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4903
sS'trials2.thisRepN'
p4904
I0
sS'trials2.thisTrialN'
p4905
I211
sg2794
S'./stim/MorphF1_10_orig.jpg'
p4906
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbf3@'
tRp4907
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xda&\xc0'
tRp4908
sg30
I1
sg2798
g48
(g589
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4909
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0261209011077881
sS'trials2.thisN'
p4910
I211
sa(dp4911
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4912
g48
(g589
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4913
sS'trials2.thisRepN'
p4914
I0
sS'trials2.thisTrialN'
p4915
I212
sg2794
S'./stim/MorphM8_00_orig.jpg'
p4916
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x024@'
tRp4917
sg29
g48
(g50
S"\x00\x00\x00\x00\x00%'\xc0"
tRp4918
sg30
I1
sg2798
g48
(g589
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4919
sg32
I0
sg41
g42
sg45
g46
sg33
F0.87059116363525391
sS'trials2.thisN'
p4920
I212
sa(dp4921
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4922
g48
(g589
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4923
sS'trials2.thisRepN'
p4924
I0
sS'trials2.thisTrialN'
p4925
I213
sg2794
S'./stim/MorphF6_06_orig.jpg'
p4926
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xdd3@'
tRp4927
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp4928
sg30
I1
sg2798
g48
(g589
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4929
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1890799999237061
sS'trials2.thisN'
p4930
I213
sa(dp4931
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4932
g48
(g589
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4933
sS'trials2.thisRepN'
p4934
I0
sS'trials2.thisTrialN'
p4935
I214
sg2794
S'./stim/MorphM3_07_orig.jpg'
p4936
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf33@'
tRp4937
sg29
g48
(g50
S"\x00\x00\x00\x00\x00R'\xc0"
tRp4938
sg30
I1
sg2798
g48
(g589
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4939
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2205319404602051
sS'trials2.thisN'
p4940
I214
sa(dp4941
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4942
g48
(g589
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4943
sS'trials2.thisRepN'
p4944
I0
sS'trials2.thisTrialN'
p4945
I215
sg2794
S'./stim/MorphM7_05_orig.jpg'
p4946
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80M4@'
tRp4947
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8(\xc0'
tRp4948
sg30
I1
sg2798
g48
(g589
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4949
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5375828742980957
sS'trials2.thisN'
p4950
I215
sa(dp4951
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4952
g48
(g589
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4953
sS'trials2.thisRepN'
p4954
I0
sS'trials2.thisTrialN'
p4955
I216
sg2794
S'./stim/MorphF7_01_orig.jpg'
p4956
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80M4@'
tRp4957
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8(\xc0'
tRp4958
sg30
I1
sg2798
g48
(g589
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4959
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2557590007781982
sS'trials2.thisN'
p4960
I216
sa(dp4961
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4962
g48
(g589
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4963
sS'trials2.thisRepN'
p4964
I0
sS'trials2.thisTrialN'
p4965
I217
sg2794
S'./stim/MorphM9_04_orig.jpg'
p4966
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80M4@'
tRp4967
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P)\xc0'
tRp4968
sg30
I1
sg2798
g48
(g589
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4969
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9932219982147217
sS'trials2.thisN'
p4970
I217
sa(dp4971
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4972
g48
(g589
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4973
sS'trials2.thisRepN'
p4974
I0
sS'trials2.thisTrialN'
p4975
I218
sg2794
S'./stim/MorphF10_07_orig.jpg'
p4976
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00F4@'
tRp4977
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp4978
sg30
I1
sg2798
g48
(g589
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4979
sg32
I0
sg41
g42
sg45
g46
sg33
F0.81986880302429199
sS'trials2.thisN'
p4980
I218
sa(dp4981
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4982
g48
(g589
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4983
sS'trials2.thisRepN'
p4984
I0
sS'trials2.thisTrialN'
p4985
I219
sg2794
S'./stim/MorphM10_00_orig.jpg'
p4986
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0074@'
tRp4987
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp4988
sg30
I0
sg2798
g48
(g589
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4989
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4575607776641846
sS'trials2.thisN'
p4990
I219
sa(dp4991
g44
g11
sg43
VG
sg36
S'return'
p4992
sg41
g42
sg37
F2.7779889106750488
sg45
g46
sg47
g51
sasS'loops'
p4993
(lp4994
g1
(cpsychopy.data
TrialHandler
p4995
g3
NtRp4996
(dp4997
S'origin'
p4998
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p4999
sS'thisTrial'
p5000
(lp5001
sS'_exp'
p5002
I140447403279696
sg10
S'basicLoop'
p5003
sg6
S'/home/labor/faces/emoFaces.py'
p5004
sS'thisRepN'
p5005
I1
sg38
I01
sg39
g40
sS'data'
p5006
g1
(cpsychopy.data
DataHandler
p5007
c__builtin__
dict
p5008
(dp5009
g16
cnumpy.core.multiarray
_reconstruct
p5010
(cnumpy
ndarray
p5011
(I0
tS'b'
tRp5012
(I1
(I84
I1
tg49
(S'O8'
I0
I1
tRp5013
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5014
NaNaNag169
ag74
aNaNaNaNaNag169
ag74
aNaNaNaNaNag169
ag74
ag169
aNaNaNaNag169
aNaNaNaNaNaNag169
ag74
aNaNaNaNaNag169
aNaNaNaNaNaNag169
aNaNaNaNaNaNag169
ag74
aNaNaNaNaNag169
ag74
aNaNaNaNaNag169
aNaNaNaNaNaNag169
ag74
aNaNaNaNaNag169
ag74
aNaNatbsg18
g5010
(g5011
(I0
tS'b'
tRp5015
(I1
(I84
I1
tg5013
I00
(lp5016
g94
ag94
aNaNaNaNaNag94
aNag101
aNaNaNaNag101
aNag101
aNaNaNaNaNaNag101
aNag94
aNaNag94
aNag101
aNaNaNaNag94
aNag101
aNag94
aNaNag94
aNag101
aNag94
aNaNag94
ag101
ag101
aNaNaNaNag94
aNag101
aNaNaNaNag94
aNag101
aNag101
aNaNag94
aNag101
aNaNaNaNag94
ag94
ag101
aNaNag101
aNatbsg21
g5010
(g5011
(I0
tS'b'
tRp5017
(I1
(I84
I1
tg5013
I00
(lp5018
NaNaF3.29
aNaNaF1.2050000000000001
aNaNaF8.048
aNaNaNaF2.3149999999999999
aNaNaF3.2360000000000002
aNaNaNaNaNaF2.3159999999999998
aF1.5129999999999999
aNaNaNaF3.0840000000000001
aNaNaF3.9430000000000001
aNaNaNaF6.7699999999999996
aNaNaF7.0279999999999996
aNaNaNaF2.2799999999999998
aNaNaF7.6440000000000001
aNaNaNaF1.8180000000000001
aNaNaNaNaNaNaF2.0459999999999998
aNaNaF6.7229999999999999
aNaNaNaF1.327
aNaNaF4.3780000000000001
aNaNaNaF5.8200000000000003
aS'14'
p5019
aNaF2.629
aNaNaNaF1.865
aNaNaNaNaNaNaNaNatbsS'ran'
p5020
cnumpy.ma.core
_mareconstruct
p5021
(cnumpy.ma.core
MaskedArray
p5022
g5011
(I0
tp5023
S'b'
tRp5024
(I1
(I84
I1
tg49
(S'f4'
I0
I1
tRp5025
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5010
(g5011
(I0
tS'b'
tRp5026
(I1
(I84
I1
tg5013
I00
(lp5027
NaNaNaF0.80900000000000005
aF2.6579999999999999
aNaNaNaNaNaF0.76600000000000001
aF1.482
aNaNaNaNaNaF1.448
aF3.8929999999999998
aF1.431
aNaNaNaNaF1.599
aNaNaNaNaNaNaF1.0189999999999999
aF4.5469999999999997
aNaNaNaNaNaF1.296
aNaNaNaNaNaNaF0.91800000000000004
aNaNaNaNaNaNaF3.0710000000000002
aF2.7360000000000002
aNaNaNaNaNaF1.044
aF3.3889999999999998
aNaNaNaNaNaF2.786
aNaNaNaNaNaNaF1.982
aF1.514
aNaNaNaNaNaF0.40699999999999997
aF5.2670000000000003
aNaNatbsg23
g5010
(g5011
(I0
tS'b'
tRp5028
(I1
(I84
I1
tg5013
I00
(lp5029
NaNaNaNaNaNaF1.272
aNaNaNaNaNaNaF1.0549999999999999
aNaNaNaNaNaNaF1.8919999999999999
aNaNaNaNaNaNaF1.597
aNaNaNaNaNaNaF2.0640000000000001
aNaNaNaNaNaNaF1.5609999999999999
aNaNaNaNaNaNaF2.2650000000000001
aNaNaNaNaNaNaF2.6659999999999999
aNaNaNaNaNaNaF1.5600000000000001
aNaNaNaNaNaNaNaNaNaNaNaNaNaF0.76200000000000001
aNaNaNaNaNaNaF14.266999999999999
atbsg22
g5010
(g5011
(I0
tS'b'
tRp5030
(I1
(I84
I1
tg5013
I00
(lp5031
NaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNag109
aNaNaNaNaNaNaNaNaNaNaNaNaNag109
aNaNaNaNaNaNag109
atbsg19
g5010
(g5011
(I0
tS'b'
tRp5032
(I1
(I84
I1
tg5013
I00
(lp5033
F3.843
aF11.443
aNaNaNaNaNaF2.5649999999999999
aNaF2.0630000000000002
aNaNaNaNaF9.7110000000000003
aNaF0.77700000000000002
aNaNaNaNaNaNaF1.986
aNaF5.4000000000000004
aNaNaF1.613
aNaF3.1669999999999998
aNaNaNaNaF1.831
aNaF4.577
aNaF6.5259999999999998
aNaNaF3.7719999999999998
aNaF2.351
aNaF3.746
aNaNaF3.6970000000000001
aF3.7879999999999998
aF3.1019999999999999
aNaNaNaNaF2.9420000000000002
aNaF3.1379999999999999
aNaNaNaNaF2.282
aNaF1.8620000000000001
aNaF7.9480000000000004
aNaNaF3.3410000000000002
aNaF2.4870000000000001
aNaNaNaNaF6.0090000000000003
aF3.4609999999999999
aF1.4330000000000001
aNaNaF3.657
aNatbsg20
g5010
(g5011
(I0
tS'b'
tRp5034
(I1
(I84
I1
tg5013
I00
(lp5035
NaNag70
aNaNag70
aNaNag84
aNaNaNag70
aNaNag84
aNaNaNaNaNag84
ag84
aNaNaNag70
aNaNag84
aNaNaNag70
aNaNag84
aNaNaNag70
aNaNag84
aNaNaNag70
aNaNaNaNaNaNag70
aNaNag84
aNaNaNag70
aNaNag84
aNaNaNag70
ag70
aNag84
aNaNaNag70
aNaNaNaNaNaNaNaNatbsS'order'
p5036
g5021
(g5022
g5011
g5023
S'b'
tRp5037
(I1
(I84
I1
tg5025
I00
S'\x00\x00\x80@\x00\x00`A\x00\x00\xc8A\x00\x00\x8aB\x00\x00\x98A\x00\x00|B\x00\x00\x92B\x00\x00tB\x00\x00\xe8A\x00\x00HB\x00\x00\x82B\x00\x00\xa2B\x00\x00\x90A\x00\x00\\B\x00\x00\xa0@\x00\x00\xd8A\x00\x00\x14B\x00\x00lB\x00\x00PB\x00\x00\x96B\x00\x00\x00B\x00\x00\x88B\x00\x00\xa0A\x00\x00\x10A\x00\x00$B\x00\x00\xc0A\x00\x00\x00A\x00\x00\x8cB\x00\x00@B\x00\x00@A\x00\x00TB\x00\x00\x9cB\x00\x00\x98B\x00\x000A\x00\x00\xd0A\x00\x00xB\x00\x00`B\x00\x00(B\x00\x000B\x00\x00 B\x00\x00\x9eB\x00\x00\x1cB\x00\x00\x90B\x00\x00\x00@\x00\x00PA\x00\x00pB\x00\x00dB\x00\x00\x86B\x00\x00 A\x00\x00\xa0B\x00\x00\x80B\x00\x00\xe0A\x00\x00\x80A\x00\x00\x9aB\x00\x00DB\x00\x00,B\x00\x008B\x00\x00\xa8A\x00\x00\xa4B\x00\x00\x18B\x00\x00hB\x00\x00\x0cB\x00\x00LB\x00\x00\x8eB\x00\x00\xf0A\x00\x00\x08B\x00\x00\x88A\x00\x00\x10B\x00\x004B\x00\x00\x00\x00\x00\x00\xe0@\x00\x00pA\x00\x00<B\x00\x00\xf8A\x00\x00\x94B\x00\x00@@\x00\x00\x04B\x00\x00\xb0A\x00\x00\xa6B\x00\x00\xb8A\x00\x00\x84B\x00\x00\x80?\x00\x00XB\x00\x00\xc0@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5038
(dp5039
S'isNumeric'
p5040
(dp5041
g16
I00
sg18
I00
sg21
I00
sg5020
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5036
I01
ssS'trials'
p5042
g4996
sS'dataTypes'
p5043
(lp5044
g5020
ag5036
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5045
(lp5046
I84
aI1
asbsS'method'
p5047
S'fullRandom'
p5048
sS'sequenceIndices'
p5049
g5010
(g5011
(I0
tS'b'
tRp5050
(I1
(I84
I1
tg5013
I00
(lp5051
I69
aI81
aI43
aI75
aI0
aI14
aI83
aI70
aI26
aI23
aI48
aI33
aI29
aI44
aI1
aI71
aI52
aI66
aI12
aI4
aI22
aI57
aI77
aI79
aI25
aI2
aI34
aI15
aI51
aI8
aI64
aI73
aI20
aI76
aI65
aI61
aI67
aI16
aI59
aI41
aI39
aI24
aI37
aI55
aI38
aI68
aI56
aI72
aI28
aI54
aI9
aI62
aI18
aI30
aI82
aI13
aI36
aI46
aI60
aI17
aI45
aI7
aI35
aI5
aI50
aI10
aI80
aI47
aI21
aI3
aI27
aI63
aI42
aI6
aI74
aI19
aI32
aI53
aI31
aI40
aI49
aI11
aI58
aI78
atbsS'finished'
p5052
I01
sS'nReps'
p5053
I1
sS'nRemaining'
p5054
I-1
sS'trialList'
p5055
(lp5056
g1
(cpsychopy.data
TrialType
p5057
g5008
(dp5058
g60
g95
stRp5059
ag1
(g5057
g5008
(dp5060
g60
g157
stRp5061
ag1
(g5057
g5008
(dp5062
g60
g224
stRp5063
ag1
(g5057
g5008
(dp5064
g60
g488
stRp5065
ag1
(g5057
g5008
(dp5066
g60
g188
stRp5067
ag1
(g5057
g5008
(dp5068
g60
g452
stRp5069
ag1
(g5057
g5008
(dp5070
g60
g512
stRp5071
ag1
(g5057
g5008
(dp5072
g60
g440
stRp5073
ag1
(g5057
g5008
(dp5074
g60
g248
stRp5075
ag1
(g5057
g5008
(dp5076
g60
g374
stRp5077
ag1
(g5057
g5008
(dp5078
g60
g464
stRp5079
ag1
(g5057
g5008
(dp5080
g60
g560
stRp5081
ag1
(g5057
g5008
(dp5082
g60
g182
stRp5083
ag1
(g5057
g5008
(dp5084
g60
g404
stRp5085
ag1
(g5057
g5008
(dp5086
g60
g102
stRp5087
ag1
(g5057
g5008
(dp5088
g60
g236
stRp5089
ag1
(g5057
g5008
(dp5090
g60
g296
stRp5091
ag1
(g5057
g5008
(dp5092
g60
g428
stRp5093
ag1
(g5057
g5008
(dp5094
g60
g386
stRp5095
ag1
(g5057
g5008
(dp5096
g60
g524
stRp5097
ag1
(g5057
g5008
(dp5098
g60
g266
stRp5099
ag1
(g5057
g5008
(dp5100
g60
g482
stRp5101
ag1
(g5057
g5008
(dp5102
g60
g194
stRp5103
ag1
(g5057
g5008
(dp5104
g60
g127
stRp5105
ag1
(g5057
g5008
(dp5106
g60
g320
stRp5107
ag1
(g5057
g5008
(dp5108
g60
g218
stRp5109
ag1
(g5057
g5008
(dp5110
g60
g121
stRp5111
ag1
(g5057
g5008
(dp5112
g60
g494
stRp5113
ag1
(g5057
g5008
(dp5114
g60
g362
stRp5115
ag1
(g5057
g5008
(dp5116
g60
g145
stRp5117
ag1
(g5057
g5008
(dp5118
g60
g392
stRp5119
ag1
(g5057
g5008
(dp5120
g60
g542
stRp5121
ag1
(g5057
g5008
(dp5122
g60
g530
stRp5123
ag1
(g5057
g5008
(dp5124
g60
g139
stRp5125
ag1
(g5057
g5008
(dp5126
g60
g230
stRp5127
ag1
(g5057
g5008
(dp5128
g60
g446
stRp5129
ag1
(g5057
g5008
(dp5130
g60
g410
stRp5131
ag1
(g5057
g5008
(dp5132
g60
g326
stRp5133
ag1
(g5057
g5008
(dp5134
g60
g338
stRp5135
ag1
(g5057
g5008
(dp5136
g60
g314
stRp5137
ag1
(g5057
g5008
(dp5138
g60
g548
stRp5139
ag1
(g5057
g5008
(dp5140
g60
g308
stRp5141
ag1
(g5057
g5008
(dp5142
g60
g506
stRp5143
ag1
(g5057
g5008
(dp5144
g60
g81
stRp5145
ag1
(g5057
g5008
(dp5146
g60
g151
stRp5147
ag1
(g5057
g5008
(dp5148
g60
g434
stRp5149
ag1
(g5057
g5008
(dp5150
g60
g416
stRp5151
ag1
(g5057
g5008
(dp5152
g60
g476
stRp5153
ag1
(g5057
g5008
(dp5154
g60
g133
stRp5155
ag1
(g5057
g5008
(dp5156
g60
g554
stRp5157
ag1
(g5057
g5008
(dp5158
g60
g458
stRp5159
ag1
(g5057
g5008
(dp5160
g60
g242
stRp5161
ag1
(g5057
g5008
(dp5162
g60
g170
stRp5163
ag1
(g5057
g5008
(dp5164
g60
g536
stRp5165
ag1
(g5057
g5008
(dp5166
g60
g368
stRp5167
ag1
(g5057
g5008
(dp5168
g60
g332
stRp5169
ag1
(g5057
g5008
(dp5170
g60
g350
stRp5171
ag1
(g5057
g5008
(dp5172
g60
g200
stRp5173
ag1
(g5057
g5008
(dp5174
g60
g566
stRp5175
ag1
(g5057
g5008
(dp5176
g60
g302
stRp5177
ag1
(g5057
g5008
(dp5178
g60
g422
stRp5179
ag1
(g5057
g5008
(dp5180
g60
g284
stRp5181
ag1
(g5057
g5008
(dp5182
g60
g380
stRp5183
ag1
(g5057
g5008
(dp5184
g60
g500
stRp5185
ag1
(g5057
g5008
(dp5186
g60
g254
stRp5187
ag1
(g5057
g5008
(dp5188
g60
g278
stRp5189
ag1
(g5057
g5008
(dp5190
g60
g176
stRp5191
ag1
(g5057
g5008
(dp5192
g60
g290
stRp5193
ag1
(g5057
g5008
(dp5194
g60
g344
stRp5195
ag1
(g5057
g5008
(dp5196
g60
g67
stRp5197
ag1
(g5057
g5008
(dp5198
g60
g115
stRp5199
ag1
(g5057
g5008
(dp5200
g60
g163
stRp5201
ag1
(g5057
g5008
(dp5202
g60
g356
stRp5203
ag1
(g5057
g5008
(dp5204
g60
g260
stRp5205
ag1
(g5057
g5008
(dp5206
g60
g518
stRp5207
ag1
(g5057
g5008
(dp5208
g60
g88
stRp5209
ag1
(g5057
g5008
(dp5210
g60
g272
stRp5211
ag1
(g5057
g5008
(dp5212
g60
g206
stRp5213
ag1
(g5057
g5008
(dp5214
g60
g572
stRp5215
ag1
(g5057
g5008
(dp5216
g60
g212
stRp5217
ag1
(g5057
g5008
(dp5218
g60
g470
stRp5219
ag1
(g5057
g5008
(dp5220
g60
g75
stRp5221
ag1
(g5057
g5008
(dp5222
g60
g398
stRp5223
ag1
(g5057
g5008
(dp5224
g60
g108
stRp5225
asS'seed'
p5226
NsS'thisIndex'
p5227
I78
sS'thisN'
p5228
I84
sS'thisTrialN'
p5229
I0
sS'nTotal'
p5230
I84
sS'_warnUseOfNext'
p5231
I01
sbag1
(g4995
g3
NtRp5232
(dp5233
g4998
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5234
sg5000
(lp5235
sg5002
I140447403279696
sg10
g5042
sg6
g5004
sg5005
I1
sg38
I01
sg39
g40
sg5006
g1
(g5007
g5008
(dp5236
g30
g5021
(g5022
g5011
g5023
S'b'
tRp5237
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5020
g5021
(g5022
g5011
g5023
S'b'
tRp5238
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5010
(g5011
(I0
tS'b'
tRp5239
(I1
(I220
I1
tg5013
I00
(lp5240
g592
ag602
ag612
ag622
ag632
ag642
ag652
ag662
ag672
ag682
ag692
ag702
ag712
ag722
ag732
ag742
ag752
ag762
ag772
ag782
ag792
ag802
ag812
ag822
ag832
ag842
ag852
ag862
ag872
ag882
ag892
ag902
ag912
ag922
ag932
ag942
ag952
ag962
ag972
ag982
ag992
ag1002
ag1012
ag1022
ag1032
ag1042
ag1052
ag1062
ag1072
ag1082
ag1092
ag1102
ag1112
ag1122
ag1132
ag1142
ag1152
ag1162
ag1172
ag1182
ag1192
ag1202
ag1212
ag1222
ag1232
ag1242
ag1252
ag1262
ag1272
ag1282
ag1292
ag1302
ag1312
ag1322
ag1332
ag1342
ag1352
ag1362
ag1372
ag1382
ag1392
ag1402
ag1412
ag1422
ag1432
ag1442
ag1452
ag1462
ag1472
ag1482
ag1492
ag1502
ag1512
ag1522
ag1532
ag1542
ag1552
ag1562
ag1572
ag1582
ag1592
ag1602
ag1612
ag1622
ag1632
ag1642
ag1652
ag1662
ag1672
ag1682
ag1692
ag1702
ag1712
ag1722
ag1732
ag1742
ag1752
ag1762
ag1772
ag1782
ag1792
ag1802
ag1812
ag1822
ag1832
ag1842
ag1852
ag1862
ag1872
ag1882
ag1892
ag1902
ag1912
ag1922
ag1932
ag1942
ag1952
ag1962
ag1972
ag1982
ag1992
ag2002
ag2012
ag2022
ag2032
ag2042
ag2052
ag2062
ag2072
ag2082
ag2092
ag2102
ag2112
ag2122
ag2132
ag2142
ag2152
ag2162
ag2172
ag2182
ag2192
ag2202
ag2212
ag2222
ag2232
ag2242
ag2252
ag2262
ag2272
ag2282
ag2292
ag2302
ag2312
ag2322
ag2332
ag2342
ag2352
ag2362
ag2372
ag2382
ag2392
ag2402
ag2412
ag2422
ag2432
ag2442
ag2452
ag2462
ag2472
ag2482
ag2492
ag2502
ag2512
ag2522
ag2532
ag2542
ag2552
ag2562
ag2572
ag2582
ag2592
ag2602
ag2612
ag2622
ag2632
ag2642
ag2652
ag2662
ag2672
ag2682
ag2692
ag2702
ag2712
ag2722
ag2732
ag2742
ag2752
ag2762
ag2772
ag2782
atbsg29
g5010
(g5011
(I0
tS'b'
tRp5241
(I1
(I220
I1
tg5013
I00
(lp5242
g593
ag603
ag613
ag623
ag633
ag643
ag653
ag663
ag673
ag683
ag693
ag703
ag713
ag723
ag733
ag743
ag753
ag763
ag773
ag783
ag793
ag803
ag813
ag823
ag833
ag843
ag853
ag863
ag873
ag883
ag893
ag903
ag913
ag923
ag933
ag943
ag953
ag963
ag973
ag983
ag993
ag1003
ag1013
ag1023
ag1033
ag1043
ag1053
ag1063
ag1073
ag1083
ag1093
ag1103
ag1113
ag1123
ag1133
ag1143
ag1153
ag1163
ag1173
ag1183
ag1193
ag1203
ag1213
ag1223
ag1233
ag1243
ag1253
ag1263
ag1273
ag1283
ag1293
ag1303
ag1313
ag1323
ag1333
ag1343
ag1353
ag1363
ag1373
ag1383
ag1393
ag1403
ag1413
ag1423
ag1433
ag1443
ag1453
ag1463
ag1473
ag1483
ag1493
ag1503
ag1513
ag1523
ag1533
ag1543
ag1553
ag1563
ag1573
ag1583
ag1593
ag1603
ag1613
ag1623
ag1633
ag1643
ag1653
ag1663
ag1673
ag1683
ag1693
ag1703
ag1713
ag1723
ag1733
ag1743
ag1753
ag1763
ag1773
ag1783
ag1793
ag1803
ag1813
ag1823
ag1833
ag1843
ag1853
ag1863
ag1873
ag1883
ag1893
ag1903
ag1913
ag1923
ag1933
ag1943
ag1953
ag1963
ag1973
ag1983
ag1993
ag2003
ag2013
ag2023
ag2033
ag2043
ag2053
ag2063
ag2073
ag2083
ag2093
ag2103
ag2113
ag2123
ag2133
ag2143
ag2153
ag2163
ag2173
ag2183
ag2193
ag2203
ag2213
ag2223
ag2233
ag2243
ag2253
ag2263
ag2273
ag2283
ag2293
ag2303
ag2313
ag2323
ag2333
ag2343
ag2353
ag2363
ag2373
ag2383
ag2393
ag2403
ag2413
ag2423
ag2433
ag2443
ag2453
ag2463
ag2473
ag2483
ag2493
ag2503
ag2513
ag2523
ag2533
ag2543
ag2553
ag2563
ag2573
ag2583
ag2593
ag2603
ag2613
ag2623
ag2633
ag2643
ag2653
ag2663
ag2673
ag2683
ag2693
ag2703
ag2713
ag2723
ag2733
ag2743
ag2753
ag2763
ag2773
ag2783
atbsg31
g5021
(g5022
g5011
g5023
S'b'
tRp5243
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5021
(g5022
g5011
g5023
S'b'
tRp5244
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5021
(g5022
g5011
g5023
S'b'
tRp5245
(I1
(I220
I1
tg5025
I00
S'\x89{L@\xe6\x8d\xad?vN\xa9? \x10\x07@d\xbbk?e6(@\xf7U(@\xc8\xb9\x91?$\xb9@?\x9cX@?\xa8\x14\xff?\xe8\x8aM?\x12\xbc-@H\xa4Q?\xac\xe6Q?\n3\xc7?\xdbM\n@<\xado?@2\xc5?$\xe5f?\x98\x05c?\xd6\x90\x80?\x18s\x8d?\xbc\x8b\x8f?<\x03+?\xc2\xe1\x93?H\xa9\x80?H\xf6\xe0?\x88e3?,no?\xf2\x90\x8f?$\xd6\x84?\xa6`\xe5?\xb4\x01p?<\xfb.?\xe0H<?\xb6\x9e\xcb?\x19\x8d+@\xce\xc3\x02@\xf0\x92k?8\xf8&?\x14nZ?\xacGV?\x80A/?\x05\xc1\x81@\xfc\nV?\xb2\x0e3@\xe0^\xad?p&\x98?\x10\xf2\xde?\x88\xf4\x13@\xf06+?\xac58?\x18y\xe7?\xba\x18\x89?p\nC@h\xeez@\xdc\xda\xc4?\xef\x1d`@\x88\xbb^?X\xc1s?\x96\x05\x8b?\x82\xe0\x93?$\x18c?\x16\xe3\xde?\x14_\xe5?D/\x17@\xa0\x88+@\xd0\xe4\xa2?3\xa3\x0f@\x9c\xd3|?r0\xe5?\x16\x84;@\xb0\xe4\xc0?v\xca\xeb?\xa2\xe8\xb1?\x08\x03\x8b?\xd4\xbb\xa0?&\x98\x9e?\xaau\x80?t{\x91?4SZ?\\\x1f4@P\x87\x8f?\x1a\xb1\x91?1Dp@0\xa1f?\x1a\xd8\xa2?HJV?$\'\x90@0/\xb6?\x08pZ?P\xe7f?\xaa\xb8\x01@q\xdfM@\x18!\xb6?0\x17E?\x9cgI?\xa1\x82W@w\xb8\x10@\x94\xdeo?dq/?p4g?\x86o\x91?L\xfd\xa4?\x82\xab\x01@\xa4\xdb\xfa?2A5@\x92\xfd\xd5?J\tB@Q/D@\x9c\xab\x82?\xd2q\xab?\xdeU\x8b?\xa4\x00M?\x84\xc6@?\x10\x91\x9e?\xba\xf7\x86?d!V?h\x9dM?\xe1\xd1 @V\x11\xf0?f\x00\xd6?\xcc\xba7?\xf4\r\xd2?\x10\x98\xaf?\x0c\x07\xb4?\x92W\xc7?\xc4B\xc9?\xbc\x92\xbe?$\xec7?2\x8c\xaf?\xe4\xe63?\xaa\xd1\xaf?\xb0\rM?A\x84+@bFE@\x80\x9eZ?\xf0\xde\xb1?.L\xba?l\x1dt?55-A\xdc\xd9s?3\xf72@z5\xf2?dg^?\x1c\x9d\x93?\xa6\xf1\x97?x\xee\xcf?\x1e\xc7\xcf?*\x90\x9c@t\x93x?\x04\xf7;?p\x9bM?\xb6L\x9a?fl\x82?\xa0X\xc7?\xd4\xf7Q?\xeb3b@\xa2\x9b\x8f?\xa6*\xa7?\xce\xfc\x86?hHI?29\xc9?\xeab\xe7?\xda\xdc\x84?\x1c\xb7|?\xcc\xe8\xcd?\x10n^?\x8eY\xb8?Y4\t@\xc0+\x9c?\xee\xacZ@$\\<?HZ\x83@\x00\xb2@?\xc8\x15c?T9\xc5?\xdb\xc2\x02@\x81\x99\x00@\xd62\xc5?D\xc8\xaf?(\xda\xeb?\xbf\xf52@\x08mI?\xd6^\xb8?\xa90\t@0\x8a^?\xc9\x05\x07@\x1ei\x9c?L8t?$\xaf"?\xc4\x00\x87?\xb0"\xa7?~\x90\xcb?T\x1ft?r3\xb6?\x18d\xc7?\x94\x89o?\xcc\x95M?\xca\x0f\x96?\xe0\xd8 @\x18\x8f^?\xec||?\xd6\x92\x9e?\xd6\xe3k@\xed~H@\xa3[\x0c@\xb0\x7fo?\xaa\x04\xc3?{\x84\x0e@r\x8e\x0e@\x00\xd4|?\x14X<?\x0e\xf1\xef?\x88\xa7\xad?*D\x9a?\x98\xc7\x84?\xdc\x88\x91?\xf0\xd7U?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5036
g5021
(g5022
g5011
g5023
S'b'
tRp5246
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5247
(dp5248
g5040
(dp5249
g31
I01
sg5020
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5036
I01
ssg5042
g5232
sg5043
(lp5250
g5020
ag5036
ag28
ag29
ag30
ag31
ag32
ag33
asg5045
(lp5251
I220
aI1
asbsg5047
S'sequential'
p5252
sg5049
g5010
(g5011
(I0
tS'b'
tRp5253
(I1
(I220
I1
tg589
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5052
I01
sg5053
I1
sg5054
I-1
sg5055
(lp5254
g1
(g5057
g5008
(dp5255
g61
g594
sg586
g587
stRp5256
ag1
(g5057
g5008
(dp5257
g61
g604
sg586
g598
stRp5258
ag1
(g5057
g5008
(dp5259
g61
g614
sg586
g608
stRp5260
ag1
(g5057
g5008
(dp5261
g61
g624
sg586
g618
stRp5262
ag1
(g5057
g5008
(dp5263
g61
g634
sg586
g628
stRp5264
ag1
(g5057
g5008
(dp5265
g61
g644
sg586
g638
stRp5266
ag1
(g5057
g5008
(dp5267
g61
g654
sg586
g648
stRp5268
ag1
(g5057
g5008
(dp5269
g61
g664
sg586
g658
stRp5270
ag1
(g5057
g5008
(dp5271
g61
g674
sg586
g668
stRp5272
ag1
(g5057
g5008
(dp5273
g61
g684
sg586
g678
stRp5274
ag1
(g5057
g5008
(dp5275
g61
g694
sg586
g688
stRp5276
ag1
(g5057
g5008
(dp5277
g61
g704
sg586
g698
stRp5278
ag1
(g5057
g5008
(dp5279
g61
g714
sg586
g708
stRp5280
ag1
(g5057
g5008
(dp5281
g61
g724
sg586
g718
stRp5282
ag1
(g5057
g5008
(dp5283
g61
g734
sg586
g728
stRp5284
ag1
(g5057
g5008
(dp5285
g61
g744
sg586
g738
stRp5286
ag1
(g5057
g5008
(dp5287
g61
g754
sg586
g748
stRp5288
ag1
(g5057
g5008
(dp5289
g61
g764
sg586
g758
stRp5290
ag1
(g5057
g5008
(dp5291
g61
g774
sg586
g768
stRp5292
ag1
(g5057
g5008
(dp5293
g61
g784
sg586
g778
stRp5294
ag1
(g5057
g5008
(dp5295
g61
g794
sg586
g788
stRp5296
ag1
(g5057
g5008
(dp5297
g61
g804
sg586
g798
stRp5298
ag1
(g5057
g5008
(dp5299
g61
g814
sg586
g808
stRp5300
ag1
(g5057
g5008
(dp5301
g61
g824
sg586
g818
stRp5302
ag1
(g5057
g5008
(dp5303
g61
g834
sg586
g828
stRp5304
ag1
(g5057
g5008
(dp5305
g61
g844
sg586
g838
stRp5306
ag1
(g5057
g5008
(dp5307
g61
g854
sg586
g848
stRp5308
ag1
(g5057
g5008
(dp5309
g61
g864
sg586
g858
stRp5310
ag1
(g5057
g5008
(dp5311
g61
g874
sg586
g868
stRp5312
ag1
(g5057
g5008
(dp5313
g61
g884
sg586
g878
stRp5314
ag1
(g5057
g5008
(dp5315
g61
g894
sg586
g888
stRp5316
ag1
(g5057
g5008
(dp5317
g61
g904
sg586
g898
stRp5318
ag1
(g5057
g5008
(dp5319
g61
g914
sg586
g908
stRp5320
ag1
(g5057
g5008
(dp5321
g61
g924
sg586
g918
stRp5322
ag1
(g5057
g5008
(dp5323
g61
g934
sg586
g928
stRp5324
ag1
(g5057
g5008
(dp5325
g61
g944
sg586
g938
stRp5326
ag1
(g5057
g5008
(dp5327
g61
g954
sg586
g948
stRp5328
ag1
(g5057
g5008
(dp5329
g61
g964
sg586
g958
stRp5330
ag1
(g5057
g5008
(dp5331
g61
g974
sg586
g968
stRp5332
ag1
(g5057
g5008
(dp5333
g61
g984
sg586
g978
stRp5334
ag1
(g5057
g5008
(dp5335
g61
g994
sg586
g988
stRp5336
ag1
(g5057
g5008
(dp5337
g61
g1004
sg586
g998
stRp5338
ag1
(g5057
g5008
(dp5339
g61
g1014
sg586
g1008
stRp5340
ag1
(g5057
g5008
(dp5341
g61
g1024
sg586
g1018
stRp5342
ag1
(g5057
g5008
(dp5343
g61
g1034
sg586
g1028
stRp5344
ag1
(g5057
g5008
(dp5345
g61
g1044
sg586
g1038
stRp5346
ag1
(g5057
g5008
(dp5347
g61
g1054
sg586
g1048
stRp5348
ag1
(g5057
g5008
(dp5349
g61
g1064
sg586
g1058
stRp5350
ag1
(g5057
g5008
(dp5351
g61
g1074
sg586
g1068
stRp5352
ag1
(g5057
g5008
(dp5353
g61
g1084
sg586
g1078
stRp5354
ag1
(g5057
g5008
(dp5355
g61
g1094
sg586
g1088
stRp5356
ag1
(g5057
g5008
(dp5357
g61
g1104
sg586
g1098
stRp5358
ag1
(g5057
g5008
(dp5359
g61
g1114
sg586
g1108
stRp5360
ag1
(g5057
g5008
(dp5361
g61
g1124
sg586
g1118
stRp5362
ag1
(g5057
g5008
(dp5363
g61
g1134
sg586
g1128
stRp5364
ag1
(g5057
g5008
(dp5365
g61
g1144
sg586
g1138
stRp5366
ag1
(g5057
g5008
(dp5367
g61
g1154
sg586
g1148
stRp5368
ag1
(g5057
g5008
(dp5369
g61
g1164
sg586
g1158
stRp5370
ag1
(g5057
g5008
(dp5371
g61
g1174
sg586
g1168
stRp5372
ag1
(g5057
g5008
(dp5373
g61
g1184
sg586
g1178
stRp5374
ag1
(g5057
g5008
(dp5375
g61
g1194
sg586
g1188
stRp5376
ag1
(g5057
g5008
(dp5377
g61
g1204
sg586
g1198
stRp5378
ag1
(g5057
g5008
(dp5379
g61
g1214
sg586
g1208
stRp5380
ag1
(g5057
g5008
(dp5381
g61
g1224
sg586
g1218
stRp5382
ag1
(g5057
g5008
(dp5383
g61
g1234
sg586
g1228
stRp5384
ag1
(g5057
g5008
(dp5385
g61
g1244
sg586
g1238
stRp5386
ag1
(g5057
g5008
(dp5387
g61
g1254
sg586
g1248
stRp5388
ag1
(g5057
g5008
(dp5389
g61
g1264
sg586
g1258
stRp5390
ag1
(g5057
g5008
(dp5391
g61
g1274
sg586
g1268
stRp5392
ag1
(g5057
g5008
(dp5393
g61
g1284
sg586
g1278
stRp5394
ag1
(g5057
g5008
(dp5395
g61
g1294
sg586
g1288
stRp5396
ag1
(g5057
g5008
(dp5397
g61
g1304
sg586
g1298
stRp5398
ag1
(g5057
g5008
(dp5399
g61
g1314
sg586
g1308
stRp5400
ag1
(g5057
g5008
(dp5401
g61
g1324
sg586
g1318
stRp5402
ag1
(g5057
g5008
(dp5403
g61
g1334
sg586
g1328
stRp5404
ag1
(g5057
g5008
(dp5405
g61
g1344
sg586
g1338
stRp5406
ag1
(g5057
g5008
(dp5407
g61
g1354
sg586
g1348
stRp5408
ag1
(g5057
g5008
(dp5409
g61
g1364
sg586
g1358
stRp5410
ag1
(g5057
g5008
(dp5411
g61
g1374
sg586
g1368
stRp5412
ag1
(g5057
g5008
(dp5413
g61
g1384
sg586
g1378
stRp5414
ag1
(g5057
g5008
(dp5415
g61
g1394
sg586
g1388
stRp5416
ag1
(g5057
g5008
(dp5417
g61
g1404
sg586
g1398
stRp5418
ag1
(g5057
g5008
(dp5419
g61
g1414
sg586
g1408
stRp5420
ag1
(g5057
g5008
(dp5421
g61
g1424
sg586
g1418
stRp5422
ag1
(g5057
g5008
(dp5423
g61
g1434
sg586
g1428
stRp5424
ag1
(g5057
g5008
(dp5425
g61
g1444
sg586
g1438
stRp5426
ag1
(g5057
g5008
(dp5427
g61
g1454
sg586
g1448
stRp5428
ag1
(g5057
g5008
(dp5429
g61
g1464
sg586
g1458
stRp5430
ag1
(g5057
g5008
(dp5431
g61
g1474
sg586
g1468
stRp5432
ag1
(g5057
g5008
(dp5433
g61
g1484
sg586
g1478
stRp5434
ag1
(g5057
g5008
(dp5435
g61
g1494
sg586
g1488
stRp5436
ag1
(g5057
g5008
(dp5437
g61
g1504
sg586
g1498
stRp5438
ag1
(g5057
g5008
(dp5439
g61
g1514
sg586
g1508
stRp5440
ag1
(g5057
g5008
(dp5441
g61
g1524
sg586
g1518
stRp5442
ag1
(g5057
g5008
(dp5443
g61
g1534
sg586
g1528
stRp5444
ag1
(g5057
g5008
(dp5445
g61
g1544
sg586
g1538
stRp5446
ag1
(g5057
g5008
(dp5447
g61
g1554
sg586
g1548
stRp5448
ag1
(g5057
g5008
(dp5449
g61
g1564
sg586
g1558
stRp5450
ag1
(g5057
g5008
(dp5451
g61
g1574
sg586
g1568
stRp5452
ag1
(g5057
g5008
(dp5453
g61
g1584
sg586
g1578
stRp5454
ag1
(g5057
g5008
(dp5455
g61
g1594
sg586
g1588
stRp5456
ag1
(g5057
g5008
(dp5457
g61
g1604
sg586
g1598
stRp5458
ag1
(g5057
g5008
(dp5459
g61
g1614
sg586
g1608
stRp5460
ag1
(g5057
g5008
(dp5461
g61
g1624
sg586
g1618
stRp5462
ag1
(g5057
g5008
(dp5463
g61
g1634
sg586
g1628
stRp5464
ag1
(g5057
g5008
(dp5465
g61
g1644
sg586
g1638
stRp5466
ag1
(g5057
g5008
(dp5467
g61
g1654
sg586
g1648
stRp5468
ag1
(g5057
g5008
(dp5469
g61
g1664
sg586
g1658
stRp5470
ag1
(g5057
g5008
(dp5471
g61
g1674
sg586
g1668
stRp5472
ag1
(g5057
g5008
(dp5473
g61
g1684
sg586
g1678
stRp5474
ag1
(g5057
g5008
(dp5475
g61
g1694
sg586
g1688
stRp5476
ag1
(g5057
g5008
(dp5477
g61
g1704
sg586
g1698
stRp5478
ag1
(g5057
g5008
(dp5479
g61
g1714
sg586
g1708
stRp5480
ag1
(g5057
g5008
(dp5481
g61
g1724
sg586
g1718
stRp5482
ag1
(g5057
g5008
(dp5483
g61
g1734
sg586
g1728
stRp5484
ag1
(g5057
g5008
(dp5485
g61
g1744
sg586
g1738
stRp5486
ag1
(g5057
g5008
(dp5487
g61
g1754
sg586
g1748
stRp5488
ag1
(g5057
g5008
(dp5489
g61
g1764
sg586
g1758
stRp5490
ag1
(g5057
g5008
(dp5491
g61
g1774
sg586
g1768
stRp5492
ag1
(g5057
g5008
(dp5493
g61
g1784
sg586
g1778
stRp5494
ag1
(g5057
g5008
(dp5495
g61
g1794
sg586
g1788
stRp5496
ag1
(g5057
g5008
(dp5497
g61
g1804
sg586
g1798
stRp5498
ag1
(g5057
g5008
(dp5499
g61
g1814
sg586
g1808
stRp5500
ag1
(g5057
g5008
(dp5501
g61
g1824
sg586
g1818
stRp5502
ag1
(g5057
g5008
(dp5503
g61
g1834
sg586
g1828
stRp5504
ag1
(g5057
g5008
(dp5505
g61
g1844
sg586
g1838
stRp5506
ag1
(g5057
g5008
(dp5507
g61
g1854
sg586
g1848
stRp5508
ag1
(g5057
g5008
(dp5509
g61
g1864
sg586
g1858
stRp5510
ag1
(g5057
g5008
(dp5511
g61
g1874
sg586
g1868
stRp5512
ag1
(g5057
g5008
(dp5513
g61
g1884
sg586
g1878
stRp5514
ag1
(g5057
g5008
(dp5515
g61
g1894
sg586
g1888
stRp5516
ag1
(g5057
g5008
(dp5517
g61
g1904
sg586
g1898
stRp5518
ag1
(g5057
g5008
(dp5519
g61
g1914
sg586
g1908
stRp5520
ag1
(g5057
g5008
(dp5521
g61
g1924
sg586
g1918
stRp5522
ag1
(g5057
g5008
(dp5523
g61
g1934
sg586
g1928
stRp5524
ag1
(g5057
g5008
(dp5525
g61
g1944
sg586
g1938
stRp5526
ag1
(g5057
g5008
(dp5527
g61
g1954
sg586
g1948
stRp5528
ag1
(g5057
g5008
(dp5529
g61
g1964
sg586
g1958
stRp5530
ag1
(g5057
g5008
(dp5531
g61
g1974
sg586
g1968
stRp5532
ag1
(g5057
g5008
(dp5533
g61
g1984
sg586
g1978
stRp5534
ag1
(g5057
g5008
(dp5535
g61
g1994
sg586
g1988
stRp5536
ag1
(g5057
g5008
(dp5537
g61
g2004
sg586
g1998
stRp5538
ag1
(g5057
g5008
(dp5539
g61
g2014
sg586
g2008
stRp5540
ag1
(g5057
g5008
(dp5541
g61
g2024
sg586
g2018
stRp5542
ag1
(g5057
g5008
(dp5543
g61
g2034
sg586
g2028
stRp5544
ag1
(g5057
g5008
(dp5545
g61
g2044
sg586
g2038
stRp5546
ag1
(g5057
g5008
(dp5547
g61
g2054
sg586
g2048
stRp5548
ag1
(g5057
g5008
(dp5549
g61
g2064
sg586
g2058
stRp5550
ag1
(g5057
g5008
(dp5551
g61
g2074
sg586
g2068
stRp5552
ag1
(g5057
g5008
(dp5553
g61
g2084
sg586
g2078
stRp5554
ag1
(g5057
g5008
(dp5555
g61
g2094
sg586
g2088
stRp5556
ag1
(g5057
g5008
(dp5557
g61
g2104
sg586
g2098
stRp5558
ag1
(g5057
g5008
(dp5559
g61
g2114
sg586
g2108
stRp5560
ag1
(g5057
g5008
(dp5561
g61
g2124
sg586
g2118
stRp5562
ag1
(g5057
g5008
(dp5563
g61
g2134
sg586
g2128
stRp5564
ag1
(g5057
g5008
(dp5565
g61
g2144
sg586
g2138
stRp5566
ag1
(g5057
g5008
(dp5567
g61
g2154
sg586
g2148
stRp5568
ag1
(g5057
g5008
(dp5569
g61
g2164
sg586
g2158
stRp5570
ag1
(g5057
g5008
(dp5571
g61
g2174
sg586
g2168
stRp5572
ag1
(g5057
g5008
(dp5573
g61
g2184
sg586
g2178
stRp5574
ag1
(g5057
g5008
(dp5575
g61
g2194
sg586
g2188
stRp5576
ag1
(g5057
g5008
(dp5577
g61
g2204
sg586
g2198
stRp5578
ag1
(g5057
g5008
(dp5579
g61
g2214
sg586
g2208
stRp5580
ag1
(g5057
g5008
(dp5581
g61
g2224
sg586
g2218
stRp5582
ag1
(g5057
g5008
(dp5583
g61
g2234
sg586
g2228
stRp5584
ag1
(g5057
g5008
(dp5585
g61
g2244
sg586
g2238
stRp5586
ag1
(g5057
g5008
(dp5587
g61
g2254
sg586
g2248
stRp5588
ag1
(g5057
g5008
(dp5589
g61
g2264
sg586
g2258
stRp5590
ag1
(g5057
g5008
(dp5591
g61
g2274
sg586
g2268
stRp5592
ag1
(g5057
g5008
(dp5593
g61
g2284
sg586
g2278
stRp5594
ag1
(g5057
g5008
(dp5595
g61
g2294
sg586
g2288
stRp5596
ag1
(g5057
g5008
(dp5597
g61
g2304
sg586
g2298
stRp5598
ag1
(g5057
g5008
(dp5599
g61
g2314
sg586
g2308
stRp5600
ag1
(g5057
g5008
(dp5601
g61
g2324
sg586
g2318
stRp5602
ag1
(g5057
g5008
(dp5603
g61
g2334
sg586
g2328
stRp5604
ag1
(g5057
g5008
(dp5605
g61
g2344
sg586
g2338
stRp5606
ag1
(g5057
g5008
(dp5607
g61
g2354
sg586
g2348
stRp5608
ag1
(g5057
g5008
(dp5609
g61
g2364
sg586
g2358
stRp5610
ag1
(g5057
g5008
(dp5611
g61
g2374
sg586
g2368
stRp5612
ag1
(g5057
g5008
(dp5613
g61
g2384
sg586
g2378
stRp5614
ag1
(g5057
g5008
(dp5615
g61
g2394
sg586
g2388
stRp5616
ag1
(g5057
g5008
(dp5617
g61
g2404
sg586
g2398
stRp5618
ag1
(g5057
g5008
(dp5619
g61
g2414
sg586
g2408
stRp5620
ag1
(g5057
g5008
(dp5621
g61
g2424
sg586
g2418
stRp5622
ag1
(g5057
g5008
(dp5623
g61
g2434
sg586
g2428
stRp5624
ag1
(g5057
g5008
(dp5625
g61
g2444
sg586
g2438
stRp5626
ag1
(g5057
g5008
(dp5627
g61
g2454
sg586
g2448
stRp5628
ag1
(g5057
g5008
(dp5629
g61
g2464
sg586
g2458
stRp5630
ag1
(g5057
g5008
(dp5631
g61
g2474
sg586
g2468
stRp5632
ag1
(g5057
g5008
(dp5633
g61
g2484
sg586
g2478
stRp5634
ag1
(g5057
g5008
(dp5635
g61
g2494
sg586
g2488
stRp5636
ag1
(g5057
g5008
(dp5637
g61
g2504
sg586
g2498
stRp5638
ag1
(g5057
g5008
(dp5639
g61
g2514
sg586
g2508
stRp5640
ag1
(g5057
g5008
(dp5641
g61
g2524
sg586
g2518
stRp5642
ag1
(g5057
g5008
(dp5643
g61
g2534
sg586
g2528
stRp5644
ag1
(g5057
g5008
(dp5645
g61
g2544
sg586
g2538
stRp5646
ag1
(g5057
g5008
(dp5647
g61
g2554
sg586
g2548
stRp5648
ag1
(g5057
g5008
(dp5649
g61
g2564
sg586
g2558
stRp5650
ag1
(g5057
g5008
(dp5651
g61
g2574
sg586
g2568
stRp5652
ag1
(g5057
g5008
(dp5653
g61
g2584
sg586
g2578
stRp5654
ag1
(g5057
g5008
(dp5655
g61
g2594
sg586
g2588
stRp5656
ag1
(g5057
g5008
(dp5657
g61
g2604
sg586
g2598
stRp5658
ag1
(g5057
g5008
(dp5659
g61
g2614
sg586
g2608
stRp5660
ag1
(g5057
g5008
(dp5661
g61
g2624
sg586
g2618
stRp5662
ag1
(g5057
g5008
(dp5663
g61
g2634
sg586
g2628
stRp5664
ag1
(g5057
g5008
(dp5665
g61
g2644
sg586
g2638
stRp5666
ag1
(g5057
g5008
(dp5667
g61
g2654
sg586
g2648
stRp5668
ag1
(g5057
g5008
(dp5669
g61
g2664
sg586
g2658
stRp5670
ag1
(g5057
g5008
(dp5671
g61
g2674
sg586
g2668
stRp5672
ag1
(g5057
g5008
(dp5673
g61
g2684
sg586
g2678
stRp5674
ag1
(g5057
g5008
(dp5675
g61
g2694
sg586
g2688
stRp5676
ag1
(g5057
g5008
(dp5677
g61
g2704
sg586
g2698
stRp5678
ag1
(g5057
g5008
(dp5679
g61
g2714
sg586
g2708
stRp5680
ag1
(g5057
g5008
(dp5681
g61
g2724
sg586
g2718
stRp5682
ag1
(g5057
g5008
(dp5683
g61
g2734
sg586
g2728
stRp5684
ag1
(g5057
g5008
(dp5685
g61
g2744
sg586
g2738
stRp5686
ag1
(g5057
g5008
(dp5687
g61
g2754
sg586
g2748
stRp5688
ag1
(g5057
g5008
(dp5689
g61
g2764
sg586
g2758
stRp5690
ag1
(g5057
g5008
(dp5691
g61
g2774
sg586
g2768
stRp5692
ag1
(g5057
g5008
(dp5693
g61
g2784
sg586
g2778
stRp5694
asg5226
Nsg5227
g2780
sg5228
I220
sg5229
I0
sg5230
I220
sg5231
I01
sbag1
(g4995
g3
NtRp5695
(dp5696
g4998
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5697
sg5000
(lp5698
sg5002
I140447403279696
sg10
S'trials2'
p5699
sg6
g5004
sg5005
I1
sg38
I01
sg39
g40
sg5006
g1
(g5007
g5008
(dp5700
g30
g5021
(g5022
g5011
g5023
S'b'
tRp5701
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5020
g5021
(g5022
g5011
g5023
S'b'
tRp5702
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5010
(g5011
(I0
tS'b'
tRp5703
(I1
(I220
I1
tg5013
I00
(lp5704
g2796
ag2807
ag2817
ag2827
ag2837
ag2847
ag2857
ag2867
ag2877
ag2887
ag2897
ag2907
ag2917
ag2927
ag2937
ag2947
ag2957
ag2967
ag2977
ag2987
ag2997
ag3007
ag3017
ag3027
ag3037
ag3047
ag3057
ag3067
ag3077
ag3087
ag3097
ag3107
ag3117
ag3127
ag3137
ag3147
ag3157
ag3167
ag3177
ag3187
ag3197
ag3207
ag3217
ag3227
ag3237
ag3247
ag3257
ag3267
ag3277
ag3287
ag3297
ag3307
ag3317
ag3327
ag3337
ag3347
ag3357
ag3367
ag3377
ag3387
ag3397
ag3407
ag3417
ag3427
ag3437
ag3447
ag3457
ag3467
ag3477
ag3487
ag3497
ag3507
ag3517
ag3527
ag3537
ag3547
ag3557
ag3567
ag3577
ag3587
ag3597
ag3607
ag3617
ag3627
ag3637
ag3647
ag3657
ag3667
ag3677
ag3687
ag3697
ag3707
ag3717
ag3727
ag3737
ag3747
ag3757
ag3767
ag3777
ag3787
ag3797
ag3807
ag3817
ag3827
ag3837
ag3847
ag3857
ag3867
ag3877
ag3887
ag3897
ag3907
ag3917
ag3927
ag3937
ag3947
ag3957
ag3967
ag3977
ag3987
ag3997
ag4007
ag4017
ag4027
ag4037
ag4047
ag4057
ag4067
ag4077
ag4087
ag4097
ag4107
ag4117
ag4127
ag4137
ag4147
ag4157
ag4167
ag4177
ag4187
ag4197
ag4207
ag4217
ag4227
ag4237
ag4247
ag4257
ag4267
ag4277
ag4287
ag4297
ag4307
ag4317
ag4327
ag4337
ag4347
ag4357
ag4367
ag4377
ag4387
ag4397
ag4407
ag4417
ag4427
ag4437
ag4447
ag4457
ag4467
ag4477
ag4487
ag4497
ag4507
ag4517
ag4527
ag4537
ag4547
ag4557
ag4567
ag4577
ag4587
ag4597
ag4607
ag4617
ag4627
ag4637
ag4647
ag4657
ag4667
ag4677
ag4687
ag4697
ag4707
ag4717
ag4727
ag4737
ag4747
ag4757
ag4767
ag4777
ag4787
ag4797
ag4807
ag4817
ag4827
ag4837
ag4847
ag4857
ag4867
ag4877
ag4887
ag4897
ag4907
ag4917
ag4927
ag4937
ag4947
ag4957
ag4967
ag4977
ag4987
atbsg29
g5010
(g5011
(I0
tS'b'
tRp5705
(I1
(I220
I1
tg5013
I00
(lp5706
g2797
ag2808
ag2818
ag2828
ag2838
ag2848
ag2858
ag2868
ag2878
ag2888
ag2898
ag2908
ag2918
ag2928
ag2938
ag2948
ag2958
ag2968
ag2978
ag2988
ag2998
ag3008
ag3018
ag3028
ag3038
ag3048
ag3058
ag3068
ag3078
ag3088
ag3098
ag3108
ag3118
ag3128
ag3138
ag3148
ag3158
ag3168
ag3178
ag3188
ag3198
ag3208
ag3218
ag3228
ag3238
ag3248
ag3258
ag3268
ag3278
ag3288
ag3298
ag3308
ag3318
ag3328
ag3338
ag3348
ag3358
ag3368
ag3378
ag3388
ag3398
ag3408
ag3418
ag3428
ag3438
ag3448
ag3458
ag3468
ag3478
ag3488
ag3498
ag3508
ag3518
ag3528
ag3538
ag3548
ag3558
ag3568
ag3578
ag3588
ag3598
ag3608
ag3618
ag3628
ag3638
ag3648
ag3658
ag3668
ag3678
ag3688
ag3698
ag3708
ag3718
ag3728
ag3738
ag3748
ag3758
ag3768
ag3778
ag3788
ag3798
ag3808
ag3818
ag3828
ag3838
ag3848
ag3858
ag3868
ag3878
ag3888
ag3898
ag3908
ag3918
ag3928
ag3938
ag3948
ag3958
ag3968
ag3978
ag3988
ag3998
ag4008
ag4018
ag4028
ag4038
ag4048
ag4058
ag4068
ag4078
ag4088
ag4098
ag4108
ag4118
ag4128
ag4138
ag4148
ag4158
ag4168
ag4178
ag4188
ag4198
ag4208
ag4218
ag4228
ag4238
ag4248
ag4258
ag4268
ag4278
ag4288
ag4298
ag4308
ag4318
ag4328
ag4338
ag4348
ag4358
ag4368
ag4378
ag4388
ag4398
ag4408
ag4418
ag4428
ag4438
ag4448
ag4458
ag4468
ag4478
ag4488
ag4498
ag4508
ag4518
ag4528
ag4538
ag4548
ag4558
ag4568
ag4578
ag4588
ag4598
ag4608
ag4618
ag4628
ag4638
ag4648
ag4658
ag4668
ag4678
ag4688
ag4698
ag4708
ag4718
ag4728
ag4738
ag4748
ag4758
ag4768
ag4778
ag4788
ag4798
ag4808
ag4818
ag4828
ag4838
ag4848
ag4858
ag4868
ag4878
ag4888
ag4898
ag4908
ag4918
ag4928
ag4938
ag4948
ag4958
ag4968
ag4978
ag4988
atbsg31
g5021
(g5022
g5011
g5023
S'b'
tRp5707
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5021
(g5022
g5011
g5023
S'b'
tRp5708
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5021
(g5022
g5011
g5023
S'b'
tRp5709
(I1
(I220
I1
tg5025
I00
S'\xa9/k@\x7f\xbd\x13@DZc?pS/?\x10\x93\x80?O_\x1a@\xd8\xda7?(c@?\x92\x06\x87?\x1c\x88M?Pt\x8d?\x10\xed3?\x14\xae\x91?\x1c\xaf\xde?t\xb9=@\xa4wZ?\x10xx?\xda\x15\x98?\xb65\x98?\xe0\x9a\x8f?\xdaz\x82?\x17\xab\x96@q6\x19@D\x8a\xcb?\xecU\xda?\x86\x8a\xad?8\x99x?W\xcd!@p\xb9\x10@.\x1f\x89?\x10\xe1\xb1?\xb6\xb8\xde?W\xcf\x12@ht\x1b@\x06-\xb6?\xd0\x99x?\x00ig?\x8bn\x93@\r\x8aY@\x92\xef\xfc?\xc0\x05\xa7?\xd2<\x9a?\x14\x93\x8f?>\xb5\x82?\xf4\x14\xa7?r(\x89?\x08\x0bV?\xc4\xcex?\xfe\xf5\x88?\xf2\x98\x8f?\xf6\xea\xd3?\x90\xae^?t\x85\xe9?x\xd5y@ XI?\xd9Yc@0+\x9c?@\xab\x84?\x16\xd4\xcd?\xc1\x1d\x17@\xd8\x01c?\xe8\xa2\xad?\xd3\x15\xbb@\xc4\xc5\xeb?\xe4\xf6\xcf?\xac\xf2@?Dh\x80?\x88\xd9\xcd?\xc8f\x8f?,\xa4\x9e?\xe4\xdf\xb1?\xc4\x89\xa3@\xc0\xc9^?\x84\x9a\xe9?\xf6 \xd4?\x86\xff\xa4?\xb0\xc0\x91?\x84\xd6\x93?\xa6\x01\xa5?\xea\xea\xc2?X\xaa\xcb?\x14\xcc\xc0?<\x16\xc3?\xac\xda\x93?\xed\x98,@\x98Ut?\x8eV\xc7?\n\xf7\xc2?\xca\xe3^@p\xb6M?V+\xc5?\x08\x16_?\x1c\xaaQ?\xb6\xde\xed?\x98d\xd6?\x8c\x8ax?\x02\x83\r@\x1c\xb7\x82?o\xb6\x12@\xa8\x92M?(\x9ek?\xb0\x1f\x96@\x1a\x8a\x91?\x18\xbf\xa6@x\xeeU?(mZ?XM\xe7?\xc4!\x89?\x92\xb3\xbe?\x9a*\xb6?Lu\xe5?\xe4n\xbe?\xc4\xb7\xfa?\x9c\x1cV?4\xd9o?\xf0q\x9a?\xf8\x80|?8\xa0g@\xd2\xc5\x02@P\x8a\x9e?\xdc\x9dg@\x9cGI?|x\x9c?\xb8\xb8\x82?@9\xb8?\x91\x9a;@VE\xb8?\xe0D8?\x10x\x0e@$@\xe3?\xf4L\x8b?\x87Q(@\xd2\xae\xa0?\xa4Jt?6\x93\xad?uUV@\xb4\xb9U?"\x89\r@\xf2\x06\x96?\x94O\xa9?\xf6!\x89?\xac\x92\x82?\x18\n\xd2?p\x1e\xb4?\x02\x85\x9e?du\x0c@0Oo?\xd4\x9cx?\xda\xc5j@Z*\x89?\xd0\x80V?\\\x1eg?\x0c\xcf\xcd?\xda\xc9\x82?\xb0\xado?z<\x8b?\xbcQ\x8d?M\xa2\x0f@\xcc\xf5b?`P\xbc?(h\xc9?\x96"\xff?\xe4\xf3\x84?\xf8HZ?\xe8\xa0Y@\x80&V?v\x88\x8f?\x04\xb3\xbc?p\x8cM?:\x1f\x98?\xcc\x03\xb4?ar\x1b@\xf0CI?\xb5\x17\x16@\x80=V?&K\x8b?\x9e\x0e\xd2?\xa0\xaa"?\xd4\xf4\xcf?\xd8\x15\x89?\x7f\xf7$@\xa4l8@\xc4\xf8Y?P\xc7\x91?|\xbf@?\xc8\x8e\xad?\xcc|\xc9?\x10\xb0\x82?\xd2\xe0\x92@mq\r@\xd4\xfff?2\xe2\xa2?\x08\x19}?X-\x80?\x04\xebD?\x160\x8d?\xe0\x07\x87?\x90\x95k?\xe2x\x82?ND\xe3?\x00\x19V?\xb6S\xa9?\xe6\xe90@\x1c@\x18@\xb8\x87\x9e?\xce\xa5\xda?\x9a\x02\x89?d\x95\x9e?LO<?\xe8k\xeb@\xdat\xbc?\xf7\xab\x01@\x10\xdf^?\xc63\x98?d:\x9c?\x84\xcf\xc4?\xb6\xbc\xa0?\xe6!\xff?\xec\xe2Q?Z\x91\xba?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5036
g5021
(g5022
g5011
g5023
S'b'
tRp5710
(I1
(I220
I1
tg5025
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5711
(dp5712
g5040
(dp5713
g31
I01
sg5020
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5036
I01
ssg5042
g5695
sg5043
(lp5714
g5020
ag5036
ag28
ag29
ag30
ag31
ag32
ag33
asg5045
(lp5715
I220
aI1
asbsg5047
g5252
sg5049
g5010
(g5011
(I0
tS'b'
tRp5716
(I1
(I220
I1
tg589
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5052
I01
sg5053
I1
sg5054
I-1
sg5055
(lp5717
g1
(g5057
g5008
(dp5718
g2798
g2799
sg2794
g2795
stRp5719
ag1
(g5057
g5008
(dp5720
g2798
g2809
sg2794
g2806
stRp5721
ag1
(g5057
g5008
(dp5722
g2798
g2819
sg2794
g2816
stRp5723
ag1
(g5057
g5008
(dp5724
g2798
g2829
sg2794
g2826
stRp5725
ag1
(g5057
g5008
(dp5726
g2798
g2839
sg2794
g2836
stRp5727
ag1
(g5057
g5008
(dp5728
g2798
g2849
sg2794
g2846
stRp5729
ag1
(g5057
g5008
(dp5730
g2798
g2859
sg2794
g2856
stRp5731
ag1
(g5057
g5008
(dp5732
g2798
g2869
sg2794
g2866
stRp5733
ag1
(g5057
g5008
(dp5734
g2798
g2879
sg2794
g2876
stRp5735
ag1
(g5057
g5008
(dp5736
g2798
g2889
sg2794
g2886
stRp5737
ag1
(g5057
g5008
(dp5738
g2798
g2899
sg2794
g2896
stRp5739
ag1
(g5057
g5008
(dp5740
g2798
g2909
sg2794
g2906
stRp5741
ag1
(g5057
g5008
(dp5742
g2798
g2919
sg2794
g2916
stRp5743
ag1
(g5057
g5008
(dp5744
g2798
g2929
sg2794
g2926
stRp5745
ag1
(g5057
g5008
(dp5746
g2798
g2939
sg2794
g2936
stRp5747
ag1
(g5057
g5008
(dp5748
g2798
g2949
sg2794
g2946
stRp5749
ag1
(g5057
g5008
(dp5750
g2798
g2959
sg2794
g2956
stRp5751
ag1
(g5057
g5008
(dp5752
g2798
g2969
sg2794
g2966
stRp5753
ag1
(g5057
g5008
(dp5754
g2798
g2979
sg2794
g2976
stRp5755
ag1
(g5057
g5008
(dp5756
g2798
g2989
sg2794
g2986
stRp5757
ag1
(g5057
g5008
(dp5758
g2798
g2999
sg2794
g2996
stRp5759
ag1
(g5057
g5008
(dp5760
g2798
g3009
sg2794
g3006
stRp5761
ag1
(g5057
g5008
(dp5762
g2798
g3019
sg2794
g3016
stRp5763
ag1
(g5057
g5008
(dp5764
g2798
g3029
sg2794
g3026
stRp5765
ag1
(g5057
g5008
(dp5766
g2798
g3039
sg2794
g3036
stRp5767
ag1
(g5057
g5008
(dp5768
g2798
g3049
sg2794
g3046
stRp5769
ag1
(g5057
g5008
(dp5770
g2798
g3059
sg2794
g3056
stRp5771
ag1
(g5057
g5008
(dp5772
g2798
g3069
sg2794
g3066
stRp5773
ag1
(g5057
g5008
(dp5774
g2798
g3079
sg2794
g3076
stRp5775
ag1
(g5057
g5008
(dp5776
g2798
g3089
sg2794
g3086
stRp5777
ag1
(g5057
g5008
(dp5778
g2798
g3099
sg2794
g3096
stRp5779
ag1
(g5057
g5008
(dp5780
g2798
g3109
sg2794
g3106
stRp5781
ag1
(g5057
g5008
(dp5782
g2798
g3119
sg2794
g3116
stRp5783
ag1
(g5057
g5008
(dp5784
g2798
g3129
sg2794
g3126
stRp5785
ag1
(g5057
g5008
(dp5786
g2798
g3139
sg2794
g3136
stRp5787
ag1
(g5057
g5008
(dp5788
g2798
g3149
sg2794
g3146
stRp5789
ag1
(g5057
g5008
(dp5790
g2798
g3159
sg2794
g3156
stRp5791
ag1
(g5057
g5008
(dp5792
g2798
g3169
sg2794
g3166
stRp5793
ag1
(g5057
g5008
(dp5794
g2798
g3179
sg2794
g3176
stRp5795
ag1
(g5057
g5008
(dp5796
g2798
g3189
sg2794
g3186
stRp5797
ag1
(g5057
g5008
(dp5798
g2798
g3199
sg2794
g3196
stRp5799
ag1
(g5057
g5008
(dp5800
g2798
g3209
sg2794
g3206
stRp5801
ag1
(g5057
g5008
(dp5802
g2798
g3219
sg2794
g3216
stRp5803
ag1
(g5057
g5008
(dp5804
g2798
g3229
sg2794
g3226
stRp5805
ag1
(g5057
g5008
(dp5806
g2798
g3239
sg2794
g3236
stRp5807
ag1
(g5057
g5008
(dp5808
g2798
g3249
sg2794
g3246
stRp5809
ag1
(g5057
g5008
(dp5810
g2798
g3259
sg2794
g3256
stRp5811
ag1
(g5057
g5008
(dp5812
g2798
g3269
sg2794
g3266
stRp5813
ag1
(g5057
g5008
(dp5814
g2798
g3279
sg2794
g3276
stRp5815
ag1
(g5057
g5008
(dp5816
g2798
g3289
sg2794
g3286
stRp5817
ag1
(g5057
g5008
(dp5818
g2798
g3299
sg2794
g3296
stRp5819
ag1
(g5057
g5008
(dp5820
g2798
g3309
sg2794
g3306
stRp5821
ag1
(g5057
g5008
(dp5822
g2798
g3319
sg2794
g3316
stRp5823
ag1
(g5057
g5008
(dp5824
g2798
g3329
sg2794
g3326
stRp5825
ag1
(g5057
g5008
(dp5826
g2798
g3339
sg2794
g3336
stRp5827
ag1
(g5057
g5008
(dp5828
g2798
g3349
sg2794
g3346
stRp5829
ag1
(g5057
g5008
(dp5830
g2798
g3359
sg2794
g3356
stRp5831
ag1
(g5057
g5008
(dp5832
g2798
g3369
sg2794
g3366
stRp5833
ag1
(g5057
g5008
(dp5834
g2798
g3379
sg2794
g3376
stRp5835
ag1
(g5057
g5008
(dp5836
g2798
g3389
sg2794
g3386
stRp5837
ag1
(g5057
g5008
(dp5838
g2798
g3399
sg2794
g3396
stRp5839
ag1
(g5057
g5008
(dp5840
g2798
g3409
sg2794
g3406
stRp5841
ag1
(g5057
g5008
(dp5842
g2798
g3419
sg2794
g3416
stRp5843
ag1
(g5057
g5008
(dp5844
g2798
g3429
sg2794
g3426
stRp5845
ag1
(g5057
g5008
(dp5846
g2798
g3439
sg2794
g3436
stRp5847
ag1
(g5057
g5008
(dp5848
g2798
g3449
sg2794
g3446
stRp5849
ag1
(g5057
g5008
(dp5850
g2798
g3459
sg2794
g3456
stRp5851
ag1
(g5057
g5008
(dp5852
g2798
g3469
sg2794
g3466
stRp5853
ag1
(g5057
g5008
(dp5854
g2798
g3479
sg2794
g3476
stRp5855
ag1
(g5057
g5008
(dp5856
g2798
g3489
sg2794
g3486
stRp5857
ag1
(g5057
g5008
(dp5858
g2798
g3499
sg2794
g3496
stRp5859
ag1
(g5057
g5008
(dp5860
g2798
g3509
sg2794
g3506
stRp5861
ag1
(g5057
g5008
(dp5862
g2798
g3519
sg2794
g3516
stRp5863
ag1
(g5057
g5008
(dp5864
g2798
g3529
sg2794
g3526
stRp5865
ag1
(g5057
g5008
(dp5866
g2798
g3539
sg2794
g3536
stRp5867
ag1
(g5057
g5008
(dp5868
g2798
g3549
sg2794
g3546
stRp5869
ag1
(g5057
g5008
(dp5870
g2798
g3559
sg2794
g3556
stRp5871
ag1
(g5057
g5008
(dp5872
g2798
g3569
sg2794
g3566
stRp5873
ag1
(g5057
g5008
(dp5874
g2798
g3579
sg2794
g3576
stRp5875
ag1
(g5057
g5008
(dp5876
g2798
g3589
sg2794
g3586
stRp5877
ag1
(g5057
g5008
(dp5878
g2798
g3599
sg2794
g3596
stRp5879
ag1
(g5057
g5008
(dp5880
g2798
g3609
sg2794
g3606
stRp5881
ag1
(g5057
g5008
(dp5882
g2798
g3619
sg2794
g3616
stRp5883
ag1
(g5057
g5008
(dp5884
g2798
g3629
sg2794
g3626
stRp5885
ag1
(g5057
g5008
(dp5886
g2798
g3639
sg2794
g3636
stRp5887
ag1
(g5057
g5008
(dp5888
g2798
g3649
sg2794
g3646
stRp5889
ag1
(g5057
g5008
(dp5890
g2798
g3659
sg2794
g3656
stRp5891
ag1
(g5057
g5008
(dp5892
g2798
g3669
sg2794
g3666
stRp5893
ag1
(g5057
g5008
(dp5894
g2798
g3679
sg2794
g3676
stRp5895
ag1
(g5057
g5008
(dp5896
g2798
g3689
sg2794
g3686
stRp5897
ag1
(g5057
g5008
(dp5898
g2798
g3699
sg2794
g3696
stRp5899
ag1
(g5057
g5008
(dp5900
g2798
g3709
sg2794
g3706
stRp5901
ag1
(g5057
g5008
(dp5902
g2798
g3719
sg2794
g3716
stRp5903
ag1
(g5057
g5008
(dp5904
g2798
g3729
sg2794
g3726
stRp5905
ag1
(g5057
g5008
(dp5906
g2798
g3739
sg2794
g3736
stRp5907
ag1
(g5057
g5008
(dp5908
g2798
g3749
sg2794
g3746
stRp5909
ag1
(g5057
g5008
(dp5910
g2798
g3759
sg2794
g3756
stRp5911
ag1
(g5057
g5008
(dp5912
g2798
g3769
sg2794
g3766
stRp5913
ag1
(g5057
g5008
(dp5914
g2798
g3779
sg2794
g3776
stRp5915
ag1
(g5057
g5008
(dp5916
g2798
g3789
sg2794
g3786
stRp5917
ag1
(g5057
g5008
(dp5918
g2798
g3799
sg2794
g3796
stRp5919
ag1
(g5057
g5008
(dp5920
g2798
g3809
sg2794
g3806
stRp5921
ag1
(g5057
g5008
(dp5922
g2798
g3819
sg2794
g3816
stRp5923
ag1
(g5057
g5008
(dp5924
g2798
g3829
sg2794
g3826
stRp5925
ag1
(g5057
g5008
(dp5926
g2798
g3839
sg2794
g3836
stRp5927
ag1
(g5057
g5008
(dp5928
g2798
g3849
sg2794
g3846
stRp5929
ag1
(g5057
g5008
(dp5930
g2798
g3859
sg2794
g3856
stRp5931
ag1
(g5057
g5008
(dp5932
g2798
g3869
sg2794
g3866
stRp5933
ag1
(g5057
g5008
(dp5934
g2798
g3879
sg2794
g3876
stRp5935
ag1
(g5057
g5008
(dp5936
g2798
g3889
sg2794
g3886
stRp5937
ag1
(g5057
g5008
(dp5938
g2798
g3899
sg2794
g3896
stRp5939
ag1
(g5057
g5008
(dp5940
g2798
g3909
sg2794
g3906
stRp5941
ag1
(g5057
g5008
(dp5942
g2798
g3919
sg2794
g3916
stRp5943
ag1
(g5057
g5008
(dp5944
g2798
g3929
sg2794
g3926
stRp5945
ag1
(g5057
g5008
(dp5946
g2798
g3939
sg2794
g3936
stRp5947
ag1
(g5057
g5008
(dp5948
g2798
g3949
sg2794
g3946
stRp5949
ag1
(g5057
g5008
(dp5950
g2798
g3959
sg2794
g3956
stRp5951
ag1
(g5057
g5008
(dp5952
g2798
g3969
sg2794
g3966
stRp5953
ag1
(g5057
g5008
(dp5954
g2798
g3979
sg2794
g3976
stRp5955
ag1
(g5057
g5008
(dp5956
g2798
g3989
sg2794
g3986
stRp5957
ag1
(g5057
g5008
(dp5958
g2798
g3999
sg2794
g3996
stRp5959
ag1
(g5057
g5008
(dp5960
g2798
g4009
sg2794
g4006
stRp5961
ag1
(g5057
g5008
(dp5962
g2798
g4019
sg2794
g4016
stRp5963
ag1
(g5057
g5008
(dp5964
g2798
g4029
sg2794
g4026
stRp5965
ag1
(g5057
g5008
(dp5966
g2798
g4039
sg2794
g4036
stRp5967
ag1
(g5057
g5008
(dp5968
g2798
g4049
sg2794
g4046
stRp5969
ag1
(g5057
g5008
(dp5970
g2798
g4059
sg2794
g4056
stRp5971
ag1
(g5057
g5008
(dp5972
g2798
g4069
sg2794
g4066
stRp5973
ag1
(g5057
g5008
(dp5974
g2798
g4079
sg2794
g4076
stRp5975
ag1
(g5057
g5008
(dp5976
g2798
g4089
sg2794
g4086
stRp5977
ag1
(g5057
g5008
(dp5978
g2798
g4099
sg2794
g4096
stRp5979
ag1
(g5057
g5008
(dp5980
g2798
g4109
sg2794
g4106
stRp5981
ag1
(g5057
g5008
(dp5982
g2798
g4119
sg2794
g4116
stRp5983
ag1
(g5057
g5008
(dp5984
g2798
g4129
sg2794
g4126
stRp5985
ag1
(g5057
g5008
(dp5986
g2798
g4139
sg2794
g4136
stRp5987
ag1
(g5057
g5008
(dp5988
g2798
g4149
sg2794
g4146
stRp5989
ag1
(g5057
g5008
(dp5990
g2798
g4159
sg2794
g4156
stRp5991
ag1
(g5057
g5008
(dp5992
g2798
g4169
sg2794
g4166
stRp5993
ag1
(g5057
g5008
(dp5994
g2798
g4179
sg2794
g4176
stRp5995
ag1
(g5057
g5008
(dp5996
g2798
g4189
sg2794
g4186
stRp5997
ag1
(g5057
g5008
(dp5998
g2798
g4199
sg2794
g4196
stRp5999
ag1
(g5057
g5008
(dp6000
g2798
g4209
sg2794
g4206
stRp6001
ag1
(g5057
g5008
(dp6002
g2798
g4219
sg2794
g4216
stRp6003
ag1
(g5057
g5008
(dp6004
g2798
g4229
sg2794
g4226
stRp6005
ag1
(g5057
g5008
(dp6006
g2798
g4239
sg2794
g4236
stRp6007
ag1
(g5057
g5008
(dp6008
g2798
g4249
sg2794
g4246
stRp6009
ag1
(g5057
g5008
(dp6010
g2798
g4259
sg2794
g4256
stRp6011
ag1
(g5057
g5008
(dp6012
g2798
g4269
sg2794
g4266
stRp6013
ag1
(g5057
g5008
(dp6014
g2798
g4279
sg2794
g4276
stRp6015
ag1
(g5057
g5008
(dp6016
g2798
g4289
sg2794
g4286
stRp6017
ag1
(g5057
g5008
(dp6018
g2798
g4299
sg2794
g4296
stRp6019
ag1
(g5057
g5008
(dp6020
g2798
g4309
sg2794
g4306
stRp6021
ag1
(g5057
g5008
(dp6022
g2798
g4319
sg2794
g4316
stRp6023
ag1
(g5057
g5008
(dp6024
g2798
g4329
sg2794
g4326
stRp6025
ag1
(g5057
g5008
(dp6026
g2798
g4339
sg2794
g4336
stRp6027
ag1
(g5057
g5008
(dp6028
g2798
g4349
sg2794
g4346
stRp6029
ag1
(g5057
g5008
(dp6030
g2798
g4359
sg2794
g4356
stRp6031
ag1
(g5057
g5008
(dp6032
g2798
g4369
sg2794
g4366
stRp6033
ag1
(g5057
g5008
(dp6034
g2798
g4379
sg2794
g4376
stRp6035
ag1
(g5057
g5008
(dp6036
g2798
g4389
sg2794
g4386
stRp6037
ag1
(g5057
g5008
(dp6038
g2798
g4399
sg2794
g4396
stRp6039
ag1
(g5057
g5008
(dp6040
g2798
g4409
sg2794
g4406
stRp6041
ag1
(g5057
g5008
(dp6042
g2798
g4419
sg2794
g4416
stRp6043
ag1
(g5057
g5008
(dp6044
g2798
g4429
sg2794
g4426
stRp6045
ag1
(g5057
g5008
(dp6046
g2798
g4439
sg2794
g4436
stRp6047
ag1
(g5057
g5008
(dp6048
g2798
g4449
sg2794
g4446
stRp6049
ag1
(g5057
g5008
(dp6050
g2798
g4459
sg2794
g4456
stRp6051
ag1
(g5057
g5008
(dp6052
g2798
g4469
sg2794
g4466
stRp6053
ag1
(g5057
g5008
(dp6054
g2798
g4479
sg2794
g4476
stRp6055
ag1
(g5057
g5008
(dp6056
g2798
g4489
sg2794
g4486
stRp6057
ag1
(g5057
g5008
(dp6058
g2798
g4499
sg2794
g4496
stRp6059
ag1
(g5057
g5008
(dp6060
g2798
g4509
sg2794
g4506
stRp6061
ag1
(g5057
g5008
(dp6062
g2798
g4519
sg2794
g4516
stRp6063
ag1
(g5057
g5008
(dp6064
g2798
g4529
sg2794
g4526
stRp6065
ag1
(g5057
g5008
(dp6066
g2798
g4539
sg2794
g4536
stRp6067
ag1
(g5057
g5008
(dp6068
g2798
g4549
sg2794
g4546
stRp6069
ag1
(g5057
g5008
(dp6070
g2798
g4559
sg2794
g4556
stRp6071
ag1
(g5057
g5008
(dp6072
g2798
g4569
sg2794
g4566
stRp6073
ag1
(g5057
g5008
(dp6074
g2798
g4579
sg2794
g4576
stRp6075
ag1
(g5057
g5008
(dp6076
g2798
g4589
sg2794
g4586
stRp6077
ag1
(g5057
g5008
(dp6078
g2798
g4599
sg2794
g4596
stRp6079
ag1
(g5057
g5008
(dp6080
g2798
g4609
sg2794
g4606
stRp6081
ag1
(g5057
g5008
(dp6082
g2798
g4619
sg2794
g4616
stRp6083
ag1
(g5057
g5008
(dp6084
g2798
g4629
sg2794
g4626
stRp6085
ag1
(g5057
g5008
(dp6086
g2798
g4639
sg2794
g4636
stRp6087
ag1
(g5057
g5008
(dp6088
g2798
g4649
sg2794
g4646
stRp6089
ag1
(g5057
g5008
(dp6090
g2798
g4659
sg2794
g4656
stRp6091
ag1
(g5057
g5008
(dp6092
g2798
g4669
sg2794
g4666
stRp6093
ag1
(g5057
g5008
(dp6094
g2798
g4679
sg2794
g4676
stRp6095
ag1
(g5057
g5008
(dp6096
g2798
g4689
sg2794
g4686
stRp6097
ag1
(g5057
g5008
(dp6098
g2798
g4699
sg2794
g4696
stRp6099
ag1
(g5057
g5008
(dp6100
g2798
g4709
sg2794
g4706
stRp6101
ag1
(g5057
g5008
(dp6102
g2798
g4719
sg2794
g4716
stRp6103
ag1
(g5057
g5008
(dp6104
g2798
g4729
sg2794
g4726
stRp6105
ag1
(g5057
g5008
(dp6106
g2798
g4739
sg2794
g4736
stRp6107
ag1
(g5057
g5008
(dp6108
g2798
g4749
sg2794
g4746
stRp6109
ag1
(g5057
g5008
(dp6110
g2798
g4759
sg2794
g4756
stRp6111
ag1
(g5057
g5008
(dp6112
g2798
g4769
sg2794
g4766
stRp6113
ag1
(g5057
g5008
(dp6114
g2798
g4779
sg2794
g4776
stRp6115
ag1
(g5057
g5008
(dp6116
g2798
g4789
sg2794
g4786
stRp6117
ag1
(g5057
g5008
(dp6118
g2798
g4799
sg2794
g4796
stRp6119
ag1
(g5057
g5008
(dp6120
g2798
g4809
sg2794
g4806
stRp6121
ag1
(g5057
g5008
(dp6122
g2798
g4819
sg2794
g4816
stRp6123
ag1
(g5057
g5008
(dp6124
g2798
g4829
sg2794
g4826
stRp6125
ag1
(g5057
g5008
(dp6126
g2798
g4839
sg2794
g4836
stRp6127
ag1
(g5057
g5008
(dp6128
g2798
g4849
sg2794
g4846
stRp6129
ag1
(g5057
g5008
(dp6130
g2798
g4859
sg2794
g4856
stRp6131
ag1
(g5057
g5008
(dp6132
g2798
g4869
sg2794
g4866
stRp6133
ag1
(g5057
g5008
(dp6134
g2798
g4879
sg2794
g4876
stRp6135
ag1
(g5057
g5008
(dp6136
g2798
g4889
sg2794
g4886
stRp6137
ag1
(g5057
g5008
(dp6138
g2798
g4899
sg2794
g4896
stRp6139
ag1
(g5057
g5008
(dp6140
g2798
g4909
sg2794
g4906
stRp6141
ag1
(g5057
g5008
(dp6142
g2798
g4919
sg2794
g4916
stRp6143
ag1
(g5057
g5008
(dp6144
g2798
g4929
sg2794
g4926
stRp6145
ag1
(g5057
g5008
(dp6146
g2798
g4939
sg2794
g4936
stRp6147
ag1
(g5057
g5008
(dp6148
g2798
g4949
sg2794
g4946
stRp6149
ag1
(g5057
g5008
(dp6150
g2798
g4959
sg2794
g4956
stRp6151
ag1
(g5057
g5008
(dp6152
g2798
g4969
sg2794
g4966
stRp6153
ag1
(g5057
g5008
(dp6154
g2798
g4979
sg2794
g4976
stRp6155
ag1
(g5057
g5008
(dp6156
g2798
g4989
sg2794
g4986
stRp6157
asg5226
Nsg5227
g4983
sg5228
I220
sg5229
I0
sg5230
I220
sg5231
I01
sbasS'savePickle'
p6158
I00
sb.