ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/G_4_facesParametric_2015_Sep_10_1221
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
asS'autoLog'
p36
I01
sS'extraInfo'
p37
(dp38
S'date'
p39
V2015_Sep_10_1221
p40
sVgroup
p41
VG
sS'expName'
p42
g11
sVparticipant
p43
V4
sS'frameRate'
p44
cnumpy.core.multiarray
scalar
p45
(cnumpy
dtype
p46
(S'f8'
I0
I1
tRp47
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xa7\xed\n\x95\x96\xd0M@'
tRp48
ssS'loopsUnfinished'
p49
(lp50
sS'saveWideText'
p51
I01
sS'thisEntry'
p52
(dp53
sS'version'
p54
S''
sS'_paramNamesSoFar'
p55
(lp56
S'img'
p57
aS'num'
p58
asS'entries'
p59
(lp60
(dp61
g15
F64.006515979766846
sg42
g11
sg41
VG
sg39
g40
sg43
V4
sg44
g48
sg14
S'return'
p62
sa(dp63
g16
Nsg18
Nsg57
S'./basicStim/36M_SP_O.jpg'
p64
sg21
F9.1549999999999994
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p65
I0
sg42
g11
sS'basicLoop.thisRepN'
p66
I0
sg20
S'SUP'
p67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p68
I0
sS'basicLoop.thisIndex'
p69
I82
sa(dp70
g16
Nsg18
S'ANG'
p71
sg57
S'./basicStim/09F_AN_O.jpg'
p72
sg21
Nsg19
F4.5979999999999999
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p73
I1
sg42
g11
sS'basicLoop.thisRepN'
p74
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p75
I1
sS'basicLoop.thisIndex'
p76
I35
sa(dp77
g16
Nsg18
Nsg57
S'./basicStim/02F_NE_C.jpg'
p78
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F8.0489999999999995
sg22
S'NTR'
p79
sS'basicLoop.thisTrialN'
p80
I2
sg42
g11
sS'basicLoop.thisRepN'
p81
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p82
I2
sS'basicLoop.thisIndex'
p83
I13
sa(dp84
g16
S'HAP'
p85
sg18
Nsg57
S'./basicStim/06F_HA_O.jpg'
p86
sg21
Nsg19
Nsg17
F4.6349999999999998
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p87
I3
sg42
g11
sS'basicLoop.thisRepN'
p88
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p89
I3
sS'basicLoop.thisIndex'
p90
I24
sa(dp91
g16
Nsg18
Nsg57
S'./basicStim/21M_NE_C.jpg'
p92
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F4.1280000000000001
sg22
g79
sS'basicLoop.thisTrialN'
p93
I4
sg42
g11
sS'basicLoop.thisRepN'
p94
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p95
I4
sS'basicLoop.thisIndex'
p96
I48
sa(dp97
g16
Nsg18
Nsg57
S'./basicStim/21M_DI_O.jpg'
p98
sg21
F2.331
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p99
I5
sg42
g11
sS'basicLoop.thisRepN'
p100
I0
sg20
S'DIS'
p101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p102
I5
sS'basicLoop.thisIndex'
p103
I43
sa(dp104
g16
Nsg18
g71
sg57
S'./basicStim/23M_FE_O.jpg'
p105
sg21
Nsg19
F6.9779999999999998
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p106
I6
sg42
g11
sS'basicLoop.thisRepN'
p107
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p108
I6
sS'basicLoop.thisIndex'
p109
I51
sa(dp110
g16
g85
sg18
Nsg57
S'./basicStim/03F_HA_O.jpg'
p111
sg21
Nsg19
Nsg17
F2.2349999999999999
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p112
I7
sg42
g11
sS'basicLoop.thisRepN'
p113
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p114
I7
sS'basicLoop.thisIndex'
p115
I17
sa(dp116
g16
Nsg18
Nsg57
S'./basicStim/06F_DI_O.jpg'
p117
sg21
F1.7989999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p118
I8
sg42
g11
sS'basicLoop.thisRepN'
p119
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p120
I8
sS'basicLoop.thisIndex'
p121
I22
sa(dp122
g16
Nsg18
g71
sg57
S'./basicStim/02F_AN_O.jpg'
p123
sg21
Nsg19
F4.9829999999999997
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p124
I9
sg42
g11
sS'basicLoop.thisRepN'
p125
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p126
I9
sS'basicLoop.thisIndex'
p127
I7
sa(dp128
g16
Nsg18
Nsg57
S'./basicStim/07F_DI_O.jpg'
p129
sg21
F2.1499999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p130
I10
sg42
g11
sS'basicLoop.thisRepN'
p131
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p132
I10
sS'basicLoop.thisIndex'
p133
I29
sa(dp134
g16
Nsg18
Nsg57
S'./basicStim/23M_SA_C.jpg'
p135
sg21
F1.4159999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p136
I11
sg42
g11
sS'basicLoop.thisRepN'
p137
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p138
I11
sS'basicLoop.thisIndex'
p139
I53
sa(dp140
g16
Nsg18
Nsg57
S'./basicStim/23M_SP_O.jpg'
p141
sg21
F3.637
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p142
I12
sg42
g11
sS'basicLoop.thisRepN'
p143
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p144
I12
sS'basicLoop.thisIndex'
p145
I54
sa(dp146
g16
Nsg18
Nsg57
S'./basicStim/01F_SP_O.jpg'
p147
sg21
F5.3970000000000002
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p148
I13
sg42
g11
sS'basicLoop.thisRepN'
p149
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p150
I13
sS'basicLoop.thisIndex'
p151
I5
sa(dp152
g16
Nsg18
Nsg57
S'./basicStim/23M_DI_O.jpg'
p153
sg21
F2.3479999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p154
I14
sg42
g11
sS'basicLoop.thisRepN'
p155
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p156
I14
sS'basicLoop.thisIndex'
p157
I50
sa(dp158
g16
g85
sg18
Nsg57
S'./basicStim/01F_HA_O.jpg'
p159
sg21
Nsg19
Nsg17
F2.5059999999999998
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p160
I15
sg42
g11
sS'basicLoop.thisRepN'
p161
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p162
I15
sS'basicLoop.thisIndex'
p163
I3
sa(dp164
g16
Nsg18
Nsg57
S'./basicStim/02F_SP_O.jpg'
p165
sg21
F3.7229999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p166
I16
sg42
g11
sS'basicLoop.thisRepN'
p167
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p168
I16
sS'basicLoop.thisIndex'
p169
I12
sa(dp170
g16
Nsg18
Nsg57
S'./basicStim/28M_AN_O.jpg'
p171
sg21
F6.2859999999999996
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p172
I17
sg42
g11
sS'basicLoop.thisRepN'
p173
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p174
I17
sS'basicLoop.thisIndex'
p175
I63
sa(dp176
g16
Nsg18
Nsg57
S'./basicStim/28M_DI_O.jpg'
p177
sg21
F1.7589999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p178
I18
sg42
g11
sS'basicLoop.thisRepN'
p179
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p180
I18
sS'basicLoop.thisIndex'
p181
I64
sa(dp182
g16
S'SAD'
p183
sg18
Nsg57
S'./basicStim/01F_SA_C.jpg'
p184
sg21
Nsg19
Nsg17
F5.5679999999999996
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p185
I19
sg42
g11
sS'basicLoop.thisRepN'
p186
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p187
I19
sS'basicLoop.thisIndex'
p188
I4
sa(dp189
g16
Nsg18
Nsg57
S'./basicStim/03F_DI_O.jpg'
p190
sg21
F1.6140000000000001
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p191
I20
sg42
g11
sS'basicLoop.thisRepN'
p192
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p193
I20
sS'basicLoop.thisIndex'
p194
I15
sa(dp195
g16
g183
sg18
Nsg57
S'./basicStim/09F_SA_C.jpg'
p196
sg21
Nsg19
Nsg17
F3.6779999999999999
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p197
I21
sg42
g11
sS'basicLoop.thisRepN'
p198
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p199
I21
sS'basicLoop.thisIndex'
p200
I39
sa(dp201
g16
Nsg18
Nsg57
S'./basicStim/24M_SP_O.jpg'
p202
sg21
F4.4740000000000002
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p203
I22
sg42
g11
sS'basicLoop.thisRepN'
p204
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p205
I22
sS'basicLoop.thisIndex'
p206
I61
sa(dp207
g16
g85
sg18
Nsg57
S'./basicStim/28M_HA_O.jpg'
p208
sg21
Nsg19
Nsg17
F2.3029999999999999
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p209
I23
sg42
g11
sS'basicLoop.thisRepN'
p210
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p211
I23
sS'basicLoop.thisIndex'
p212
I66
sa(dp213
g16
Nsg18
Nsg57
S'./basicStim/24M_DI_O.jpg'
p214
sg21
F2.585
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p215
I24
sg42
g11
sS'basicLoop.thisRepN'
p216
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p217
I24
sS'basicLoop.thisIndex'
p218
I57
sa(dp219
g16
Nsg18
g71
sg57
S'./basicStim/23M_AN_O.jpg'
p220
sg21
Nsg19
F3.2240000000000002
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p221
I25
sg42
g11
sS'basicLoop.thisRepN'
p222
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p223
I25
sS'basicLoop.thisIndex'
p224
I49
sa(dp225
g16
g183
sg18
Nsg57
S'./basicStim/02F_SA_C.jpg'
p226
sg21
Nsg19
Nsg17
F2.476
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p227
I26
sg42
g11
sS'basicLoop.thisRepN'
p228
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p229
I26
sS'basicLoop.thisIndex'
p230
I11
sa(dp231
g16
Nsg18
g71
sg57
S'./basicStim/21M_AN_O.jpg'
p232
sg21
Nsg19
F2.4020000000000001
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p233
I27
sg42
g11
sS'basicLoop.thisRepN'
p234
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p235
I27
sS'basicLoop.thisIndex'
p236
I42
sa(dp237
g16
Nsg18
Nsg57
S'./basicStim/28M_NE_C.jpg'
p238
sg21
F4.0099999999999998
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p239
I28
sg42
g11
sS'basicLoop.thisRepN'
p240
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p241
I28
sS'basicLoop.thisIndex'
p242
I69
sa(dp243
g16
Nsg18
Nsg57
S'./basicStim/34M_FE_O.jpg'
p244
sg21
F3.8639999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p245
I29
sg42
g11
sS'basicLoop.thisRepN'
p246
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p247
I29
sS'basicLoop.thisIndex'
p248
I72
sa(dp249
g16
Nsg18
Nsg57
S'./basicStim/36M_DI_O.jpg'
p250
sg21
F3.2519999999999998
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p251
I30
sg42
g11
sS'basicLoop.thisRepN'
p252
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p253
I30
sS'basicLoop.thisIndex'
p254
I78
sa(dp255
g16
g85
sg18
Nsg57
S'./basicStim/07F_HA_O.jpg'
p256
sg21
Nsg19
Nsg17
F2.101
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p257
I31
sg42
g11
sS'basicLoop.thisRepN'
p258
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p259
I31
sS'basicLoop.thisIndex'
p260
I31
sa(dp261
g16
Nsg18
Nsg57
S'./basicStim/03F_SP_O.jpg'
p262
sg21
F2.9889999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p263
I32
sg42
g11
sS'basicLoop.thisRepN'
p264
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p265
I32
sS'basicLoop.thisIndex'
p266
I19
sa(dp267
g16
g183
sg18
Nsg57
S'./basicStim/34M_SA_C.jpg'
p268
sg21
Nsg19
Nsg17
F2.1349999999999998
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p269
I33
sg42
g11
sS'basicLoop.thisRepN'
p270
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p271
I33
sS'basicLoop.thisIndex'
p272
I74
sa(dp273
g16
Nsg18
Nsg57
S'./basicStim/07F_NE_C.jpg'
p274
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F2.548
sg22
g79
sS'basicLoop.thisTrialN'
p275
I34
sg42
g11
sS'basicLoop.thisRepN'
p276
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p277
I34
sS'basicLoop.thisIndex'
p278
I34
sa(dp279
g16
Nsg18
Nsg57
S'./basicStim/01F_FE_O.jpg'
p280
sg21
F5.0620000000000003
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p281
I35
sg42
g11
sS'basicLoop.thisRepN'
p282
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p283
I35
sS'basicLoop.thisIndex'
p284
I2
sa(dp285
g16
Nsg18
g71
sg57
S'./basicStim/34M_AN_O.jpg'
p286
sg21
Nsg19
F3.6579999999999999
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p287
I36
sg42
g11
sS'basicLoop.thisRepN'
p288
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p289
I36
sS'basicLoop.thisIndex'
p290
I70
sa(dp291
g16
g183
sg18
Nsg57
S'./basicStim/28M_SA_C.jpg'
p292
sg21
Nsg19
Nsg17
F4.7969999999999997
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p293
I37
sg42
g11
sS'basicLoop.thisRepN'
p294
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p295
I37
sS'basicLoop.thisIndex'
p296
I67
sa(dp297
g16
g85
sg18
Nsg57
S'./basicStim/21M_HA_O.jpg'
p298
sg21
Nsg19
Nsg17
F2.6760000000000002
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p299
I38
sg42
g11
sS'basicLoop.thisRepN'
p300
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p301
I38
sS'basicLoop.thisIndex'
p302
I45
sa(dp303
g16
Nsg18
g71
sg57
S'./basicStim/01F_AN_O.jpg'
p304
sg21
Nsg19
F1.431
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p305
I39
sg42
g11
sS'basicLoop.thisRepN'
p306
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p307
I39
sS'basicLoop.thisIndex'
p308
I0
sa(dp309
g16
Nsg18
Nsg57
S'./basicStim/36M_NE_C.jpg'
p310
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F4.2110000000000003
sg22
g79
sS'basicLoop.thisTrialN'
p311
I40
sg42
g11
sS'basicLoop.thisRepN'
p312
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p313
I40
sS'basicLoop.thisIndex'
p314
I83
sa(dp315
g16
Nsg18
g71
sg57
S'./basicStim/07F_FE_O.jpg'
p316
sg21
Nsg19
F6.8380000000000001
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p317
I41
sg42
g11
sS'basicLoop.thisRepN'
p318
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p319
I41
sS'basicLoop.thisIndex'
p320
I30
sa(dp321
g16
Nsg18
Nsg57
S'./basicStim/34M_DI_O.jpg'
p322
sg21
F2.431
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p323
I42
sg42
g11
sS'basicLoop.thisRepN'
p324
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p325
I42
sS'basicLoop.thisIndex'
p326
I71
sa(dp327
g16
Nsg18
Nsg57
S'./basicStim/01F_NE_C.jpg'
p328
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F2.7170000000000001
sg22
g79
sS'basicLoop.thisTrialN'
p329
I43
sg42
g11
sS'basicLoop.thisRepN'
p330
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p331
I43
sS'basicLoop.thisIndex'
p332
I6
sa(dp333
g16
g183
sg18
Nsg57
S'./basicStim/21M_SA_C.jpg'
p334
sg21
Nsg19
Nsg17
F4.3170000000000002
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p335
I44
sg42
g11
sS'basicLoop.thisRepN'
p336
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p337
I44
sS'basicLoop.thisIndex'
p338
I46
sa(dp339
g16
Nsg18
Nsg57
S'./basicStim/06F_FE_O.jpg'
p340
sg21
F2.8210000000000002
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p341
I45
sg42
g11
sS'basicLoop.thisRepN'
p342
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p343
I45
sS'basicLoop.thisIndex'
p344
I23
sa(dp345
g16
g183
sg18
Nsg57
S'./basicStim/06F_SA_C.jpg'
p346
sg21
Nsg19
Nsg17
F3.2240000000000002
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p347
I46
sg42
g11
sS'basicLoop.thisRepN'
p348
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p349
I46
sS'basicLoop.thisIndex'
p350
I25
sa(dp351
g16
g85
sg18
Nsg57
S'./basicStim/23M_HA_O.jpg'
p352
sg21
Nsg19
Nsg17
F2.2530000000000001
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p353
I47
sg42
g11
sS'basicLoop.thisRepN'
p354
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p355
I47
sS'basicLoop.thisIndex'
p356
I52
sa(dp357
g16
Nsg18
Nsg57
S'./basicStim/01F_DI_O.jpg'
p358
sg21
F1.7150000000000001
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p359
I48
sg42
g11
sS'basicLoop.thisRepN'
p360
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p361
I48
sS'basicLoop.thisIndex'
p362
I1
sa(dp363
g16
g183
sg18
Nsg57
S'./basicStim/07F_SA_C.jpg'
p364
sg21
Nsg19
Nsg17
F5.4009999999999998
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p365
I49
sg42
g11
sS'basicLoop.thisRepN'
p366
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p367
I49
sS'basicLoop.thisIndex'
p368
I32
sa(dp369
g16
Nsg18
Nsg57
S'./basicStim/34M_NE_C.jpg'
p370
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F2.5819999999999999
sg22
g79
sS'basicLoop.thisTrialN'
p371
I50
sg42
g11
sS'basicLoop.thisRepN'
p372
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p373
I50
sS'basicLoop.thisIndex'
p374
I76
sa(dp375
g16
Nsg18
Nsg57
S'./basicStim/28M_SP_O.jpg'
p376
sg21
F2.218
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p377
I51
sg42
g11
sS'basicLoop.thisRepN'
p378
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p379
I51
sS'basicLoop.thisIndex'
p380
I68
sa(dp381
g16
Nsg18
Nsg57
S'./basicStim/34M_SP_O.jpg'
p382
sg21
F2.1030000000000002
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p383
I52
sg42
g11
sS'basicLoop.thisRepN'
p384
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p385
I52
sS'basicLoop.thisIndex'
p386
I75
sa(dp387
g16
Nsg18
Nsg57
S'./basicStim/03F_FE_O.jpg'
p388
sg21
F5.1520000000000001
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p389
I53
sg42
g11
sS'basicLoop.thisRepN'
p390
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p391
I53
sS'basicLoop.thisIndex'
p392
I16
sa(dp393
g16
Nsg18
Nsg57
S'./basicStim/03F_NE_C.jpg'
p394
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F2.1840000000000002
sg22
g79
sS'basicLoop.thisTrialN'
p395
I54
sg42
g11
sS'basicLoop.thisRepN'
p396
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p397
I54
sS'basicLoop.thisIndex'
p398
I20
sa(dp399
g16
g183
sg18
Nsg57
S'./basicStim/24M_FE_O.jpg'
p400
sg21
Nsg19
Nsg17
F5.4850000000000003
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p401
I55
sg42
g11
sS'basicLoop.thisRepN'
p402
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p403
I55
sS'basicLoop.thisIndex'
p404
I58
sa(dp405
g16
Nsg18
Nsg57
S'./basicStim/09F_FE_O.jpg'
p406
sg21
F3.2730000000000001
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p407
I56
sg42
g11
sS'basicLoop.thisRepN'
p408
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p409
I56
sS'basicLoop.thisIndex'
p410
I37
sa(dp411
g16
Nsg18
g71
sg57
S'./basicStim/02F_DI_O.jpg'
p412
sg21
Nsg19
F3.895
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p413
I57
sg42
g11
sS'basicLoop.thisRepN'
p414
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p415
I57
sS'basicLoop.thisIndex'
p416
I8
sa(dp417
g16
Nsg18
g71
sg57
S'./basicStim/06F_AN_O.jpg'
p418
sg21
Nsg19
F1.5589999999999999
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p419
I58
sg42
g11
sS'basicLoop.thisRepN'
p420
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p421
I58
sS'basicLoop.thisIndex'
p422
I21
sa(dp423
g16
Nsg18
g71
sg57
S'./basicStim/24M_AN_O.jpg'
p424
sg21
Nsg19
F0.875
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p425
I59
sg42
g11
sS'basicLoop.thisRepN'
p426
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p427
I59
sS'basicLoop.thisIndex'
p428
I56
sa(dp429
g16
Nsg18
g71
sg57
S'./basicStim/36M_AN_O.jpg'
p430
sg21
Nsg19
F0.57199999999999995
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p431
I60
sg42
g11
sS'basicLoop.thisRepN'
p432
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p433
I60
sS'basicLoop.thisIndex'
p434
I77
sa(dp435
g16
Nsg18
Nsg57
S'./basicStim/28M_FE_O.jpg'
p436
sg21
F1.2969999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p437
I61
sg42
g11
sS'basicLoop.thisRepN'
p438
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p439
I61
sS'basicLoop.thisIndex'
p440
I65
sa(dp441
g16
Nsg18
g71
sg57
S'./basicStim/07F_AN_O.jpg'
p442
sg21
Nsg19
F1.5129999999999999
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p443
I62
sg42
g11
sS'basicLoop.thisRepN'
p444
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p445
I62
sS'basicLoop.thisIndex'
p446
I28
sa(dp447
g16
Nsg18
Nsg57
S'./basicStim/21M_SP_O.jpg'
p448
sg21
F1.595
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p449
I63
sg42
g11
sS'basicLoop.thisRepN'
p450
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p451
I63
sS'basicLoop.thisIndex'
p452
I47
sa(dp453
g16
g85
sg18
Nsg57
S'./basicStim/36M_HA_O.jpg'
p454
sg21
Nsg19
Nsg17
F2.1000000000000001
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p455
I64
sg42
g11
sS'basicLoop.thisRepN'
p456
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p457
I64
sS'basicLoop.thisIndex'
p458
I80
sa(dp459
g16
g85
sg18
Nsg57
S'./basicStim/02F_HA_O.jpg'
p460
sg21
Nsg19
Nsg17
F2.403
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p461
I65
sg42
g11
sS'basicLoop.thisRepN'
p462
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p463
I65
sS'basicLoop.thisIndex'
p464
I10
sa(dp465
g16
g183
sg18
Nsg57
S'./basicStim/24M_SA_C.jpg'
p466
sg21
Nsg19
Nsg17
F2.0670000000000002
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p467
I66
sg42
g11
sS'basicLoop.thisRepN'
p468
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p469
I66
sS'basicLoop.thisIndex'
p470
I60
sa(dp471
g16
Nsg18
Nsg57
S'./basicStim/23M_NE_C.jpg'
p472
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F1.996
sg22
g79
sS'basicLoop.thisTrialN'
p473
I67
sg42
g11
sS'basicLoop.thisRepN'
p474
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p475
I67
sS'basicLoop.thisIndex'
p476
I55
sa(dp477
g16
g85
sg18
Nsg57
S'./basicStim/34M_HA_O.jpg'
p478
sg21
Nsg19
Nsg17
F1.446
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p479
I68
sg42
g11
sS'basicLoop.thisRepN'
p480
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p481
I68
sS'basicLoop.thisIndex'
p482
I73
sa(dp483
g16
g183
sg18
Nsg57
S'./basicStim/36M_SA_C.jpg'
p484
sg21
Nsg19
Nsg17
F1.917
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p485
I69
sg42
g11
sS'basicLoop.thisRepN'
p486
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p487
I69
sS'basicLoop.thisIndex'
p488
I81
sa(dp489
g16
g183
sg18
Nsg57
S'./basicStim/36M_FE_O.jpg'
p490
sg21
Nsg19
Nsg17
F6.3300000000000001
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p491
I70
sg42
g11
sS'basicLoop.thisRepN'
p492
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p493
I70
sS'basicLoop.thisIndex'
p494
I79
sa(dp495
g16
Nsg18
Nsg57
S'./basicStim/24M_NE_C.jpg'
p496
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F2.0649999999999999
sg22
g79
sS'basicLoop.thisTrialN'
p497
I71
sg42
g11
sS'basicLoop.thisRepN'
p498
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p499
I71
sS'basicLoop.thisIndex'
p500
I62
sa(dp501
g16
Nsg18
Nsg57
S'./basicStim/06F_SP_O.jpg'
p502
sg21
F2.0979999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p503
I72
sg42
g11
sS'basicLoop.thisRepN'
p504
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p505
I72
sS'basicLoop.thisIndex'
p506
I26
sa(dp507
g16
Nsg18
Nsg57
S'./basicStim/02F_FE_O.jpg'
p508
sg21
F3.0209999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p509
I73
sg42
g11
sS'basicLoop.thisRepN'
p510
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p511
I73
sS'basicLoop.thisIndex'
p512
I9
sa(dp513
g16
Nsg18
Nsg57
S'./basicStim/09F_SP_O.jpg'
p514
sg21
F0.83899999999999997
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p515
I74
sg42
g11
sS'basicLoop.thisRepN'
p516
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p517
I74
sS'basicLoop.thisIndex'
p518
I40
sa(dp519
g16
Nsg18
Nsg57
S'./basicStim/09F_NE_C.jpg'
p520
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F1.2470000000000001
sg22
g79
sS'basicLoop.thisTrialN'
p521
I75
sg42
g11
sS'basicLoop.thisRepN'
p522
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p523
I75
sS'basicLoop.thisIndex'
p524
I41
sa(dp525
g16
Nsg18
Nsg57
S'./basicStim/09F_DI_O.jpg'
p526
sg21
F2.3650000000000002
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p527
I76
sg42
g11
sS'basicLoop.thisRepN'
p528
I0
sg20
g101
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p529
I76
sS'basicLoop.thisIndex'
p530
I36
sa(dp531
g16
Nsg18
Nsg57
S'./basicStim/06F_NE_C.jpg'
p532
sg21
Nsg19
Nsg17
Nsg43
V4
sg44
g48
sg23
F1.931
sg22
g79
sS'basicLoop.thisTrialN'
p533
I77
sg42
g11
sS'basicLoop.thisRepN'
p534
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p535
I77
sS'basicLoop.thisIndex'
p536
I27
sa(dp537
g16
Nsg18
g71
sg57
S'./basicStim/03F_AN_O.jpg'
p538
sg21
Nsg19
F2.468
sg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p539
I78
sg42
g11
sS'basicLoop.thisRepN'
p540
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p541
I78
sS'basicLoop.thisIndex'
p542
I14
sa(dp543
g16
g85
sg18
Nsg57
S'./basicStim/24M_HA_O.jpg'
p544
sg21
Nsg19
Nsg17
F1.5980000000000001
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p545
I79
sg42
g11
sS'basicLoop.thisRepN'
p546
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p547
I79
sS'basicLoop.thisIndex'
p548
I59
sa(dp549
g16
Nsg18
Nsg57
S'./basicStim/07F_SP_O.jpg'
p550
sg21
F3.3679999999999999
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p551
I80
sg42
g11
sS'basicLoop.thisRepN'
p552
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p553
I80
sS'basicLoop.thisIndex'
p554
I33
sa(dp555
g16
g85
sg18
Nsg57
S'./basicStim/09F_HA_O.jpg'
p556
sg21
Nsg19
Nsg17
F1.446
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p557
I81
sg42
g11
sS'basicLoop.thisRepN'
p558
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p559
I81
sS'basicLoop.thisIndex'
p560
I38
sa(dp561
g16
g183
sg18
Nsg57
S'./basicStim/03F_SA_C.jpg'
p562
sg21
Nsg19
Nsg17
F1.5640000000000001
sg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p563
I82
sg42
g11
sS'basicLoop.thisRepN'
p564
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p565
I82
sS'basicLoop.thisIndex'
p566
I18
sa(dp567
g16
Nsg18
Nsg57
S'./basicStim/21M_FE_O.jpg'
p568
sg21
F1.617
sg19
Nsg17
Nsg43
V4
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p569
I83
sg42
g11
sS'basicLoop.thisRepN'
p570
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p571
I83
sS'basicLoop.thisIndex'
p572
I44
sa(dp573
g42
g11
sg41
VG
sg39
g40
sg24
S'return'
p574
sg43
V4
sg44
g48
sg25
F11.023622989654541
sa(dp575
g15
F18.971567153930664
sg42
g11
sg41
VG
sg39
g40
sg43
V4
sg44
g48
sg14
S'return'
p576
sa(dp577
g42
g11
sg41
VG
sg39
g40
sg24
S'return'
p578
sg43
V4
sg44
g48
sg25
F13.876711130142212
sa(dp579
g39
g40
sg42
g11
sg27
F3.0834300518035889
sg26
S'return'
p580
sg41
VG
sg43
V4
sg44
g48
sa(dp581
g31
I0
sg42
g11
sg41
VG
sS'img'
p582
S'./stim/MorphM6_10_orig.jpg'
p583
sS'trials.thisIndex'
p584
g45
(g46
(S'i8'
I0
I1
tRp585
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp586
sS'trials.thisRepN'
p587
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp588
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x05)@'
tRp589
sg30
I1
sg58
g45
(g585
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp590
sS'trials.thisTrialN'
p591
I0
sg32
I0
sg39
g40
sg43
V4
sg33
F14.158278942108154
sS'trials.thisN'
p592
I0
sa(dp593
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_04_orig.jpg'
p594
sS'trials.thisIndex'
p595
g45
(g585
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp596
sS'trials.thisRepN'
p597
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x07\xc0'
tRp598
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)@'
tRp599
sg30
I0
sg58
g45
(g585
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp600
sS'trials.thisTrialN'
p601
I1
sg32
I1
sg39
g40
sg43
V4
sg33
F2.1432640552520752
sS'trials.thisN'
p602
I1
sa(dp603
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_03_orig.jpg'
p604
sS'trials.thisIndex'
p605
g45
(g585
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp606
sS'trials.thisRepN'
p607
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06\xc0'
tRp608
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P)@'
tRp609
sg30
I1
sg58
g45
(g585
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp610
sS'trials.thisTrialN'
p611
I2
sg32
I0
sg39
g40
sg43
V4
sg33
F1.4568729400634766
sS'trials.thisN'
p612
I2
sa(dp613
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_00_orig.jpg'
p614
sS'trials.thisIndex'
p615
g45
(g585
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp616
sS'trials.thisRepN'
p617
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp618
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8c)@'
tRp619
sg30
I0
sg58
g45
(g585
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp620
sS'trials.thisTrialN'
p621
I3
sg32
I1
sg39
g40
sg43
V4
sg33
F2.6133430004119873
sS'trials.thisN'
p622
I3
sa(dp623
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_09_orig.jpg'
p624
sS'trials.thisIndex'
p625
g45
(g585
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp626
sS'trials.thisRepN'
p627
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp628
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xaa)@'
tRp629
sg30
I1
sg58
g45
(g585
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp630
sS'trials.thisTrialN'
p631
I4
sg32
I0
sg39
g40
sg43
V4
sg33
F6.3826439380645752
sS'trials.thisN'
p632
I4
sa(dp633
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_02_orig.jpg'
p634
sS'trials.thisIndex'
p635
g45
(g585
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp636
sS'trials.thisRepN'
p637
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\x05\xc0'
tRp638
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb9)@'
tRp639
sg30
I0
sg58
g45
(g585
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp640
sS'trials.thisTrialN'
p641
I5
sg32
I1
sg39
g40
sg43
V4
sg33
F2.0768449306488037
sS'trials.thisN'
p642
I5
sa(dp643
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_06_orig.jpg'
p644
sS'trials.thisIndex'
p645
g45
(g585
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp646
sS'trials.thisRepN'
p647
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\x05\xc0'
tRp648
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb9)@'
tRp649
sg30
I1
sg58
g45
(g585
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp650
sS'trials.thisTrialN'
p651
I6
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3895919322967529
sS'trials.thisN'
p652
I6
sa(dp653
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_08_orig.jpg'
p654
sS'trials.thisIndex'
p655
g45
(g585
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp656
sS'trials.thisRepN'
p657
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp658
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc8)@'
tRp659
sg30
I1
sg58
g45
(g585
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp660
sS'trials.thisTrialN'
p661
I7
sg32
I0
sg39
g40
sg43
V4
sg33
F2.9487509727478027
sS'trials.thisN'
p662
I7
sa(dp663
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_04_orig.jpg'
p664
sS'trials.thisIndex'
p665
g45
(g585
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp666
sS'trials.thisRepN'
p667
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\x05\xc0'
tRp668
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe6)@'
tRp669
sg30
I0
sg58
g45
(g585
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp670
sS'trials.thisTrialN'
p671
I8
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3554501533508301
sS'trials.thisN'
p672
I8
sa(dp673
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_05_orig.jpg'
p674
sS'trials.thisIndex'
p675
g45
(g585
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp676
sS'trials.thisRepN'
p677
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp678
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp679
sg30
I0
sg58
g45
(g585
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp680
sS'trials.thisTrialN'
p681
I9
sg32
I1
sg39
g40
sg43
V4
sg33
F3.065871000289917
sS'trials.thisN'
p682
I9
sa(dp683
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_01_orig.jpg'
p684
sS'trials.thisIndex'
p685
g45
(g585
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp686
sS'trials.thisRepN'
p687
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp688
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp689
sg30
I0
sg58
g45
(g585
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp690
sS'trials.thisTrialN'
p691
I10
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9761440753936768
sS'trials.thisN'
p692
I10
sa(dp693
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_03_orig.jpg'
p694
sS'trials.thisIndex'
p695
g45
(g585
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp696
sS'trials.thisRepN'
p697
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp698
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp699
sg30
I0
sg58
g45
(g585
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp700
sS'trials.thisTrialN'
p701
I11
sg32
I1
sg39
g40
sg43
V4
sg33
F2.7974460124969482
sS'trials.thisN'
p702
I11
sa(dp703
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_09_orig.jpg'
p704
sS'trials.thisIndex'
p705
g45
(g585
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp706
sS'trials.thisRepN'
p707
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp708
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp709
sg30
I1
sg58
g45
(g585
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp710
sS'trials.thisTrialN'
p711
I12
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0883731842041016
sS'trials.thisN'
p712
I12
sa(dp713
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_01_orig.jpg'
p714
sS'trials.thisIndex'
p715
g45
(g585
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp716
sS'trials.thisRepN'
p717
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp718
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp719
sg30
I0
sg58
g45
(g585
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp720
sS'trials.thisTrialN'
p721
I13
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3285641670227051
sS'trials.thisN'
p722
I13
sa(dp723
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_03_orig.jpg'
p724
sS'trials.thisIndex'
p725
g45
(g585
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp726
sS'trials.thisRepN'
p727
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp728
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp729
sg30
I0
sg58
g45
(g585
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp730
sS'trials.thisTrialN'
p731
I14
sg32
I1
sg39
g40
sg43
V4
sg33
F1.4544670581817627
sS'trials.thisN'
p732
I14
sa(dp733
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_05_orig.jpg'
p734
sS'trials.thisIndex'
p735
g45
(g585
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp736
sS'trials.thisRepN'
p737
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp738
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp739
sg30
I0
sg58
g45
(g585
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp740
sS'trials.thisTrialN'
p741
I15
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1721570491790771
sS'trials.thisN'
p742
I15
sa(dp743
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_08_orig.jpg'
p744
sS'trials.thisIndex'
p745
g45
(g585
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp746
sS'trials.thisRepN'
p747
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp748
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp749
sg30
I0
sg58
g45
(g585
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp750
sS'trials.thisTrialN'
p751
I16
sg32
I1
sg39
g40
sg43
V4
sg33
F1.859126091003418
sS'trials.thisN'
p752
I16
sa(dp753
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_01_orig.jpg'
p754
sS'trials.thisIndex'
p755
g45
(g585
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp756
sS'trials.thisRepN'
p757
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp758
sg29
g45
(g47
S'\x00\x00\x00\x00\x00"*@'
tRp759
sg30
I0
sg58
g45
(g585
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp760
sS'trials.thisTrialN'
p761
I17
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0367310047149658
sS'trials.thisN'
p762
I17
sa(dp763
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_10_orig.jpg'
p764
sS'trials.thisIndex'
p765
g45
(g585
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp766
sS'trials.thisRepN'
p767
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp768
sg29
g45
(g47
S'\x00\x00\x00\x00\x00"*@'
tRp769
sg30
I1
sg58
g45
(g585
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp770
sS'trials.thisTrialN'
p771
I18
sg32
I0
sg39
g40
sg43
V4
sg33
F6.283621072769165
sS'trials.thisN'
p772
I18
sa(dp773
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_06_orig.jpg'
p774
sS'trials.thisIndex'
p775
g45
(g585
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp776
sS'trials.thisRepN'
p777
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\x04\xc0'
tRp778
sg29
g45
(g47
S'\x00\x00\x00\x00\x001*@'
tRp779
sg30
I0
sg58
g45
(g585
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp780
sS'trials.thisTrialN'
p781
I19
sg32
I1
sg39
g40
sg43
V4
sg33
F5.0753200054168701
sS'trials.thisN'
p782
I19
sa(dp783
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_00_orig.jpg'
p784
sS'trials.thisIndex'
p785
g45
(g585
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp786
sS'trials.thisRepN'
p787
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x03\xc0'
tRp788
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp789
sg30
I0
sg58
g45
(g585
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp790
sS'trials.thisTrialN'
p791
I20
sg32
I1
sg39
g40
sg43
V4
sg33
F4.5236740112304688
sS'trials.thisN'
p792
I20
sa(dp793
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_08_orig.jpg'
p794
sS'trials.thisIndex'
p795
g45
(g585
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp796
sS'trials.thisRepN'
p797
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc\x02\xc0'
tRp798
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp799
sg30
I1
sg58
g45
(g585
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp800
sS'trials.thisTrialN'
p801
I21
sg32
I0
sg39
g40
sg43
V4
sg33
F6.1665010452270508
sS'trials.thisN'
p802
I21
sa(dp803
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_07_orig.jpg'
p804
sS'trials.thisIndex'
p805
g45
(g585
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp806
sS'trials.thisRepN'
p807
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc\x02\xc0'
tRp808
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp809
sg30
I0
sg58
g45
(g585
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp810
sS'trials.thisTrialN'
p811
I22
sg32
I1
sg39
g40
sg43
V4
sg33
F2.8489201068878174
sS'trials.thisN'
p812
I22
sa(dp813
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_02_orig.jpg'
p814
sS'trials.thisIndex'
p815
g45
(g585
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp816
sS'trials.thisRepN'
p817
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc\x02\xc0'
tRp818
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp819
sg30
I0
sg58
g45
(g585
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp820
sS'trials.thisTrialN'
p821
I23
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6378378868103027
sS'trials.thisN'
p822
I23
sa(dp823
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_08_orig.jpg'
p824
sS'trials.thisIndex'
p825
g45
(g585
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp826
sS'trials.thisRepN'
p827
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc\x02\xc0'
tRp828
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp829
sg30
I1
sg58
g45
(g585
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp830
sS'trials.thisTrialN'
p831
I24
sg32
I0
sg39
g40
sg43
V4
sg33
F1.7589089870452881
sS'trials.thisN'
p832
I24
sa(dp833
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_05_orig.jpg'
p834
sS'trials.thisIndex'
p835
g45
(g585
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp836
sS'trials.thisRepN'
p837
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x02\xc0'
tRp838
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp839
sg30
I0
sg58
g45
(g585
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp840
sS'trials.thisTrialN'
p841
I25
sg32
I1
sg39
g40
sg43
V4
sg33
F3.1829159259796143
sS'trials.thisN'
p842
I25
sa(dp843
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_08_orig.jpg'
p844
sS'trials.thisIndex'
p845
g45
(g585
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp846
sS'trials.thisRepN'
p847
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x02\xc0'
tRp848
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp849
sg30
I1
sg58
g45
(g585
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp850
sS'trials.thisTrialN'
p851
I26
sg32
I0
sg39
g40
sg43
V4
sg33
F7.6916179656982422
sS'trials.thisN'
p852
I26
sa(dp853
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_09_orig.jpg'
p854
sS'trials.thisIndex'
p855
g45
(g585
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp856
sS'trials.thisRepN'
p857
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x02\xc0'
tRp858
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp859
sg30
I1
sg58
g45
(g585
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp860
sS'trials.thisTrialN'
p861
I27
sg32
I0
sg39
g40
sg43
V4
sg33
F1.35561203956604
sS'trials.thisN'
p862
I27
sa(dp863
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_09_orig.jpg'
p864
sS'trials.thisIndex'
p865
g45
(g585
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp866
sS'trials.thisRepN'
p867
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\x01\xc0'
tRp868
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp869
sg30
I1
sg58
g45
(g585
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp870
sS'trials.thisTrialN'
p871
I28
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9745340347290039
sS'trials.thisN'
p872
I28
sa(dp873
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_04_orig.jpg'
p874
sS'trials.thisIndex'
p875
g45
(g585
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp876
sS'trials.thisRepN'
p877
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp878
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp879
sg30
I0
sg58
g45
(g585
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp880
sS'trials.thisTrialN'
p881
I29
sg32
I1
sg39
g40
sg43
V4
sg33
F7.758418083190918
sS'trials.thisN'
p882
I29
sa(dp883
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_06_orig.jpg'
p884
sS'trials.thisIndex'
p885
g45
(g585
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp886
sS'trials.thisRepN'
p887
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp888
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp889
sg30
I1
sg58
g45
(g585
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp890
sS'trials.thisTrialN'
p891
I30
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9262058734893799
sS'trials.thisN'
p892
I30
sa(dp893
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_04_orig.jpg'
p894
sS'trials.thisIndex'
p895
g45
(g585
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp896
sS'trials.thisRepN'
p897
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp898
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp899
sg30
I0
sg58
g45
(g585
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp900
sS'trials.thisTrialN'
p901
I31
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9094359874725342
sS'trials.thisN'
p902
I31
sa(dp903
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_02_orig.jpg'
p904
sS'trials.thisIndex'
p905
g45
(g585
S' \x00\x00\x00\x00\x00\x00\x00'
tRp906
sS'trials.thisRepN'
p907
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp908
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp909
sg30
I0
sg58
g45
(g585
S' \x00\x00\x00\x00\x00\x00\x00'
tRp910
sS'trials.thisTrialN'
p911
I32
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7904119491577148
sS'trials.thisN'
p912
I32
sa(dp913
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_05_orig.jpg'
p914
sS'trials.thisIndex'
p915
g45
(g585
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp916
sS'trials.thisRepN'
p917
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp918
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp919
sg30
I0
sg58
g45
(g585
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp920
sS'trials.thisTrialN'
p921
I33
sg32
I1
sg39
g40
sg43
V4
sg33
F1.071026086807251
sS'trials.thisN'
p922
I33
sa(dp923
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_01_orig.jpg'
p924
sS'trials.thisIndex'
p925
g45
(g585
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp926
sS'trials.thisRepN'
p927
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp928
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp929
sg30
I0
sg58
g45
(g585
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp930
sS'trials.thisTrialN'
p931
I34
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1720597743988037
sS'trials.thisN'
p932
I34
sa(dp933
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_06_orig.jpg'
p934
sS'trials.thisIndex'
p935
g45
(g585
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp936
sS'trials.thisRepN'
p937
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\x00\xc0'
tRp938
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp939
sg30
I1
sg58
g45
(g585
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp940
sS'trials.thisTrialN'
p941
I35
sg32
I0
sg39
g40
sg43
V4
sg33
F4.3730919361114502
sS'trials.thisN'
p942
I35
sa(dp943
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_02_orig.jpg'
p944
sS'trials.thisIndex'
p945
g45
(g585
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp946
sS'trials.thisRepN'
p947
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp948
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp949
sg30
I0
sg58
g45
(g585
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp950
sS'trials.thisTrialN'
p951
I36
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0207641124725342
sS'trials.thisN'
p952
I36
sa(dp953
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_03_orig.jpg'
p954
sS'trials.thisIndex'
p955
g45
(g585
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp956
sS'trials.thisRepN'
p957
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xfe\xbf'
tRp958
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp959
sg30
I0
sg58
g45
(g585
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp960
sS'trials.thisTrialN'
p961
I37
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9418768882751465
sS'trials.thisN'
p962
I37
sa(dp963
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_01_orig.jpg'
p964
sS'trials.thisIndex'
p965
g45
(g585
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp966
sS'trials.thisRepN'
p967
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xfe\xbf'
tRp968
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp969
sg30
I0
sg58
g45
(g585
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp970
sS'trials.thisTrialN'
p971
I38
sg32
I1
sg39
g40
sg43
V4
sg33
F2.9484140872955322
sS'trials.thisN'
p972
I38
sa(dp973
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_05_orig.jpg'
p974
sS'trials.thisIndex'
p975
g45
(g585
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp976
sS'trials.thisRepN'
p977
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xfe\xbf'
tRp978
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp979
sg30
I1
sg58
g45
(g585
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp980
sS'trials.thisTrialN'
p981
I39
sg32
I0
sg39
g40
sg43
V4
sg33
F4.0041520595550537
sS'trials.thisN'
p982
I39
sa(dp983
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_02_orig.jpg'
p984
sS'trials.thisIndex'
p985
g45
(g585
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp986
sS'trials.thisRepN'
p987
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xfe\xbf'
tRp988
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp989
sg30
I0
sg58
g45
(g585
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp990
sS'trials.thisTrialN'
p991
I40
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8760578632354736
sS'trials.thisN'
p992
I40
sa(dp993
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_03_orig.jpg'
p994
sS'trials.thisIndex'
p995
g45
(g585
S')\x00\x00\x00\x00\x00\x00\x00'
tRp996
sS'trials.thisRepN'
p997
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88\xfd\xbf'
tRp998
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp999
sg30
I0
sg58
g45
(g585
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1000
sS'trials.thisTrialN'
p1001
I41
sg32
I1
sg39
g40
sg43
V4
sg33
F0.81798601150512695
sS'trials.thisN'
p1002
I41
sa(dp1003
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_06_orig.jpg'
p1004
sS'trials.thisIndex'
p1005
g45
(g585
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1006
sS'trials.thisRepN'
p1007
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88\xfd\xbf'
tRp1008
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1009
sg30
I1
sg58
g45
(g585
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1010
sS'trials.thisTrialN'
p1011
I42
sg32
I0
sg39
g40
sg43
V4
sg33
F4.3061342239379883
sS'trials.thisN'
p1012
I42
sa(dp1013
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_00_orig.jpg'
p1014
sS'trials.thisIndex'
p1015
g45
(g585
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1016
sS'trials.thisRepN'
p1017
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xfc\xbf'
tRp1018
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1019
sg30
I1
sg58
g45
(g585
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1020
sS'trials.thisTrialN'
p1021
I43
sg32
I0
sg39
g40
sg43
V4
sg33
F6.1829888820648193
sS'trials.thisN'
p1022
I43
sa(dp1023
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_04_orig.jpg'
p1024
sS'trials.thisIndex'
p1025
g45
(g585
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1026
sS'trials.thisRepN'
p1027
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xfc\xbf'
tRp1028
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1029
sg30
I1
sg58
g45
(g585
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1030
sS'trials.thisTrialN'
p1031
I44
sg32
I0
sg39
g40
sg43
V4
sg33
F5.6465070247650146
sS'trials.thisN'
p1032
I44
sa(dp1033
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_07_orig.jpg'
p1034
sS'trials.thisIndex'
p1035
g45
(g585
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1036
sS'trials.thisRepN'
p1037
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xfc\xbf'
tRp1038
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1039
sg30
I1
sg58
g45
(g585
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1040
sS'trials.thisTrialN'
p1041
I45
sg32
I0
sg39
g40
sg43
V4
sg33
F1.5912880897521973
sS'trials.thisN'
p1042
I45
sa(dp1043
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_02_orig.jpg'
p1044
sS'trials.thisIndex'
p1045
g45
(g585
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1046
sS'trials.thisRepN'
p1047
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa8\xfb\xbf'
tRp1048
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1049
sg30
I0
sg58
g45
(g585
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1050
sS'trials.thisTrialN'
p1051
I46
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3449668884277344
sS'trials.thisN'
p1052
I46
sa(dp1053
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_08_orig.jpg'
p1054
sS'trials.thisIndex'
p1055
g45
(g585
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1056
sS'trials.thisRepN'
p1057
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa8\xfb\xbf'
tRp1058
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1059
sg30
I0
sg58
g45
(g585
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1060
sS'trials.thisTrialN'
p1061
I47
sg32
I1
sg39
g40
sg43
V4
sg33
F4.3890650272369385
sS'trials.thisN'
p1062
I47
sa(dp1063
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_03_orig.jpg'
p1064
sS'trials.thisIndex'
p1065
g45
(g585
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1066
sS'trials.thisRepN'
p1067
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa8\xfb\xbf'
tRp1068
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1069
sg30
I0
sg58
g45
(g585
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1070
sS'trials.thisTrialN'
p1071
I48
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8256599903106689
sS'trials.thisN'
p1072
I48
sa(dp1073
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_05_orig.jpg'
p1074
sS'trials.thisIndex'
p1075
g45
(g585
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1076
sS'trials.thisRepN'
p1077
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa8\xfb\xbf'
tRp1078
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1079
sg30
I1
sg58
g45
(g585
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1080
sS'trials.thisTrialN'
p1081
I49
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9933171272277832
sS'trials.thisN'
p1082
I49
sa(dp1083
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_08_orig.jpg'
p1084
sS'trials.thisIndex'
p1085
g45
(g585
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1086
sS'trials.thisRepN'
p1087
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa8\xfb\xbf'
tRp1088
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1089
sg30
I1
sg58
g45
(g585
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1090
sS'trials.thisTrialN'
p1091
I50
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0027370452880859
sS'trials.thisN'
p1092
I50
sa(dp1093
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_03_orig.jpg'
p1094
sS'trials.thisIndex'
p1095
g45
(g585
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1096
sS'trials.thisRepN'
p1097
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1098
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1099
sg30
I0
sg58
g45
(g585
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1100
sS'trials.thisTrialN'
p1101
I51
sg32
I1
sg39
g40
sg43
V4
sg33
F1.306257963180542
sS'trials.thisN'
p1102
I51
sa(dp1103
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_10_orig.jpg'
p1104
sS'trials.thisIndex'
p1105
g45
(g585
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1106
sS'trials.thisRepN'
p1107
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1108
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1109
sg30
I1
sg58
g45
(g585
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1110
sS'trials.thisTrialN'
p1111
I52
sg32
I0
sg39
g40
sg43
V4
sg33
F5.2928049564361572
sS'trials.thisN'
p1112
I52
sa(dp1113
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_08_orig.jpg'
p1114
sS'trials.thisIndex'
p1115
g45
(g585
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1116
sS'trials.thisRepN'
p1117
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1118
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1119
sg30
I0
sg58
g45
(g585
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1120
sS'trials.thisTrialN'
p1121
I53
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1381869316101074
sS'trials.thisN'
p1122
I53
sa(dp1123
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_10_orig.jpg'
p1124
sS'trials.thisIndex'
p1125
g45
(g585
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1126
sS'trials.thisRepN'
p1127
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1128
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1129
sg30
I1
sg58
g45
(g585
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1130
sS'trials.thisTrialN'
p1131
I54
sg32
I0
sg39
g40
sg43
V4
sg33
F1.941025972366333
sS'trials.thisN'
p1132
I54
sa(dp1133
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_03_orig.jpg'
p1134
sS'trials.thisIndex'
p1135
g45
(g585
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1136
sS'trials.thisRepN'
p1137
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1138
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1139
sg30
I0
sg58
g45
(g585
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1140
sS'trials.thisTrialN'
p1141
I55
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1193170547485352
sS'trials.thisN'
p1142
I55
sa(dp1143
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_03_orig.jpg'
p1144
sS'trials.thisIndex'
p1145
g45
(g585
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1146
sS'trials.thisRepN'
p1147
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1148
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1149
sg30
I0
sg58
g45
(g585
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1150
sS'trials.thisTrialN'
p1151
I56
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2883470058441162
sS'trials.thisN'
p1152
I56
sa(dp1153
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_10_orig.jpg'
p1154
sS'trials.thisIndex'
p1155
g45
(g585
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1156
sS'trials.thisRepN'
p1157
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1158
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1159
sg30
I1
sg58
g45
(g585
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1160
sS'trials.thisTrialN'
p1161
I57
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2055449485778809
sS'trials.thisN'
p1162
I57
sa(dp1163
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_00_orig.jpg'
p1164
sS'trials.thisIndex'
p1165
g45
(g585
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1166
sS'trials.thisRepN'
p1167
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1168
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1169
sg30
I0
sg58
g45
(g585
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1170
sS'trials.thisTrialN'
p1171
I58
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8732080459594727
sS'trials.thisN'
p1172
I58
sa(dp1173
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_07_orig.jpg'
p1174
sS'trials.thisIndex'
p1175
g45
(g585
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1176
sS'trials.thisRepN'
p1177
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1178
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1179
sg30
I1
sg58
g45
(g585
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1180
sS'trials.thisTrialN'
p1181
I59
sg32
I0
sg39
g40
sg43
V4
sg33
F2.1614029407501221
sS'trials.thisN'
p1182
I59
sa(dp1183
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_09_orig.jpg'
p1184
sS'trials.thisIndex'
p1185
g45
(g585
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1186
sS'trials.thisRepN'
p1187
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1188
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1189
sg30
I1
sg58
g45
(g585
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1190
sS'trials.thisTrialN'
p1191
I60
sg32
I0
sg39
g40
sg43
V4
sg33
F0.95227694511413574
sS'trials.thisN'
p1192
I60
sa(dp1193
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_08_orig.jpg'
p1194
sS'trials.thisIndex'
p1195
g45
(g585
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1196
sS'trials.thisRepN'
p1197
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1198
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1199
sg30
I1
sg58
g45
(g585
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1200
sS'trials.thisTrialN'
p1201
I61
sg32
I0
sg39
g40
sg43
V4
sg33
F0.95400190353393555
sS'trials.thisN'
p1202
I61
sa(dp1203
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_00_orig.jpg'
p1204
sS'trials.thisIndex'
p1205
g45
(g585
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1206
sS'trials.thisRepN'
p1207
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp1208
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1209
sg30
I0
sg58
g45
(g585
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1210
sS'trials.thisTrialN'
p1211
I62
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5239989757537842
sS'trials.thisN'
p1212
I62
sa(dp1213
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_04_orig.jpg'
p1214
sS'trials.thisIndex'
p1215
g45
(g585
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1216
sS'trials.thisRepN'
p1217
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp1218
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1219
sg30
I0
sg58
g45
(g585
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1220
sS'trials.thisTrialN'
p1221
I63
sg32
I1
sg39
g40
sg43
V4
sg33
F1.304678201675415
sS'trials.thisN'
p1222
I63
sa(dp1223
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_05_orig.jpg'
p1224
sS'trials.thisIndex'
p1225
g45
(g585
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1226
sS'trials.thisRepN'
p1227
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp1228
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1229
sg30
I1
sg58
g45
(g585
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1230
sS'trials.thisTrialN'
p1231
I64
sg32
I0
sg39
g40
sg43
V4
sg33
F3.6858799457550049
sS'trials.thisN'
p1232
I64
sa(dp1233
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_09_orig.jpg'
p1234
sS'trials.thisIndex'
p1235
g45
(g585
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1236
sS'trials.thisRepN'
p1237
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp1238
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1239
sg30
I0
sg58
g45
(g585
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1240
sS'trials.thisTrialN'
p1241
I65
sg32
I1
sg39
g40
sg43
V4
sg33
F3.2333478927612305
sS'trials.thisN'
p1242
I65
sa(dp1243
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_04_orig.jpg'
p1244
sS'trials.thisIndex'
p1245
g45
(g585
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1246
sS'trials.thisRepN'
p1247
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp1248
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1249
sg30
I0
sg58
g45
(g585
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1250
sS'trials.thisTrialN'
p1251
I66
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0522608757019043
sS'trials.thisN'
p1252
I66
sa(dp1253
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_07_orig.jpg'
p1254
sS'trials.thisIndex'
p1255
g45
(g585
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1256
sS'trials.thisRepN'
p1257
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1258
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1259
sg30
I1
sg58
g45
(g585
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1260
sS'trials.thisTrialN'
p1261
I67
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0368080139160156
sS'trials.thisN'
p1262
I67
sa(dp1263
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_05_orig.jpg'
p1264
sS'trials.thisIndex'
p1265
g45
(g585
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1266
sS'trials.thisRepN'
p1267
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1268
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1269
sg30
I0
sg58
g45
(g585
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1270
sS'trials.thisTrialN'
p1271
I68
sg32
I1
sg39
g40
sg43
V4
sg33
F2.9975428581237793
sS'trials.thisN'
p1272
I68
sa(dp1273
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_02_orig.jpg'
p1274
sS'trials.thisIndex'
p1275
g45
(g585
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1276
sS'trials.thisRepN'
p1277
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1278
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1279
sg30
I0
sg58
g45
(g585
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1280
sS'trials.thisTrialN'
p1281
I69
sg32
I1
sg39
g40
sg43
V4
sg33
F2.1943011283874512
sS'trials.thisN'
p1282
I69
sa(dp1283
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_08_orig.jpg'
p1284
sS'trials.thisIndex'
p1285
g45
(g585
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1286
sS'trials.thisRepN'
p1287
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1288
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1289
sg30
I1
sg58
g45
(g585
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1290
sS'trials.thisTrialN'
p1291
I70
sg32
I0
sg39
g40
sg43
V4
sg33
F1.5741209983825684
sS'trials.thisN'
p1292
I70
sa(dp1293
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_00_orig.jpg'
p1294
sS'trials.thisIndex'
p1295
g45
(g585
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1296
sS'trials.thisRepN'
p1297
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1298
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1299
sg30
I0
sg58
g45
(g585
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1300
sS'trials.thisTrialN'
p1301
I71
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8592848777770996
sS'trials.thisN'
p1302
I71
sa(dp1303
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_07_orig.jpg'
p1304
sS'trials.thisIndex'
p1305
g45
(g585
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1306
sS'trials.thisRepN'
p1307
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1308
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1309
sg30
I1
sg58
g45
(g585
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1310
sS'trials.thisTrialN'
p1311
I72
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3730101585388184
sS'trials.thisN'
p1312
I72
sa(dp1313
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_07_orig.jpg'
p1314
sS'trials.thisIndex'
p1315
g45
(g585
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1316
sS'trials.thisRepN'
p1317
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1318
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1319
sg30
I1
sg58
g45
(g585
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1320
sS'trials.thisTrialN'
p1321
I73
sg32
I0
sg39
g40
sg43
V4
sg33
F1.356158971786499
sS'trials.thisN'
p1322
I73
sa(dp1323
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_05_orig.jpg'
p1324
sS'trials.thisIndex'
p1325
g45
(g585
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1326
sS'trials.thisRepN'
p1327
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp1328
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1329
sg30
I1
sg58
g45
(g585
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1330
sS'trials.thisTrialN'
p1331
I74
sg32
I0
sg39
g40
sg43
V4
sg33
F3.0822222232818604
sS'trials.thisN'
p1332
I74
sa(dp1333
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_02_orig.jpg'
p1334
sS'trials.thisIndex'
p1335
g45
(g585
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1336
sS'trials.thisRepN'
p1337
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd8\xf8\xbf'
tRp1338
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1339
sg30
I0
sg58
g45
(g585
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1340
sS'trials.thisTrialN'
p1341
I75
sg32
I1
sg39
g40
sg43
V4
sg33
F2.4960291385650635
sS'trials.thisN'
p1342
I75
sa(dp1343
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_03_orig.jpg'
p1344
sS'trials.thisIndex'
p1345
g45
(g585
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1346
sS'trials.thisRepN'
p1347
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd8\xf8\xbf'
tRp1348
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1349
sg30
I0
sg58
g45
(g585
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1350
sS'trials.thisTrialN'
p1351
I76
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3046839237213135
sS'trials.thisN'
p1352
I76
sa(dp1353
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_01_orig.jpg'
p1354
sS'trials.thisIndex'
p1355
g45
(g585
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1356
sS'trials.thisRepN'
p1357
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp1358
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1359
sg30
I0
sg58
g45
(g585
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1360
sS'trials.thisTrialN'
p1361
I77
sg32
I1
sg39
g40
sg43
V4
sg33
F3.4013521671295166
sS'trials.thisN'
p1362
I77
sa(dp1363
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_05_orig.jpg'
p1364
sS'trials.thisIndex'
p1365
g45
(g585
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1366
sS'trials.thisRepN'
p1367
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp1368
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1369
sg30
I1
sg58
g45
(g585
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1370
sS'trials.thisTrialN'
p1371
I78
sg32
I0
sg39
g40
sg43
V4
sg33
F1.4905650615692139
sS'trials.thisN'
p1372
I78
sa(dp1373
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_10_orig.jpg'
p1374
sS'trials.thisIndex'
p1375
g45
(g585
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1376
sS'trials.thisRepN'
p1377
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp1378
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1379
sg30
I1
sg58
g45
(g585
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1380
sS'trials.thisTrialN'
p1381
I79
sg32
I0
sg39
g40
sg43
V4
sg33
F3.7503409385681152
sS'trials.thisN'
p1382
I79
sa(dp1383
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_03_orig.jpg'
p1384
sS'trials.thisIndex'
p1385
g45
(g585
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1386
sS'trials.thisRepN'
p1387
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1388
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1389
sg30
I0
sg58
g45
(g585
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1390
sS'trials.thisTrialN'
p1391
I80
sg32
I1
sg39
g40
sg43
V4
sg33
F4.7251889705657959
sS'trials.thisN'
p1392
I80
sa(dp1393
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_04_orig.jpg'
p1394
sS'trials.thisIndex'
p1395
g45
(g585
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1396
sS'trials.thisRepN'
p1397
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1398
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1399
sg30
I1
sg58
g45
(g585
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1400
sS'trials.thisTrialN'
p1401
I81
sg32
I0
sg39
g40
sg43
V4
sg33
F3.1996190547943115
sS'trials.thisN'
p1402
I81
sa(dp1403
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_04_orig.jpg'
p1404
sS'trials.thisIndex'
p1405
g45
(g585
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1406
sS'trials.thisRepN'
p1407
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1408
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1409
sg30
I1
sg58
g45
(g585
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1410
sS'trials.thisTrialN'
p1411
I82
sg32
I0
sg39
g40
sg43
V4
sg33
F18.250617980957031
sS'trials.thisN'
p1412
I82
sa(dp1413
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_01_orig.jpg'
p1414
sS'trials.thisIndex'
p1415
g45
(g585
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1416
sS'trials.thisRepN'
p1417
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1418
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1419
sg30
I0
sg58
g45
(g585
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1420
sS'trials.thisTrialN'
p1421
I83
sg32
I1
sg39
g40
sg43
V4
sg33
F1.975600004196167
sS'trials.thisN'
p1422
I83
sa(dp1423
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_10_orig.jpg'
p1424
sS'trials.thisIndex'
p1425
g45
(g585
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1426
sS'trials.thisRepN'
p1427
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1428
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1429
sg30
I1
sg58
g45
(g585
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1430
sS'trials.thisTrialN'
p1431
I84
sg32
I0
sg39
g40
sg43
V4
sg33
F2.9655420780181885
sS'trials.thisN'
p1432
I84
sa(dp1433
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_00_orig.jpg'
p1434
sS'trials.thisIndex'
p1435
g45
(g585
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1436
sS'trials.thisRepN'
p1437
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1438
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1439
sg30
I0
sg58
g45
(g585
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1440
sS'trials.thisTrialN'
p1441
I85
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3391799926757812
sS'trials.thisN'
p1442
I85
sa(dp1443
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_04_orig.jpg'
p1444
sS'trials.thisIndex'
p1445
g45
(g585
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1446
sS'trials.thisRepN'
p1447
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1448
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1449
sg30
I1
sg58
g45
(g585
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1450
sS'trials.thisTrialN'
p1451
I86
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9937961101531982
sS'trials.thisN'
p1452
I86
sa(dp1453
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_07_orig.jpg'
p1454
sS'trials.thisIndex'
p1455
g45
(g585
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1456
sS'trials.thisRepN'
p1457
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1458
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1459
sg30
I1
sg58
g45
(g585
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1460
sS'trials.thisTrialN'
p1461
I87
sg32
I0
sg39
g40
sg43
V4
sg33
F1.4060068130493164
sS'trials.thisN'
p1462
I87
sa(dp1463
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_07_orig.jpg'
p1464
sS'trials.thisIndex'
p1465
g45
(g585
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1466
sS'trials.thisRepN'
p1467
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1468
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1469
sg30
I0
sg58
g45
(g585
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1470
sS'trials.thisTrialN'
p1471
I88
sg32
I1
sg39
g40
sg43
V4
sg33
F4.1194369792938232
sS'trials.thisN'
p1472
I88
sa(dp1473
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_02_orig.jpg'
p1474
sS'trials.thisIndex'
p1475
g45
(g585
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1476
sS'trials.thisRepN'
p1477
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp1478
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp1479
sg30
I0
sg58
g45
(g585
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1480
sS'trials.thisTrialN'
p1481
I89
sg32
I1
sg39
g40
sg43
V4
sg33
F2.5786640644073486
sS'trials.thisN'
p1482
I89
sa(dp1483
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_06_orig.jpg'
p1484
sS'trials.thisIndex'
p1485
g45
(g585
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1486
sS'trials.thisRepN'
p1487
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp1488
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1489
sg30
I1
sg58
g45
(g585
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1490
sS'trials.thisTrialN'
p1491
I90
sg32
I0
sg39
g40
sg43
V4
sg33
F0.91901087760925293
sS'trials.thisN'
p1492
I90
sa(dp1493
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_06_orig.jpg'
p1494
sS'trials.thisIndex'
p1495
g45
(g585
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1496
sS'trials.thisRepN'
p1497
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1498
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1499
sg30
I0
sg58
g45
(g585
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1500
sS'trials.thisTrialN'
p1501
I91
sg32
I1
sg39
g40
sg43
V4
sg33
F2.94858717918396
sS'trials.thisN'
p1502
I91
sa(dp1503
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_07_orig.jpg'
p1504
sS'trials.thisIndex'
p1505
g45
(g585
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1506
sS'trials.thisRepN'
p1507
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1508
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1509
sg30
I1
sg58
g45
(g585
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1510
sS'trials.thisTrialN'
p1511
I92
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1197769641876221
sS'trials.thisN'
p1512
I92
sa(dp1513
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_04_orig.jpg'
p1514
sS'trials.thisIndex'
p1515
g45
(g585
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1516
sS'trials.thisRepN'
p1517
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1518
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1519
sg30
I0
sg58
g45
(g585
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1520
sS'trials.thisTrialN'
p1521
I93
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2398462295532227
sS'trials.thisN'
p1522
I93
sa(dp1523
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_10_orig.jpg'
p1524
sS'trials.thisIndex'
p1525
g45
(g585
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1526
sS'trials.thisRepN'
p1527
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1528
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1529
sg30
I1
sg58
g45
(g585
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1530
sS'trials.thisTrialN'
p1531
I94
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3048560619354248
sS'trials.thisN'
p1532
I94
sa(dp1533
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_06_orig.jpg'
p1534
sS'trials.thisIndex'
p1535
g45
(g585
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1536
sS'trials.thisRepN'
p1537
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1538
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1539
sg30
I0
sg58
g45
(g585
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1540
sS'trials.thisTrialN'
p1541
I95
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5574920177459717
sS'trials.thisN'
p1542
I95
sa(dp1543
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_06_orig.jpg'
p1544
sS'trials.thisIndex'
p1545
g45
(g585
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1546
sS'trials.thisRepN'
p1547
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1548
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1549
sg30
I1
sg58
g45
(g585
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1550
sS'trials.thisTrialN'
p1551
I96
sg32
I0
sg39
g40
sg43
V4
sg33
F1.8587429523468018
sS'trials.thisN'
p1552
I96
sa(dp1553
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_02_orig.jpg'
p1554
sS'trials.thisIndex'
p1555
g45
(g585
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1556
sS'trials.thisRepN'
p1557
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1558
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1559
sg30
I0
sg58
g45
(g585
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1560
sS'trials.thisTrialN'
p1561
I97
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5408730506896973
sS'trials.thisN'
p1562
I97
sa(dp1563
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_08_orig.jpg'
p1564
sS'trials.thisIndex'
p1565
g45
(g585
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1566
sS'trials.thisRepN'
p1567
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1568
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1569
sg30
I1
sg58
g45
(g585
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1570
sS'trials.thisTrialN'
p1571
I98
sg32
I0
sg39
g40
sg43
V4
sg33
F1.187952995300293
sS'trials.thisN'
p1572
I98
sa(dp1573
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_07_orig.jpg'
p1574
sS'trials.thisIndex'
p1575
g45
(g585
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1576
sS'trials.thisRepN'
p1577
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1578
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1579
sg30
I0
sg58
g45
(g585
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1580
sS'trials.thisTrialN'
p1581
I99
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5413608551025391
sS'trials.thisN'
p1582
I99
sa(dp1583
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_09_orig.jpg'
p1584
sS'trials.thisIndex'
p1585
g45
(g585
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1586
sS'trials.thisRepN'
p1587
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1588
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1589
sg30
I1
sg58
g45
(g585
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1590
sS'trials.thisTrialN'
p1591
I100
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1366770267486572
sS'trials.thisN'
p1592
I100
sa(dp1593
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_04_orig.jpg'
p1594
sS'trials.thisIndex'
p1595
g45
(g585
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1596
sS'trials.thisRepN'
p1597
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1598
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1599
sg30
I0
sg58
g45
(g585
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1600
sS'trials.thisTrialN'
p1601
I101
sg32
I1
sg39
g40
sg43
V4
sg33
F3.6527490615844727
sS'trials.thisN'
p1602
I101
sa(dp1603
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_07_orig.jpg'
p1604
sS'trials.thisIndex'
p1605
g45
(g585
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1606
sS'trials.thisRepN'
p1607
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1608
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1609
sg30
I0
sg58
g45
(g585
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1610
sS'trials.thisTrialN'
p1611
I102
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8572661876678467
sS'trials.thisN'
p1612
I102
sa(dp1613
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_01_orig.jpg'
p1614
sS'trials.thisIndex'
p1615
g45
(g585
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1616
sS'trials.thisRepN'
p1617
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1618
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp1619
sg30
I0
sg58
g45
(g585
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1620
sS'trials.thisTrialN'
p1621
I103
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1044790744781494
sS'trials.thisN'
p1622
I103
sa(dp1623
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_06_orig.jpg'
p1624
sS'trials.thisIndex'
p1625
g45
(g585
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1626
sS'trials.thisRepN'
p1627
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xfa\xbf'
tRp1628
sg29
g45
(g47
S"\x00\x00\x00\x00\x00C'@"
tRp1629
sg30
I0
sg58
g45
(g585
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1630
sS'trials.thisTrialN'
p1631
I104
sg32
I1
sg39
g40
sg43
V4
sg33
F5.261807918548584
sS'trials.thisN'
p1632
I104
sa(dp1633
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_00_orig.jpg'
p1634
sS'trials.thisIndex'
p1635
g45
(g585
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1636
sS'trials.thisRepN'
p1637
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1638
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp1639
sg30
I0
sg58
g45
(g585
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1640
sS'trials.thisTrialN'
p1641
I105
sg32
I1
sg39
g40
sg43
V4
sg33
F0.97072196006774902
sS'trials.thisN'
p1642
I105
sa(dp1643
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_08_orig.jpg'
p1644
sS'trials.thisIndex'
p1645
g45
(g585
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1646
sS'trials.thisRepN'
p1647
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1648
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp1649
sg30
I1
sg58
g45
(g585
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1650
sS'trials.thisTrialN'
p1651
I106
sg32
I0
sg39
g40
sg43
V4
sg33
F1.4233620166778564
sS'trials.thisN'
p1652
I106
sa(dp1653
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_06_orig.jpg'
p1654
sS'trials.thisIndex'
p1655
g45
(g585
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1656
sS'trials.thisRepN'
p1657
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1658
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp1659
sg30
I1
sg58
g45
(g585
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1660
sS'trials.thisTrialN'
p1661
I107
sg32
I0
sg39
g40
sg43
V4
sg33
F1.7418160438537598
sS'trials.thisN'
p1662
I107
sa(dp1663
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_02_orig.jpg'
p1664
sS'trials.thisIndex'
p1665
g45
(g585
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1666
sS'trials.thisRepN'
p1667
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd8\xf8\xbf'
tRp1668
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xca'@"
tRp1669
sg30
I1
sg58
g45
(g585
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1670
sS'trials.thisTrialN'
p1671
I108
sg32
I0
sg39
g40
sg43
V4
sg33
F5.4627029895782471
sS'trials.thisN'
p1672
I108
sa(dp1673
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_02_orig.jpg'
p1674
sS'trials.thisIndex'
p1675
g45
(g585
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1676
sS'trials.thisRepN'
p1677
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd8\xf8\xbf'
tRp1678
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xca'@"
tRp1679
sg30
I0
sg58
g45
(g585
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1680
sS'trials.thisTrialN'
p1681
I109
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5390288829803467
sS'trials.thisN'
p1682
I109
sa(dp1683
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_08_orig.jpg'
p1684
sS'trials.thisIndex'
p1685
g45
(g585
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1686
sS'trials.thisRepN'
p1687
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7\xbf'
tRp1688
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xca'@"
tRp1689
sg30
I1
sg58
g45
(g585
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1690
sS'trials.thisTrialN'
p1691
I110
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1884109973907471
sS'trials.thisN'
p1692
I110
sa(dp1693
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_01_orig.jpg'
p1694
sS'trials.thisIndex'
p1695
g45
(g585
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1696
sS'trials.thisRepN'
p1697
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1698
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xe8'@"
tRp1699
sg30
I0
sg58
g45
(g585
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1700
sS'trials.thisTrialN'
p1701
I111
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0689170360565186
sS'trials.thisN'
p1702
I111
sa(dp1703
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_08_orig.jpg'
p1704
sS'trials.thisIndex'
p1705
g45
(g585
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1706
sS'trials.thisRepN'
p1707
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp1708
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xf7'@"
tRp1709
sg30
I1
sg58
g45
(g585
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1710
sS'trials.thisTrialN'
p1711
I112
sg32
I0
sg39
g40
sg43
V4
sg33
F0.98755884170532227
sS'trials.thisN'
p1712
I112
sa(dp1713
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_06_orig.jpg'
p1714
sS'trials.thisIndex'
p1715
g45
(g585
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1716
sS'trials.thisRepN'
p1717
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\xf5\xbf'
tRp1718
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1719
sg30
I1
sg58
g45
(g585
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1720
sS'trials.thisTrialN'
p1721
I113
sg32
I0
sg39
g40
sg43
V4
sg33
F1.6914019584655762
sS'trials.thisN'
p1722
I113
sa(dp1723
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_05_orig.jpg'
p1724
sS'trials.thisIndex'
p1725
g45
(g585
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1726
sS'trials.thisRepN'
p1727
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp1728
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1729
sg30
I0
sg58
g45
(g585
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1730
sS'trials.thisTrialN'
p1731
I114
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2398080825805664
sS'trials.thisN'
p1732
I114
sa(dp1733
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_06_orig.jpg'
p1734
sS'trials.thisIndex'
p1735
g45
(g585
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1736
sS'trials.thisRepN'
p1737
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp1738
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1739
sg30
I1
sg58
g45
(g585
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1740
sS'trials.thisTrialN'
p1741
I115
sg32
I0
sg39
g40
sg43
V4
sg33
F0.92046499252319336
sS'trials.thisN'
p1742
I115
sa(dp1743
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_00_orig.jpg'
p1744
sS'trials.thisIndex'
p1745
g45
(g585
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1746
sS'trials.thisRepN'
p1747
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp1748
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1749
sg30
I0
sg58
g45
(g585
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1750
sS'trials.thisTrialN'
p1751
I116
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1025440692901611
sS'trials.thisN'
p1752
I116
sa(dp1753
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_00_orig.jpg'
p1754
sS'trials.thisIndex'
p1755
g45
(g585
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1756
sS'trials.thisRepN'
p1757
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp1758
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1759
sg30
I1
sg58
g45
(g585
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1760
sS'trials.thisTrialN'
p1761
I117
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0713789463043213
sS'trials.thisN'
p1762
I117
sa(dp1763
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_02_orig.jpg'
p1764
sS'trials.thisIndex'
p1765
g45
(g585
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1766
sS'trials.thisRepN'
p1767
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp1768
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1769
sg30
I0
sg58
g45
(g585
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1770
sS'trials.thisTrialN'
p1771
I118
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7577099800109863
sS'trials.thisN'
p1772
I118
sa(dp1773
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_04_orig.jpg'
p1774
sS'trials.thisIndex'
p1775
g45
(g585
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1776
sS'trials.thisRepN'
p1777
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp1778
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp1779
sg30
I1
sg58
g45
(g585
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1780
sS'trials.thisTrialN'
p1781
I119
sg32
I0
sg39
g40
sg43
V4
sg33
F2.4126379489898682
sS'trials.thisN'
p1782
I119
sa(dp1783
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_00_orig.jpg'
p1784
sS'trials.thisIndex'
p1785
g45
(g585
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1786
sS'trials.thisRepN'
p1787
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1788
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1789
sg30
I0
sg58
g45
(g585
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1790
sS'trials.thisTrialN'
p1791
I120
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6554808616638184
sS'trials.thisN'
p1792
I120
sa(dp1793
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_07_orig.jpg'
p1794
sS'trials.thisIndex'
p1795
g45
(g585
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1796
sS'trials.thisRepN'
p1797
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1798
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1799
sg30
I1
sg58
g45
(g585
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1800
sS'trials.thisTrialN'
p1801
I121
sg32
I0
sg39
g40
sg43
V4
sg33
F0.90294098854064941
sS'trials.thisN'
p1802
I121
sa(dp1803
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_05_orig.jpg'
p1804
sS'trials.thisIndex'
p1805
g45
(g585
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1806
sS'trials.thisRepN'
p1807
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1808
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1809
sg30
I0
sg58
g45
(g585
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1810
sS'trials.thisTrialN'
p1811
I122
sg32
I1
sg39
g40
sg43
V4
sg33
F2.6618149280548096
sS'trials.thisN'
p1812
I122
sa(dp1813
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_10_orig.jpg'
p1814
sS'trials.thisIndex'
p1815
g45
(g585
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1816
sS'trials.thisRepN'
p1817
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1818
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1819
sg30
I1
sg58
g45
(g585
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1820
sS'trials.thisTrialN'
p1821
I123
sg32
I0
sg39
g40
sg43
V4
sg33
F1.641042947769165
sS'trials.thisN'
p1822
I123
sa(dp1823
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_06_orig.jpg'
p1824
sS'trials.thisIndex'
p1825
g45
(g585
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1826
sS'trials.thisRepN'
p1827
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1828
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1829
sg30
I0
sg58
g45
(g585
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1830
sS'trials.thisTrialN'
p1831
I124
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5892469882965088
sS'trials.thisN'
p1832
I124
sa(dp1833
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_00_orig.jpg'
p1834
sS'trials.thisIndex'
p1835
g45
(g585
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1836
sS'trials.thisRepN'
p1837
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1838
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1839
sg30
I0
sg58
g45
(g585
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1840
sS'trials.thisTrialN'
p1841
I125
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0699820518493652
sS'trials.thisN'
p1842
I125
sa(dp1843
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_07_orig.jpg'
p1844
sS'trials.thisIndex'
p1845
g45
(g585
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1846
sS'trials.thisRepN'
p1847
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1848
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1849
sg30
I1
sg58
g45
(g585
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1850
sS'trials.thisTrialN'
p1851
I126
sg32
I0
sg39
g40
sg43
V4
sg33
F0.93741202354431152
sS'trials.thisN'
p1852
I126
sa(dp1853
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_06_orig.jpg'
p1854
sS'trials.thisIndex'
p1855
g45
(g585
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1856
sS'trials.thisRepN'
p1857
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1858
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1859
sg30
I1
sg58
g45
(g585
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1860
sS'trials.thisTrialN'
p1861
I127
sg32
I0
sg39
g40
sg43
V4
sg33
F2.4614589214324951
sS'trials.thisN'
p1862
I127
sa(dp1863
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_00_orig.jpg'
p1864
sS'trials.thisIndex'
p1865
g45
(g585
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1866
sS'trials.thisRepN'
p1867
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1868
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1869
sg30
I0
sg58
g45
(g585
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1870
sS'trials.thisTrialN'
p1871
I128
sg32
I1
sg39
g40
sg43
V4
sg33
F0.8705909252166748
sS'trials.thisN'
p1872
I128
sa(dp1873
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_03_orig.jpg'
p1874
sS'trials.thisIndex'
p1875
g45
(g585
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1876
sS'trials.thisRepN'
p1877
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1878
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1879
sg30
I0
sg58
g45
(g585
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1880
sS'trials.thisTrialN'
p1881
I129
sg32
I1
sg39
g40
sg43
V4
sg33
F4.3890690803527832
sS'trials.thisN'
p1882
I129
sa(dp1883
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_04_orig.jpg'
p1884
sS'trials.thisIndex'
p1885
g45
(g585
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1886
sS'trials.thisRepN'
p1887
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp1888
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(@'
tRp1889
sg30
I1
sg58
g45
(g585
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1890
sS'trials.thisTrialN'
p1891
I130
sg32
I0
sg39
g40
sg43
V4
sg33
F3.6862189769744873
sS'trials.thisN'
p1892
I130
sa(dp1893
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_01_orig.jpg'
p1894
sS'trials.thisIndex'
p1895
g45
(g585
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1896
sS'trials.thisRepN'
p1897
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp1898
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp1899
sg30
I0
sg58
g45
(g585
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1900
sS'trials.thisTrialN'
p1901
I131
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1196751594543457
sS'trials.thisN'
p1902
I131
sa(dp1903
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_06_orig.jpg'
p1904
sS'trials.thisIndex'
p1905
g45
(g585
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1906
sS'trials.thisRepN'
p1907
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp1908
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp1909
sg30
I0
sg58
g45
(g585
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1910
sS'trials.thisTrialN'
p1911
I132
sg32
I1
sg39
g40
sg43
V4
sg33
F0.83575916290283203
sS'trials.thisN'
p1912
I132
sa(dp1913
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_09_orig.jpg'
p1914
sS'trials.thisIndex'
p1915
g45
(g585
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1916
sS'trials.thisRepN'
p1917
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp1918
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp1919
sg30
I1
sg58
g45
(g585
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1920
sS'trials.thisTrialN'
p1921
I133
sg32
I0
sg39
g40
sg43
V4
sg33
F0.88724994659423828
sS'trials.thisN'
p1922
I133
sa(dp1923
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_01_orig.jpg'
p1924
sS'trials.thisIndex'
p1925
g45
(g585
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1926
sS'trials.thisRepN'
p1927
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp1928
sg29
g45
(g47
S'\x00\x00\x00\x00\x003(@'
tRp1929
sg30
I0
sg58
g45
(g585
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1930
sS'trials.thisTrialN'
p1931
I134
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3280398845672607
sS'trials.thisN'
p1932
I134
sa(dp1933
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_01_orig.jpg'
p1934
sS'trials.thisIndex'
p1935
g45
(g585
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1936
sS'trials.thisRepN'
p1937
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp1938
sg29
g45
(g47
S'\x00\x00\x00\x00\x003(@'
tRp1939
sg30
I0
sg58
g45
(g585
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1940
sS'trials.thisTrialN'
p1941
I135
sg32
I1
sg39
g40
sg43
V4
sg33
F0.90375399589538574
sS'trials.thisN'
p1942
I135
sa(dp1943
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_03_orig.jpg'
p1944
sS'trials.thisIndex'
p1945
g45
(g585
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1946
sS'trials.thisRepN'
p1947
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp1948
sg29
g45
(g47
S'\x00\x00\x00\x00\x003(@'
tRp1949
sg30
I0
sg58
g45
(g585
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1950
sS'trials.thisTrialN'
p1951
I136
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2873129844665527
sS'trials.thisN'
p1952
I136
sa(dp1953
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_03_orig.jpg'
p1954
sS'trials.thisIndex'
p1955
g45
(g585
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1956
sS'trials.thisRepN'
p1957
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp1958
sg29
g45
(g47
S'\x00\x00\x00\x00\x003(@'
tRp1959
sg30
I0
sg58
g45
(g585
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1960
sS'trials.thisTrialN'
p1961
I137
sg32
I1
sg39
g40
sg43
V4
sg33
F2.7140979766845703
sS'trials.thisN'
p1962
I137
sa(dp1963
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_09_orig.jpg'
p1964
sS'trials.thisIndex'
p1965
g45
(g585
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1966
sS'trials.thisRepN'
p1967
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp1968
sg29
g45
(g47
S'\x00\x00\x00\x00\x003(@'
tRp1969
sg30
I1
sg58
g45
(g585
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1970
sS'trials.thisTrialN'
p1971
I138
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1885819435119629
sS'trials.thisN'
p1972
I138
sa(dp1973
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_00_orig.jpg'
p1974
sS'trials.thisIndex'
p1975
g45
(g585
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1976
sS'trials.thisRepN'
p1977
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp1978
sg29
g45
(g47
S'\x00\x00\x00\x00\x003(@'
tRp1979
sg30
I0
sg58
g45
(g585
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1980
sS'trials.thisTrialN'
p1981
I139
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6397788524627686
sS'trials.thisN'
p1982
I139
sa(dp1983
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_05_orig.jpg'
p1984
sS'trials.thisIndex'
p1985
g45
(g585
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1986
sS'trials.thisRepN'
p1987
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\xf5\xbf'
tRp1988
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp1989
sg30
I1
sg58
g45
(g585
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1990
sS'trials.thisTrialN'
p1991
I140
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2051429748535156
sS'trials.thisN'
p1992
I140
sa(dp1993
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_07_orig.jpg'
p1994
sS'trials.thisIndex'
p1995
g45
(g585
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp1996
sS'trials.thisRepN'
p1997
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp1998
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xbb'@"
tRp1999
sg30
I0
sg58
g45
(g585
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2000
sS'trials.thisTrialN'
p2001
I141
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8765130043029785
sS'trials.thisN'
p2002
I141
sa(dp2003
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_07_orig.jpg'
p2004
sS'trials.thisIndex'
p2005
g45
(g585
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2006
sS'trials.thisRepN'
p2007
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp2008
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xbb'@"
tRp2009
sg30
I0
sg58
g45
(g585
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2010
sS'trials.thisTrialN'
p2011
I142
sg32
I1
sg39
g40
sg43
V4
sg33
F0.81944608688354492
sS'trials.thisN'
p2012
I142
sa(dp2013
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_03_orig.jpg'
p2014
sS'trials.thisIndex'
p2015
g45
(g585
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2016
sS'trials.thisRepN'
p2017
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp2018
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xbb'@"
tRp2019
sg30
I0
sg58
g45
(g585
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2020
sS'trials.thisTrialN'
p2021
I143
sg32
I1
sg39
g40
sg43
V4
sg33
F0.90366816520690918
sS'trials.thisN'
p2022
I143
sa(dp2023
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_07_orig.jpg'
p2024
sS'trials.thisIndex'
p2025
g45
(g585
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2026
sS'trials.thisRepN'
p2027
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp2028
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xbb'@"
tRp2029
sg30
I1
sg58
g45
(g585
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2030
sS'trials.thisTrialN'
p2031
I144
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2372329235076904
sS'trials.thisN'
p2032
I144
sa(dp2033
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_10_orig.jpg'
p2034
sS'trials.thisIndex'
p2035
g45
(g585
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2036
sS'trials.thisRepN'
p2037
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp2038
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xbb'@"
tRp2039
sg30
I1
sg58
g45
(g585
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2040
sS'trials.thisTrialN'
p2041
I145
sg32
I0
sg39
g40
sg43
V4
sg33
F0.85129404067993164
sS'trials.thisN'
p2042
I145
sa(dp2043
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_06_orig.jpg'
p2044
sS'trials.thisIndex'
p2045
g45
(g585
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2046
sS'trials.thisRepN'
p2047
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7\xbf'
tRp2048
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xe8'@"
tRp2049
sg30
I1
sg58
g45
(g585
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2050
sS'trials.thisTrialN'
p2051
I146
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1215360164642334
sS'trials.thisN'
p2052
I146
sa(dp2053
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_02_orig.jpg'
p2054
sS'trials.thisIndex'
p2055
g45
(g585
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2056
sS'trials.thisRepN'
p2057
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp2058
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x06(@'
tRp2059
sg30
I1
sg58
g45
(g585
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2060
sS'trials.thisTrialN'
p2061
I147
sg32
I0
sg39
g40
sg43
V4
sg33
F2.446152925491333
sS'trials.thisN'
p2062
I147
sa(dp2063
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_05_orig.jpg'
p2064
sS'trials.thisIndex'
p2065
g45
(g585
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2066
sS'trials.thisRepN'
p2067
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp2068
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp2069
sg30
I0
sg58
g45
(g585
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2070
sS'trials.thisTrialN'
p2071
I148
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9264810085296631
sS'trials.thisN'
p2072
I148
sa(dp2073
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_04_orig.jpg'
p2074
sS'trials.thisIndex'
p2075
g45
(g585
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2076
sS'trials.thisRepN'
p2077
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp2078
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp2079
sg30
I0
sg58
g45
(g585
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2080
sS'trials.thisTrialN'
p2081
I149
sg32
I1
sg39
g40
sg43
V4
sg33
F1.4545109272003174
sS'trials.thisN'
p2082
I149
sa(dp2083
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_10_orig.jpg'
p2084
sS'trials.thisIndex'
p2085
g45
(g585
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2086
sS'trials.thisRepN'
p2087
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp2088
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(@'
tRp2089
sg30
I1
sg58
g45
(g585
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2090
sS'trials.thisTrialN'
p2091
I150
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0882339477539062
sS'trials.thisN'
p2092
I150
sa(dp2093
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_08_orig.jpg'
p2094
sS'trials.thisIndex'
p2095
g45
(g585
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2096
sS'trials.thisRepN'
p2097
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xf2\xbf'
tRp2098
sg29
g45
(g47
S'\x00\x00\x00\x00\x00B(@'
tRp2099
sg30
I0
sg58
g45
(g585
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2100
sS'trials.thisTrialN'
p2101
I151
sg32
I1
sg39
g40
sg43
V4
sg33
F3.0133597850799561
sS'trials.thisN'
p2102
I151
sa(dp2103
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_02_orig.jpg'
p2104
sS'trials.thisIndex'
p2105
g45
(g585
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2106
sS'trials.thisRepN'
p2107
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\xf2\xbf'
tRp2108
sg29
g45
(g47
S'\x00\x00\x00\x00\x00B(@'
tRp2109
sg30
I0
sg58
g45
(g585
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2110
sS'trials.thisTrialN'
p2111
I152
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3398408889770508
sS'trials.thisN'
p2112
I152
sa(dp2113
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_05_orig.jpg'
p2114
sS'trials.thisIndex'
p2115
g45
(g585
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2116
sS'trials.thisRepN'
p2117
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xf1\xbf'
tRp2118
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Q(@'
tRp2119
sg30
I0
sg58
g45
(g585
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2120
sS'trials.thisTrialN'
p2121
I153
sg32
I1
sg39
g40
sg43
V4
sg33
F0.85351896286010742
sS'trials.thisN'
p2122
I153
sa(dp2123
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_09_orig.jpg'
p2124
sS'trials.thisIndex'
p2125
g45
(g585
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2126
sS'trials.thisRepN'
p2127
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xf1\xbf'
tRp2128
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Q(@'
tRp2129
sg30
I1
sg58
g45
(g585
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2130
sS'trials.thisTrialN'
p2131
I154
sg32
I0
sg39
g40
sg43
V4
sg33
F0.86787295341491699
sS'trials.thisN'
p2132
I154
sa(dp2133
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_03_orig.jpg'
p2134
sS'trials.thisIndex'
p2135
g45
(g585
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2136
sS'trials.thisRepN'
p2137
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp2138
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Q(@'
tRp2139
sg30
I0
sg58
g45
(g585
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2140
sS'trials.thisTrialN'
p2141
I155
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2556231021881104
sS'trials.thisN'
p2142
I155
sa(dp2143
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_03_orig.jpg'
p2144
sS'trials.thisIndex'
p2145
g45
(g585
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2146
sS'trials.thisRepN'
p2147
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp2148
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(@'
tRp2149
sg30
I0
sg58
g45
(g585
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2150
sS'trials.thisTrialN'
p2151
I156
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0712461471557617
sS'trials.thisN'
p2152
I156
sa(dp2153
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_01_orig.jpg'
p2154
sS'trials.thisIndex'
p2155
g45
(g585
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2156
sS'trials.thisRepN'
p2157
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp2158
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(@'
tRp2159
sg30
I0
sg58
g45
(g585
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2160
sS'trials.thisTrialN'
p2161
I157
sg32
I1
sg39
g40
sg43
V4
sg33
F0.98711895942687988
sS'trials.thisN'
p2162
I157
sa(dp2163
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_01_orig.jpg'
p2164
sS'trials.thisIndex'
p2165
g45
(g585
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2166
sS'trials.thisRepN'
p2167
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp2168
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(@'
tRp2169
sg30
I0
sg58
g45
(g585
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2170
sS'trials.thisTrialN'
p2171
I158
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7251219749450684
sS'trials.thisN'
p2172
I158
sa(dp2173
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_02_orig.jpg'
p2174
sS'trials.thisIndex'
p2175
g45
(g585
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2176
sS'trials.thisRepN'
p2177
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp2178
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Q(@'
tRp2179
sg30
I0
sg58
g45
(g585
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2180
sS'trials.thisTrialN'
p2181
I159
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3102970123291016
sS'trials.thisN'
p2182
I159
sa(dp2183
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_02_orig.jpg'
p2184
sS'trials.thisIndex'
p2185
g45
(g585
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2186
sS'trials.thisRepN'
p2187
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp2188
sg29
g45
(g47
S'\x00\x00\x00\x00\x00B(@'
tRp2189
sg30
I0
sg58
g45
(g585
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2190
sS'trials.thisTrialN'
p2191
I160
sg32
I1
sg39
g40
sg43
V4
sg33
F3.0827798843383789
sS'trials.thisN'
p2192
I160
sa(dp2193
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_10_orig.jpg'
p2194
sS'trials.thisIndex'
p2195
g45
(g585
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2196
sS'trials.thisRepN'
p2197
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp2198
sg29
g45
(g47
S'\x00\x00\x00\x00\x00B(@'
tRp2199
sg30
I1
sg58
g45
(g585
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2200
sS'trials.thisTrialN'
p2201
I161
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0040609836578369
sS'trials.thisN'
p2202
I161
sa(dp2203
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_10_orig.jpg'
p2204
sS'trials.thisIndex'
p2205
g45
(g585
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2206
sS'trials.thisRepN'
p2207
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2208
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(@'
tRp2209
sg30
I1
sg58
g45
(g585
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2210
sS'trials.thisTrialN'
p2211
I162
sg32
I0
sg39
g40
sg43
V4
sg33
F2.6638109683990479
sS'trials.thisN'
p2212
I162
sa(dp2213
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_04_orig.jpg'
p2214
sS'trials.thisIndex'
p2215
g45
(g585
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2216
sS'trials.thisRepN'
p2217
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2218
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(@'
tRp2219
sg30
I0
sg58
g45
(g585
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2220
sS'trials.thisTrialN'
p2221
I163
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3265860080718994
sS'trials.thisN'
p2222
I163
sa(dp2223
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_00_orig.jpg'
p2224
sS'trials.thisIndex'
p2225
g45
(g585
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2226
sS'trials.thisRepN'
p2227
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2228
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(@'
tRp2229
sg30
I0
sg58
g45
(g585
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2230
sS'trials.thisTrialN'
p2231
I164
sg32
I1
sg39
g40
sg43
V4
sg33
F2.865070104598999
sS'trials.thisN'
p2232
I164
sa(dp2233
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_07_orig.jpg'
p2234
sS'trials.thisIndex'
p2235
g45
(g585
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2236
sS'trials.thisRepN'
p2237
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp2238
sg29
g45
(g47
S'\x00\x00\x00\x00\x00o(@'
tRp2239
sg30
I1
sg58
g45
(g585
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2240
sS'trials.thisTrialN'
p2241
I165
sg32
I0
sg39
g40
sg43
V4
sg33
F0.97069191932678223
sS'trials.thisN'
p2242
I165
sa(dp2243
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_05_orig.jpg'
p2244
sS'trials.thisIndex'
p2245
g45
(g585
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2246
sS'trials.thisRepN'
p2247
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp2248
sg29
g45
(g47
S'\x00\x00\x00\x00\x00o(@'
tRp2249
sg30
I1
sg58
g45
(g585
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2250
sS'trials.thisTrialN'
p2251
I166
sg32
I0
sg39
g40
sg43
V4
sg33
F1.13863205909729
sS'trials.thisN'
p2252
I166
sa(dp2253
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_03_orig.jpg'
p2254
sS'trials.thisIndex'
p2255
g45
(g585
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2256
sS'trials.thisRepN'
p2257
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2258
sg29
g45
(g47
S'\x00\x00\x00\x00\x00~(@'
tRp2259
sg30
I0
sg58
g45
(g585
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2260
sS'trials.thisTrialN'
p2261
I167
sg32
I1
sg39
g40
sg43
V4
sg33
F2.0265109539031982
sS'trials.thisN'
p2262
I167
sa(dp2263
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_02_orig.jpg'
p2264
sS'trials.thisIndex'
p2265
g45
(g585
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2266
sS'trials.thisRepN'
p2267
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2268
sg29
g45
(g47
S'\x00\x00\x00\x00\x00~(@'
tRp2269
sg30
I0
sg58
g45
(g585
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2270
sS'trials.thisTrialN'
p2271
I168
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9594919681549072
sS'trials.thisN'
p2272
I168
sa(dp2273
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_01_orig.jpg'
p2274
sS'trials.thisIndex'
p2275
g45
(g585
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2276
sS'trials.thisRepN'
p2277
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2278
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8d(@'
tRp2279
sg30
I0
sg58
g45
(g585
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2280
sS'trials.thisTrialN'
p2281
I169
sg32
I1
sg39
g40
sg43
V4
sg33
F1.021237850189209
sS'trials.thisN'
p2282
I169
sa(dp2283
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_04_orig.jpg'
p2284
sS'trials.thisIndex'
p2285
g45
(g585
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2286
sS'trials.thisRepN'
p2287
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2288
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8d(@'
tRp2289
sg30
I0
sg58
g45
(g585
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2290
sS'trials.thisTrialN'
p2291
I170
sg32
I1
sg39
g40
sg43
V4
sg33
F2.7136130332946777
sS'trials.thisN'
p2292
I170
sa(dp2293
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_09_orig.jpg'
p2294
sS'trials.thisIndex'
p2295
g45
(g585
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2296
sS'trials.thisRepN'
p2297
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2298
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8d(@'
tRp2299
sg30
I1
sg58
g45
(g585
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2300
sS'trials.thisTrialN'
p2301
I171
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1721010208129883
sS'trials.thisN'
p2302
I171
sa(dp2303
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM6_00_orig.jpg'
p2304
sS'trials.thisIndex'
p2305
g45
(g585
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2306
sS'trials.thisRepN'
p2307
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2308
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9c(@'
tRp2309
sg30
I0
sg58
g45
(g585
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2310
sS'trials.thisTrialN'
p2311
I172
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2892661094665527
sS'trials.thisN'
p2312
I172
sa(dp2313
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_09_orig.jpg'
p2314
sS'trials.thisIndex'
p2315
g45
(g585
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2316
sS'trials.thisRepN'
p2317
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2318
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9c(@'
tRp2319
sg30
I1
sg58
g45
(g585
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2320
sS'trials.thisTrialN'
p2321
I173
sg32
I0
sg39
g40
sg43
V4
sg33
F1.6227118968963623
sS'trials.thisN'
p2322
I173
sa(dp2323
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_06_orig.jpg'
p2324
sS'trials.thisIndex'
p2325
g45
(g585
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2326
sS'trials.thisRepN'
p2327
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp2328
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8(@'
tRp2329
sg30
I1
sg58
g45
(g585
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2330
sS'trials.thisTrialN'
p2331
I174
sg32
I0
sg39
g40
sg43
V4
sg33
F2.7133960723876953
sS'trials.thisN'
p2332
I174
sa(dp2333
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_01_orig.jpg'
p2334
sS'trials.thisIndex'
p2335
g45
(g585
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2336
sS'trials.thisRepN'
p2337
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp2338
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8(@'
tRp2339
sg30
I0
sg58
g45
(g585
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2340
sS'trials.thisTrialN'
p2341
I175
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9094059467315674
sS'trials.thisN'
p2342
I175
sa(dp2343
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_07_orig.jpg'
p2344
sS'trials.thisIndex'
p2345
g45
(g585
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2346
sS'trials.thisRepN'
p2347
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp2348
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8(@'
tRp2349
sg30
I1
sg58
g45
(g585
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2350
sS'trials.thisTrialN'
p2351
I176
sg32
I0
sg39
g40
sg43
V4
sg33
F2.3783919811248779
sS'trials.thisN'
p2352
I176
sa(dp2353
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_01_orig.jpg'
p2354
sS'trials.thisIndex'
p2355
g45
(g585
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2356
sS'trials.thisRepN'
p2357
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp2358
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8(@'
tRp2359
sg30
I0
sg58
g45
(g585
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2360
sS'trials.thisTrialN'
p2361
I177
sg32
I1
sg39
g40
sg43
V4
sg33
F2.8289937973022461
sS'trials.thisN'
p2362
I177
sa(dp2363
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_03_orig.jpg'
p2364
sS'trials.thisIndex'
p2365
g45
(g585
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2366
sS'trials.thisRepN'
p2367
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp2368
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8(@'
tRp2369
sg30
I1
sg58
g45
(g585
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2370
sS'trials.thisTrialN'
p2371
I178
sg32
I0
sg39
g40
sg43
V4
sg33
F3.7179141044616699
sS'trials.thisN'
p2372
I178
sa(dp2373
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_09_orig.jpg'
p2374
sS'trials.thisIndex'
p2375
g45
(g585
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2376
sS'trials.thisRepN'
p2377
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp2378
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2379
sg30
I1
sg58
g45
(g585
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2380
sS'trials.thisTrialN'
p2381
I179
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1218039989471436
sS'trials.thisN'
p2382
I179
sa(dp2383
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_10_orig.jpg'
p2384
sS'trials.thisIndex'
p2385
g45
(g585
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2386
sS'trials.thisRepN'
p2387
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp2388
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2389
sg30
I1
sg58
g45
(g585
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2390
sS'trials.thisTrialN'
p2391
I180
sg32
I0
sg39
g40
sg43
V4
sg33
F0.90225505828857422
sS'trials.thisN'
p2392
I180
sa(dp2393
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_10_orig.jpg'
p2394
sS'trials.thisIndex'
p2395
g45
(g585
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2396
sS'trials.thisRepN'
p2397
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp2398
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2399
sg30
I1
sg58
g45
(g585
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2400
sS'trials.thisTrialN'
p2401
I181
sg32
I0
sg39
g40
sg43
V4
sg33
F0.75258493423461914
sS'trials.thisN'
p2402
I181
sa(dp2403
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_10_orig.jpg'
p2404
sS'trials.thisIndex'
p2405
g45
(g585
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2406
sS'trials.thisRepN'
p2407
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp2408
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2409
sg30
I1
sg58
g45
(g585
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2410
sS'trials.thisTrialN'
p2411
I182
sg32
I0
sg39
g40
sg43
V4
sg33
F1.6579799652099609
sS'trials.thisN'
p2412
I182
sa(dp2413
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_09_orig.jpg'
p2414
sS'trials.thisIndex'
p2415
g45
(g585
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2416
sS'trials.thisRepN'
p2417
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp2418
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2419
sg30
I1
sg58
g45
(g585
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2420
sS'trials.thisTrialN'
p2421
I183
sg32
I0
sg39
g40
sg43
V4
sg33
F0.90358304977416992
sS'trials.thisN'
p2422
I183
sa(dp2423
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_05_orig.jpg'
p2424
sS'trials.thisIndex'
p2425
g45
(g585
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2426
sS'trials.thisRepN'
p2427
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2428
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2429
sg30
I0
sg58
g45
(g585
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2430
sS'trials.thisTrialN'
p2431
I184
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0210459232330322
sS'trials.thisN'
p2432
I184
sa(dp2433
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF6_00_orig.jpg'
p2434
sS'trials.thisIndex'
p2435
g45
(g585
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2436
sS'trials.thisRepN'
p2437
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2438
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2439
sg30
I0
sg58
g45
(g585
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2440
sS'trials.thisTrialN'
p2441
I185
sg32
I1
sg39
g40
sg43
V4
sg33
F0.93712306022644043
sS'trials.thisN'
p2442
I185
sa(dp2443
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_08_orig.jpg'
p2444
sS'trials.thisIndex'
p2445
g45
(g585
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2446
sS'trials.thisRepN'
p2447
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2448
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2449
sg30
I0
sg58
g45
(g585
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2450
sS'trials.thisTrialN'
p2451
I186
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3557798862457275
sS'trials.thisN'
p2452
I186
sa(dp2453
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_10_orig.jpg'
p2454
sS'trials.thisIndex'
p2455
g45
(g585
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2456
sS'trials.thisRepN'
p2457
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2458
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2459
sg30
I1
sg58
g45
(g585
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2460
sS'trials.thisTrialN'
p2461
I187
sg32
I0
sg39
g40
sg43
V4
sg33
F2.1271941661834717
sS'trials.thisN'
p2462
I187
sa(dp2463
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_10_orig.jpg'
p2464
sS'trials.thisIndex'
p2465
g45
(g585
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2466
sS'trials.thisRepN'
p2467
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2468
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2469
sg30
I1
sg58
g45
(g585
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2470
sS'trials.thisTrialN'
p2471
I188
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0035748481750488
sS'trials.thisN'
p2472
I188
sa(dp2473
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_05_orig.jpg'
p2474
sS'trials.thisIndex'
p2475
g45
(g585
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2476
sS'trials.thisRepN'
p2477
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2478
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2479
sg30
I1
sg58
g45
(g585
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2480
sS'trials.thisTrialN'
p2481
I189
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1374180316925049
sS'trials.thisN'
p2482
I189
sa(dp2483
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_03_orig.jpg'
p2484
sS'trials.thisIndex'
p2485
g45
(g585
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2486
sS'trials.thisRepN'
p2487
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2488
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2489
sg30
I1
sg58
g45
(g585
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2490
sS'trials.thisTrialN'
p2491
I190
sg32
I0
sg39
g40
sg43
V4
sg33
F2.1609108448028564
sS'trials.thisN'
p2492
I190
sa(dp2493
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_10_orig.jpg'
p2494
sS'trials.thisIndex'
p2495
g45
(g585
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2496
sS'trials.thisRepN'
p2497
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2498
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2499
sg30
I1
sg58
g45
(g585
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2500
sS'trials.thisTrialN'
p2501
I191
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3391730785369873
sS'trials.thisN'
p2502
I191
sa(dp2503
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_02_orig.jpg'
p2504
sS'trials.thisIndex'
p2505
g45
(g585
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2506
sS'trials.thisRepN'
p2507
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2508
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2509
sg30
I0
sg58
g45
(g585
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2510
sS'trials.thisTrialN'
p2511
I192
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7586860656738281
sS'trials.thisN'
p2512
I192
sa(dp2513
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM4_09_orig.jpg'
p2514
sS'trials.thisIndex'
p2515
g45
(g585
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2516
sS'trials.thisRepN'
p2517
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2518
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2519
sg30
I1
sg58
g45
(g585
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2520
sS'trials.thisTrialN'
p2521
I193
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2724540233612061
sS'trials.thisN'
p2522
I193
sa(dp2523
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_07_orig.jpg'
p2524
sS'trials.thisIndex'
p2525
g45
(g585
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2526
sS'trials.thisRepN'
p2527
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2528
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xba(@'
tRp2529
sg30
I1
sg58
g45
(g585
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2530
sS'trials.thisTrialN'
p2531
I194
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1380100250244141
sS'trials.thisN'
p2532
I194
sa(dp2533
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM1_08_orig.jpg'
p2534
sS'trials.thisIndex'
p2535
g45
(g585
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2536
sS'trials.thisRepN'
p2537
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp2538
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp2539
sg30
I1
sg58
g45
(g585
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2540
sS'trials.thisTrialN'
p2541
I195
sg32
I0
sg39
g40
sg43
V4
sg33
F6.4850020408630371
sS'trials.thisN'
p2542
I195
sa(dp2543
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF4_08_orig.jpg'
p2544
sS'trials.thisIndex'
p2545
g45
(g585
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2546
sS'trials.thisRepN'
p2547
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp2548
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp2549
sg30
I1
sg58
g45
(g585
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2550
sS'trials.thisTrialN'
p2551
I196
sg32
I0
sg39
g40
sg43
V4
sg33
F0.85312795639038086
sS'trials.thisN'
p2552
I196
sa(dp2553
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_04_orig.jpg'
p2554
sS'trials.thisIndex'
p2555
g45
(g585
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2556
sS'trials.thisRepN'
p2557
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp2558
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2559
sg30
I0
sg58
g45
(g585
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2560
sS'trials.thisTrialN'
p2561
I197
sg32
I1
sg39
g40
sg43
V4
sg33
F3.4827041625976562
sS'trials.thisN'
p2562
I197
sa(dp2563
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF1_09_orig.jpg'
p2564
sS'trials.thisIndex'
p2565
g45
(g585
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2566
sS'trials.thisRepN'
p2567
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp2568
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2569
sg30
I1
sg58
g45
(g585
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2570
sS'trials.thisTrialN'
p2571
I198
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1050949096679688
sS'trials.thisN'
p2572
I198
sa(dp2573
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_08_orig.jpg'
p2574
sS'trials.thisIndex'
p2575
g45
(g585
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2576
sS'trials.thisRepN'
p2577
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp2578
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp2579
sg30
I1
sg58
g45
(g585
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2580
sS'trials.thisTrialN'
p2581
I199
sg32
I0
sg39
g40
sg43
V4
sg33
F0.9352109432220459
sS'trials.thisN'
p2582
I199
sa(dp2583
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_01_orig.jpg'
p2584
sS'trials.thisIndex'
p2585
g45
(g585
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2586
sS'trials.thisRepN'
p2587
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp2588
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2589
sg30
I0
sg58
g45
(g585
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2590
sS'trials.thisTrialN'
p2591
I200
sg32
I1
sg39
g40
sg43
V4
sg33
F2.0104789733886719
sS'trials.thisN'
p2592
I200
sa(dp2593
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM10_00_orig.jpg'
p2594
sS'trials.thisIndex'
p2595
g45
(g585
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2596
sS'trials.thisRepN'
p2597
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp2598
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2599
sg30
I0
sg58
g45
(g585
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2600
sS'trials.thisTrialN'
p2601
I201
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9928162097930908
sS'trials.thisN'
p2602
I201
sa(dp2603
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_00_orig.jpg'
p2604
sS'trials.thisIndex'
p2605
g45
(g585
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2606
sS'trials.thisRepN'
p2607
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed\xbf'
tRp2608
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2609
sg30
I0
sg58
g45
(g585
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2610
sS'trials.thisTrialN'
p2611
I202
sg32
I1
sg39
g40
sg43
V4
sg33
F0.96868705749511719
sS'trials.thisN'
p2612
I202
sa(dp2613
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM9_01_orig.jpg'
p2614
sS'trials.thisIndex'
p2615
g45
(g585
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2616
sS'trials.thisRepN'
p2617
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed\xbf'
tRp2618
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2619
sg30
I0
sg58
g45
(g585
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2620
sS'trials.thisTrialN'
p2621
I203
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1533069610595703
sS'trials.thisN'
p2622
I203
sa(dp2623
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF7_09_orig.jpg'
p2624
sS'trials.thisIndex'
p2625
g45
(g585
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2626
sS'trials.thisRepN'
p2627
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed\xbf'
tRp2628
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2629
sg30
I1
sg58
g45
(g585
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2630
sS'trials.thisTrialN'
p2631
I204
sg32
I0
sg39
g40
sg43
V4
sg33
F0.87031912803649902
sS'trials.thisN'
p2632
I204
sa(dp2633
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF9_00_orig.jpg'
p2634
sS'trials.thisIndex'
p2635
g45
(g585
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2636
sS'trials.thisRepN'
p2637
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed\xbf'
tRp2638
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2639
sg30
I0
sg58
g45
(g585
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2640
sS'trials.thisTrialN'
p2641
I205
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5550599098205566
sS'trials.thisN'
p2642
I205
sa(dp2643
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_02_orig.jpg'
p2644
sS'trials.thisIndex'
p2645
g45
(g585
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2646
sS'trials.thisRepN'
p2647
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed\xbf'
tRp2648
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2649
sg30
I0
sg58
g45
(g585
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2650
sS'trials.thisTrialN'
p2651
I206
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0220069885253906
sS'trials.thisN'
p2652
I206
sa(dp2653
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_05_orig.jpg'
p2654
sS'trials.thisIndex'
p2655
g45
(g585
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2656
sS'trials.thisRepN'
p2657
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2658
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2659
sg30
I0
sg58
g45
(g585
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2660
sS'trials.thisTrialN'
p2661
I207
sg32
I1
sg39
g40
sg43
V4
sg33
F0.93589305877685547
sS'trials.thisN'
p2662
I207
sa(dp2663
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF3_09_orig.jpg'
p2664
sS'trials.thisIndex'
p2665
g45
(g585
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2666
sS'trials.thisRepN'
p2667
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2668
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2669
sg30
I1
sg58
g45
(g585
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2670
sS'trials.thisTrialN'
p2671
I208
sg32
I0
sg39
g40
sg43
V4
sg33
F2.2945990562438965
sS'trials.thisN'
p2672
I208
sa(dp2673
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_10_orig.jpg'
p2674
sS'trials.thisIndex'
p2675
g45
(g585
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2676
sS'trials.thisRepN'
p2677
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2678
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2679
sg30
I1
sg58
g45
(g585
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2680
sS'trials.thisTrialN'
p2681
I209
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1697971820831299
sS'trials.thisN'
p2682
I209
sa(dp2683
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM8_08_orig.jpg'
p2684
sS'trials.thisIndex'
p2685
g45
(g585
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2686
sS'trials.thisRepN'
p2687
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2688
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2689
sg30
I1
sg58
g45
(g585
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2690
sS'trials.thisTrialN'
p2691
I210
sg32
I0
sg39
g40
sg43
V4
sg33
F0.80355191230773926
sS'trials.thisN'
p2692
I210
sa(dp2693
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM3_07_orig.jpg'
p2694
sS'trials.thisIndex'
p2695
g45
(g585
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2696
sS'trials.thisRepN'
p2697
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2698
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2699
sg30
I1
sg58
g45
(g585
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2700
sS'trials.thisTrialN'
p2701
I211
sg32
I0
sg39
g40
sg43
V4
sg33
F0.80329298973083496
sS'trials.thisN'
p2702
I211
sa(dp2703
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM5_06_orig.jpg'
p2704
sS'trials.thisIndex'
p2705
g45
(g585
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2706
sS'trials.thisRepN'
p2707
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2708
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2709
sg30
I1
sg58
g45
(g585
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2710
sS'trials.thisTrialN'
p2711
I212
sg32
I0
sg39
g40
sg43
V4
sg33
F2.764056921005249
sS'trials.thisN'
p2712
I212
sa(dp2713
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_09_orig.jpg'
p2714
sS'trials.thisIndex'
p2715
g45
(g585
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2716
sS'trials.thisRepN'
p2717
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2718
sg29
g45
(g47
S"\x00\x00\x00\x00\x00a'@"
tRp2719
sg30
I1
sg58
g45
(g585
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2720
sS'trials.thisTrialN'
p2721
I213
sg32
I0
sg39
g40
sg43
V4
sg33
F0.78575801849365234
sS'trials.thisN'
p2722
I213
sa(dp2723
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF8_06_orig.jpg'
p2724
sS'trials.thisIndex'
p2725
g45
(g585
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2726
sS'trials.thisRepN'
p2727
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2728
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp2729
sg30
I1
sg58
g45
(g585
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2730
sS'trials.thisTrialN'
p2731
I214
sg32
I0
sg39
g40
sg43
V4
sg33
F3.9371089935302734
sS'trials.thisN'
p2732
I214
sa(dp2733
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF5_04_orig.jpg'
p2734
sS'trials.thisIndex'
p2735
g45
(g585
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2736
sS'trials.thisRepN'
p2737
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp2738
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp2739
sg30
I1
sg58
g45
(g585
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2740
sS'trials.thisTrialN'
p2741
I215
sg32
I0
sg39
g40
sg43
V4
sg33
F0.97111201286315918
sS'trials.thisN'
p2742
I215
sa(dp2743
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM2_04_orig.jpg'
p2744
sS'trials.thisIndex'
p2745
g45
(g585
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2746
sS'trials.thisRepN'
p2747
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp2748
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2749
sg30
I0
sg58
g45
(g585
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2750
sS'trials.thisTrialN'
p2751
I216
sg32
I1
sg39
g40
sg43
V4
sg33
F3.7526578903198242
sS'trials.thisN'
p2752
I216
sa(dp2753
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF2_05_orig.jpg'
p2754
sS'trials.thisIndex'
p2755
g45
(g585
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2756
sS'trials.thisRepN'
p2757
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp2758
sg29
g45
(g47
S"\x00\x00\x00\x00\x00p'@"
tRp2759
sg30
I1
sg58
g45
(g585
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2760
sS'trials.thisTrialN'
p2761
I217
sg32
I0
sg39
g40
sg43
V4
sg33
F2.1098930835723877
sS'trials.thisN'
p2762
I217
sa(dp2763
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphM7_01_orig.jpg'
p2764
sS'trials.thisIndex'
p2765
g45
(g585
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2766
sS'trials.thisRepN'
p2767
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp2768
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x7f'@"
tRp2769
sg30
I1
sg58
g45
(g585
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2770
sS'trials.thisTrialN'
p2771
I218
sg32
I0
sg39
g40
sg43
V4
sg33
F2.4277980327606201
sS'trials.thisN'
p2772
I218
sa(dp2773
g31
I0
sg42
g11
sg41
VG
sg582
S'./stim/MorphF10_09_orig.jpg'
p2774
sS'trials.thisIndex'
p2775
g45
(g585
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2776
sS'trials.thisRepN'
p2777
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp2778
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x8e'@"
tRp2779
sg30
I1
sg58
g45
(g585
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2780
sS'trials.thisTrialN'
p2781
I219
sg32
I0
sg39
g40
sg43
V4
sg33
F2.61297607421875
sS'trials.thisN'
p2782
I219
sa(dp2783
g42
g11
sg34
S'return'
p2784
sg41
VG
sg39
g40
sg43
V4
sg44
g48
sg35
F18.418985843658447
sa(dp2785
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2786
g45
(g585
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2787
sS'trials2.thisRepN'
p2788
I0
sS'trials2.thisTrialN'
p2789
I0
sS'img'
p2790
S'./stim/MorphM6_10_orig.jpg'
p2791
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x13*@'
tRp2792
sg29
g45
(g47
S'\x00\x00\x00\x00\x00r\x15@'
tRp2793
sg30
I1
sS'num'
p2794
g45
(g585
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2795
sg32
I0
sg39
g40
sg43
V4
sg33
F6.8095970153808594
sS'trials2.thisN'
p2796
I0
sa(dp2797
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2798
g45
(g585
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2799
sS'trials2.thisRepN'
p2800
I0
sS'trials2.thisTrialN'
p2801
I1
sg2790
S'./stim/MorphF9_04_orig.jpg'
p2802
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp2803
sg29
g45
(g47
S'\x00\x00\x00\x00\x00r\x15@'
tRp2804
sg30
I0
sg2794
g45
(g585
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2805
sg32
I1
sg39
g40
sg43
V4
sg33
F3.1810591220855713
sS'trials2.thisN'
p2806
I1
sa(dp2807
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2808
g45
(g585
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2809
sS'trials2.thisRepN'
p2810
I0
sS'trials2.thisTrialN'
p2811
I2
sg2790
S'./stim/MorphM3_03_orig.jpg'
p2812
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x001*@'
tRp2813
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x15@'
tRp2814
sg30
I0
sg2794
g45
(g585
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2815
sg32
I1
sg39
g40
sg43
V4
sg33
F4.0541689395904541
sS'trials2.thisN'
p2816
I2
sa(dp2817
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2818
g45
(g585
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2819
sS'trials2.thisRepN'
p2820
I0
sS'trials2.thisTrialN'
p2821
I3
sg2790
S'./stim/MorphM1_00_orig.jpg'
p2822
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x001*@'
tRp2823
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x15@'
tRp2824
sg30
I0
sg2794
g45
(g585
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2825
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3274400234222412
sS'trials2.thisN'
p2826
I3
sa(dp2827
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2828
g45
(g585
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2829
sS'trials2.thisRepN'
p2830
I0
sS'trials2.thisTrialN'
p2831
I4
sg2790
S'./stim/MorphM6_09_orig.jpg'
p2832
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x001*@'
tRp2833
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x15@'
tRp2834
sg30
I1
sg2794
g45
(g585
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2835
sg32
I0
sg39
g40
sg43
V4
sg33
F0.88708901405334473
sS'trials2.thisN'
p2836
I4
sa(dp2837
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2838
g45
(g585
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2839
sS'trials2.thisRepN'
p2840
I0
sS'trials2.thisTrialN'
p2841
I5
sg2790
S'./stim/MorphM10_02_orig.jpg'
p2842
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00"*@'
tRp2843
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfa\x14@'
tRp2844
sg30
I0
sg2794
g45
(g585
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2845
sg32
I1
sg39
g40
sg43
V4
sg33
F2.2778630256652832
sS'trials2.thisN'
p2846
I5
sa(dp2847
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2848
g45
(g585
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2849
sS'trials2.thisRepN'
p2850
I0
sS'trials2.thisTrialN'
p2851
I6
sg2790
S'./stim/MorphM3_06_orig.jpg'
p2852
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x001*@'
tRp2853
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x15@'
tRp2854
sg30
I1
sg2794
g45
(g585
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2855
sg32
I0
sg39
g40
sg43
V4
sg33
F0.9878849983215332
sS'trials2.thisN'
p2856
I6
sa(dp2857
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2858
g45
(g585
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2859
sS'trials2.thisRepN'
p2860
I0
sS'trials2.thisTrialN'
p2861
I7
sg2790
S'./stim/MorphM7_08_orig.jpg'
p2862
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp2863
sg29
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp2864
sg30
I1
sg2794
g45
(g585
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2865
sg32
I0
sg39
g40
sg43
V4
sg33
F1.5572090148925781
sS'trials2.thisN'
p2866
I7
sa(dp2867
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2868
g45
(g585
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2869
sS'trials2.thisRepN'
p2870
I0
sS'trials2.thisTrialN'
p2871
I8
sg2790
S'./stim/MorphM6_04_orig.jpg'
p2872
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00m*@'
tRp2873
sg29
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp2874
sg30
I0
sg2794
g45
(g585
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2875
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2725541591644287
sS'trials2.thisN'
p2876
I8
sa(dp2877
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2878
g45
(g585
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2879
sS'trials2.thisRepN'
p2880
I0
sS'trials2.thisTrialN'
p2881
I9
sg2790
S'./stim/MorphM2_05_orig.jpg'
p2882
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8*@'
tRp2883
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp2884
sg30
I0
sg2794
g45
(g585
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2885
sg32
I1
sg39
g40
sg43
V4
sg33
F4.4060790538787842
sS'trials2.thisN'
p2886
I9
sa(dp2887
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2888
g45
(g585
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2889
sS'trials2.thisRepN'
p2890
I0
sS'trials2.thisTrialN'
p2891
I10
sg2790
S'./stim/MorphM3_01_orig.jpg'
p2892
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8*@'
tRp2893
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp2894
sg30
I1
sg2794
g45
(g585
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2895
sg32
I0
sg39
g40
sg43
V4
sg33
F2.597214937210083
sS'trials2.thisN'
p2896
I10
sa(dp2897
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2898
g45
(g585
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2899
sS'trials2.thisRepN'
p2900
I0
sS'trials2.thisTrialN'
p2901
I11
sg2790
S'./stim/MorphF1_03_orig.jpg'
p2902
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8*@'
tRp2903
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp2904
sg30
I0
sg2794
g45
(g585
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2905
sg32
I1
sg39
g40
sg43
V4
sg33
F3.1806890964508057
sS'trials2.thisN'
p2906
I11
sa(dp2907
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2908
g45
(g585
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2909
sS'trials2.thisRepN'
p2910
I0
sS'trials2.thisTrialN'
p2911
I12
sg2790
S'./stim/MorphF8_09_orig.jpg'
p2912
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8*@'
tRp2913
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp2914
sg30
I1
sg2794
g45
(g585
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2915
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0544979572296143
sS'trials2.thisN'
p2916
I12
sa(dp2917
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2918
g45
(g585
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2919
sS'trials2.thisRepN'
p2920
I0
sS'trials2.thisTrialN'
p2921
I13
sg2790
S'./stim/MorphF3_01_orig.jpg'
p2922
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8*@'
tRp2923
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp2924
sg30
I0
sg2794
g45
(g585
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2925
sg32
I1
sg39
g40
sg43
V4
sg33
F2.2444820404052734
sS'trials2.thisN'
p2926
I13
sa(dp2927
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2928
g45
(g585
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2929
sS'trials2.thisRepN'
p2930
I0
sS'trials2.thisTrialN'
p2931
I14
sg2790
S'./stim/MorphF7_03_orig.jpg'
p2932
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd6*@'
tRp2933
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp2934
sg30
I1
sg2794
g45
(g585
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2935
sg32
I0
sg39
g40
sg43
V4
sg33
F3.1324961185455322
sS'trials2.thisN'
p2936
I14
sa(dp2937
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2938
g45
(g585
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2939
sS'trials2.thisRepN'
p2940
I0
sS'trials2.thisTrialN'
p2941
I15
sg2790
S'./stim/MorphM1_05_orig.jpg'
p2942
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd6*@'
tRp2943
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp2944
sg30
I0
sg2794
g45
(g585
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2945
sg32
I1
sg39
g40
sg43
V4
sg33
F2.6118631362915039
sS'trials2.thisN'
p2946
I15
sa(dp2947
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2948
g45
(g585
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2949
sS'trials2.thisRepN'
p2950
I0
sS'trials2.thisTrialN'
p2951
I16
sg2790
S'./stim/MorphM5_08_orig.jpg'
p2952
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd6*@'
tRp2953
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp2954
sg30
I1
sg2794
g45
(g585
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2955
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1886880397796631
sS'trials2.thisN'
p2956
I16
sa(dp2957
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2958
g45
(g585
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2959
sS'trials2.thisRepN'
p2960
I0
sS'trials2.thisTrialN'
p2961
I17
sg2790
S'./stim/MorphF7_01_orig.jpg'
p2962
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd6*@'
tRp2963
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp2964
sg30
I0
sg2794
g45
(g585
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2965
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5405621528625488
sS'trials2.thisN'
p2966
I17
sa(dp2967
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2968
g45
(g585
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2969
sS'trials2.thisRepN'
p2970
I0
sS'trials2.thisTrialN'
p2971
I18
sg2790
S'./stim/MorphF1_10_orig.jpg'
p2972
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc7*@'
tRp2973
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp2974
sg30
I1
sg2794
g45
(g585
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2975
sg32
I0
sg39
g40
sg43
V4
sg33
F1.020503044128418
sS'trials2.thisN'
p2976
I18
sa(dp2977
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2978
g45
(g585
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2979
sS'trials2.thisRepN'
p2980
I0
sS'trials2.thisTrialN'
p2981
I19
sg2790
S'./stim/MorphF9_06_orig.jpg'
p2982
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe5*@'
tRp2983
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\x17@'
tRp2984
sg30
I1
sg2794
g45
(g585
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2985
sg32
I0
sg39
g40
sg43
V4
sg33
F3.5685410499572754
sS'trials2.thisN'
p2986
I19
sa(dp2987
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2988
g45
(g585
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2989
sS'trials2.thisRepN'
p2990
I0
sS'trials2.thisTrialN'
p2991
I20
sg2790
S'./stim/MorphM4_00_orig.jpg'
p2992
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe5*@'
tRp2993
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\x17@'
tRp2994
sg30
I0
sg2794
g45
(g585
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2995
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2559587955474854
sS'trials2.thisN'
p2996
I20
sa(dp2997
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2998
g45
(g585
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp2999
sS'trials2.thisRepN'
p3000
I0
sS'trials2.thisTrialN'
p3001
I21
sg2790
S'./stim/MorphM10_08_orig.jpg'
p3002
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe5*@'
tRp3003
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\x17@'
tRp3004
sg30
I1
sg2794
g45
(g585
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3005
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2041621208190918
sS'trials2.thisN'
p3006
I21
sa(dp3007
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3008
g45
(g585
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3009
sS'trials2.thisRepN'
p3010
I0
sS'trials2.thisTrialN'
p3011
I22
sg2790
S'./stim/MorphF8_07_orig.jpg'
p3012
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4*@'
tRp3013
sg29
g45
(g47
S'\x00\x00\x00\x00\x00R\x17@'
tRp3014
sg30
I1
sg2794
g45
(g585
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3015
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1215250492095947
sS'trials2.thisN'
p3016
I22
sa(dp3017
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3018
g45
(g585
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3019
sS'trials2.thisRepN'
p3020
I0
sS'trials2.thisTrialN'
p3021
I23
sg2790
S'./stim/MorphF6_02_orig.jpg'
p3022
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4*@'
tRp3023
sg29
g45
(g47
S'\x00\x00\x00\x00\x00R\x17@'
tRp3024
sg30
I0
sg2794
g45
(g585
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3025
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0044610500335693
sS'trials2.thisN'
p3026
I23
sa(dp3027
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3028
g45
(g585
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3029
sS'trials2.thisRepN'
p3030
I0
sS'trials2.thisTrialN'
p3031
I24
sg2790
S'./stim/MorphM2_08_orig.jpg'
p3032
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4*@'
tRp3033
sg29
g45
(g47
S'\x00\x00\x00\x00\x00R\x17@'
tRp3034
sg30
I1
sg2794
g45
(g585
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3035
sg32
I0
sg39
g40
sg43
V4
sg33
F0.82088303565979004
sS'trials2.thisN'
p3036
I24
sa(dp3037
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3038
g45
(g585
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3039
sS'trials2.thisRepN'
p3040
I0
sS'trials2.thisTrialN'
p3041
I25
sg2790
S'./stim/MorphF9_05_orig.jpg'
p3042
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4*@'
tRp3043
sg29
g45
(g47
S'\x00\x00\x00\x00\x00R\x17@'
tRp3044
sg30
I0
sg2794
g45
(g585
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3045
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5733399391174316
sS'trials2.thisN'
p3046
I25
sa(dp3047
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3048
g45
(g585
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3049
sS'trials2.thisRepN'
p3050
I0
sS'trials2.thisTrialN'
p3051
I26
sg2790
S'./stim/MorphF1_08_orig.jpg'
p3052
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe5*@'
tRp3053
sg29
g45
(g47
S'\x00\x00\x00\x00\x004\x17@'
tRp3054
sg30
I1
sg2794
g45
(g585
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3055
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1873979568481445
sS'trials2.thisN'
p3056
I26
sa(dp3057
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3058
g45
(g585
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3059
sS'trials2.thisRepN'
p3060
I0
sS'trials2.thisTrialN'
p3061
I27
sg2790
S'./stim/MorphF6_09_orig.jpg'
p3062
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe5*@'
tRp3063
sg29
g45
(g47
S'\x00\x00\x00\x00\x004\x17@'
tRp3064
sg30
I1
sg2794
g45
(g585
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3065
sg32
I0
sg39
g40
sg43
V4
sg33
F0.87022185325622559
sS'trials2.thisN'
p3066
I27
sa(dp3067
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3068
g45
(g585
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3069
sS'trials2.thisRepN'
p3070
I0
sS'trials2.thisTrialN'
p3071
I28
sg2790
S'./stim/MorphF2_09_orig.jpg'
p3072
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe5*@'
tRp3073
sg29
g45
(g47
S'\x00\x00\x00\x00\x004\x17@'
tRp3074
sg30
I1
sg2794
g45
(g585
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3075
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0713558197021484
sS'trials2.thisN'
p3076
I28
sa(dp3077
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3078
g45
(g585
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3079
sS'trials2.thisRepN'
p3080
I0
sS'trials2.thisTrialN'
p3081
I29
sg2790
S'./stim/MorphF1_04_orig.jpg'
p3082
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x03+@'
tRp3083
sg29
g45
(g47
S'\x00\x00\x00\x00\x00R\x17@'
tRp3084
sg30
I0
sg2794
g45
(g585
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3085
sg32
I1
sg39
g40
sg43
V4
sg33
F2.428657054901123
sS'trials2.thisN'
p3086
I29
sa(dp3087
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3088
g45
(g585
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3089
sS'trials2.thisRepN'
p3090
I0
sS'trials2.thisTrialN'
p3091
I30
sg2790
S'./stim/MorphM4_06_orig.jpg'
p3092
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00!+@'
tRp3093
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp3094
sg30
I1
sg2794
g45
(g585
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3095
sg32
I0
sg39
g40
sg43
V4
sg33
F2.3609199523925781
sS'trials2.thisN'
p3096
I30
sa(dp3097
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3098
g45
(g585
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3099
sS'trials2.thisRepN'
p3100
I0
sS'trials2.thisTrialN'
p3101
I31
sg2790
S'./stim/MorphM5_04_orig.jpg'
p3102
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000+@'
tRp3103
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp3104
sg30
I1
sg2794
g45
(g585
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3105
sg32
I0
sg39
g40
sg43
V4
sg33
F0.82044196128845215
sS'trials2.thisN'
p3106
I31
sa(dp3107
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3108
g45
(g585
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3109
sS'trials2.thisRepN'
p3110
I0
sS'trials2.thisTrialN'
p3111
I32
sg2790
S'./stim/MorphF10_02_orig.jpg'
p3112
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3113
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3114
sg30
I0
sg2794
g45
(g585
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3115
sg32
I1
sg39
g40
sg43
V4
sg33
F11.225451946258545
sS'trials2.thisN'
p3116
I32
sa(dp3117
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3118
g45
(g585
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3119
sS'trials2.thisRepN'
p3120
I0
sS'trials2.thisTrialN'
p3121
I33
sg2790
S'./stim/MorphF6_05_orig.jpg'
p3122
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3123
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3124
sg30
I0
sg2794
g45
(g585
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3125
sg32
I1
sg39
g40
sg43
V4
sg33
F9.3169670104980469
sS'trials2.thisN'
p3126
I33
sa(dp3127
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3128
g45
(g585
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3129
sS'trials2.thisRepN'
p3130
I0
sS'trials2.thisTrialN'
p3131
I34
sg2790
S'./stim/MorphF8_01_orig.jpg'
p3132
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3133
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3134
sg30
I0
sg2794
g45
(g585
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3135
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1881680488586426
sS'trials2.thisN'
p3136
I34
sa(dp3137
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3138
g45
(g585
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3139
sS'trials2.thisRepN'
p3140
I0
sS'trials2.thisTrialN'
p3141
I35
sg2790
S'./stim/MorphM2_06_orig.jpg'
p3142
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3143
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3144
sg30
I1
sg2794
g45
(g585
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3145
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9262199401855469
sS'trials2.thisN'
p3146
I35
sa(dp3147
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3148
g45
(g585
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3149
sS'trials2.thisRepN'
p3150
I0
sS'trials2.thisTrialN'
p3151
I36
sg2790
S'./stim/MorphM9_02_orig.jpg'
p3152
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3153
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3154
sg30
I0
sg2794
g45
(g585
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3155
sg32
I1
sg39
g40
sg43
V4
sg33
F0.92081689834594727
sS'trials2.thisN'
p3156
I36
sa(dp3157
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3158
g45
(g585
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3159
sS'trials2.thisRepN'
p3160
I0
sS'trials2.thisTrialN'
p3161
I37
sg2790
S'./stim/MorphM5_03_orig.jpg'
p3162
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3163
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3164
sg30
I1
sg2794
g45
(g585
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3165
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0542869567871094
sS'trials2.thisN'
p3166
I37
sa(dp3167
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3168
g45
(g585
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3169
sS'trials2.thisRepN'
p3170
I0
sS'trials2.thisTrialN'
p3171
I38
sg2790
S'./stim/MorphM4_01_orig.jpg'
p3172
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00{+@'
tRp3173
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x17@'
tRp3174
sg30
I0
sg2794
g45
(g585
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3175
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5904181003570557
sS'trials2.thisN'
p3176
I38
sa(dp3177
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3178
g45
(g585
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3179
sS'trials2.thisRepN'
p3180
I0
sS'trials2.thisTrialN'
p3181
I39
sg2790
S'./stim/MorphM6_05_orig.jpg'
p3182
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8*@'
tRp3183
sg29
g45
(g47
S'\x00\x00\x00\x00\x004\x17@'
tRp3184
sg30
I0
sg2794
g45
(g585
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3185
sg32
I1
sg39
g40
sg43
V4
sg33
F5.5969009399414062
sS'trials2.thisN'
p3186
I39
sa(dp3187
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3188
g45
(g585
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3189
sS'trials2.thisRepN'
p3190
I0
sS'trials2.thisTrialN'
p3191
I40
sg2790
S'./stim/MorphF4_02_orig.jpg'
p3192
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3193
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3194
sg30
I0
sg2794
g45
(g585
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3195
sg32
I1
sg39
g40
sg43
V4
sg33
F2.7307510375976562
sS'trials2.thisN'
p3196
I40
sa(dp3197
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3198
g45
(g585
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3199
sS'trials2.thisRepN'
p3200
I0
sS'trials2.thisTrialN'
p3201
I41
sg2790
S'./stim/MorphM9_03_orig.jpg'
p3202
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3203
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3204
sg30
I0
sg2794
g45
(g585
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3205
sg32
I1
sg39
g40
sg43
V4
sg33
F0.73367214202880859
sS'trials2.thisN'
p3206
I41
sa(dp3207
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3208
g45
(g585
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3209
sS'trials2.thisRepN'
p3210
I0
sS'trials2.thisTrialN'
p3211
I42
sg2790
S'./stim/MorphF4_06_orig.jpg'
p3212
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3213
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3214
sg30
I1
sg2794
g45
(g585
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3215
sg32
I0
sg39
g40
sg43
V4
sg33
F1.8757839202880859
sS'trials2.thisN'
p3216
I42
sa(dp3217
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3218
g45
(g585
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3219
sS'trials2.thisRepN'
p3220
I0
sS'trials2.thisTrialN'
p3221
I43
sg2790
S'./stim/MorphF5_00_orig.jpg'
p3222
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3223
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3224
sg30
I0
sg2794
g45
(g585
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3225
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6579210758209229
sS'trials2.thisN'
p3226
I43
sa(dp3227
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3228
g45
(g585
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3229
sS'trials2.thisRepN'
p3230
I0
sS'trials2.thisTrialN'
p3231
I44
sg2790
S'./stim/MorphM7_04_orig.jpg'
p3232
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3233
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3234
sg30
I1
sg2794
g45
(g585
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3235
sg32
I0
sg39
g40
sg43
V4
sg33
F3.0824689865112305
sS'trials2.thisN'
p3236
I44
sa(dp3237
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3238
g45
(g585
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3239
sS'trials2.thisRepN'
p3240
I0
sS'trials2.thisTrialN'
p3241
I45
sg2790
S'./stim/MorphF1_07_orig.jpg'
p3242
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp3243
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xea\x15@'
tRp3244
sg30
I0
sg2794
g45
(g585
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3245
sg32
I1
sg39
g40
sg43
V4
sg33
F12.18316912651062
sS'trials2.thisN'
p3246
I45
sa(dp3247
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3248
g45
(g585
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3249
sS'trials2.thisRepN'
p3250
I0
sS'trials2.thisTrialN'
p3251
I46
sg2790
S'./stim/MorphF7_02_orig.jpg'
p3252
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp3253
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3254
sg30
I0
sg2794
g45
(g585
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3255
sg32
I1
sg39
g40
sg43
V4
sg33
F3.1832599639892578
sS'trials2.thisN'
p3256
I46
sa(dp3257
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3258
g45
(g585
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3259
sS'trials2.thisRepN'
p3260
I0
sS'trials2.thisTrialN'
p3261
I47
sg2790
S'./stim/MorphF3_08_orig.jpg'
p3262
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp3263
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3264
sg30
I0
sg2794
g45
(g585
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3265
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6406850814819336
sS'trials2.thisN'
p3266
I47
sa(dp3267
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3268
g45
(g585
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3269
sS'trials2.thisRepN'
p3270
I0
sS'trials2.thisTrialN'
p3271
I48
sg2790
S'./stim/MorphM4_03_orig.jpg'
p3272
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp3273
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3274
sg30
I0
sg2794
g45
(g585
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3275
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3227682113647461
sS'trials2.thisN'
p3276
I48
sa(dp3277
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3278
g45
(g585
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3279
sS'trials2.thisRepN'
p3280
I0
sS'trials2.thisTrialN'
p3281
I49
sg2790
S'./stim/MorphM7_05_orig.jpg'
p3282
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp3283
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3284
sg30
I1
sg2794
g45
(g585
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3285
sg32
I0
sg39
g40
sg43
V4
sg33
F1.5907919406890869
sS'trials2.thisN'
p3286
I49
sa(dp3287
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3288
g45
(g585
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3289
sS'trials2.thisRepN'
p3290
I0
sS'trials2.thisTrialN'
p3291
I50
sg2790
S'./stim/MorphM4_08_orig.jpg'
p3292
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp3293
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3294
sg30
I1
sg2794
g45
(g585
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3295
sg32
I0
sg39
g40
sg43
V4
sg33
F1.6577301025390625
sS'trials2.thisN'
p3296
I50
sa(dp3297
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3298
g45
(g585
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3299
sS'trials2.thisRepN'
p3300
I0
sS'trials2.thisTrialN'
p3301
I51
sg2790
S'./stim/MorphM2_03_orig.jpg'
p3302
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00^*@'
tRp3303
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3304
sg30
I0
sg2794
g45
(g585
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3305
sg32
I1
sg39
g40
sg43
V4
sg33
F1.522003173828125
sS'trials2.thisN'
p3306
I51
sa(dp3307
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3308
g45
(g585
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3309
sS'trials2.thisRepN'
p3310
I0
sS'trials2.thisTrialN'
p3311
I52
sg2790
S'./stim/MorphF3_10_orig.jpg'
p3312
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00O*@'
tRp3313
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xea\x15@'
tRp3314
sg30
I0
sg2794
g45
(g585
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3315
sg32
I1
sg39
g40
sg43
V4
sg33
F2.4289860725402832
sS'trials2.thisN'
p3316
I52
sa(dp3317
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3318
g45
(g585
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3319
sS'trials2.thisRepN'
p3320
I0
sS'trials2.thisTrialN'
p3321
I53
sg2790
S'./stim/MorphF6_08_orig.jpg'
p3322
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3323
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3324
sg30
I1
sg2794
g45
(g585
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3325
sg32
I0
sg39
g40
sg43
V4
sg33
F5.5617849826812744
sS'trials2.thisN'
p3326
I53
sa(dp3327
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3328
g45
(g585
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3329
sS'trials2.thisRepN'
p3330
I0
sS'trials2.thisTrialN'
p3331
I54
sg2790
S'./stim/MorphM3_10_orig.jpg'
p3332
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@*@'
tRp3333
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3334
sg30
I1
sg2794
g45
(g585
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3335
sg32
I0
sg39
g40
sg43
V4
sg33
F0.86839604377746582
sS'trials2.thisN'
p3336
I54
sa(dp3337
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3338
g45
(g585
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3339
sS'trials2.thisRepN'
p3340
I0
sS'trials2.thisTrialN'
p3341
I55
sg2790
S'./stim/MorphM10_03_orig.jpg'
p3342
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xd80@'
tRp3343
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3344
sg30
I1
sg2794
g45
(g585
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3345
sg32
I0
sg39
g40
sg43
V4
sg33
F22.522861957550049
sS'trials2.thisN'
p3346
I55
sa(dp3347
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3348
g45
(g585
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3349
sS'trials2.thisRepN'
p3350
I0
sS'trials2.thisTrialN'
p3351
I56
sg2790
S'./stim/MorphF2_03_orig.jpg'
p3352
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xd80@'
tRp3353
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3354
sg30
I0
sg2794
g45
(g585
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3355
sg32
I1
sg39
g40
sg43
V4
sg33
F3.2478010654449463
sS'trials2.thisN'
p3356
I56
sa(dp3357
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3358
g45
(g585
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3359
sS'trials2.thisRepN'
p3360
I0
sS'trials2.thisTrialN'
p3361
I57
sg2790
S'./stim/MorphM7_10_orig.jpg'
p3362
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xd80@'
tRp3363
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3364
sg30
I1
sg2794
g45
(g585
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3365
sg32
I0
sg39
g40
sg43
V4
sg33
F2.5282669067382812
sS'trials2.thisN'
p3366
I57
sa(dp3367
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3368
g45
(g585
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3369
sS'trials2.thisRepN'
p3370
I0
sS'trials2.thisTrialN'
p3371
I58
sg2790
S'./stim/MorphF8_00_orig.jpg'
p3372
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xd80@'
tRp3373
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3374
sg30
I0
sg2794
g45
(g585
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3375
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2387700080871582
sS'trials2.thisN'
p3376
I58
sa(dp3377
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3378
g45
(g585
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3379
sS'trials2.thisRepN'
p3380
I0
sS'trials2.thisTrialN'
p3381
I59
sg2790
S'./stim/MorphF7_07_orig.jpg'
p3382
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3383
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp3384
sg30
I1
sg2794
g45
(g585
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3385
sg32
I0
sg39
g40
sg43
V4
sg33
F3.6861870288848877
sS'trials2.thisN'
p3386
I59
sa(dp3387
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3388
g45
(g585
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3389
sS'trials2.thisRepN'
p3390
I0
sS'trials2.thisTrialN'
p3391
I60
sg2790
S'./stim/MorphM8_09_orig.jpg'
p3392
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3393
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp3394
sg30
I1
sg2794
g45
(g585
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3395
sg32
I0
sg39
g40
sg43
V4
sg33
F0.71950101852416992
sS'trials2.thisN'
p3396
I60
sa(dp3397
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3398
g45
(g585
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3399
sS'trials2.thisRepN'
p3400
I0
sS'trials2.thisTrialN'
p3401
I61
sg2790
S'./stim/MorphF5_08_orig.jpg'
p3402
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3403
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp3404
sg30
I1
sg2794
g45
(g585
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3405
sg32
I0
sg39
g40
sg43
V4
sg33
F0.70272684097290039
sS'trials2.thisN'
p3406
I61
sa(dp3407
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3408
g45
(g585
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3409
sS'trials2.thisRepN'
p3410
I0
sS'trials2.thisTrialN'
p3411
I62
sg2790
S'./stim/MorphM8_00_orig.jpg'
p3412
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3413
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp3414
sg30
I1
sg2794
g45
(g585
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3415
sg32
I0
sg39
g40
sg43
V4
sg33
F6.384019136428833
sS'trials2.thisN'
p3416
I62
sa(dp3417
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3418
g45
(g585
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3419
sS'trials2.thisRepN'
p3420
I0
sS'trials2.thisTrialN'
p3421
I63
sg2790
S'./stim/MorphF4_04_orig.jpg'
p3422
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3423
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3424
sg30
I0
sg2794
g45
(g585
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3425
sg32
I1
sg39
g40
sg43
V4
sg33
F2.2771329879760742
sS'trials2.thisN'
p3426
I63
sa(dp3427
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3428
g45
(g585
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3429
sS'trials2.thisRepN'
p3430
I0
sS'trials2.thisTrialN'
p3431
I64
sg2790
S'./stim/MorphM8_05_orig.jpg'
p3432
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3433
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3434
sg30
I1
sg2794
g45
(g585
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3435
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1042108535766602
sS'trials2.thisN'
p3436
I64
sa(dp3437
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3438
g45
(g585
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3439
sS'trials2.thisRepN'
p3440
I0
sS'trials2.thisTrialN'
p3441
I65
sg2790
S'./stim/MorphM1_09_orig.jpg'
p3442
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3443
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3444
sg30
I1
sg2794
g45
(g585
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3445
sg32
I0
sg39
g40
sg43
V4
sg33
F3.7024331092834473
sS'trials2.thisN'
p3446
I65
sa(dp3447
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3448
g45
(g585
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3449
sS'trials2.thisRepN'
p3450
I0
sS'trials2.thisTrialN'
p3451
I66
sg2790
S'./stim/MorphF8_04_orig.jpg'
p3452
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3453
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp3454
sg30
I0
sg2794
g45
(g585
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3455
sg32
I1
sg39
g40
sg43
V4
sg33
F3.8872818946838379
sS'trials2.thisN'
p3456
I66
sa(dp3457
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3458
g45
(g585
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3459
sS'trials2.thisRepN'
p3460
I0
sS'trials2.thisTrialN'
p3461
I67
sg2790
S'./stim/MorphM10_07_orig.jpg'
p3462
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3463
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp3464
sg30
I1
sg2794
g45
(g585
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3465
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0712709426879883
sS'trials2.thisN'
p3466
I67
sa(dp3467
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3468
g45
(g585
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3469
sS'trials2.thisRepN'
p3470
I0
sS'trials2.thisTrialN'
p3471
I68
sg2790
S'./stim/MorphM5_05_orig.jpg'
p3472
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf60@'
tRp3473
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp3474
sg30
I0
sg2794
g45
(g585
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3475
sg32
I1
sg39
g40
sg43
V4
sg33
F3.903566837310791
sS'trials2.thisN'
p3476
I68
sa(dp3477
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3478
g45
(g585
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3479
sS'trials2.thisRepN'
p3480
I0
sS'trials2.thisTrialN'
p3481
I69
sg2790
S'./stim/MorphM3_02_orig.jpg'
p3482
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3483
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3484
sg30
I0
sg2794
g45
(g585
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3485
sg32
I1
sg39
g40
sg43
V4
sg33
F2.9654800891876221
sS'trials2.thisN'
p3486
I69
sa(dp3487
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3488
g45
(g585
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3489
sS'trials2.thisRepN'
p3490
I0
sS'trials2.thisTrialN'
p3491
I70
sg2790
S'./stim/MorphF2_08_orig.jpg'
p3492
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3493
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3494
sg30
I1
sg2794
g45
(g585
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3495
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1548209190368652
sS'trials2.thisN'
p3496
I70
sa(dp3497
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3498
g45
(g585
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3499
sS'trials2.thisRepN'
p3500
I0
sS'trials2.thisTrialN'
p3501
I71
sg2790
S'./stim/MorphM5_00_orig.jpg'
p3502
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3503
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3504
sg30
I0
sg2794
g45
(g585
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3505
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3286449909210205
sS'trials2.thisN'
p3506
I71
sa(dp3507
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3508
g45
(g585
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3509
sS'trials2.thisRepN'
p3510
I0
sS'trials2.thisTrialN'
p3511
I72
sg2790
S'./stim/MorphF6_07_orig.jpg'
p3512
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3513
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3514
sg30
I1
sg2794
g45
(g585
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3515
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2378418445587158
sS'trials2.thisN'
p3516
I72
sa(dp3517
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3518
g45
(g585
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3519
sS'trials2.thisRepN'
p3520
I0
sS'trials2.thisTrialN'
p3521
I73
sg2790
S'./stim/MorphM7_07_orig.jpg'
p3522
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3523
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3524
sg30
I1
sg2794
g45
(g585
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3525
sg32
I0
sg39
g40
sg43
V4
sg33
F1.7414669990539551
sS'trials2.thisN'
p3526
I73
sa(dp3527
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3528
g45
(g585
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3529
sS'trials2.thisRepN'
p3530
I0
sS'trials2.thisTrialN'
p3531
I74
sg2790
S'./stim/MorphM4_05_orig.jpg'
p3532
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3533
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3534
sg30
I1
sg2794
g45
(g585
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3535
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0547652244567871
sS'trials2.thisN'
p3536
I74
sa(dp3537
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3538
g45
(g585
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3539
sS'trials2.thisRepN'
p3540
I0
sS'trials2.thisTrialN'
p3541
I75
sg2790
S'./stim/MorphF1_02_orig.jpg'
p3542
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3543
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3544
sg30
I0
sg2794
g45
(g585
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3545
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3061051368713379
sS'trials2.thisN'
p3546
I75
sa(dp3547
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3548
g45
(g585
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3549
sS'trials2.thisRepN'
p3550
I0
sS'trials2.thisTrialN'
p3551
I76
sg2790
S'./stim/MorphM1_03_orig.jpg'
p3552
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3553
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3554
sg30
I0
sg2794
g45
(g585
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3555
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8421437740325928
sS'trials2.thisN'
p3556
I76
sa(dp3557
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3558
g45
(g585
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3559
sS'trials2.thisRepN'
p3560
I0
sS'trials2.thisTrialN'
p3561
I77
sg2790
S'./stim/MorphM6_01_orig.jpg'
p3562
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3563
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3564
sg30
I0
sg2794
g45
(g585
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3565
sg32
I1
sg39
g40
sg43
V4
sg33
F0.95396113395690918
sS'trials2.thisN'
p3566
I77
sa(dp3567
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3568
g45
(g585
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3569
sS'trials2.thisRepN'
p3570
I0
sS'trials2.thisTrialN'
p3571
I78
sg2790
S'./stim/MorphF5_05_orig.jpg'
p3572
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3573
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3574
sg30
I1
sg2794
g45
(g585
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3575
sg32
I0
sg39
g40
sg43
V4
sg33
F1.456902027130127
sS'trials2.thisN'
p3576
I78
sa(dp3577
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3578
g45
(g585
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3579
sS'trials2.thisRepN'
p3580
I0
sS'trials2.thisTrialN'
p3581
I79
sg2790
S'./stim/MorphF4_10_orig.jpg'
p3582
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3583
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3584
sg30
I1
sg2794
g45
(g585
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3585
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3392789363861084
sS'trials2.thisN'
p3586
I79
sa(dp3587
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3588
g45
(g585
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3589
sS'trials2.thisRepN'
p3590
I0
sS'trials2.thisTrialN'
p3591
I80
sg2790
S'./stim/MorphF9_03_orig.jpg'
p3592
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3593
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3594
sg30
I1
sg2794
g45
(g585
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3595
sg32
I0
sg39
g40
sg43
V4
sg33
F2.3958261013031006
sS'trials2.thisN'
p3596
I80
sa(dp3597
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3598
g45
(g585
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3599
sS'trials2.thisRepN'
p3600
I0
sS'trials2.thisTrialN'
p3601
I81
sg2790
S'./stim/MorphM8_04_orig.jpg'
p3602
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3603
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3604
sg30
I1
sg2794
g45
(g585
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3605
sg32
I0
sg39
g40
sg43
V4
sg33
F0.96865391731262207
sS'trials2.thisN'
p3606
I81
sa(dp3607
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3608
g45
(g585
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3609
sS'trials2.thisRepN'
p3610
I0
sS'trials2.thisTrialN'
p3611
I82
sg2790
S'./stim/MorphF2_04_orig.jpg'
p3612
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3613
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3614
sg30
I0
sg2794
g45
(g585
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3615
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6559348106384277
sS'trials2.thisN'
p3616
I82
sa(dp3617
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3618
g45
(g585
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3619
sS'trials2.thisRepN'
p3620
I0
sS'trials2.thisTrialN'
p3621
I83
sg2790
S'./stim/MorphM10_01_orig.jpg'
p3622
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x051@'
tRp3623
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\x0e@'
tRp3624
sg30
I0
sg2794
g45
(g585
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3625
sg32
I1
sg39
g40
sg43
V4
sg33
F1.4558780193328857
sS'trials2.thisN'
p3626
I83
sa(dp3627
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3628
g45
(g585
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3629
sS'trials2.thisRepN'
p3630
I0
sS'trials2.thisTrialN'
p3631
I84
sg2790
S'./stim/MorphF6_10_orig.jpg'
p3632
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3633
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x0e@'
tRp3634
sg30
I1
sg2794
g45
(g585
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3635
sg32
I0
sg39
g40
sg43
V4
sg33
F1.4568459987640381
sS'trials2.thisN'
p3636
I84
sa(dp3637
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3638
g45
(g585
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3639
sS'trials2.thisRepN'
p3640
I0
sS'trials2.thisTrialN'
p3641
I85
sg2790
S'./stim/MorphF10_00_orig.jpg'
p3642
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3643
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x0e@'
tRp3644
sg30
I0
sg2794
g45
(g585
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3645
sg32
I1
sg39
g40
sg43
V4
sg33
F1.4893829822540283
sS'trials2.thisN'
p3646
I85
sa(dp3647
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3648
g45
(g585
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3649
sS'trials2.thisRepN'
p3650
I0
sS'trials2.thisTrialN'
p3651
I86
sg2790
S'./stim/MorphM10_04_orig.jpg'
p3652
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3653
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x0e@'
tRp3654
sg30
I1
sg2794
g45
(g585
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3655
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3042490482330322
sS'trials2.thisN'
p3656
I86
sa(dp3657
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3658
g45
(g585
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3659
sS'trials2.thisRepN'
p3660
I0
sS'trials2.thisTrialN'
p3661
I87
sg2790
S'./stim/MorphM4_07_orig.jpg'
p3662
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3663
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3664
sg30
I1
sg2794
g45
(g585
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3665
sg32
I0
sg39
g40
sg43
V4
sg33
F0.88668417930603027
sS'trials2.thisN'
p3666
I87
sa(dp3667
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3668
g45
(g585
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3669
sS'trials2.thisRepN'
p3670
I0
sS'trials2.thisTrialN'
p3671
I88
sg2790
S'./stim/MorphF10_07_orig.jpg'
p3672
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3673
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3674
sg30
I1
sg2794
g45
(g585
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3675
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3398771286010742
sS'trials2.thisN'
p3676
I88
sa(dp3677
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3678
g45
(g585
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3679
sS'trials2.thisRepN'
p3680
I0
sS'trials2.thisTrialN'
p3681
I89
sg2790
S'./stim/MorphF8_02_orig.jpg'
p3682
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3683
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3684
sg30
I0
sg2794
g45
(g585
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3685
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9930379390716553
sS'trials2.thisN'
p3686
I89
sa(dp3687
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3688
g45
(g585
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3689
sS'trials2.thisRepN'
p3690
I0
sS'trials2.thisTrialN'
p3691
I90
sg2790
S'./stim/MorphM10_06_orig.jpg'
p3692
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3693
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3694
sg30
I1
sg2794
g45
(g585
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3695
sg32
I0
sg39
g40
sg43
V4
sg33
F0.90345311164855957
sS'trials2.thisN'
p3696
I90
sa(dp3697
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3698
g45
(g585
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3699
sS'trials2.thisRepN'
p3700
I0
sS'trials2.thisTrialN'
p3701
I91
sg2790
S'./stim/MorphF6_06_orig.jpg'
p3702
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3703
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3704
sg30
I1
sg2794
g45
(g585
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3705
sg32
I0
sg39
g40
sg43
V4
sg33
F2.5458729267120361
sS'trials2.thisN'
p3706
I91
sa(dp3707
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3708
g45
(g585
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3709
sS'trials2.thisRepN'
p3710
I0
sS'trials2.thisTrialN'
p3711
I92
sg2790
S'./stim/MorphF2_07_orig.jpg'
p3712
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3713
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e@'
tRp3714
sg30
I1
sg2794
g45
(g585
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3715
sg32
I0
sg39
g40
sg43
V4
sg33
F1.33890700340271
sS'trials2.thisN'
p3716
I92
sa(dp3717
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3718
g45
(g585
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3719
sS'trials2.thisRepN'
p3720
I0
sS'trials2.thisTrialN'
p3721
I93
sg2790
S'./stim/MorphF3_04_orig.jpg'
p3722
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3723
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3724
sg30
I0
sg2794
g45
(g585
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3725
sg32
I1
sg39
g40
sg43
V4
sg33
F0.97087979316711426
sS'trials2.thisN'
p3726
I93
sa(dp3727
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3728
g45
(g585
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3729
sS'trials2.thisRepN'
p3730
I0
sS'trials2.thisTrialN'
p3731
I94
sg2790
S'./stim/MorphM10_10_orig.jpg'
p3732
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3733
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3734
sg30
I1
sg2794
g45
(g585
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3735
sg32
I0
sg39
g40
sg43
V4
sg33
F0.85218381881713867
sS'trials2.thisN'
p3736
I94
sa(dp3737
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3738
g45
(g585
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3739
sS'trials2.thisRepN'
p3740
I0
sS'trials2.thisTrialN'
p3741
I95
sg2790
S'./stim/MorphF3_06_orig.jpg'
p3742
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3743
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3744
sg30
I0
sg2794
g45
(g585
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3745
sg32
I1
sg39
g40
sg43
V4
sg33
F2.0102369785308838
sS'trials2.thisN'
p3746
I95
sa(dp3747
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3748
g45
(g585
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3749
sS'trials2.thisRepN'
p3750
I0
sS'trials2.thisTrialN'
p3751
I96
sg2790
S'./stim/MorphM8_06_orig.jpg'
p3752
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3753
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3754
sg30
I1
sg2794
g45
(g585
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3755
sg32
I0
sg39
g40
sg43
V4
sg33
F0.83735203742980957
sS'trials2.thisN'
p3756
I96
sa(dp3757
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3758
g45
(g585
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3759
sS'trials2.thisRepN'
p3760
I0
sS'trials2.thisTrialN'
p3761
I97
sg2790
S'./stim/MorphM4_02_orig.jpg'
p3762
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3763
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3764
sg30
I1
sg2794
g45
(g585
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3765
sg32
I0
sg39
g40
sg43
V4
sg33
F0.83440804481506348
sS'trials2.thisN'
p3766
I97
sa(dp3767
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3768
g45
(g585
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3769
sS'trials2.thisRepN'
p3770
I0
sS'trials2.thisTrialN'
p3771
I98
sg2790
S'./stim/MorphF9_08_orig.jpg'
p3772
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3773
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3774
sg30
I1
sg2794
g45
(g585
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3775
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0041718482971191
sS'trials2.thisN'
p3776
I98
sa(dp3777
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3778
g45
(g585
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3779
sS'trials2.thisRepN'
p3780
I0
sS'trials2.thisTrialN'
p3781
I99
sg2790
S'./stim/MorphF3_07_orig.jpg'
p3782
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80#1@'
tRp3783
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc4\r@'
tRp3784
sg30
I0
sg2794
g45
(g585
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3785
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1548488140106201
sS'trials2.thisN'
p3786
I99
sa(dp3787
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3788
g45
(g585
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3789
sS'trials2.thisRepN'
p3790
I0
sS'trials2.thisTrialN'
p3791
I100
sg2790
S'./stim/MorphM10_09_orig.jpg'
p3792
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c1@'
tRp3793
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x88\r@'
tRp3794
sg30
I1
sg2794
g45
(g585
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3795
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0554800033569336
sS'trials2.thisN'
p3796
I100
sa(dp3797
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3798
g45
(g585
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3799
sS'trials2.thisRepN'
p3800
I0
sS'trials2.thisTrialN'
p3801
I101
sg2790
S'./stim/MorphM4_04_orig.jpg'
p3802
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3803
sg29
g45
(g47
S'\x00\x00\x00\x00\x00L\r@'
tRp3804
sg30
I1
sg2794
g45
(g585
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3805
sg32
I0
sg39
g40
sg43
V4
sg33
F0.85171985626220703
sS'trials2.thisN'
p3806
I101
sa(dp3807
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3808
g45
(g585
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3809
sS'trials2.thisRepN'
p3810
I0
sS'trials2.thisTrialN'
p3811
I102
sg2790
S'./stim/MorphM6_07_orig.jpg'
p3812
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3813
sg29
g45
(g47
S'\x00\x00\x00\x00\x00L\r@'
tRp3814
sg30
I1
sg2794
g45
(g585
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3815
sg32
I0
sg39
g40
sg43
V4
sg33
F0.97105908393859863
sS'trials2.thisN'
p3816
I102
sa(dp3817
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3818
g45
(g585
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3819
sS'trials2.thisRepN'
p3820
I0
sS'trials2.thisTrialN'
p3821
I103
sg2790
S'./stim/MorphF4_01_orig.jpg'
p3822
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3823
sg29
g45
(g47
S'\x00\x00\x00\x00\x00L\r@'
tRp3824
sg30
I0
sg2794
g45
(g585
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3825
sg32
I1
sg39
g40
sg43
V4
sg33
F0.98822498321533203
sS'trials2.thisN'
p3826
I103
sa(dp3827
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3828
g45
(g585
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3829
sS'trials2.thisRepN'
p3830
I0
sS'trials2.thisTrialN'
p3831
I104
sg2790
S'./stim/MorphF10_06_orig.jpg'
p3832
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3833
sg29
g45
(g47
S'\x00\x00\x00\x00\x00L\r@'
tRp3834
sg30
I1
sg2794
g45
(g585
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3835
sg32
I0
sg39
g40
sg43
V4
sg33
F2.6614730358123779
sS'trials2.thisN'
p3836
I104
sa(dp3837
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3838
g45
(g585
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3839
sS'trials2.thisRepN'
p3840
I0
sS'trials2.thisTrialN'
p3841
I105
sg2790
S'./stim/MorphM3_00_orig.jpg'
p3842
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3843
sg29
g45
(g47
S'\x00\x00\x00\x00\x00L\r@'
tRp3844
sg30
I1
sg2794
g45
(g585
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3845
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0526039600372314
sS'trials2.thisN'
p3846
I105
sa(dp3847
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3848
g45
(g585
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3849
sS'trials2.thisRepN'
p3850
I0
sS'trials2.thisTrialN'
p3851
I106
sg2790
S'./stim/MorphF7_08_orig.jpg'
p3852
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x141@'
tRp3853
sg29
g45
(g47
S'\x00\x00\x00\x00\x00L\r@'
tRp3854
sg30
I1
sg2794
g45
(g585
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3855
sg32
I0
sg39
g40
sg43
V4
sg33
F0.80263209342956543
sS'trials2.thisN'
p3856
I106
sa(dp3857
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3858
g45
(g585
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3859
sS'trials2.thisRepN'
p3860
I0
sS'trials2.thisTrialN'
p3861
I107
sg2790
S'./stim/MorphF1_06_orig.jpg'
p3862
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3863
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\r@'
tRp3864
sg30
I1
sg2794
g45
(g585
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3865
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1342618465423584
sS'trials2.thisN'
p3866
I107
sa(dp3867
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3868
g45
(g585
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3869
sS'trials2.thisRepN'
p3870
I0
sS'trials2.thisTrialN'
p3871
I108
sg2790
S'./stim/MorphM7_02_orig.jpg'
p3872
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3873
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\r@'
tRp3874
sg30
I1
sg2794
g45
(g585
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3875
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9076111316680908
sS'trials2.thisN'
p3876
I108
sa(dp3877
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3878
g45
(g585
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3879
sS'trials2.thisRepN'
p3880
I0
sS'trials2.thisTrialN'
p3881
I109
sg2790
S'./stim/MorphM5_02_orig.jpg'
p3882
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\r1@'
tRp3883
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\r@'
tRp3884
sg30
I0
sg2794
g45
(g585
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3885
sg32
I1
sg39
g40
sg43
V4
sg33
F1.4737169742584229
sS'trials2.thisN'
p3886
I109
sa(dp3887
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3888
g45
(g585
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3889
sS'trials2.thisRepN'
p3890
I0
sS'trials2.thisTrialN'
p3891
I110
sg2790
S'./stim/MorphM6_08_orig.jpg'
p3892
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfe0@'
tRp3893
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3894
sg30
I1
sg2794
g45
(g585
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3895
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3228240013122559
sS'trials2.thisN'
p3896
I110
sa(dp3897
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3898
g45
(g585
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3899
sS'trials2.thisRepN'
p3900
I0
sS'trials2.thisTrialN'
p3901
I111
sg2790
S'./stim/MorphF6_01_orig.jpg'
p3902
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfe0@'
tRp3903
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3904
sg30
I0
sg2794
g45
(g585
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3905
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3729579448699951
sS'trials2.thisN'
p3906
I111
sa(dp3907
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3908
g45
(g585
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3909
sS'trials2.thisRepN'
p3910
I0
sS'trials2.thisTrialN'
p3911
I112
sg2790
S'./stim/MorphM3_08_orig.jpg'
p3912
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf60@'
tRp3913
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp3914
sg30
I1
sg2794
g45
(g585
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3915
sg32
I0
sg39
g40
sg43
V4
sg33
F1.8427200317382812
sS'trials2.thisN'
p3916
I112
sa(dp3917
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3918
g45
(g585
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3919
sS'trials2.thisRepN'
p3920
I0
sS'trials2.thisTrialN'
p3921
I113
sg2790
S'./stim/MorphF2_06_orig.jpg'
p3922
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf60@'
tRp3923
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp3924
sg30
I1
sg2794
g45
(g585
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3925
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2355911731719971
sS'trials2.thisN'
p3926
I113
sa(dp3927
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3928
g45
(g585
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3929
sS'trials2.thisRepN'
p3930
I0
sS'trials2.thisTrialN'
p3931
I114
sg2790
S'./stim/MorphM9_05_orig.jpg'
p3932
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf60@'
tRp3933
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp3934
sg30
I0
sg2794
g45
(g585
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3935
sg32
I1
sg39
g40
sg43
V4
sg33
F0.95440196990966797
sS'trials2.thisN'
p3936
I114
sa(dp3937
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3938
g45
(g585
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3939
sS'trials2.thisRepN'
p3940
I0
sS'trials2.thisTrialN'
p3941
I115
sg2790
S'./stim/MorphM7_06_orig.jpg'
p3942
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xef0@'
tRp3943
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3944
sg30
I1
sg2794
g45
(g585
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3945
sg32
I0
sg39
g40
sg43
V4
sg33
F0.82015204429626465
sS'trials2.thisN'
p3946
I115
sa(dp3947
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3948
g45
(g585
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3949
sS'trials2.thisRepN'
p3950
I0
sS'trials2.thisTrialN'
p3951
I116
sg2790
S'./stim/MorphF7_00_orig.jpg'
p3952
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00I1@'
tRp3953
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x98\x0c@'
tRp3954
sg30
I0
sg2794
g45
(g585
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3955
sg32
I1
sg39
g40
sg43
V4
sg33
F3.5848720073699951
sS'trials2.thisN'
p3956
I116
sa(dp3957
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3958
g45
(g585
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3959
sS'trials2.thisRepN'
p3960
I0
sS'trials2.thisTrialN'
p3961
I117
sg2790
S'./stim/MorphM7_00_orig.jpg'
p3962
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80A1@'
tRp3963
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\\\x0c@'
tRp3964
sg30
I1
sg2794
g45
(g585
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3965
sg32
I0
sg39
g40
sg43
V4
sg33
F4.2729079723358154
sS'trials2.thisN'
p3966
I117
sa(dp3967
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3968
g45
(g585
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3969
sS'trials2.thisRepN'
p3970
I0
sS'trials2.thisTrialN'
p3971
I118
sg2790
S'./stim/MorphM6_02_orig.jpg'
p3972
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80A1@'
tRp3973
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\\\x0c@'
tRp3974
sg30
I0
sg2794
g45
(g585
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3975
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5894041061401367
sS'trials2.thisN'
p3976
I118
sa(dp3977
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3978
g45
(g585
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3979
sS'trials2.thisRepN'
p3980
I0
sS'trials2.thisTrialN'
p3981
I119
sg2790
S'./stim/MorphF7_04_orig.jpg'
p3982
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp3983
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3984
sg30
I1
sg2794
g45
(g585
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3985
sg32
I0
sg39
g40
sg43
V4
sg33
F11.175320148468018
sS'trials2.thisN'
p3986
I119
sa(dp3987
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3988
g45
(g585
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3989
sS'trials2.thisRepN'
p3990
I0
sS'trials2.thisTrialN'
p3991
I120
sg2790
S'./stim/MorphF4_00_orig.jpg'
p3992
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp3993
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3994
sg30
I0
sg2794
g45
(g585
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3995
sg32
I1
sg39
g40
sg43
V4
sg33
F1.5743589401245117
sS'trials2.thisN'
p3996
I120
sa(dp3997
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3998
g45
(g585
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp3999
sS'trials2.thisRepN'
p4000
I0
sS'trials2.thisTrialN'
p4001
I121
sg2790
S'./stim/MorphF9_07_orig.jpg'
p4002
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4003
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7?'
tRp4004
sg30
I1
sg2794
g45
(g585
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4005
sg32
I0
sg39
g40
sg43
V4
sg33
F2.9821908473968506
sS'trials2.thisN'
p4006
I121
sa(dp4007
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4008
g45
(g585
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4009
sS'trials2.thisRepN'
p4010
I0
sS'trials2.thisTrialN'
p4011
I122
sg2790
S'./stim/MorphF4_05_orig.jpg'
p4012
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4013
sg29
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7?'
tRp4014
sg30
I0
sg2794
g45
(g585
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4015
sg32
I1
sg39
g40
sg43
V4
sg33
F2.4120919704437256
sS'trials2.thisN'
p4016
I122
sa(dp4017
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4018
g45
(g585
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4019
sS'trials2.thisRepN'
p4020
I0
sS'trials2.thisTrialN'
p4021
I123
sg2790
S'./stim/MorphF5_10_orig.jpg'
p4022
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4023
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4024
sg30
I1
sg2794
g45
(g585
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4025
sg32
I0
sg39
g40
sg43
V4
sg33
F0.95400404930114746
sS'trials2.thisN'
p4026
I123
sa(dp4027
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4028
g45
(g585
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4029
sS'trials2.thisRepN'
p4030
I0
sS'trials2.thisTrialN'
p4031
I124
sg2790
S'./stim/MorphM9_06_orig.jpg'
p4032
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4033
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4034
sg30
I0
sg2794
g45
(g585
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4035
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2553122043609619
sS'trials2.thisN'
p4036
I124
sa(dp4037
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4038
g45
(g585
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4039
sS'trials2.thisRepN'
p4040
I0
sS'trials2.thisTrialN'
p4041
I125
sg2790
S'./stim/MorphF1_00_orig.jpg'
p4042
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4043
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4044
sg30
I0
sg2794
g45
(g585
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4045
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2394449710845947
sS'trials2.thisN'
p4046
I125
sa(dp4047
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4048
g45
(g585
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4049
sS'trials2.thisRepN'
p4050
I0
sS'trials2.thisTrialN'
p4051
I126
sg2790
S'./stim/MorphF5_07_orig.jpg'
p4052
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc2@'
tRp4053
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4054
sg30
I1
sg2794
g45
(g585
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4055
sg32
I0
sg39
g40
sg43
V4
sg33
F0.83623385429382324
sS'trials2.thisN'
p4056
I126
sa(dp4057
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4058
g45
(g585
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4059
sS'trials2.thisRepN'
p4060
I0
sS'trials2.thisTrialN'
p4061
I127
sg2790
S'./stim/MorphM6_06_orig.jpg'
p4062
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf42@'
tRp4063
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp4064
sg30
I1
sg2794
g45
(g585
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4065
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0381019115447998
sS'trials2.thisN'
p4066
I127
sa(dp4067
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4068
g45
(g585
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4069
sS'trials2.thisRepN'
p4070
I0
sS'trials2.thisTrialN'
p4071
I128
sg2790
S'./stim/MorphF2_00_orig.jpg'
p4072
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x033@'
tRp4073
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp4074
sg30
I0
sg2794
g45
(g585
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4075
sg32
I1
sg39
g40
sg43
V4
sg33
F0.95195698738098145
sS'trials2.thisN'
p4076
I128
sa(dp4077
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4078
g45
(g585
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4079
sS'trials2.thisRepN'
p4080
I0
sS'trials2.thisTrialN'
p4081
I129
sg2790
S'./stim/MorphM6_03_orig.jpg'
p4082
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x0b3@'
tRp4083
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp4084
sg30
I0
sg2794
g45
(g585
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4085
sg32
I1
sg39
g40
sg43
V4
sg33
F3.9360010623931885
sS'trials2.thisN'
p4086
I129
sa(dp4087
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4088
g45
(g585
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4089
sS'trials2.thisRepN'
p4090
I0
sS'trials2.thisTrialN'
p4091
I130
sg2790
S'./stim/MorphM3_04_orig.jpg'
p4092
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80!3@'
tRp4093
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5?'
tRp4094
sg30
I1
sg2794
g45
(g585
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4095
sg32
I0
sg39
g40
sg43
V4
sg33
F1.8254621028900146
sS'trials2.thisN'
p4096
I130
sa(dp4097
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4098
g45
(g585
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4099
sS'trials2.thisRepN'
p4100
I0
sS'trials2.thisTrialN'
p4101
I131
sg2790
S'./stim/MorphM8_01_orig.jpg'
p4102
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80!3@'
tRp4103
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xf5?'
tRp4104
sg30
I1
sg2794
g45
(g585
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4105
sg32
I0
sg39
g40
sg43
V4
sg33
F1.7582659721374512
sS'trials2.thisN'
p4106
I131
sa(dp4107
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4108
g45
(g585
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4109
sS'trials2.thisRepN'
p4110
I0
sS'trials2.thisTrialN'
p4111
I132
sg2790
S'./stim/MorphM1_06_orig.jpg'
p4112
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80?3@'
tRp4113
sg29
g45
(g47
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4114
sg30
I0
sg2794
g45
(g585
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4115
sg32
I1
sg39
g40
sg43
V4
sg33
F1.155271053314209
sS'trials2.thisN'
p4116
I132
sa(dp4117
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4118
g45
(g585
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4119
sS'trials2.thisRepN'
p4120
I0
sS'trials2.thisTrialN'
p4121
I133
sg2790
S'./stim/MorphM2_09_orig.jpg'
p4122
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x0083@'
tRp4123
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xf1?'
tRp4124
sg30
I1
sg2794
g45
(g585
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4125
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0545680522918701
sS'trials2.thisN'
p4126
I133
sa(dp4127
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4128
g45
(g585
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4129
sS'trials2.thisRepN'
p4130
I0
sS'trials2.thisTrialN'
p4131
I134
sg2790
S'./stim/MorphF2_01_orig.jpg'
p4132
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x0083@'
tRp4133
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xf1?'
tRp4134
sg30
I0
sg2794
g45
(g585
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4135
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3575658798217773
sS'trials2.thisN'
p4136
I134
sa(dp4137
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4138
g45
(g585
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4139
sS'trials2.thisRepN'
p4140
I0
sS'trials2.thisTrialN'
p4141
I135
sg2790
S'./stim/MorphM5_01_orig.jpg'
p4142
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x0083@'
tRp4143
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4144
sg30
I0
sg2794
g45
(g585
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4145
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3932549953460693
sS'trials2.thisN'
p4146
I135
sa(dp4147
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4148
g45
(g585
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4149
sS'trials2.thisRepN'
p4150
I0
sS'trials2.thisTrialN'
p4151
I136
sg2790
S'./stim/MorphF8_03_orig.jpg'
p4152
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x8003@'
tRp4153
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4154
sg30
I0
sg2794
g45
(g585
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4155
sg32
I1
sg39
g40
sg43
V4
sg33
F0.70215487480163574
sS'trials2.thisN'
p4156
I136
sa(dp4157
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4158
g45
(g585
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4159
sS'trials2.thisRepN'
p4160
I0
sS'trials2.thisTrialN'
p4161
I137
sg2790
S'./stim/MorphF10_03_orig.jpg'
p4162
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00)3@'
tRp4163
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4164
sg30
I1
sg2794
g45
(g585
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4165
sg32
I0
sg39
g40
sg43
V4
sg33
F1.5231401920318604
sS'trials2.thisN'
p4166
I137
sa(dp4167
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4168
g45
(g585
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4169
sS'trials2.thisRepN'
p4170
I0
sS'trials2.thisTrialN'
p4171
I138
sg2790
S'./stim/MorphM7_09_orig.jpg'
p4172
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x8003@'
tRp4173
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4174
sg30
I1
sg2794
g45
(g585
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4175
sg32
I0
sg39
g40
sg43
V4
sg33
F1.8235630989074707
sS'trials2.thisN'
p4176
I138
sa(dp4177
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4178
g45
(g585
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4179
sS'trials2.thisRepN'
p4180
I0
sS'trials2.thisTrialN'
p4181
I139
sg2790
S'./stim/MorphM9_00_orig.jpg'
p4182
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00G3@'
tRp4183
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4184
sg30
I0
sg2794
g45
(g585
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4185
sg32
I1
sg39
g40
sg43
V4
sg33
F0.98629498481750488
sS'trials2.thisN'
p4186
I139
sa(dp4187
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4188
g45
(g585
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4189
sS'trials2.thisRepN'
p4190
I0
sS'trials2.thisTrialN'
p4191
I140
sg2790
S'./stim/MorphM3_05_orig.jpg'
p4192
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00G3@'
tRp4193
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4194
sg30
I1
sg2794
g45
(g585
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4195
sg32
I0
sg39
g40
sg43
V4
sg33
F1.9247689247131348
sS'trials2.thisN'
p4196
I140
sa(dp4197
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4198
g45
(g585
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4199
sS'trials2.thisRepN'
p4200
I0
sS'trials2.thisTrialN'
p4201
I141
sg2790
S'./stim/MorphM1_07_orig.jpg'
p4202
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00G3@'
tRp4203
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4204
sg30
I0
sg2794
g45
(g585
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4205
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0207390785217285
sS'trials2.thisN'
p4206
I141
sa(dp4207
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4208
g45
(g585
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4209
sS'trials2.thisRepN'
p4210
I0
sS'trials2.thisTrialN'
p4211
I142
sg2790
S'./stim/MorphM9_07_orig.jpg'
p4212
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00G3@'
tRp4213
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4214
sg30
I1
sg2794
g45
(g585
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4215
sg32
I0
sg39
g40
sg43
V4
sg33
F2.076585054397583
sS'trials2.thisN'
p4216
I142
sa(dp4217
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4218
g45
(g585
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4219
sS'trials2.thisRepN'
p4220
I0
sS'trials2.thisTrialN'
p4221
I143
sg2790
S'./stim/MorphF3_03_orig.jpg'
p4222
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3@'
tRp4223
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4224
sg30
I0
sg2794
g45
(g585
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4225
sg32
I1
sg39
g40
sg43
V4
sg33
F1.2886271476745605
sS'trials2.thisN'
p4226
I143
sa(dp4227
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4228
g45
(g585
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4229
sS'trials2.thisRepN'
p4230
I0
sS'trials2.thisTrialN'
p4231
I144
sg2790
S'./stim/MorphF4_07_orig.jpg'
p4232
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3@'
tRp4233
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4234
sg30
I1
sg2794
g45
(g585
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4235
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1375079154968262
sS'trials2.thisN'
p4236
I144
sa(dp4237
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4238
g45
(g585
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4239
sS'trials2.thisRepN'
p4240
I0
sS'trials2.thisTrialN'
p4241
I145
sg2790
S'./stim/MorphM2_10_orig.jpg'
p4242
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3@'
tRp4243
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4244
sg30
I1
sg2794
g45
(g585
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4245
sg32
I0
sg39
g40
sg43
V4
sg33
F0.66939520835876465
sS'trials2.thisN'
p4246
I145
sa(dp4247
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4248
g45
(g585
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4249
sS'trials2.thisRepN'
p4250
I0
sS'trials2.thisTrialN'
p4251
I146
sg2790
S'./stim/MorphF7_06_orig.jpg'
p4252
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3@'
tRp4253
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4254
sg30
I1
sg2794
g45
(g585
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4255
sg32
I0
sg39
g40
sg43
V4
sg33
F0.78416895866394043
sS'trials2.thisN'
p4256
I146
sa(dp4257
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4258
g45
(g585
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4259
sS'trials2.thisRepN'
p4260
I0
sS'trials2.thisTrialN'
p4261
I147
sg2790
S'./stim/MorphM8_02_orig.jpg'
p4262
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3@'
tRp4263
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4264
sg30
I1
sg2794
g45
(g585
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4265
sg32
I0
sg39
g40
sg43
V4
sg33
F0.8175199031829834
sS'trials2.thisN'
p4266
I147
sa(dp4267
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4268
g45
(g585
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4269
sS'trials2.thisRepN'
p4270
I0
sS'trials2.thisTrialN'
p4271
I148
sg2790
S'./stim/MorphF3_05_orig.jpg'
p4272
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x833@'
tRp4273
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4274
sg30
I0
sg2794
g45
(g585
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4275
sg32
I1
sg39
g40
sg43
V4
sg33
F0.87071585655212402
sS'trials2.thisN'
p4276
I148
sa(dp4277
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4278
g45
(g585
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4279
sS'trials2.thisRepN'
p4280
I0
sS'trials2.thisTrialN'
p4281
I149
sg2790
S'./stim/MorphF6_04_orig.jpg'
p4282
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x923@'
tRp4283
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4284
sg30
I0
sg2794
g45
(g585
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4285
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1377661228179932
sS'trials2.thisN'
p4286
I149
sa(dp4287
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4288
g45
(g585
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4289
sS'trials2.thisRepN'
p4290
I0
sS'trials2.thisTrialN'
p4291
I150
sg2790
S'./stim/MorphM4_10_orig.jpg'
p4292
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x993@'
tRp4293
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4294
sg30
I1
sg2794
g45
(g585
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4295
sg32
I0
sg39
g40
sg43
V4
sg33
F0.75082302093505859
sS'trials2.thisN'
p4296
I150
sa(dp4297
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4298
g45
(g585
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4299
sS'trials2.thisRepN'
p4300
I0
sS'trials2.thisTrialN'
p4301
I151
sg2790
S'./stim/MorphF10_08_orig.jpg'
p4302
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x993@'
tRp4303
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4304
sg30
I1
sg2794
g45
(g585
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4305
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0556437969207764
sS'trials2.thisN'
p4306
I151
sa(dp4307
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4308
g45
(g585
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4309
sS'trials2.thisRepN'
p4310
I0
sS'trials2.thisTrialN'
p4311
I152
sg2790
S'./stim/MorphF5_02_orig.jpg'
p4312
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xa83@'
tRp4313
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4314
sg30
I0
sg2794
g45
(g585
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4315
sg32
I1
sg39
g40
sg43
V4
sg33
F1.4390292167663574
sS'trials2.thisN'
p4316
I152
sa(dp4317
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4318
g45
(g585
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4319
sS'trials2.thisRepN'
p4320
I0
sS'trials2.thisTrialN'
p4321
I153
sg2790
S'./stim/MorphF1_05_orig.jpg'
p4322
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xa83@'
tRp4323
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4324
sg30
I0
sg2794
g45
(g585
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4325
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3556039333343506
sS'trials2.thisN'
p4326
I153
sa(dp4327
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4328
g45
(g585
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4329
sS'trials2.thisRepN'
p4330
I0
sS'trials2.thisTrialN'
p4331
I154
sg2790
S'./stim/MorphF9_09_orig.jpg'
p4332
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa13@'
tRp4333
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4334
sg30
I1
sg2794
g45
(g585
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4335
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0709421634674072
sS'trials2.thisN'
p4336
I154
sa(dp4337
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4338
g45
(g585
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4339
sS'trials2.thisRepN'
p4340
I0
sS'trials2.thisTrialN'
p4341
I155
sg2790
S'./stim/MorphF5_03_orig.jpg'
p4342
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa13@'
tRp4343
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0?'
tRp4344
sg30
I0
sg2794
g45
(g585
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4345
sg32
I1
sg39
g40
sg43
V4
sg33
F4.4237771034240723
sS'trials2.thisN'
p4346
I155
sa(dp4347
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4348
g45
(g585
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4349
sS'trials2.thisRepN'
p4350
I0
sS'trials2.thisTrialN'
p4351
I156
sg2790
S'./stim/MorphF4_03_orig.jpg'
p4352
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xb73@'
tRp4353
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0?'
tRp4354
sg30
I0
sg2794
g45
(g585
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4355
sg32
I1
sg39
g40
sg43
V4
sg33
F2.9646511077880859
sS'trials2.thisN'
p4356
I156
sa(dp4357
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4358
g45
(g585
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4359
sS'trials2.thisRepN'
p4360
I0
sS'trials2.thisTrialN'
p4361
I157
sg2790
S'./stim/MorphF5_01_orig.jpg'
p4362
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbf3@'
tRp4363
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0?'
tRp4364
sg30
I0
sg2794
g45
(g585
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4365
sg32
I1
sg39
g40
sg43
V4
sg33
F1.3225820064544678
sS'trials2.thisN'
p4366
I157
sa(dp4367
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4368
g45
(g585
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4369
sS'trials2.thisRepN'
p4370
I0
sS'trials2.thisTrialN'
p4371
I158
sg2790
S'./stim/MorphM1_01_orig.jpg'
p4372
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xb73@'
tRp4373
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0?'
tRp4374
sg30
I0
sg2794
g45
(g585
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4375
sg32
I1
sg39
g40
sg43
V4
sg33
F1.9425251483917236
sS'trials2.thisN'
p4376
I158
sa(dp4377
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4378
g45
(g585
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4379
sS'trials2.thisRepN'
p4380
I0
sS'trials2.thisTrialN'
p4381
I159
sg2790
S'./stim/MorphF9_02_orig.jpg'
p4382
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbf3@'
tRp4383
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4384
sg30
I0
sg2794
g45
(g585
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4385
sg32
I1
sg39
g40
sg43
V4
sg33
F2.1607670783996582
sS'trials2.thisN'
p4386
I159
sa(dp4387
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4388
g45
(g585
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4389
sS'trials2.thisRepN'
p4390
I0
sS'trials2.thisTrialN'
p4391
I160
sg2790
S'./stim/MorphF2_02_orig.jpg'
p4392
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbf3@'
tRp4393
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4394
sg30
I0
sg2794
g45
(g585
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4395
sg32
I1
sg39
g40
sg43
V4
sg33
F2.4960930347442627
sS'trials2.thisN'
p4396
I160
sa(dp4397
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4398
g45
(g585
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4399
sS'trials2.thisRepN'
p4400
I0
sS'trials2.thisTrialN'
p4401
I161
sg2790
S'./stim/MorphM8_10_orig.jpg'
p4402
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbf3@'
tRp4403
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4404
sg30
I1
sg2794
g45
(g585
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4405
sg32
I0
sg39
g40
sg43
V4
sg33
F0.73346519470214844
sS'trials2.thisN'
p4406
I161
sa(dp4407
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4408
g45
(g585
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4409
sS'trials2.thisRepN'
p4410
I0
sS'trials2.thisTrialN'
p4411
I162
sg2790
S'./stim/MorphM1_10_orig.jpg'
p4412
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdd3@'
tRp4413
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4414
sg30
I1
sg2794
g45
(g585
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4415
sg32
I0
sg39
g40
sg43
V4
sg33
F2.3115050792694092
sS'trials2.thisN'
p4416
I162
sa(dp4417
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4418
g45
(g585
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4419
sS'trials2.thisRepN'
p4420
I0
sS'trials2.thisTrialN'
p4421
I163
sg2790
S'./stim/MorphF10_04_orig.jpg'
p4422
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdd3@'
tRp4423
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4424
sg30
I1
sg2794
g45
(g585
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4425
sg32
I0
sg39
g40
sg43
V4
sg33
F2.1438989639282227
sS'trials2.thisN'
p4426
I163
sa(dp4427
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4428
g45
(g585
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4429
sS'trials2.thisRepN'
p4430
I0
sS'trials2.thisTrialN'
p4431
I164
sg2790
S'./stim/MorphF3_00_orig.jpg'
p4432
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdd3@'
tRp4433
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4434
sg30
I0
sg2794
g45
(g585
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4435
sg32
I1
sg39
g40
sg43
V4
sg33
F1.8077268600463867
sS'trials2.thisN'
p4436
I164
sa(dp4437
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4438
g45
(g585
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4439
sS'trials2.thisRepN'
p4440
I0
sS'trials2.thisTrialN'
p4441
I165
sg2790
S'./stim/MorphM2_07_orig.jpg'
p4442
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdd3@'
tRp4443
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4444
sg30
I1
sg2794
g45
(g585
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4445
sg32
I0
sg39
g40
sg43
V4
sg33
F0.71940398216247559
sS'trials2.thisN'
p4446
I165
sa(dp4447
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4448
g45
(g585
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4449
sS'trials2.thisRepN'
p4450
I0
sS'trials2.thisTrialN'
p4451
I166
sg2790
S'./stim/MorphF7_05_orig.jpg'
p4452
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdd3@'
tRp4453
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4454
sg30
I1
sg2794
g45
(g585
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4455
sg32
I0
sg39
g40
sg43
V4
sg33
F1.2225148677825928
sS'trials2.thisN'
p4456
I166
sa(dp4457
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4458
g45
(g585
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4459
sS'trials2.thisRepN'
p4460
I0
sS'trials2.thisTrialN'
p4461
I167
sg2790
S'./stim/MorphF6_03_orig.jpg'
p4462
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x024@'
tRp4463
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0?'
tRp4464
sg30
I0
sg2794
g45
(g585
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4465
sg32
I1
sg39
g40
sg43
V4
sg33
F1.121851921081543
sS'trials2.thisN'
p4466
I167
sa(dp4467
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4468
g45
(g585
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4469
sS'trials2.thisRepN'
p4470
I0
sS'trials2.thisTrialN'
p4471
I168
sg2790
S'./stim/MorphF3_02_orig.jpg'
p4472
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\n4@'
tRp4473
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4474
sg30
I0
sg2794
g45
(g585
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4475
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1882438659667969
sS'trials2.thisN'
p4476
I168
sa(dp4477
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4478
g45
(g585
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4479
sS'trials2.thisRepN'
p4480
I0
sS'trials2.thisTrialN'
p4481
I169
sg2790
S'./stim/MorphF1_01_orig.jpg'
p4482
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\n4@'
tRp4483
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4484
sg30
I0
sg2794
g45
(g585
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4485
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7423331737518311
sS'trials2.thisN'
p4486
I169
sa(dp4487
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4488
g45
(g585
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4489
sS'trials2.thisRepN'
p4490
I0
sS'trials2.thisTrialN'
p4491
I170
sg2790
S'./stim/MorphM1_04_orig.jpg'
p4492
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\n4@'
tRp4493
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4494
sg30
I0
sg2794
g45
(g585
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4495
sg32
I1
sg39
g40
sg43
V4
sg33
F1.6911590099334717
sS'trials2.thisN'
p4496
I170
sa(dp4497
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4498
g45
(g585
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4499
sS'trials2.thisRepN'
p4500
I0
sS'trials2.thisTrialN'
p4501
I171
sg2790
S'./stim/MorphF4_09_orig.jpg'
p4502
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\n4@'
tRp4503
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4504
sg30
I1
sg2794
g45
(g585
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4505
sg32
I0
sg39
g40
sg43
V4
sg33
F0.87089705467224121
sS'trials2.thisN'
p4506
I171
sa(dp4507
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4508
g45
(g585
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4509
sS'trials2.thisRepN'
p4510
I0
sS'trials2.thisTrialN'
p4511
I172
sg2790
S'./stim/MorphM6_00_orig.jpg'
p4512
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x114@'
tRp4513
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4514
sg30
I0
sg2794
g45
(g585
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4515
sg32
I1
sg39
g40
sg43
V4
sg33
F1.1714451313018799
sS'trials2.thisN'
p4516
I172
sa(dp4517
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4518
g45
(g585
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4519
sS'trials2.thisRepN'
p4520
I0
sS'trials2.thisTrialN'
p4521
I173
sg2790
S'./stim/MorphM5_09_orig.jpg'
p4522
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x114@'
tRp4523
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4524
sg30
I1
sg2794
g45
(g585
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4525
sg32
I0
sg39
g40
sg43
V4
sg33
F0.93730020523071289
sS'trials2.thisN'
p4526
I173
sa(dp4527
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4528
g45
(g585
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4529
sS'trials2.thisRepN'
p4530
I0
sS'trials2.thisTrialN'
p4531
I174
sg2790
S'./stim/MorphF5_06_orig.jpg'
p4532
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x114@'
tRp4533
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4534
sg30
I1
sg2794
g45
(g585
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4535
sg32
I0
sg39
g40
sg43
V4
sg33
F0.91939902305603027
sS'trials2.thisN'
p4536
I174
sa(dp4537
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4538
g45
(g585
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4539
sS'trials2.thisRepN'
p4540
I0
sS'trials2.thisTrialN'
p4541
I175
sg2790
S'./stim/MorphF9_01_orig.jpg'
p4542
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x194@'
tRp4543
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4544
sg30
I0
sg2794
g45
(g585
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4545
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7078609466552734
sS'trials2.thisN'
p4546
I175
sa(dp4547
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4548
g45
(g585
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4549
sS'trials2.thisRepN'
p4550
I0
sS'trials2.thisTrialN'
p4551
I176
sg2790
S'./stim/MorphM5_07_orig.jpg'
p4552
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x194@'
tRp4553
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4554
sg30
I1
sg2794
g45
(g585
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4555
sg32
I0
sg39
g40
sg43
V4
sg33
F1.7420239448547363
sS'trials2.thisN'
p4556
I176
sa(dp4557
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4558
g45
(g585
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4559
sS'trials2.thisRepN'
p4560
I0
sS'trials2.thisTrialN'
p4561
I177
sg2790
S'./stim/MorphM2_01_orig.jpg'
p4562
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80 4@'
tRp4563
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4564
sg30
I0
sg2794
g45
(g585
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4565
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0858240127563477
sS'trials2.thisN'
p4566
I177
sa(dp4567
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4568
g45
(g585
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4569
sS'trials2.thisRepN'
p4570
I0
sS'trials2.thisTrialN'
p4571
I178
sg2790
S'./stim/MorphM7_03_orig.jpg'
p4572
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80 4@'
tRp4573
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4574
sg30
I1
sg2794
g45
(g585
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4575
sg32
I0
sg39
g40
sg43
V4
sg33
F1.3900220394134521
sS'trials2.thisN'
p4576
I178
sa(dp4577
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4578
g45
(g585
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4579
sS'trials2.thisRepN'
p4580
I0
sS'trials2.thisTrialN'
p4581
I179
sg2790
S'./stim/MorphM9_09_orig.jpg'
p4582
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00(4@'
tRp4583
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4584
sg30
I1
sg2794
g45
(g585
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4585
sg32
I0
sg39
g40
sg43
V4
sg33
F0.86974501609802246
sS'trials2.thisN'
p4586
I179
sa(dp4587
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4588
g45
(g585
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4589
sS'trials2.thisRepN'
p4590
I0
sS'trials2.thisTrialN'
p4591
I180
sg2790
S'./stim/MorphF9_10_orig.jpg'
p4592
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80/4@'
tRp4593
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4594
sg30
I1
sg2794
g45
(g585
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4595
sg32
I0
sg39
g40
sg43
V4
sg33
F0.6505119800567627
sS'trials2.thisN'
p4596
I180
sa(dp4597
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4598
g45
(g585
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4599
sS'trials2.thisRepN'
p4600
I0
sS'trials2.thisTrialN'
p4601
I181
sg2790
S'./stim/MorphF8_10_orig.jpg'
p4602
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80/4@'
tRp4603
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4604
sg30
I1
sg2794
g45
(g585
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4605
sg32
I0
sg39
g40
sg43
V4
sg33
F0.70268607139587402
sS'trials2.thisN'
p4606
I181
sa(dp4607
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4608
g45
(g585
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4609
sS'trials2.thisRepN'
p4610
I0
sS'trials2.thisTrialN'
p4611
I182
sg2790
S'./stim/MorphF10_10_orig.jpg'
p4612
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80>4@'
tRp4613
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4614
sg30
I1
sg2794
g45
(g585
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4615
sg32
I0
sg39
g40
sg43
V4
sg33
F0.75287103652954102
sS'trials2.thisN'
p4616
I182
sa(dp4617
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4618
g45
(g585
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4619
sS'trials2.thisRepN'
p4620
I0
sS'trials2.thisTrialN'
p4621
I183
sg2790
S'./stim/MorphM3_09_orig.jpg'
p4622
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80>4@'
tRp4623
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4624
sg30
I1
sg2794
g45
(g585
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4625
sg32
I0
sg39
g40
sg43
V4
sg33
F0.68499207496643066
sS'trials2.thisN'
p4626
I183
sa(dp4627
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4628
g45
(g585
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4629
sS'trials2.thisRepN'
p4630
I0
sS'trials2.thisTrialN'
p4631
I184
sg2790
S'./stim/MorphF10_05_orig.jpg'
p4632
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80>4@'
tRp4633
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef?'
tRp4634
sg30
I1
sg2794
g45
(g585
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4635
sg32
I0
sg39
g40
sg43
V4
sg33
F0.9043428897857666
sS'trials2.thisN'
p4636
I184
sa(dp4637
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4638
g45
(g585
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4639
sS'trials2.thisRepN'
p4640
I0
sS'trials2.thisTrialN'
p4641
I185
sg2790
S'./stim/MorphF6_00_orig.jpg'
p4642
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00F4@'
tRp4643
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4644
sg30
I0
sg2794
g45
(g585
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4645
sg32
I1
sg39
g40
sg43
V4
sg33
F0.9182431697845459
sS'trials2.thisN'
p4646
I185
sa(dp4647
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4648
g45
(g585
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4649
sS'trials2.thisRepN'
p4650
I0
sS'trials2.thisTrialN'
p4651
I186
sg2790
S'./stim/MorphF8_08_orig.jpg'
p4652
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80M4@'
tRp4653
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4654
sg30
I1
sg2794
g45
(g585
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4655
sg32
I0
sg39
g40
sg43
V4
sg33
F0.87006902694702148
sS'trials2.thisN'
p4656
I186
sa(dp4657
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4658
g45
(g585
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4659
sS'trials2.thisRepN'
p4660
I0
sS'trials2.thisTrialN'
p4661
I187
sg2790
S'./stim/MorphF7_10_orig.jpg'
p4662
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80M4@'
tRp4663
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4664
sg30
I1
sg2794
g45
(g585
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4665
sg32
I0
sg39
g40
sg43
V4
sg33
F0.70282816886901855
sS'trials2.thisN'
p4666
I187
sa(dp4667
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4668
g45
(g585
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4669
sS'trials2.thisRepN'
p4670
I0
sS'trials2.thisTrialN'
p4671
I188
sg2790
S'./stim/MorphM9_10_orig.jpg'
p4672
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80M4@'
tRp4673
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4674
sg30
I1
sg2794
g45
(g585
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4675
sg32
I0
sg39
g40
sg43
V4
sg33
F0.65233802795410156
sS'trials2.thisN'
p4676
I188
sa(dp4677
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4678
g45
(g585
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4679
sS'trials2.thisRepN'
p4680
I0
sS'trials2.thisTrialN'
p4681
I189
sg2790
S'./stim/MorphM10_05_orig.jpg'
p4682
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00U4@'
tRp4683
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \xec?'
tRp4684
sg30
I1
sg2794
g45
(g585
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4685
sg32
I0
sg39
g40
sg43
V4
sg33
F0.6858971118927002
sS'trials2.thisN'
p4686
I189
sa(dp4687
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4688
g45
(g585
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4689
sS'trials2.thisRepN'
p4690
I0
sS'trials2.thisTrialN'
p4691
I190
sg2790
S'./stim/MorphM8_03_orig.jpg'
p4692
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80M4@'
tRp4693
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \xec?'
tRp4694
sg30
I1
sg2794
g45
(g585
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4695
sg32
I0
sg39
g40
sg43
V4
sg33
F0.60239505767822266
sS'trials2.thisN'
p4696
I190
sa(dp4697
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4698
g45
(g585
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4699
sS'trials2.thisRepN'
p4700
I0
sS'trials2.thisTrialN'
p4701
I191
sg2790
S'./stim/MorphF2_10_orig.jpg'
p4702
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80M4@'
tRp4703
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \xec?'
tRp4704
sg30
I1
sg2794
g45
(g585
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4705
sg32
I0
sg39
g40
sg43
V4
sg33
F0.75247097015380859
sS'trials2.thisN'
p4706
I191
sa(dp4707
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4708
g45
(g585
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4709
sS'trials2.thisRepN'
p4710
I0
sS'trials2.thisTrialN'
p4711
I192
sg2790
S'./stim/MorphM1_02_orig.jpg'
p4712
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00F4@'
tRp4713
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4714
sg30
I0
sg2794
g45
(g585
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4715
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0879981517791748
sS'trials2.thisN'
p4716
I192
sa(dp4717
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4718
g45
(g585
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4719
sS'trials2.thisRepN'
p4720
I0
sS'trials2.thisTrialN'
p4721
I193
sg2790
S'./stim/MorphM4_09_orig.jpg'
p4722
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00U4@'
tRp4723
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4724
sg30
I1
sg2794
g45
(g585
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4725
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0542020797729492
sS'trials2.thisN'
p4726
I193
sa(dp4727
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4728
g45
(g585
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4729
sS'trials2.thisRepN'
p4730
I0
sS'trials2.thisTrialN'
p4731
I194
sg2790
S'./stim/MorphM8_07_orig.jpg'
p4732
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00U4@'
tRp4733
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4734
sg30
I1
sg2794
g45
(g585
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4735
sg32
I0
sg39
g40
sg43
V4
sg33
F0.95467591285705566
sS'trials2.thisN'
p4736
I194
sa(dp4737
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4738
g45
(g585
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4739
sS'trials2.thisRepN'
p4740
I0
sS'trials2.thisTrialN'
p4741
I195
sg2790
S'./stim/MorphM1_08_orig.jpg'
p4742
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00U4@'
tRp4743
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4744
sg30
I1
sg2794
g45
(g585
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4745
sg32
I0
sg39
g40
sg43
V4
sg33
F2.8790879249572754
sS'trials2.thisN'
p4746
I195
sa(dp4747
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4748
g45
(g585
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4749
sS'trials2.thisRepN'
p4750
I0
sS'trials2.thisTrialN'
p4751
I196
sg2790
S'./stim/MorphF4_08_orig.jpg'
p4752
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\\4@'
tRp4753
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4754
sg30
I1
sg2794
g45
(g585
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4755
sg32
I0
sg39
g40
sg43
V4
sg33
F0.65240001678466797
sS'trials2.thisN'
p4756
I196
sa(dp4757
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4758
g45
(g585
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4759
sS'trials2.thisRepN'
p4760
I0
sS'trials2.thisTrialN'
p4761
I197
sg2790
S'./stim/MorphM9_04_orig.jpg'
p4762
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\\4@'
tRp4763
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4764
sg30
I1
sg2794
g45
(g585
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4765
sg32
I0
sg39
g40
sg43
V4
sg33
F3.2661299705505371
sS'trials2.thisN'
p4766
I197
sa(dp4767
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4768
g45
(g585
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4769
sS'trials2.thisRepN'
p4770
I0
sS'trials2.thisTrialN'
p4771
I198
sg2790
S'./stim/MorphF1_09_orig.jpg'
p4772
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\\4@'
tRp4773
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4774
sg30
I1
sg2794
g45
(g585
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4775
sg32
I0
sg39
g40
sg43
V4
sg33
F0.97112393379211426
sS'trials2.thisN'
p4776
I198
sa(dp4777
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4778
g45
(g585
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4779
sS'trials2.thisRepN'
p4780
I0
sS'trials2.thisTrialN'
p4781
I199
sg2790
S'./stim/MorphM9_08_orig.jpg'
p4782
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\\4@'
tRp4783
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4784
sg30
I1
sg2794
g45
(g585
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4785
sg32
I0
sg39
g40
sg43
V4
sg33
F0.65209603309631348
sS'trials2.thisN'
p4786
I199
sa(dp4787
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4788
g45
(g585
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4789
sS'trials2.thisRepN'
p4790
I0
sS'trials2.thisTrialN'
p4791
I200
sg2790
S'./stim/MorphF10_01_orig.jpg'
p4792
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\\4@'
tRp4793
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee?'
tRp4794
sg30
I1
sg2794
g45
(g585
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4795
sg32
I0
sg39
g40
sg43
V4
sg33
F0.88689804077148438
sS'trials2.thisN'
p4796
I200
sa(dp4797
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4798
g45
(g585
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4799
sS'trials2.thisRepN'
p4800
I0
sS'trials2.thisTrialN'
p4801
I201
sg2790
S'./stim/MorphM10_00_orig.jpg'
p4802
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80z4@'
tRp4803
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4804
sg30
I1
sg2794
g45
(g585
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4805
sg32
I0
sg39
g40
sg43
V4
sg33
F0.73625278472900391
sS'trials2.thisN'
p4806
I201
sa(dp4807
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4808
g45
(g585
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4809
sS'trials2.thisRepN'
p4810
I0
sS'trials2.thisTrialN'
p4811
I202
sg2790
S'./stim/MorphM2_00_orig.jpg'
p4812
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80z4@'
tRp4813
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\xed?'
tRp4814
sg30
I0
sg2794
g45
(g585
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4815
sg32
I1
sg39
g40
sg43
V4
sg33
F1.0199179649353027
sS'trials2.thisN'
p4816
I202
sa(dp4817
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4818
g45
(g585
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4819
sS'trials2.thisRepN'
p4820
I0
sS'trials2.thisTrialN'
p4821
I203
sg2790
S'./stim/MorphM9_01_orig.jpg'
p4822
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00s4@'
tRp4823
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \xec?'
tRp4824
sg30
I1
sg2794
g45
(g585
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4825
sg32
I0
sg39
g40
sg43
V4
sg33
F0.70201992988586426
sS'trials2.thisN'
p4826
I203
sa(dp4827
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4828
g45
(g585
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4829
sS'trials2.thisRepN'
p4830
I0
sS'trials2.thisTrialN'
p4831
I204
sg2790
S'./stim/MorphF7_09_orig.jpg'
p4832
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x914@'
tRp4833
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9?'
tRp4834
sg30
I1
sg2794
g45
(g585
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4835
sg32
I0
sg39
g40
sg43
V4
sg33
F2.8325269222259521
sS'trials2.thisN'
p4836
I204
sa(dp4837
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4838
g45
(g585
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4839
sS'trials2.thisRepN'
p4840
I0
sS'trials2.thisTrialN'
p4841
I205
sg2790
S'./stim/MorphF9_00_orig.jpg'
p4842
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf4@'
tRp4843
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9?'
tRp4844
sg30
I0
sg2794
g45
(g585
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4845
sg32
I1
sg39
g40
sg43
V4
sg33
F1.7224249839782715
sS'trials2.thisN'
p4846
I205
sa(dp4847
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4848
g45
(g585
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4849
sS'trials2.thisRepN'
p4850
I0
sS'trials2.thisTrialN'
p4851
I206
sg2790
S'./stim/MorphM2_02_orig.jpg'
p4852
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf4@'
tRp4853
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9?'
tRp4854
sg30
I0
sg2794
g45
(g585
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4855
sg32
I1
sg39
g40
sg43
V4
sg33
F2.0095999240875244
sS'trials2.thisN'
p4856
I206
sa(dp4857
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4858
g45
(g585
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4859
sS'trials2.thisRepN'
p4860
I0
sS'trials2.thisTrialN'
p4861
I207
sg2790
S'./stim/MorphF8_05_orig.jpg'
p4862
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf4@'
tRp4863
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P\xe9?'
tRp4864
sg30
I0
sg2794
g45
(g585
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4865
sg32
I1
sg39
g40
sg43
V4
sg33
F2.3098289966583252
sS'trials2.thisN'
p4866
I207
sa(dp4867
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4868
g45
(g585
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4869
sS'trials2.thisRepN'
p4870
I0
sS'trials2.thisTrialN'
p4871
I208
sg2790
S'./stim/MorphF3_09_orig.jpg'
p4872
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xb64@'
tRp4873
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4874
sg30
I0
sg2794
g45
(g585
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4875
sg32
I1
sg39
g40
sg43
V4
sg33
F7.0375800132751465
sS'trials2.thisN'
p4876
I208
sa(dp4877
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4878
g45
(g585
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4879
sS'trials2.thisRepN'
p4880
I0
sS'trials2.thisTrialN'
p4881
I209
sg2790
S'./stim/MorphM5_10_orig.jpg'
p4882
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xb64@'
tRp4883
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4884
sg30
I1
sg2794
g45
(g585
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4885
sg32
I0
sg39
g40
sg43
V4
sg33
F1.1873939037322998
sS'trials2.thisN'
p4886
I209
sa(dp4887
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4888
g45
(g585
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4889
sS'trials2.thisRepN'
p4890
I0
sS'trials2.thisTrialN'
p4891
I210
sg2790
S'./stim/MorphM8_08_orig.jpg'
p4892
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd4@'
tRp4893
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4894
sg30
I1
sg2794
g45
(g585
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4895
sg32
I0
sg39
g40
sg43
V4
sg33
F0.98769092559814453
sS'trials2.thisN'
p4896
I210
sa(dp4897
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4898
g45
(g585
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4899
sS'trials2.thisRepN'
p4900
I0
sS'trials2.thisTrialN'
p4901
I211
sg2790
S'./stim/MorphM3_07_orig.jpg'
p4902
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xd44@'
tRp4903
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4904
sg30
I1
sg2794
g45
(g585
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4905
sg32
I0
sg39
g40
sg43
V4
sg33
F1.6747841835021973
sS'trials2.thisN'
p4906
I211
sa(dp4907
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4908
g45
(g585
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4909
sS'trials2.thisRepN'
p4910
I0
sS'trials2.thisTrialN'
p4911
I212
sg2790
S'./stim/MorphM5_06_orig.jpg'
p4912
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf24@'
tRp4913
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4914
sg30
I0
sg2794
g45
(g585
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4915
sg32
I1
sg39
g40
sg43
V4
sg33
F7.6410698890686035
sS'trials2.thisN'
p4916
I212
sa(dp4917
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4918
g45
(g585
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4919
sS'trials2.thisRepN'
p4920
I0
sS'trials2.thisTrialN'
p4921
I213
sg2790
S'./stim/MorphF5_09_orig.jpg'
p4922
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf24@'
tRp4923
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4924
sg30
I1
sg2794
g45
(g585
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4925
sg32
I0
sg39
g40
sg43
V4
sg33
F0.88691210746765137
sS'trials2.thisN'
p4926
I213
sa(dp4927
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4928
g45
(g585
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4929
sS'trials2.thisRepN'
p4930
I0
sS'trials2.thisTrialN'
p4931
I214
sg2790
S'./stim/MorphF8_06_orig.jpg'
p4932
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x105@'
tRp4933
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4934
sg30
I1
sg2794
g45
(g585
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4935
sg32
I0
sg39
g40
sg43
V4
sg33
F3.2000710964202881
sS'trials2.thisN'
p4936
I214
sa(dp4937
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4938
g45
(g585
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4939
sS'trials2.thisRepN'
p4940
I0
sS'trials2.thisTrialN'
p4941
I215
sg2790
S'./stim/MorphF5_04_orig.jpg'
p4942
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x105@'
tRp4943
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\xe8?'
tRp4944
sg30
I1
sg2794
g45
(g585
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4945
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0042839050292969
sS'trials2.thisN'
p4946
I215
sa(dp4947
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4948
g45
(g585
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4949
sS'trials2.thisRepN'
p4950
I0
sS'trials2.thisTrialN'
p4951
I216
sg2790
S'./stim/MorphM2_04_orig.jpg'
p4952
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00a7@'
tRp4953
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4954
sg30
I0
sg2794
g45
(g585
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4955
sg32
I1
sg39
g40
sg43
V4
sg33
F6.0314559936523438
sS'trials2.thisN'
p4956
I216
sa(dp4957
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4958
g45
(g585
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4959
sS'trials2.thisRepN'
p4960
I0
sS'trials2.thisTrialN'
p4961
I217
sg2790
S'./stim/MorphF2_05_orig.jpg'
p4962
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80J7@'
tRp4963
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4964
sg30
I1
sg2794
g45
(g585
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4965
sg32
I0
sg39
g40
sg43
V4
sg33
F1.0700359344482422
sS'trials2.thisN'
p4966
I217
sa(dp4967
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4968
g45
(g585
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4969
sS'trials2.thisRepN'
p4970
I0
sS'trials2.thisTrialN'
p4971
I218
sg2790
S'./stim/MorphM7_01_orig.jpg'
p4972
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80J7@'
tRp4973
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4974
sg30
I1
sg2794
g45
(g585
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4975
sg32
I0
sg39
g40
sg43
V4
sg33
F1.5580470561981201
sS'trials2.thisN'
p4976
I218
sa(dp4977
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4978
g45
(g585
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4979
sS'trials2.thisRepN'
p4980
I0
sS'trials2.thisTrialN'
p4981
I219
sg2790
S'./stim/MorphF10_09_orig.jpg'
p4982
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80J7@'
tRp4983
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4984
sg30
I1
sg2794
g45
(g585
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4985
sg32
I0
sg39
g40
sg43
V4
sg33
F0.86985182762145996
sS'trials2.thisN'
p4986
I219
sasS'loops'
p4987
(lp4988
g1
(cpsychopy.data
TrialHandler
p4989
g3
NtRp4990
(dp4991
S'origin'
p4992
V\u000a\u000a\u000a\u000a\u000a#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p4993
sS'thisTrial'
p4994
(lp4995
sS'_exp'
p4996
I140251928643024
sg10
S'basicLoop'
p4997
sg6
S'/home/labor/faces/emoFaces.py'
p4998
sS'thisRepN'
p4999
I1
sg36
I01
sg37
g38
sS'data'
p5000
g1
(cpsychopy.data
DataHandler
p5001
c__builtin__
dict
p5002
(dp5003
g16
cnumpy.core.multiarray
_reconstruct
p5004
(cnumpy
ndarray
p5005
(I0
tS'b'
tRp5006
(I1
(I84
I1
tg46
(S'O8'
I0
I1
tRp5007
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5008
NaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
aNaNaNaNaNag183
ag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNaNag85
ag183
aNaNaNaNag183
ag85
ag183
aNaNatbsg18
g5004
(g5005
(I0
tS'b'
tRp5009
(I1
(I84
I1
tg5007
I00
(lp5010
g71
aNaNaNaNaNaNag71
ag71
aNaNaNaNaNag71
aNaNaNaNaNaNag71
aNaNaNaNaNaNag71
aNag71
aNaNaNaNag71
aNaNaNaNaNaNag71
aNaNaNaNaNaNag71
aNag71
aNaNaNaNag71
aNaNaNaNaNaNaNaNaNaNaNaNaNag71
aNaNaNaNaNaNag71
aNaNaNaNaNaNatbsg21
g5004
(g5005
(I0
tS'b'
tRp5011
(I1
(I84
I1
tg5007
I00
(lp5012
NaF1.7150000000000001
aF5.0620000000000003
aNaNaF5.3970000000000002
aNaNaNaF3.0209999999999999
aNaNaF3.7229999999999999
aNaNaF1.6140000000000001
aF5.1520000000000001
aNaNaF2.9889999999999999
aNaNaF1.7989999999999999
aF2.8210000000000002
aNaNaF2.0979999999999999
aNaNaF2.1499999999999999
aNaNaNaF3.3679999999999999
aNaNaF2.3650000000000002
aF3.2730000000000001
aNaNaF0.83899999999999997
aNaNaF2.331
aF1.617
aNaNaF1.595
aNaNaF2.3479999999999999
aNaNaF1.4159999999999999
aF3.637
aNaNaF2.585
aNaNaNaF4.4740000000000002
aNaF6.2859999999999996
aF1.7589999999999999
aF1.2969999999999999
aNaNaF2.218
aF4.0099999999999998
aNaF2.431
aF3.8639999999999999
aNaNaF2.1030000000000002
aNaNaF3.2519999999999998
aNaNaNaS'9.'
p5013
aNatbsS'ran'
p5014
cnumpy.ma.core
_mareconstruct
p5015
(cnumpy.ma.core
MaskedArray
p5016
g5005
(I0
tp5017
S'b'
tRp5018
(I1
(I84
I1
tg46
(S'f4'
I0
I1
tRp5019
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5004
(g5005
(I0
tS'b'
tRp5020
(I1
(I84
I1
tg5007
I00
(lp5021
NaNaNaF2.5059999999999998
aF5.5679999999999996
aNaNaNaNaNaF2.403
aF2.476
aNaNaNaNaNaF2.2349999999999999
aF1.5640000000000001
aNaNaNaNaNaF4.6349999999999998
aF3.2240000000000002
aNaNaNaNaNaF2.101
aF5.4009999999999998
aNaNaNaNaNaF1.446
aF3.6779999999999999
aNaNaNaNaNaF2.6760000000000002
aF4.3170000000000002
aNaNaNaNaNaF2.2530000000000001
aNaNaNaNaNaF5.4850000000000003
aF1.5980000000000001
aF2.0670000000000002
aNaNaNaNaNaF2.3029999999999999
aF4.7969999999999997
aNaNaNaNaNaF1.446
aF2.1349999999999998
aNaNaNaNaF6.3300000000000001
aF2.1000000000000001
aF1.917
aNaNatbsg23
g5004
(g5005
(I0
tS'b'
tRp5022
(I1
(I84
I1
tg5007
I00
(lp5023
NaNaNaNaNaNaF2.7170000000000001
aNaNaNaNaNaNaF8.0489999999999995
aNaNaNaNaNaNaF2.1840000000000002
aNaNaNaNaNaNaF1.931
aNaNaNaNaNaNaF2.548
aNaNaNaNaNaNaF1.2470000000000001
aNaNaNaNaNaNaF4.1280000000000001
aNaNaNaNaNaNaF1.996
aNaNaNaNaNaNaF2.0649999999999999
aNaNaNaNaNaNaNaNaNaNaNaNaNaF2.5819999999999999
aNaNaNaNaNaNaF4.2110000000000003
atbsg22
g5004
(g5005
(I0
tS'b'
tRp5024
(I1
(I84
I1
tg5007
I00
(lp5025
NaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNaNaNaNaNaNaNaNag79
aNaNaNaNaNaNag79
atbsg19
g5004
(g5005
(I0
tS'b'
tRp5026
(I1
(I84
I1
tg5007
I00
(lp5027
F1.431
aNaNaNaNaNaNaF4.9829999999999997
aF3.895
aNaNaNaNaNaF2.468
aNaNaNaNaNaNaF1.5589999999999999
aNaNaNaNaNaNaF1.5129999999999999
aNaF6.8380000000000001
aNaNaNaNaF4.5979999999999999
aNaNaNaNaNaNaF2.4020000000000001
aNaNaNaNaNaNaF3.2240000000000002
aNaF6.9779999999999998
aNaNaNaNaF0.875
aNaNaNaNaNaNaNaNaNaNaNaNaNaF3.6579999999999999
aNaNaNaNaNaNaF0.57199999999999995
aNaNaNaNaNaNatbsg20
g5004
(g5005
(I0
tS'b'
tRp5028
(I1
(I84
I1
tg5007
I00
(lp5029
Nag101
ag67
aNaNag67
aNaNaNag67
aNaNag67
aNaNag101
ag67
aNaNag67
aNaNag101
ag67
aNaNag67
aNaNag101
aNaNaNag67
aNaNag101
ag67
aNaNag67
aNaNag101
ag67
aNaNag67
aNaNag101
aNaNag101
ag67
aNaNag101
aNaNaNag67
aNag101
ag101
ag67
aNaNag67
ag67
aNag101
ag67
aNaNag67
aNaNag101
aNaNaNag67
aNatbsS'order'
p5030
g5015
(g5016
g5005
g5017
S'b'
tRp5031
(I1
(I84
I1
tg5019
I00
S'\x00\x00\x1cB\x00\x00@B\x00\x00\x0cB\x00\x00pA\x00\x00\x98A\x00\x00PA\x00\x00,B\x00\x00\x10A\x00\x00dB\x00\x00\x92B\x00\x00\x82B\x00\x00\xd0A\x00\x00\x80A\x00\x00\x00@\x00\x00\x9cB\x00\x00\xa0A\x00\x00TB\x00\x00\xe0@\x00\x00\xa4B\x00\x00\x00B\x00\x00XB\x00\x00hB\x00\x00\x00A\x00\x004B\x00\x00@@\x00\x008B\x00\x00\x90B\x00\x00\x9aB\x00\x00xB\x00\x00 A\x00\x00$B\x00\x00\xf8A\x00\x00DB\x00\x00\xa0B\x00\x00\x08B\x00\x00\x80?\x00\x00\x98B\x00\x00`B\x00\x00\xa2B\x00\x00\xa8A\x00\x00\x94B\x00\x00\x96B\x00\x00\xd8A\x00\x00\xa0@\x00\x00\xa6B\x00\x00\x18B\x00\x000B\x00\x00|B\x00\x00\x80@\x00\x00\xc8A\x00\x00`A\x00\x00\xc0@\x00\x00<B\x00\x000A\x00\x00@A\x00\x00\x86B\x00\x00lB\x00\x00\xc0A\x00\x00\\B\x00\x00\x9eB\x00\x00\x84B\x00\x00\xb0A\x00\x00\x8eB\x00\x00\x88A\x00\x00\x90A\x00\x00tB\x00\x00\xb8A\x00\x00\x14B\x00\x00LB\x00\x00\xe0A\x00\x00\x10B\x00\x00(B\x00\x00\xe8A\x00\x00\x88B\x00\x00\x04B\x00\x00PB\x00\x00HB\x00\x00pB\x00\x00\xf0A\x00\x00\x8cB\x00\x00\x80B\x00\x00\x8aB\x00\x00\x00\x00\x00\x00 B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5032
(dp5033
S'isNumeric'
p5034
(dp5035
g16
I00
sg18
I00
sg21
I00
sg5014
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5030
I01
ssS'trials'
p5036
g4990
sS'dataTypes'
p5037
(lp5038
g5014
ag5030
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5039
(lp5040
I84
aI1
asbsS'method'
p5041
S'fullRandom'
p5042
sS'sequenceIndices'
p5043
g5004
(g5005
(I0
tS'b'
tRp5044
(I1
(I84
I1
tg5007
I00
(lp5045
I82
aI35
aI13
aI24
aI48
aI43
aI51
aI17
aI22
aI7
aI29
aI53
aI54
aI5
aI50
aI3
aI12
aI63
aI64
aI4
aI15
aI39
aI61
aI66
aI57
aI49
aI11
aI42
aI69
aI72
aI78
aI31
aI19
aI74
aI34
aI2
aI70
aI67
aI45
aI0
aI83
aI30
aI71
aI6
aI46
aI23
aI25
aI52
aI1
aI32
aI76
aI68
aI75
aI16
aI20
aI58
aI37
aI8
aI21
aI56
aI77
aI65
aI28
aI47
aI80
aI10
aI60
aI55
aI73
aI81
aI79
aI62
aI26
aI9
aI40
aI41
aI36
aI27
aI14
aI59
aI33
aI38
aI18
aI44
atbsS'finished'
p5046
I01
sS'nReps'
p5047
I1
sS'nRemaining'
p5048
I-1
sS'trialList'
p5049
(lp5050
g1
(cpsychopy.data
TrialType
p5051
g5002
(dp5052
g57
g304
stRp5053
ag1
(g5051
g5002
(dp5054
g57
g358
stRp5055
ag1
(g5051
g5002
(dp5056
g57
g280
stRp5057
ag1
(g5051
g5002
(dp5058
g57
g159
stRp5059
ag1
(g5051
g5002
(dp5060
g57
g184
stRp5061
ag1
(g5051
g5002
(dp5062
g57
g147
stRp5063
ag1
(g5051
g5002
(dp5064
g57
g328
stRp5065
ag1
(g5051
g5002
(dp5066
g57
g123
stRp5067
ag1
(g5051
g5002
(dp5068
g57
g412
stRp5069
ag1
(g5051
g5002
(dp5070
g57
g508
stRp5071
ag1
(g5051
g5002
(dp5072
g57
g460
stRp5073
ag1
(g5051
g5002
(dp5074
g57
g226
stRp5075
ag1
(g5051
g5002
(dp5076
g57
g165
stRp5077
ag1
(g5051
g5002
(dp5078
g57
g78
stRp5079
ag1
(g5051
g5002
(dp5080
g57
g538
stRp5081
ag1
(g5051
g5002
(dp5082
g57
g190
stRp5083
ag1
(g5051
g5002
(dp5084
g57
g388
stRp5085
ag1
(g5051
g5002
(dp5086
g57
g111
stRp5087
ag1
(g5051
g5002
(dp5088
g57
g562
stRp5089
ag1
(g5051
g5002
(dp5090
g57
g262
stRp5091
ag1
(g5051
g5002
(dp5092
g57
g394
stRp5093
ag1
(g5051
g5002
(dp5094
g57
g418
stRp5095
ag1
(g5051
g5002
(dp5096
g57
g117
stRp5097
ag1
(g5051
g5002
(dp5098
g57
g340
stRp5099
ag1
(g5051
g5002
(dp5100
g57
g86
stRp5101
ag1
(g5051
g5002
(dp5102
g57
g346
stRp5103
ag1
(g5051
g5002
(dp5104
g57
g502
stRp5105
ag1
(g5051
g5002
(dp5106
g57
g532
stRp5107
ag1
(g5051
g5002
(dp5108
g57
g442
stRp5109
ag1
(g5051
g5002
(dp5110
g57
g129
stRp5111
ag1
(g5051
g5002
(dp5112
g57
g316
stRp5113
ag1
(g5051
g5002
(dp5114
g57
g256
stRp5115
ag1
(g5051
g5002
(dp5116
g57
g364
stRp5117
ag1
(g5051
g5002
(dp5118
g57
g550
stRp5119
ag1
(g5051
g5002
(dp5120
g57
g274
stRp5121
ag1
(g5051
g5002
(dp5122
g57
g72
stRp5123
ag1
(g5051
g5002
(dp5124
g57
g526
stRp5125
ag1
(g5051
g5002
(dp5126
g57
g406
stRp5127
ag1
(g5051
g5002
(dp5128
g57
g556
stRp5129
ag1
(g5051
g5002
(dp5130
g57
g196
stRp5131
ag1
(g5051
g5002
(dp5132
g57
g514
stRp5133
ag1
(g5051
g5002
(dp5134
g57
g520
stRp5135
ag1
(g5051
g5002
(dp5136
g57
g232
stRp5137
ag1
(g5051
g5002
(dp5138
g57
g98
stRp5139
ag1
(g5051
g5002
(dp5140
g57
g568
stRp5141
ag1
(g5051
g5002
(dp5142
g57
g298
stRp5143
ag1
(g5051
g5002
(dp5144
g57
g334
stRp5145
ag1
(g5051
g5002
(dp5146
g57
g448
stRp5147
ag1
(g5051
g5002
(dp5148
g57
g92
stRp5149
ag1
(g5051
g5002
(dp5150
g57
g220
stRp5151
ag1
(g5051
g5002
(dp5152
g57
g153
stRp5153
ag1
(g5051
g5002
(dp5154
g57
g105
stRp5155
ag1
(g5051
g5002
(dp5156
g57
g352
stRp5157
ag1
(g5051
g5002
(dp5158
g57
g135
stRp5159
ag1
(g5051
g5002
(dp5160
g57
g141
stRp5161
ag1
(g5051
g5002
(dp5162
g57
g472
stRp5163
ag1
(g5051
g5002
(dp5164
g57
g424
stRp5165
ag1
(g5051
g5002
(dp5166
g57
g214
stRp5167
ag1
(g5051
g5002
(dp5168
g57
g400
stRp5169
ag1
(g5051
g5002
(dp5170
g57
g544
stRp5171
ag1
(g5051
g5002
(dp5172
g57
g466
stRp5173
ag1
(g5051
g5002
(dp5174
g57
g202
stRp5175
ag1
(g5051
g5002
(dp5176
g57
g496
stRp5177
ag1
(g5051
g5002
(dp5178
g57
g171
stRp5179
ag1
(g5051
g5002
(dp5180
g57
g177
stRp5181
ag1
(g5051
g5002
(dp5182
g57
g436
stRp5183
ag1
(g5051
g5002
(dp5184
g57
g208
stRp5185
ag1
(g5051
g5002
(dp5186
g57
g292
stRp5187
ag1
(g5051
g5002
(dp5188
g57
g376
stRp5189
ag1
(g5051
g5002
(dp5190
g57
g238
stRp5191
ag1
(g5051
g5002
(dp5192
g57
g286
stRp5193
ag1
(g5051
g5002
(dp5194
g57
g322
stRp5195
ag1
(g5051
g5002
(dp5196
g57
g244
stRp5197
ag1
(g5051
g5002
(dp5198
g57
g478
stRp5199
ag1
(g5051
g5002
(dp5200
g57
g268
stRp5201
ag1
(g5051
g5002
(dp5202
g57
g382
stRp5203
ag1
(g5051
g5002
(dp5204
g57
g370
stRp5205
ag1
(g5051
g5002
(dp5206
g57
g430
stRp5207
ag1
(g5051
g5002
(dp5208
g57
g250
stRp5209
ag1
(g5051
g5002
(dp5210
g57
g490
stRp5211
ag1
(g5051
g5002
(dp5212
g57
g454
stRp5213
ag1
(g5051
g5002
(dp5214
g57
g484
stRp5215
ag1
(g5051
g5002
(dp5216
g57
g64
stRp5217
ag1
(g5051
g5002
(dp5218
g57
g310
stRp5219
asS'seed'
p5220
NsS'thisIndex'
p5221
I44
sS'thisN'
p5222
I84
sS'thisTrialN'
p5223
I0
sS'nTotal'
p5224
I84
sS'_warnUseOfNext'
p5225
I01
sbag1
(g4989
g3
NtRp5226
(dp5227
g4992
V\u000a\u000a\u000a\u000a\u000a#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5228
sg4994
(lp5229
sg4996
I140251928643024
sg10
g5036
sg6
g4998
sg4999
I1
sg36
I01
sg37
g38
sg5000
g1
(g5001
g5002
(dp5230
g30
g5015
(g5016
g5005
g5017
S'b'
tRp5231
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5014
g5015
(g5016
g5005
g5017
S'b'
tRp5232
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5004
(g5005
(I0
tS'b'
tRp5233
(I1
(I220
I1
tg5007
I00
(lp5234
g588
ag598
ag608
ag618
ag628
ag638
ag648
ag658
ag668
ag678
ag688
ag698
ag708
ag718
ag728
ag738
ag748
ag758
ag768
ag778
ag788
ag798
ag808
ag818
ag828
ag838
ag848
ag858
ag868
ag878
ag888
ag898
ag908
ag918
ag928
ag938
ag948
ag958
ag968
ag978
ag988
ag998
ag1008
ag1018
ag1028
ag1038
ag1048
ag1058
ag1068
ag1078
ag1088
ag1098
ag1108
ag1118
ag1128
ag1138
ag1148
ag1158
ag1168
ag1178
ag1188
ag1198
ag1208
ag1218
ag1228
ag1238
ag1248
ag1258
ag1268
ag1278
ag1288
ag1298
ag1308
ag1318
ag1328
ag1338
ag1348
ag1358
ag1368
ag1378
ag1388
ag1398
ag1408
ag1418
ag1428
ag1438
ag1448
ag1458
ag1468
ag1478
ag1488
ag1498
ag1508
ag1518
ag1528
ag1538
ag1548
ag1558
ag1568
ag1578
ag1588
ag1598
ag1608
ag1618
ag1628
ag1638
ag1648
ag1658
ag1668
ag1678
ag1688
ag1698
ag1708
ag1718
ag1728
ag1738
ag1748
ag1758
ag1768
ag1778
ag1788
ag1798
ag1808
ag1818
ag1828
ag1838
ag1848
ag1858
ag1868
ag1878
ag1888
ag1898
ag1908
ag1918
ag1928
ag1938
ag1948
ag1958
ag1968
ag1978
ag1988
ag1998
ag2008
ag2018
ag2028
ag2038
ag2048
ag2058
ag2068
ag2078
ag2088
ag2098
ag2108
ag2118
ag2128
ag2138
ag2148
ag2158
ag2168
ag2178
ag2188
ag2198
ag2208
ag2218
ag2228
ag2238
ag2248
ag2258
ag2268
ag2278
ag2288
ag2298
ag2308
ag2318
ag2328
ag2338
ag2348
ag2358
ag2368
ag2378
ag2388
ag2398
ag2408
ag2418
ag2428
ag2438
ag2448
ag2458
ag2468
ag2478
ag2488
ag2498
ag2508
ag2518
ag2528
ag2538
ag2548
ag2558
ag2568
ag2578
ag2588
ag2598
ag2608
ag2618
ag2628
ag2638
ag2648
ag2658
ag2668
ag2678
ag2688
ag2698
ag2708
ag2718
ag2728
ag2738
ag2748
ag2758
ag2768
ag2778
atbsg29
g5004
(g5005
(I0
tS'b'
tRp5235
(I1
(I220
I1
tg5007
I00
(lp5236
g589
ag599
ag609
ag619
ag629
ag639
ag649
ag659
ag669
ag679
ag689
ag699
ag709
ag719
ag729
ag739
ag749
ag759
ag769
ag779
ag789
ag799
ag809
ag819
ag829
ag839
ag849
ag859
ag869
ag879
ag889
ag899
ag909
ag919
ag929
ag939
ag949
ag959
ag969
ag979
ag989
ag999
ag1009
ag1019
ag1029
ag1039
ag1049
ag1059
ag1069
ag1079
ag1089
ag1099
ag1109
ag1119
ag1129
ag1139
ag1149
ag1159
ag1169
ag1179
ag1189
ag1199
ag1209
ag1219
ag1229
ag1239
ag1249
ag1259
ag1269
ag1279
ag1289
ag1299
ag1309
ag1319
ag1329
ag1339
ag1349
ag1359
ag1369
ag1379
ag1389
ag1399
ag1409
ag1419
ag1429
ag1439
ag1449
ag1459
ag1469
ag1479
ag1489
ag1499
ag1509
ag1519
ag1529
ag1539
ag1549
ag1559
ag1569
ag1579
ag1589
ag1599
ag1609
ag1619
ag1629
ag1639
ag1649
ag1659
ag1669
ag1679
ag1689
ag1699
ag1709
ag1719
ag1729
ag1739
ag1749
ag1759
ag1769
ag1779
ag1789
ag1799
ag1809
ag1819
ag1829
ag1839
ag1849
ag1859
ag1869
ag1879
ag1889
ag1899
ag1909
ag1919
ag1929
ag1939
ag1949
ag1959
ag1969
ag1979
ag1989
ag1999
ag2009
ag2019
ag2029
ag2039
ag2049
ag2059
ag2069
ag2079
ag2089
ag2099
ag2109
ag2119
ag2129
ag2139
ag2149
ag2159
ag2169
ag2179
ag2189
ag2199
ag2209
ag2219
ag2229
ag2239
ag2249
ag2259
ag2269
ag2279
ag2289
ag2299
ag2309
ag2319
ag2329
ag2339
ag2349
ag2359
ag2369
ag2379
ag2389
ag2399
ag2409
ag2419
ag2429
ag2439
ag2449
ag2459
ag2469
ag2479
ag2489
ag2499
ag2509
ag2519
ag2529
ag2539
ag2549
ag2559
ag2569
ag2579
ag2589
ag2599
ag2609
ag2619
ag2629
ag2639
ag2649
ag2659
ag2669
ag2679
ag2689
ag2699
ag2709
ag2719
ag2729
ag2739
ag2749
ag2759
ag2769
ag2779
atbsg31
g5015
(g5016
g5005
g5017
S'b'
tRp5237
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5015
(g5016
g5005
g5017
S'b'
tRp5238
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5015
(g5016
g5005
g5017
S'b'
tRp5239
(I1
(I220
I1
tg5019
I00
S'P\x88bA=+\t@\xd0z\xba?\x03A\'@\x9e>\xcc@\x07\xeb\x04@&\xde\xb1?V\xb8<@d\x7f\xad?;7D@J\xf2\xfc?[\t3@\xd0O\x8b?2\x07\x15@\xfa+\xba?>\t\x96?\xd8\xf7\xed?\x9a\xb3\x84?l\x13\xc9@\x06i\xa2@\xf0\xc1\x90@\xfaS\xc5@\xb5T6@\xac\xa4\xd1?\xee#\xe1?\xe5\xb4K@\xbc!\xf6@\xb2\x84\xad?\x88\xbd\xfc?\xf6D\xf8@\xea\x8d\xf6?fh\xf4?8,\xe5?b\x17\x89?\x0e\x06\x96?^\xf0\x8b@f\xa8\x82?l\x8f\xf8?\xd1\xb2<@\x04"\x80@\xaa"\xf0?\x88gQ?\xda\xcb\x89@\x0c\xdb\xc5@0\xb0\xb4@T\xaf\xcb?\xf0\x13\x16@8s\x8c@:\xaf\xe9?\x04%\xff?\xb0Y\x80?v3\xa7?\xa8^\xa9@\x1c\xb0\x91?\x8as\xf8?\xc8E\x8f?\x8e\xe8\xa4?LO\x9a?H\xc5\xef?mT\n@l\xc8s?x9t?f\x12\xc3?\xb2\xff\xa6?u\xe5k@,\xefN@|\xb0\x86? \xb6\x84?\xbe\xd7?@no\x0c@\xcc|\xc9?\x0c\xfd\xed?\xcc\xbe\xaf?\x9e\x96\xad?!CE@\xf1\xbe\x1f@\xe2\xff\xa6?\xc1\xafY@\xd6\xca\xbe?\x96\x05p@\xc04\x97@\x8f\xc6L@D\x01\x92Av\xe0\xfc?q\xcb=@@j\xab?\xb64\xff?\x08\xf8\xb3?n\xd2\x83@\xd5\x08%@LDk?\xa7\xb5<@\xdaT\x8f?H\xb3\x9e?\x86\x05\xa7?\xe6[\xc7?J\xeb\xed?T;\xc5?\xd8\x0e\x98?PK\xc5?\xa2~\x91?\xa4\xc6i@\xe6\xba\xed?\x92_\x8d?\xbb`\xa8@<\x81x?\xba0\xb6?\xd4\xf3\xde?v\xce\xae@\xe6\xfe\xc4?\xda\x1d\x98?F\xd2\x88?\xa8\xd0|?\xdc\x7f\xd8?\x08\xb2\x9e?\x98\xa3k?* \x8d?\xf2"\x89?\xa4\xfc\xe0?\xa9h\x1a@\xcc\xe6\xd3?$\'g?-[*@\xb2\r\xd2?rl\xcb?,\xf5\x88?<\xfao?\x8b\x88\x1d@\x0c\xdf^?As\x8c@\x03\xebk@\x84Q\x8f?P\xf4U?\xd0"c?\x9b\xfe\x14@l\\g?\xac\xc6\xa4?\xc8\xb3-@t#\x98?F\xe4\xd1? B\x9a?\x941\xf0?8\xc7Q?\xccVg?\xa6]\x9e?h\xeeY?~\x8e\x8f?\xc5\x8d\x1c@\xee\x96\xf6?j-\xba?@K\x8b?\xe3\xda@@\xe8\x7f\xab?8\x80Z?\xec,^?B\xb8\xa0?\x98\x1e\x89?\xd4\xb3|?\xcc\xd0\xdc?\xe8\xdb\x13@DLE@\x12\x85\x80?\xe1{*@\xc9\xe6\x14@O]7@D\x7fx?\xb2\xbe\x91?[\xb2\x01@\xa2\xd0\xfa?\xec\xb7\x82?\xd6\xab-@h\x07\x96?\xac\x06\xa5?\x06\xb5\xcf?H\xa8-@jg\xf4?\x937\x18@<\x0e5@N\xf2m@F\x97\x8f?0\xfaf?h\xa9@?\xb08\xd4?8Qg?\xa2\xb1\x82?L\xe7o?2\x8a\xad?\xf3#\x08@$u\x80?\xea\x96\x91?]L\n@\x06j\xab?\xa0\x1c\xe1?\xc6\xdf\xa2?P\xaa\x91?#\x85\xcf@\x98fZ?\xa0\xe4^@\xc0s\x8d?\xfcio?\xb0\xab\x00@\x9a\x14\xff?\xe0\xfbw?\x90\x9f\x93?<\xcd^?4\x0c\xc7? \xd1\x82?\xb0\x96o?\xb6\xda\x12@\xea\xbb\x95?\x94\xb5M?\x9c\xa4M?O\xe60@p\'I?\x98\xf9{@\xcc\x9ax?\x8c+p@}\x08\x07@\x0ba\x1b@\x00;\'@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5030
g5015
(g5016
g5005
g5017
S'b'
tRp5240
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5241
(dp5242
g5034
(dp5243
g31
I01
sg5014
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5030
I01
ssg5036
g5226
sg5037
(lp5244
g5014
ag5030
ag28
ag29
ag30
ag31
ag32
ag33
asg5039
(lp5245
I220
aI1
asbsg5041
S'sequential'
p5246
sg5043
g5004
(g5005
(I0
tS'b'
tRp5247
(I1
(I220
I1
tg585
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5046
I01
sg5047
I1
sg5048
I-1
sg5049
(lp5248
g1
(g5051
g5002
(dp5249
g58
g590
sg582
g583
stRp5250
ag1
(g5051
g5002
(dp5251
g58
g600
sg582
g594
stRp5252
ag1
(g5051
g5002
(dp5253
g58
g610
sg582
g604
stRp5254
ag1
(g5051
g5002
(dp5255
g58
g620
sg582
g614
stRp5256
ag1
(g5051
g5002
(dp5257
g58
g630
sg582
g624
stRp5258
ag1
(g5051
g5002
(dp5259
g58
g640
sg582
g634
stRp5260
ag1
(g5051
g5002
(dp5261
g58
g650
sg582
g644
stRp5262
ag1
(g5051
g5002
(dp5263
g58
g660
sg582
g654
stRp5264
ag1
(g5051
g5002
(dp5265
g58
g670
sg582
g664
stRp5266
ag1
(g5051
g5002
(dp5267
g58
g680
sg582
g674
stRp5268
ag1
(g5051
g5002
(dp5269
g58
g690
sg582
g684
stRp5270
ag1
(g5051
g5002
(dp5271
g58
g700
sg582
g694
stRp5272
ag1
(g5051
g5002
(dp5273
g58
g710
sg582
g704
stRp5274
ag1
(g5051
g5002
(dp5275
g58
g720
sg582
g714
stRp5276
ag1
(g5051
g5002
(dp5277
g58
g730
sg582
g724
stRp5278
ag1
(g5051
g5002
(dp5279
g58
g740
sg582
g734
stRp5280
ag1
(g5051
g5002
(dp5281
g58
g750
sg582
g744
stRp5282
ag1
(g5051
g5002
(dp5283
g58
g760
sg582
g754
stRp5284
ag1
(g5051
g5002
(dp5285
g58
g770
sg582
g764
stRp5286
ag1
(g5051
g5002
(dp5287
g58
g780
sg582
g774
stRp5288
ag1
(g5051
g5002
(dp5289
g58
g790
sg582
g784
stRp5290
ag1
(g5051
g5002
(dp5291
g58
g800
sg582
g794
stRp5292
ag1
(g5051
g5002
(dp5293
g58
g810
sg582
g804
stRp5294
ag1
(g5051
g5002
(dp5295
g58
g820
sg582
g814
stRp5296
ag1
(g5051
g5002
(dp5297
g58
g830
sg582
g824
stRp5298
ag1
(g5051
g5002
(dp5299
g58
g840
sg582
g834
stRp5300
ag1
(g5051
g5002
(dp5301
g58
g850
sg582
g844
stRp5302
ag1
(g5051
g5002
(dp5303
g58
g860
sg582
g854
stRp5304
ag1
(g5051
g5002
(dp5305
g58
g870
sg582
g864
stRp5306
ag1
(g5051
g5002
(dp5307
g58
g880
sg582
g874
stRp5308
ag1
(g5051
g5002
(dp5309
g58
g890
sg582
g884
stRp5310
ag1
(g5051
g5002
(dp5311
g58
g900
sg582
g894
stRp5312
ag1
(g5051
g5002
(dp5313
g58
g910
sg582
g904
stRp5314
ag1
(g5051
g5002
(dp5315
g58
g920
sg582
g914
stRp5316
ag1
(g5051
g5002
(dp5317
g58
g930
sg582
g924
stRp5318
ag1
(g5051
g5002
(dp5319
g58
g940
sg582
g934
stRp5320
ag1
(g5051
g5002
(dp5321
g58
g950
sg582
g944
stRp5322
ag1
(g5051
g5002
(dp5323
g58
g960
sg582
g954
stRp5324
ag1
(g5051
g5002
(dp5325
g58
g970
sg582
g964
stRp5326
ag1
(g5051
g5002
(dp5327
g58
g980
sg582
g974
stRp5328
ag1
(g5051
g5002
(dp5329
g58
g990
sg582
g984
stRp5330
ag1
(g5051
g5002
(dp5331
g58
g1000
sg582
g994
stRp5332
ag1
(g5051
g5002
(dp5333
g58
g1010
sg582
g1004
stRp5334
ag1
(g5051
g5002
(dp5335
g58
g1020
sg582
g1014
stRp5336
ag1
(g5051
g5002
(dp5337
g58
g1030
sg582
g1024
stRp5338
ag1
(g5051
g5002
(dp5339
g58
g1040
sg582
g1034
stRp5340
ag1
(g5051
g5002
(dp5341
g58
g1050
sg582
g1044
stRp5342
ag1
(g5051
g5002
(dp5343
g58
g1060
sg582
g1054
stRp5344
ag1
(g5051
g5002
(dp5345
g58
g1070
sg582
g1064
stRp5346
ag1
(g5051
g5002
(dp5347
g58
g1080
sg582
g1074
stRp5348
ag1
(g5051
g5002
(dp5349
g58
g1090
sg582
g1084
stRp5350
ag1
(g5051
g5002
(dp5351
g58
g1100
sg582
g1094
stRp5352
ag1
(g5051
g5002
(dp5353
g58
g1110
sg582
g1104
stRp5354
ag1
(g5051
g5002
(dp5355
g58
g1120
sg582
g1114
stRp5356
ag1
(g5051
g5002
(dp5357
g58
g1130
sg582
g1124
stRp5358
ag1
(g5051
g5002
(dp5359
g58
g1140
sg582
g1134
stRp5360
ag1
(g5051
g5002
(dp5361
g58
g1150
sg582
g1144
stRp5362
ag1
(g5051
g5002
(dp5363
g58
g1160
sg582
g1154
stRp5364
ag1
(g5051
g5002
(dp5365
g58
g1170
sg582
g1164
stRp5366
ag1
(g5051
g5002
(dp5367
g58
g1180
sg582
g1174
stRp5368
ag1
(g5051
g5002
(dp5369
g58
g1190
sg582
g1184
stRp5370
ag1
(g5051
g5002
(dp5371
g58
g1200
sg582
g1194
stRp5372
ag1
(g5051
g5002
(dp5373
g58
g1210
sg582
g1204
stRp5374
ag1
(g5051
g5002
(dp5375
g58
g1220
sg582
g1214
stRp5376
ag1
(g5051
g5002
(dp5377
g58
g1230
sg582
g1224
stRp5378
ag1
(g5051
g5002
(dp5379
g58
g1240
sg582
g1234
stRp5380
ag1
(g5051
g5002
(dp5381
g58
g1250
sg582
g1244
stRp5382
ag1
(g5051
g5002
(dp5383
g58
g1260
sg582
g1254
stRp5384
ag1
(g5051
g5002
(dp5385
g58
g1270
sg582
g1264
stRp5386
ag1
(g5051
g5002
(dp5387
g58
g1280
sg582
g1274
stRp5388
ag1
(g5051
g5002
(dp5389
g58
g1290
sg582
g1284
stRp5390
ag1
(g5051
g5002
(dp5391
g58
g1300
sg582
g1294
stRp5392
ag1
(g5051
g5002
(dp5393
g58
g1310
sg582
g1304
stRp5394
ag1
(g5051
g5002
(dp5395
g58
g1320
sg582
g1314
stRp5396
ag1
(g5051
g5002
(dp5397
g58
g1330
sg582
g1324
stRp5398
ag1
(g5051
g5002
(dp5399
g58
g1340
sg582
g1334
stRp5400
ag1
(g5051
g5002
(dp5401
g58
g1350
sg582
g1344
stRp5402
ag1
(g5051
g5002
(dp5403
g58
g1360
sg582
g1354
stRp5404
ag1
(g5051
g5002
(dp5405
g58
g1370
sg582
g1364
stRp5406
ag1
(g5051
g5002
(dp5407
g58
g1380
sg582
g1374
stRp5408
ag1
(g5051
g5002
(dp5409
g58
g1390
sg582
g1384
stRp5410
ag1
(g5051
g5002
(dp5411
g58
g1400
sg582
g1394
stRp5412
ag1
(g5051
g5002
(dp5413
g58
g1410
sg582
g1404
stRp5414
ag1
(g5051
g5002
(dp5415
g58
g1420
sg582
g1414
stRp5416
ag1
(g5051
g5002
(dp5417
g58
g1430
sg582
g1424
stRp5418
ag1
(g5051
g5002
(dp5419
g58
g1440
sg582
g1434
stRp5420
ag1
(g5051
g5002
(dp5421
g58
g1450
sg582
g1444
stRp5422
ag1
(g5051
g5002
(dp5423
g58
g1460
sg582
g1454
stRp5424
ag1
(g5051
g5002
(dp5425
g58
g1470
sg582
g1464
stRp5426
ag1
(g5051
g5002
(dp5427
g58
g1480
sg582
g1474
stRp5428
ag1
(g5051
g5002
(dp5429
g58
g1490
sg582
g1484
stRp5430
ag1
(g5051
g5002
(dp5431
g58
g1500
sg582
g1494
stRp5432
ag1
(g5051
g5002
(dp5433
g58
g1510
sg582
g1504
stRp5434
ag1
(g5051
g5002
(dp5435
g58
g1520
sg582
g1514
stRp5436
ag1
(g5051
g5002
(dp5437
g58
g1530
sg582
g1524
stRp5438
ag1
(g5051
g5002
(dp5439
g58
g1540
sg582
g1534
stRp5440
ag1
(g5051
g5002
(dp5441
g58
g1550
sg582
g1544
stRp5442
ag1
(g5051
g5002
(dp5443
g58
g1560
sg582
g1554
stRp5444
ag1
(g5051
g5002
(dp5445
g58
g1570
sg582
g1564
stRp5446
ag1
(g5051
g5002
(dp5447
g58
g1580
sg582
g1574
stRp5448
ag1
(g5051
g5002
(dp5449
g58
g1590
sg582
g1584
stRp5450
ag1
(g5051
g5002
(dp5451
g58
g1600
sg582
g1594
stRp5452
ag1
(g5051
g5002
(dp5453
g58
g1610
sg582
g1604
stRp5454
ag1
(g5051
g5002
(dp5455
g58
g1620
sg582
g1614
stRp5456
ag1
(g5051
g5002
(dp5457
g58
g1630
sg582
g1624
stRp5458
ag1
(g5051
g5002
(dp5459
g58
g1640
sg582
g1634
stRp5460
ag1
(g5051
g5002
(dp5461
g58
g1650
sg582
g1644
stRp5462
ag1
(g5051
g5002
(dp5463
g58
g1660
sg582
g1654
stRp5464
ag1
(g5051
g5002
(dp5465
g58
g1670
sg582
g1664
stRp5466
ag1
(g5051
g5002
(dp5467
g58
g1680
sg582
g1674
stRp5468
ag1
(g5051
g5002
(dp5469
g58
g1690
sg582
g1684
stRp5470
ag1
(g5051
g5002
(dp5471
g58
g1700
sg582
g1694
stRp5472
ag1
(g5051
g5002
(dp5473
g58
g1710
sg582
g1704
stRp5474
ag1
(g5051
g5002
(dp5475
g58
g1720
sg582
g1714
stRp5476
ag1
(g5051
g5002
(dp5477
g58
g1730
sg582
g1724
stRp5478
ag1
(g5051
g5002
(dp5479
g58
g1740
sg582
g1734
stRp5480
ag1
(g5051
g5002
(dp5481
g58
g1750
sg582
g1744
stRp5482
ag1
(g5051
g5002
(dp5483
g58
g1760
sg582
g1754
stRp5484
ag1
(g5051
g5002
(dp5485
g58
g1770
sg582
g1764
stRp5486
ag1
(g5051
g5002
(dp5487
g58
g1780
sg582
g1774
stRp5488
ag1
(g5051
g5002
(dp5489
g58
g1790
sg582
g1784
stRp5490
ag1
(g5051
g5002
(dp5491
g58
g1800
sg582
g1794
stRp5492
ag1
(g5051
g5002
(dp5493
g58
g1810
sg582
g1804
stRp5494
ag1
(g5051
g5002
(dp5495
g58
g1820
sg582
g1814
stRp5496
ag1
(g5051
g5002
(dp5497
g58
g1830
sg582
g1824
stRp5498
ag1
(g5051
g5002
(dp5499
g58
g1840
sg582
g1834
stRp5500
ag1
(g5051
g5002
(dp5501
g58
g1850
sg582
g1844
stRp5502
ag1
(g5051
g5002
(dp5503
g58
g1860
sg582
g1854
stRp5504
ag1
(g5051
g5002
(dp5505
g58
g1870
sg582
g1864
stRp5506
ag1
(g5051
g5002
(dp5507
g58
g1880
sg582
g1874
stRp5508
ag1
(g5051
g5002
(dp5509
g58
g1890
sg582
g1884
stRp5510
ag1
(g5051
g5002
(dp5511
g58
g1900
sg582
g1894
stRp5512
ag1
(g5051
g5002
(dp5513
g58
g1910
sg582
g1904
stRp5514
ag1
(g5051
g5002
(dp5515
g58
g1920
sg582
g1914
stRp5516
ag1
(g5051
g5002
(dp5517
g58
g1930
sg582
g1924
stRp5518
ag1
(g5051
g5002
(dp5519
g58
g1940
sg582
g1934
stRp5520
ag1
(g5051
g5002
(dp5521
g58
g1950
sg582
g1944
stRp5522
ag1
(g5051
g5002
(dp5523
g58
g1960
sg582
g1954
stRp5524
ag1
(g5051
g5002
(dp5525
g58
g1970
sg582
g1964
stRp5526
ag1
(g5051
g5002
(dp5527
g58
g1980
sg582
g1974
stRp5528
ag1
(g5051
g5002
(dp5529
g58
g1990
sg582
g1984
stRp5530
ag1
(g5051
g5002
(dp5531
g58
g2000
sg582
g1994
stRp5532
ag1
(g5051
g5002
(dp5533
g58
g2010
sg582
g2004
stRp5534
ag1
(g5051
g5002
(dp5535
g58
g2020
sg582
g2014
stRp5536
ag1
(g5051
g5002
(dp5537
g58
g2030
sg582
g2024
stRp5538
ag1
(g5051
g5002
(dp5539
g58
g2040
sg582
g2034
stRp5540
ag1
(g5051
g5002
(dp5541
g58
g2050
sg582
g2044
stRp5542
ag1
(g5051
g5002
(dp5543
g58
g2060
sg582
g2054
stRp5544
ag1
(g5051
g5002
(dp5545
g58
g2070
sg582
g2064
stRp5546
ag1
(g5051
g5002
(dp5547
g58
g2080
sg582
g2074
stRp5548
ag1
(g5051
g5002
(dp5549
g58
g2090
sg582
g2084
stRp5550
ag1
(g5051
g5002
(dp5551
g58
g2100
sg582
g2094
stRp5552
ag1
(g5051
g5002
(dp5553
g58
g2110
sg582
g2104
stRp5554
ag1
(g5051
g5002
(dp5555
g58
g2120
sg582
g2114
stRp5556
ag1
(g5051
g5002
(dp5557
g58
g2130
sg582
g2124
stRp5558
ag1
(g5051
g5002
(dp5559
g58
g2140
sg582
g2134
stRp5560
ag1
(g5051
g5002
(dp5561
g58
g2150
sg582
g2144
stRp5562
ag1
(g5051
g5002
(dp5563
g58
g2160
sg582
g2154
stRp5564
ag1
(g5051
g5002
(dp5565
g58
g2170
sg582
g2164
stRp5566
ag1
(g5051
g5002
(dp5567
g58
g2180
sg582
g2174
stRp5568
ag1
(g5051
g5002
(dp5569
g58
g2190
sg582
g2184
stRp5570
ag1
(g5051
g5002
(dp5571
g58
g2200
sg582
g2194
stRp5572
ag1
(g5051
g5002
(dp5573
g58
g2210
sg582
g2204
stRp5574
ag1
(g5051
g5002
(dp5575
g58
g2220
sg582
g2214
stRp5576
ag1
(g5051
g5002
(dp5577
g58
g2230
sg582
g2224
stRp5578
ag1
(g5051
g5002
(dp5579
g58
g2240
sg582
g2234
stRp5580
ag1
(g5051
g5002
(dp5581
g58
g2250
sg582
g2244
stRp5582
ag1
(g5051
g5002
(dp5583
g58
g2260
sg582
g2254
stRp5584
ag1
(g5051
g5002
(dp5585
g58
g2270
sg582
g2264
stRp5586
ag1
(g5051
g5002
(dp5587
g58
g2280
sg582
g2274
stRp5588
ag1
(g5051
g5002
(dp5589
g58
g2290
sg582
g2284
stRp5590
ag1
(g5051
g5002
(dp5591
g58
g2300
sg582
g2294
stRp5592
ag1
(g5051
g5002
(dp5593
g58
g2310
sg582
g2304
stRp5594
ag1
(g5051
g5002
(dp5595
g58
g2320
sg582
g2314
stRp5596
ag1
(g5051
g5002
(dp5597
g58
g2330
sg582
g2324
stRp5598
ag1
(g5051
g5002
(dp5599
g58
g2340
sg582
g2334
stRp5600
ag1
(g5051
g5002
(dp5601
g58
g2350
sg582
g2344
stRp5602
ag1
(g5051
g5002
(dp5603
g58
g2360
sg582
g2354
stRp5604
ag1
(g5051
g5002
(dp5605
g58
g2370
sg582
g2364
stRp5606
ag1
(g5051
g5002
(dp5607
g58
g2380
sg582
g2374
stRp5608
ag1
(g5051
g5002
(dp5609
g58
g2390
sg582
g2384
stRp5610
ag1
(g5051
g5002
(dp5611
g58
g2400
sg582
g2394
stRp5612
ag1
(g5051
g5002
(dp5613
g58
g2410
sg582
g2404
stRp5614
ag1
(g5051
g5002
(dp5615
g58
g2420
sg582
g2414
stRp5616
ag1
(g5051
g5002
(dp5617
g58
g2430
sg582
g2424
stRp5618
ag1
(g5051
g5002
(dp5619
g58
g2440
sg582
g2434
stRp5620
ag1
(g5051
g5002
(dp5621
g58
g2450
sg582
g2444
stRp5622
ag1
(g5051
g5002
(dp5623
g58
g2460
sg582
g2454
stRp5624
ag1
(g5051
g5002
(dp5625
g58
g2470
sg582
g2464
stRp5626
ag1
(g5051
g5002
(dp5627
g58
g2480
sg582
g2474
stRp5628
ag1
(g5051
g5002
(dp5629
g58
g2490
sg582
g2484
stRp5630
ag1
(g5051
g5002
(dp5631
g58
g2500
sg582
g2494
stRp5632
ag1
(g5051
g5002
(dp5633
g58
g2510
sg582
g2504
stRp5634
ag1
(g5051
g5002
(dp5635
g58
g2520
sg582
g2514
stRp5636
ag1
(g5051
g5002
(dp5637
g58
g2530
sg582
g2524
stRp5638
ag1
(g5051
g5002
(dp5639
g58
g2540
sg582
g2534
stRp5640
ag1
(g5051
g5002
(dp5641
g58
g2550
sg582
g2544
stRp5642
ag1
(g5051
g5002
(dp5643
g58
g2560
sg582
g2554
stRp5644
ag1
(g5051
g5002
(dp5645
g58
g2570
sg582
g2564
stRp5646
ag1
(g5051
g5002
(dp5647
g58
g2580
sg582
g2574
stRp5648
ag1
(g5051
g5002
(dp5649
g58
g2590
sg582
g2584
stRp5650
ag1
(g5051
g5002
(dp5651
g58
g2600
sg582
g2594
stRp5652
ag1
(g5051
g5002
(dp5653
g58
g2610
sg582
g2604
stRp5654
ag1
(g5051
g5002
(dp5655
g58
g2620
sg582
g2614
stRp5656
ag1
(g5051
g5002
(dp5657
g58
g2630
sg582
g2624
stRp5658
ag1
(g5051
g5002
(dp5659
g58
g2640
sg582
g2634
stRp5660
ag1
(g5051
g5002
(dp5661
g58
g2650
sg582
g2644
stRp5662
ag1
(g5051
g5002
(dp5663
g58
g2660
sg582
g2654
stRp5664
ag1
(g5051
g5002
(dp5665
g58
g2670
sg582
g2664
stRp5666
ag1
(g5051
g5002
(dp5667
g58
g2680
sg582
g2674
stRp5668
ag1
(g5051
g5002
(dp5669
g58
g2690
sg582
g2684
stRp5670
ag1
(g5051
g5002
(dp5671
g58
g2700
sg582
g2694
stRp5672
ag1
(g5051
g5002
(dp5673
g58
g2710
sg582
g2704
stRp5674
ag1
(g5051
g5002
(dp5675
g58
g2720
sg582
g2714
stRp5676
ag1
(g5051
g5002
(dp5677
g58
g2730
sg582
g2724
stRp5678
ag1
(g5051
g5002
(dp5679
g58
g2740
sg582
g2734
stRp5680
ag1
(g5051
g5002
(dp5681
g58
g2750
sg582
g2744
stRp5682
ag1
(g5051
g5002
(dp5683
g58
g2760
sg582
g2754
stRp5684
ag1
(g5051
g5002
(dp5685
g58
g2770
sg582
g2764
stRp5686
ag1
(g5051
g5002
(dp5687
g58
g2780
sg582
g2774
stRp5688
asg5220
Nsg5221
g2776
sg5222
I220
sg5223
I0
sg5224
I220
sg5225
I01
sbag1
(g4989
g3
NtRp5689
(dp5690
g4992
V\u000a\u000a\u000a\u000a\u000a#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5691
sg4994
(lp5692
sg4996
I140251928643024
sg10
S'trials2'
p5693
sg6
g4998
sg4999
I1
sg36
I01
sg37
g38
sg5000
g1
(g5001
g5002
(dp5694
g30
g5015
(g5016
g5005
g5017
S'b'
tRp5695
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5014
g5015
(g5016
g5005
g5017
S'b'
tRp5696
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5004
(g5005
(I0
tS'b'
tRp5697
(I1
(I220
I1
tg5007
I00
(lp5698
g2792
ag2803
ag2813
ag2823
ag2833
ag2843
ag2853
ag2863
ag2873
ag2883
ag2893
ag2903
ag2913
ag2923
ag2933
ag2943
ag2953
ag2963
ag2973
ag2983
ag2993
ag3003
ag3013
ag3023
ag3033
ag3043
ag3053
ag3063
ag3073
ag3083
ag3093
ag3103
ag3113
ag3123
ag3133
ag3143
ag3153
ag3163
ag3173
ag3183
ag3193
ag3203
ag3213
ag3223
ag3233
ag3243
ag3253
ag3263
ag3273
ag3283
ag3293
ag3303
ag3313
ag3323
ag3333
ag3343
ag3353
ag3363
ag3373
ag3383
ag3393
ag3403
ag3413
ag3423
ag3433
ag3443
ag3453
ag3463
ag3473
ag3483
ag3493
ag3503
ag3513
ag3523
ag3533
ag3543
ag3553
ag3563
ag3573
ag3583
ag3593
ag3603
ag3613
ag3623
ag3633
ag3643
ag3653
ag3663
ag3673
ag3683
ag3693
ag3703
ag3713
ag3723
ag3733
ag3743
ag3753
ag3763
ag3773
ag3783
ag3793
ag3803
ag3813
ag3823
ag3833
ag3843
ag3853
ag3863
ag3873
ag3883
ag3893
ag3903
ag3913
ag3923
ag3933
ag3943
ag3953
ag3963
ag3973
ag3983
ag3993
ag4003
ag4013
ag4023
ag4033
ag4043
ag4053
ag4063
ag4073
ag4083
ag4093
ag4103
ag4113
ag4123
ag4133
ag4143
ag4153
ag4163
ag4173
ag4183
ag4193
ag4203
ag4213
ag4223
ag4233
ag4243
ag4253
ag4263
ag4273
ag4283
ag4293
ag4303
ag4313
ag4323
ag4333
ag4343
ag4353
ag4363
ag4373
ag4383
ag4393
ag4403
ag4413
ag4423
ag4433
ag4443
ag4453
ag4463
ag4473
ag4483
ag4493
ag4503
ag4513
ag4523
ag4533
ag4543
ag4553
ag4563
ag4573
ag4583
ag4593
ag4603
ag4613
ag4623
ag4633
ag4643
ag4653
ag4663
ag4673
ag4683
ag4693
ag4703
ag4713
ag4723
ag4733
ag4743
ag4753
ag4763
ag4773
ag4783
ag4793
ag4803
ag4813
ag4823
ag4833
ag4843
ag4853
ag4863
ag4873
ag4883
ag4893
ag4903
ag4913
ag4923
ag4933
ag4943
ag4953
ag4963
ag4973
ag4983
atbsg29
g5004
(g5005
(I0
tS'b'
tRp5699
(I1
(I220
I1
tg5007
I00
(lp5700
g2793
ag2804
ag2814
ag2824
ag2834
ag2844
ag2854
ag2864
ag2874
ag2884
ag2894
ag2904
ag2914
ag2924
ag2934
ag2944
ag2954
ag2964
ag2974
ag2984
ag2994
ag3004
ag3014
ag3024
ag3034
ag3044
ag3054
ag3064
ag3074
ag3084
ag3094
ag3104
ag3114
ag3124
ag3134
ag3144
ag3154
ag3164
ag3174
ag3184
ag3194
ag3204
ag3214
ag3224
ag3234
ag3244
ag3254
ag3264
ag3274
ag3284
ag3294
ag3304
ag3314
ag3324
ag3334
ag3344
ag3354
ag3364
ag3374
ag3384
ag3394
ag3404
ag3414
ag3424
ag3434
ag3444
ag3454
ag3464
ag3474
ag3484
ag3494
ag3504
ag3514
ag3524
ag3534
ag3544
ag3554
ag3564
ag3574
ag3584
ag3594
ag3604
ag3614
ag3624
ag3634
ag3644
ag3654
ag3664
ag3674
ag3684
ag3694
ag3704
ag3714
ag3724
ag3734
ag3744
ag3754
ag3764
ag3774
ag3784
ag3794
ag3804
ag3814
ag3824
ag3834
ag3844
ag3854
ag3864
ag3874
ag3884
ag3894
ag3904
ag3914
ag3924
ag3934
ag3944
ag3954
ag3964
ag3974
ag3984
ag3994
ag4004
ag4014
ag4024
ag4034
ag4044
ag4054
ag4064
ag4074
ag4084
ag4094
ag4104
ag4114
ag4124
ag4134
ag4144
ag4154
ag4164
ag4174
ag4184
ag4194
ag4204
ag4214
ag4224
ag4234
ag4244
ag4254
ag4264
ag4274
ag4284
ag4294
ag4304
ag4314
ag4324
ag4334
ag4344
ag4354
ag4364
ag4374
ag4384
ag4394
ag4404
ag4414
ag4424
ag4434
ag4444
ag4454
ag4464
ag4474
ag4484
ag4494
ag4504
ag4514
ag4524
ag4534
ag4544
ag4554
ag4564
ag4574
ag4584
ag4594
ag4604
ag4614
ag4624
ag4634
ag4644
ag4654
ag4664
ag4674
ag4684
ag4694
ag4704
ag4714
ag4724
ag4734
ag4744
ag4754
ag4764
ag4774
ag4784
ag4794
ag4804
ag4814
ag4824
ag4834
ag4844
ag4854
ag4864
ag4874
ag4884
ag4894
ag4904
ag4914
ag4924
ag4934
ag4944
ag4954
ag4964
ag4974
ag4984
atbsg31
g5015
(g5016
g5005
g5017
S'b'
tRp5701
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5015
(g5016
g5005
g5017
S'b'
tRp5702
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5015
(g5016
g5005
g5017
S'b'
tRp5703
(I1
(I220
I1
tg5019
I00
S'8\xe8\xd9@y\x96K@\xc0\xbb\x81@\xc7\xf4\x14@D\x18c?\x82\xc8\x11@\x08\xe6|?\xa0R\xc7?\x0e\xe3\xa2?\x9a\xfe\x8c@\xc58&@i\x90K@\xca\xf9\x86?\x98\xa5\x0f@\xd1zH@\xc4(\'@\xee&\x98?$1\xc5?\xd8\x9f\x82?\xfabd@B\xc3\xa0?\xfc!\x9a?"\x8e\x8f?.\x92\x80?d%R?4c\xc9?\xa8\xfc\x97?\xdc\xc6^?0"\x89?\x1eo\x1b@P\x19\x17@|\x08R?t\x9b3AL\x12\x15A\xe4\x15\x98?`\x8e\xf6?\xa8\xbak?\xe0\xf2\x86?\xd2\x92\xcb?\xd0\x19\xb3@\xa0\xc4.@\xf0\xd1;?\xb0\x19\xf0?\xc26\xd4?,GE@C\xeeBA\x88\xbaK@\xf8\x01\xd2?xP\xa9?\x12\x9f\xcb?\x800\xd4?\x00\xd1\xc2?\x82t\x1b@$\xfa\xb1@4O^?\xd2.\xb4A\xf9\xdbO@ \xcf!@\x04\x90\x9e?}\xeak@818?\xe8\xe53?\xe2I\xcc@\x8c\xbc\x11@\xc8V\x8d?\xaa\xf4l@:\xc9x@h\x1f\x89?\n\xd4y@m\xca=@,\xd1\x93?\x85\x08\x15@\x9aq\x9e?d\xe8\xde?\x8c\x02\x87?t.\xa7?^\xcb\xeb?\xcc6t?\xc4{\xba?~m\xab?7U\x19@\xb4\xf9w?\xac\xf5\xd3?6Z\xba?\xeey\xba?\x1a\xa4\xbe?\xa2\xf1\xa6?\xbc\xfdb?\x18\x81\xab?\xde\x1b\xff?\xb4Hg?\x95\xef"@Na\xab?\x94\x8bx?\xb8(Z?\xb9\xa7\x00@\xb4\\V?\xc4\x9bU?\xb4\x88\x80?\x16\xd2\x93?\xf8\x19\x87?P\nZ?T\x97x?P\xfc|?\x93U*@\xba\xbb\x86?LyM?~/\x91?\x9a,\xf4?\xc2\xa2\xbc?LR\xa9?\x16\xbd\xaf?@\xde\xeb?\xda\'\x9e?\xb0St?|\xf5Q?\x8bne@\xaa\xbb\x88@\x98q\xcb?\x1c\xce2A\x98\x84\xc9?7\xdc>@\xb7_\x1a@\x9c9t?\x12\xae\xa0?"\xa6\x9e?l\x13V?\x86\xe0\x84?t\xb3s?q\xe7{@\xbe\xa8\xe9?\xdc\x0e\xe1?\xec\xdf\x93?\x16\xfc\x86?\xb8\xc4\xad?\x17+\x19@l\xc03?B\xf6\xc2?\x84j\xe9?\xd4}|?\xd4^\xf6?\x94\xa7\x82?\xc5\xe6\x04@\xbc\xf1\xa4?\xdc\x99\x91?|]+?L\xbfH?\xfcHQ?<\xe7^?R\xa2\x91?\xf05@?V\x1f\x87?\x1c2\xb8?n\x84\xad?\xa2\x14\x89?\x95\x8f\x8d@\xd8\xbc=@^J\xa9?\xaa\xa4\xf8?\x02J\n@\xfd\xbf\x1f@`\xc4;?\xb3\xef\x13@\xa45\t@\x98c\xe7?\xdc*8?^{\x9c?\xd8\x98\x8f?`\x18\x98?\xc6\x04\xdf?\xe6w\xd8?\x1c\xf3^?\xea\xf1\x95?\xe8\xf2o?\xbc]k?0\x9b\xda?\xa4\xfa\xde?H\xfc\x8a?>\xec\xb1?\x9c\xa7^?\xf4\x87&?<\xe33?(\xbc@?\xa4[/?\x04\x83g?\xfc\x11k?\xd8\xbc^?\x8c\xec3?\xa0\xff&?\xf4\x96/?\x906\x1a?\xf0\xa1@?\x86C\x8b?\x18\xf0\x86?\xa4et?\xfaB8@\xb0\x03\'?F\x08Q@\x94\x9bx?\xc4\xef&?\xc0\x0bc?\x10{<?\xac\x8c\x82?\x94\xb73?\x1fH5@lx\xdc?I\x9d\x00@=\xd4\x13@\xdb3\xe1@\x86\xfc\x97?P\xd9|?T_\xd6?\xa5\x83\xf4@\xac\x0cc?\xf7\xcdL@`\x8c\x80?\xb0\x01\xc1@\xf0\xf6\x88?\x16n\xc7?\x9c\xae^?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5030
g5015
(g5016
g5005
g5017
S'b'
tRp5704
(I1
(I220
I1
tg5019
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5705
(dp5706
g5034
(dp5707
g31
I01
sg5014
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5030
I01
ssg5036
g5689
sg5037
(lp5708
g5014
ag5030
ag28
ag29
ag30
ag31
ag32
ag33
asg5039
(lp5709
I220
aI1
asbsg5041
g5246
sg5043
g5004
(g5005
(I0
tS'b'
tRp5710
(I1
(I220
I1
tg585
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5046
I01
sg5047
I1
sg5048
I-1
sg5049
(lp5711
g1
(g5051
g5002
(dp5712
g2794
g2795
sg2790
g2791
stRp5713
ag1
(g5051
g5002
(dp5714
g2794
g2805
sg2790
g2802
stRp5715
ag1
(g5051
g5002
(dp5716
g2794
g2815
sg2790
g2812
stRp5717
ag1
(g5051
g5002
(dp5718
g2794
g2825
sg2790
g2822
stRp5719
ag1
(g5051
g5002
(dp5720
g2794
g2835
sg2790
g2832
stRp5721
ag1
(g5051
g5002
(dp5722
g2794
g2845
sg2790
g2842
stRp5723
ag1
(g5051
g5002
(dp5724
g2794
g2855
sg2790
g2852
stRp5725
ag1
(g5051
g5002
(dp5726
g2794
g2865
sg2790
g2862
stRp5727
ag1
(g5051
g5002
(dp5728
g2794
g2875
sg2790
g2872
stRp5729
ag1
(g5051
g5002
(dp5730
g2794
g2885
sg2790
g2882
stRp5731
ag1
(g5051
g5002
(dp5732
g2794
g2895
sg2790
g2892
stRp5733
ag1
(g5051
g5002
(dp5734
g2794
g2905
sg2790
g2902
stRp5735
ag1
(g5051
g5002
(dp5736
g2794
g2915
sg2790
g2912
stRp5737
ag1
(g5051
g5002
(dp5738
g2794
g2925
sg2790
g2922
stRp5739
ag1
(g5051
g5002
(dp5740
g2794
g2935
sg2790
g2932
stRp5741
ag1
(g5051
g5002
(dp5742
g2794
g2945
sg2790
g2942
stRp5743
ag1
(g5051
g5002
(dp5744
g2794
g2955
sg2790
g2952
stRp5745
ag1
(g5051
g5002
(dp5746
g2794
g2965
sg2790
g2962
stRp5747
ag1
(g5051
g5002
(dp5748
g2794
g2975
sg2790
g2972
stRp5749
ag1
(g5051
g5002
(dp5750
g2794
g2985
sg2790
g2982
stRp5751
ag1
(g5051
g5002
(dp5752
g2794
g2995
sg2790
g2992
stRp5753
ag1
(g5051
g5002
(dp5754
g2794
g3005
sg2790
g3002
stRp5755
ag1
(g5051
g5002
(dp5756
g2794
g3015
sg2790
g3012
stRp5757
ag1
(g5051
g5002
(dp5758
g2794
g3025
sg2790
g3022
stRp5759
ag1
(g5051
g5002
(dp5760
g2794
g3035
sg2790
g3032
stRp5761
ag1
(g5051
g5002
(dp5762
g2794
g3045
sg2790
g3042
stRp5763
ag1
(g5051
g5002
(dp5764
g2794
g3055
sg2790
g3052
stRp5765
ag1
(g5051
g5002
(dp5766
g2794
g3065
sg2790
g3062
stRp5767
ag1
(g5051
g5002
(dp5768
g2794
g3075
sg2790
g3072
stRp5769
ag1
(g5051
g5002
(dp5770
g2794
g3085
sg2790
g3082
stRp5771
ag1
(g5051
g5002
(dp5772
g2794
g3095
sg2790
g3092
stRp5773
ag1
(g5051
g5002
(dp5774
g2794
g3105
sg2790
g3102
stRp5775
ag1
(g5051
g5002
(dp5776
g2794
g3115
sg2790
g3112
stRp5777
ag1
(g5051
g5002
(dp5778
g2794
g3125
sg2790
g3122
stRp5779
ag1
(g5051
g5002
(dp5780
g2794
g3135
sg2790
g3132
stRp5781
ag1
(g5051
g5002
(dp5782
g2794
g3145
sg2790
g3142
stRp5783
ag1
(g5051
g5002
(dp5784
g2794
g3155
sg2790
g3152
stRp5785
ag1
(g5051
g5002
(dp5786
g2794
g3165
sg2790
g3162
stRp5787
ag1
(g5051
g5002
(dp5788
g2794
g3175
sg2790
g3172
stRp5789
ag1
(g5051
g5002
(dp5790
g2794
g3185
sg2790
g3182
stRp5791
ag1
(g5051
g5002
(dp5792
g2794
g3195
sg2790
g3192
stRp5793
ag1
(g5051
g5002
(dp5794
g2794
g3205
sg2790
g3202
stRp5795
ag1
(g5051
g5002
(dp5796
g2794
g3215
sg2790
g3212
stRp5797
ag1
(g5051
g5002
(dp5798
g2794
g3225
sg2790
g3222
stRp5799
ag1
(g5051
g5002
(dp5800
g2794
g3235
sg2790
g3232
stRp5801
ag1
(g5051
g5002
(dp5802
g2794
g3245
sg2790
g3242
stRp5803
ag1
(g5051
g5002
(dp5804
g2794
g3255
sg2790
g3252
stRp5805
ag1
(g5051
g5002
(dp5806
g2794
g3265
sg2790
g3262
stRp5807
ag1
(g5051
g5002
(dp5808
g2794
g3275
sg2790
g3272
stRp5809
ag1
(g5051
g5002
(dp5810
g2794
g3285
sg2790
g3282
stRp5811
ag1
(g5051
g5002
(dp5812
g2794
g3295
sg2790
g3292
stRp5813
ag1
(g5051
g5002
(dp5814
g2794
g3305
sg2790
g3302
stRp5815
ag1
(g5051
g5002
(dp5816
g2794
g3315
sg2790
g3312
stRp5817
ag1
(g5051
g5002
(dp5818
g2794
g3325
sg2790
g3322
stRp5819
ag1
(g5051
g5002
(dp5820
g2794
g3335
sg2790
g3332
stRp5821
ag1
(g5051
g5002
(dp5822
g2794
g3345
sg2790
g3342
stRp5823
ag1
(g5051
g5002
(dp5824
g2794
g3355
sg2790
g3352
stRp5825
ag1
(g5051
g5002
(dp5826
g2794
g3365
sg2790
g3362
stRp5827
ag1
(g5051
g5002
(dp5828
g2794
g3375
sg2790
g3372
stRp5829
ag1
(g5051
g5002
(dp5830
g2794
g3385
sg2790
g3382
stRp5831
ag1
(g5051
g5002
(dp5832
g2794
g3395
sg2790
g3392
stRp5833
ag1
(g5051
g5002
(dp5834
g2794
g3405
sg2790
g3402
stRp5835
ag1
(g5051
g5002
(dp5836
g2794
g3415
sg2790
g3412
stRp5837
ag1
(g5051
g5002
(dp5838
g2794
g3425
sg2790
g3422
stRp5839
ag1
(g5051
g5002
(dp5840
g2794
g3435
sg2790
g3432
stRp5841
ag1
(g5051
g5002
(dp5842
g2794
g3445
sg2790
g3442
stRp5843
ag1
(g5051
g5002
(dp5844
g2794
g3455
sg2790
g3452
stRp5845
ag1
(g5051
g5002
(dp5846
g2794
g3465
sg2790
g3462
stRp5847
ag1
(g5051
g5002
(dp5848
g2794
g3475
sg2790
g3472
stRp5849
ag1
(g5051
g5002
(dp5850
g2794
g3485
sg2790
g3482
stRp5851
ag1
(g5051
g5002
(dp5852
g2794
g3495
sg2790
g3492
stRp5853
ag1
(g5051
g5002
(dp5854
g2794
g3505
sg2790
g3502
stRp5855
ag1
(g5051
g5002
(dp5856
g2794
g3515
sg2790
g3512
stRp5857
ag1
(g5051
g5002
(dp5858
g2794
g3525
sg2790
g3522
stRp5859
ag1
(g5051
g5002
(dp5860
g2794
g3535
sg2790
g3532
stRp5861
ag1
(g5051
g5002
(dp5862
g2794
g3545
sg2790
g3542
stRp5863
ag1
(g5051
g5002
(dp5864
g2794
g3555
sg2790
g3552
stRp5865
ag1
(g5051
g5002
(dp5866
g2794
g3565
sg2790
g3562
stRp5867
ag1
(g5051
g5002
(dp5868
g2794
g3575
sg2790
g3572
stRp5869
ag1
(g5051
g5002
(dp5870
g2794
g3585
sg2790
g3582
stRp5871
ag1
(g5051
g5002
(dp5872
g2794
g3595
sg2790
g3592
stRp5873
ag1
(g5051
g5002
(dp5874
g2794
g3605
sg2790
g3602
stRp5875
ag1
(g5051
g5002
(dp5876
g2794
g3615
sg2790
g3612
stRp5877
ag1
(g5051
g5002
(dp5878
g2794
g3625
sg2790
g3622
stRp5879
ag1
(g5051
g5002
(dp5880
g2794
g3635
sg2790
g3632
stRp5881
ag1
(g5051
g5002
(dp5882
g2794
g3645
sg2790
g3642
stRp5883
ag1
(g5051
g5002
(dp5884
g2794
g3655
sg2790
g3652
stRp5885
ag1
(g5051
g5002
(dp5886
g2794
g3665
sg2790
g3662
stRp5887
ag1
(g5051
g5002
(dp5888
g2794
g3675
sg2790
g3672
stRp5889
ag1
(g5051
g5002
(dp5890
g2794
g3685
sg2790
g3682
stRp5891
ag1
(g5051
g5002
(dp5892
g2794
g3695
sg2790
g3692
stRp5893
ag1
(g5051
g5002
(dp5894
g2794
g3705
sg2790
g3702
stRp5895
ag1
(g5051
g5002
(dp5896
g2794
g3715
sg2790
g3712
stRp5897
ag1
(g5051
g5002
(dp5898
g2794
g3725
sg2790
g3722
stRp5899
ag1
(g5051
g5002
(dp5900
g2794
g3735
sg2790
g3732
stRp5901
ag1
(g5051
g5002
(dp5902
g2794
g3745
sg2790
g3742
stRp5903
ag1
(g5051
g5002
(dp5904
g2794
g3755
sg2790
g3752
stRp5905
ag1
(g5051
g5002
(dp5906
g2794
g3765
sg2790
g3762
stRp5907
ag1
(g5051
g5002
(dp5908
g2794
g3775
sg2790
g3772
stRp5909
ag1
(g5051
g5002
(dp5910
g2794
g3785
sg2790
g3782
stRp5911
ag1
(g5051
g5002
(dp5912
g2794
g3795
sg2790
g3792
stRp5913
ag1
(g5051
g5002
(dp5914
g2794
g3805
sg2790
g3802
stRp5915
ag1
(g5051
g5002
(dp5916
g2794
g3815
sg2790
g3812
stRp5917
ag1
(g5051
g5002
(dp5918
g2794
g3825
sg2790
g3822
stRp5919
ag1
(g5051
g5002
(dp5920
g2794
g3835
sg2790
g3832
stRp5921
ag1
(g5051
g5002
(dp5922
g2794
g3845
sg2790
g3842
stRp5923
ag1
(g5051
g5002
(dp5924
g2794
g3855
sg2790
g3852
stRp5925
ag1
(g5051
g5002
(dp5926
g2794
g3865
sg2790
g3862
stRp5927
ag1
(g5051
g5002
(dp5928
g2794
g3875
sg2790
g3872
stRp5929
ag1
(g5051
g5002
(dp5930
g2794
g3885
sg2790
g3882
stRp5931
ag1
(g5051
g5002
(dp5932
g2794
g3895
sg2790
g3892
stRp5933
ag1
(g5051
g5002
(dp5934
g2794
g3905
sg2790
g3902
stRp5935
ag1
(g5051
g5002
(dp5936
g2794
g3915
sg2790
g3912
stRp5937
ag1
(g5051
g5002
(dp5938
g2794
g3925
sg2790
g3922
stRp5939
ag1
(g5051
g5002
(dp5940
g2794
g3935
sg2790
g3932
stRp5941
ag1
(g5051
g5002
(dp5942
g2794
g3945
sg2790
g3942
stRp5943
ag1
(g5051
g5002
(dp5944
g2794
g3955
sg2790
g3952
stRp5945
ag1
(g5051
g5002
(dp5946
g2794
g3965
sg2790
g3962
stRp5947
ag1
(g5051
g5002
(dp5948
g2794
g3975
sg2790
g3972
stRp5949
ag1
(g5051
g5002
(dp5950
g2794
g3985
sg2790
g3982
stRp5951
ag1
(g5051
g5002
(dp5952
g2794
g3995
sg2790
g3992
stRp5953
ag1
(g5051
g5002
(dp5954
g2794
g4005
sg2790
g4002
stRp5955
ag1
(g5051
g5002
(dp5956
g2794
g4015
sg2790
g4012
stRp5957
ag1
(g5051
g5002
(dp5958
g2794
g4025
sg2790
g4022
stRp5959
ag1
(g5051
g5002
(dp5960
g2794
g4035
sg2790
g4032
stRp5961
ag1
(g5051
g5002
(dp5962
g2794
g4045
sg2790
g4042
stRp5963
ag1
(g5051
g5002
(dp5964
g2794
g4055
sg2790
g4052
stRp5965
ag1
(g5051
g5002
(dp5966
g2794
g4065
sg2790
g4062
stRp5967
ag1
(g5051
g5002
(dp5968
g2794
g4075
sg2790
g4072
stRp5969
ag1
(g5051
g5002
(dp5970
g2794
g4085
sg2790
g4082
stRp5971
ag1
(g5051
g5002
(dp5972
g2794
g4095
sg2790
g4092
stRp5973
ag1
(g5051
g5002
(dp5974
g2794
g4105
sg2790
g4102
stRp5975
ag1
(g5051
g5002
(dp5976
g2794
g4115
sg2790
g4112
stRp5977
ag1
(g5051
g5002
(dp5978
g2794
g4125
sg2790
g4122
stRp5979
ag1
(g5051
g5002
(dp5980
g2794
g4135
sg2790
g4132
stRp5981
ag1
(g5051
g5002
(dp5982
g2794
g4145
sg2790
g4142
stRp5983
ag1
(g5051
g5002
(dp5984
g2794
g4155
sg2790
g4152
stRp5985
ag1
(g5051
g5002
(dp5986
g2794
g4165
sg2790
g4162
stRp5987
ag1
(g5051
g5002
(dp5988
g2794
g4175
sg2790
g4172
stRp5989
ag1
(g5051
g5002
(dp5990
g2794
g4185
sg2790
g4182
stRp5991
ag1
(g5051
g5002
(dp5992
g2794
g4195
sg2790
g4192
stRp5993
ag1
(g5051
g5002
(dp5994
g2794
g4205
sg2790
g4202
stRp5995
ag1
(g5051
g5002
(dp5996
g2794
g4215
sg2790
g4212
stRp5997
ag1
(g5051
g5002
(dp5998
g2794
g4225
sg2790
g4222
stRp5999
ag1
(g5051
g5002
(dp6000
g2794
g4235
sg2790
g4232
stRp6001
ag1
(g5051
g5002
(dp6002
g2794
g4245
sg2790
g4242
stRp6003
ag1
(g5051
g5002
(dp6004
g2794
g4255
sg2790
g4252
stRp6005
ag1
(g5051
g5002
(dp6006
g2794
g4265
sg2790
g4262
stRp6007
ag1
(g5051
g5002
(dp6008
g2794
g4275
sg2790
g4272
stRp6009
ag1
(g5051
g5002
(dp6010
g2794
g4285
sg2790
g4282
stRp6011
ag1
(g5051
g5002
(dp6012
g2794
g4295
sg2790
g4292
stRp6013
ag1
(g5051
g5002
(dp6014
g2794
g4305
sg2790
g4302
stRp6015
ag1
(g5051
g5002
(dp6016
g2794
g4315
sg2790
g4312
stRp6017
ag1
(g5051
g5002
(dp6018
g2794
g4325
sg2790
g4322
stRp6019
ag1
(g5051
g5002
(dp6020
g2794
g4335
sg2790
g4332
stRp6021
ag1
(g5051
g5002
(dp6022
g2794
g4345
sg2790
g4342
stRp6023
ag1
(g5051
g5002
(dp6024
g2794
g4355
sg2790
g4352
stRp6025
ag1
(g5051
g5002
(dp6026
g2794
g4365
sg2790
g4362
stRp6027
ag1
(g5051
g5002
(dp6028
g2794
g4375
sg2790
g4372
stRp6029
ag1
(g5051
g5002
(dp6030
g2794
g4385
sg2790
g4382
stRp6031
ag1
(g5051
g5002
(dp6032
g2794
g4395
sg2790
g4392
stRp6033
ag1
(g5051
g5002
(dp6034
g2794
g4405
sg2790
g4402
stRp6035
ag1
(g5051
g5002
(dp6036
g2794
g4415
sg2790
g4412
stRp6037
ag1
(g5051
g5002
(dp6038
g2794
g4425
sg2790
g4422
stRp6039
ag1
(g5051
g5002
(dp6040
g2794
g4435
sg2790
g4432
stRp6041
ag1
(g5051
g5002
(dp6042
g2794
g4445
sg2790
g4442
stRp6043
ag1
(g5051
g5002
(dp6044
g2794
g4455
sg2790
g4452
stRp6045
ag1
(g5051
g5002
(dp6046
g2794
g4465
sg2790
g4462
stRp6047
ag1
(g5051
g5002
(dp6048
g2794
g4475
sg2790
g4472
stRp6049
ag1
(g5051
g5002
(dp6050
g2794
g4485
sg2790
g4482
stRp6051
ag1
(g5051
g5002
(dp6052
g2794
g4495
sg2790
g4492
stRp6053
ag1
(g5051
g5002
(dp6054
g2794
g4505
sg2790
g4502
stRp6055
ag1
(g5051
g5002
(dp6056
g2794
g4515
sg2790
g4512
stRp6057
ag1
(g5051
g5002
(dp6058
g2794
g4525
sg2790
g4522
stRp6059
ag1
(g5051
g5002
(dp6060
g2794
g4535
sg2790
g4532
stRp6061
ag1
(g5051
g5002
(dp6062
g2794
g4545
sg2790
g4542
stRp6063
ag1
(g5051
g5002
(dp6064
g2794
g4555
sg2790
g4552
stRp6065
ag1
(g5051
g5002
(dp6066
g2794
g4565
sg2790
g4562
stRp6067
ag1
(g5051
g5002
(dp6068
g2794
g4575
sg2790
g4572
stRp6069
ag1
(g5051
g5002
(dp6070
g2794
g4585
sg2790
g4582
stRp6071
ag1
(g5051
g5002
(dp6072
g2794
g4595
sg2790
g4592
stRp6073
ag1
(g5051
g5002
(dp6074
g2794
g4605
sg2790
g4602
stRp6075
ag1
(g5051
g5002
(dp6076
g2794
g4615
sg2790
g4612
stRp6077
ag1
(g5051
g5002
(dp6078
g2794
g4625
sg2790
g4622
stRp6079
ag1
(g5051
g5002
(dp6080
g2794
g4635
sg2790
g4632
stRp6081
ag1
(g5051
g5002
(dp6082
g2794
g4645
sg2790
g4642
stRp6083
ag1
(g5051
g5002
(dp6084
g2794
g4655
sg2790
g4652
stRp6085
ag1
(g5051
g5002
(dp6086
g2794
g4665
sg2790
g4662
stRp6087
ag1
(g5051
g5002
(dp6088
g2794
g4675
sg2790
g4672
stRp6089
ag1
(g5051
g5002
(dp6090
g2794
g4685
sg2790
g4682
stRp6091
ag1
(g5051
g5002
(dp6092
g2794
g4695
sg2790
g4692
stRp6093
ag1
(g5051
g5002
(dp6094
g2794
g4705
sg2790
g4702
stRp6095
ag1
(g5051
g5002
(dp6096
g2794
g4715
sg2790
g4712
stRp6097
ag1
(g5051
g5002
(dp6098
g2794
g4725
sg2790
g4722
stRp6099
ag1
(g5051
g5002
(dp6100
g2794
g4735
sg2790
g4732
stRp6101
ag1
(g5051
g5002
(dp6102
g2794
g4745
sg2790
g4742
stRp6103
ag1
(g5051
g5002
(dp6104
g2794
g4755
sg2790
g4752
stRp6105
ag1
(g5051
g5002
(dp6106
g2794
g4765
sg2790
g4762
stRp6107
ag1
(g5051
g5002
(dp6108
g2794
g4775
sg2790
g4772
stRp6109
ag1
(g5051
g5002
(dp6110
g2794
g4785
sg2790
g4782
stRp6111
ag1
(g5051
g5002
(dp6112
g2794
g4795
sg2790
g4792
stRp6113
ag1
(g5051
g5002
(dp6114
g2794
g4805
sg2790
g4802
stRp6115
ag1
(g5051
g5002
(dp6116
g2794
g4815
sg2790
g4812
stRp6117
ag1
(g5051
g5002
(dp6118
g2794
g4825
sg2790
g4822
stRp6119
ag1
(g5051
g5002
(dp6120
g2794
g4835
sg2790
g4832
stRp6121
ag1
(g5051
g5002
(dp6122
g2794
g4845
sg2790
g4842
stRp6123
ag1
(g5051
g5002
(dp6124
g2794
g4855
sg2790
g4852
stRp6125
ag1
(g5051
g5002
(dp6126
g2794
g4865
sg2790
g4862
stRp6127
ag1
(g5051
g5002
(dp6128
g2794
g4875
sg2790
g4872
stRp6129
ag1
(g5051
g5002
(dp6130
g2794
g4885
sg2790
g4882
stRp6131
ag1
(g5051
g5002
(dp6132
g2794
g4895
sg2790
g4892
stRp6133
ag1
(g5051
g5002
(dp6134
g2794
g4905
sg2790
g4902
stRp6135
ag1
(g5051
g5002
(dp6136
g2794
g4915
sg2790
g4912
stRp6137
ag1
(g5051
g5002
(dp6138
g2794
g4925
sg2790
g4922
stRp6139
ag1
(g5051
g5002
(dp6140
g2794
g4935
sg2790
g4932
stRp6141
ag1
(g5051
g5002
(dp6142
g2794
g4945
sg2790
g4942
stRp6143
ag1
(g5051
g5002
(dp6144
g2794
g4955
sg2790
g4952
stRp6145
ag1
(g5051
g5002
(dp6146
g2794
g4965
sg2790
g4962
stRp6147
ag1
(g5051
g5002
(dp6148
g2794
g4975
sg2790
g4972
stRp6149
ag1
(g5051
g5002
(dp6150
g2794
g4985
sg2790
g4982
stRp6151
asg5220
Nsg5221
g4979
sg5222
I220
sg5223
I0
sg5224
I220
sg5225
I01
sbasS'savePickle'
p6152
I00
sb.