ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/G_19_facesParametric_2015_Oct_24_1037
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
aS'key_resp_7.keys'
p36
aS'key_resp_7.rt'
p37
asS'autoLog'
p38
I01
sS'extraInfo'
p39
(dp40
S'date'
p41
V2015_Oct_24_1037
p42
sVgroup
p43
VG
sS'expName'
p44
g11
sVparticipant
p45
V19
p46
sS'frameRate'
p47
cnumpy.core.multiarray
scalar
p48
(cnumpy
dtype
p49
(S'f8'
I0
I1
tRp50
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x08\x02&\xe0\x16\xb8M@'
tRp51
ssS'loopsUnfinished'
p52
(lp53
sS'saveWideText'
p54
I01
sS'thisEntry'
p55
(dp56
sS'version'
p57
S''
sS'_paramNamesSoFar'
p58
(lp59
S'img'
p60
aS'num'
p61
asS'entries'
p62
(lp63
(dp64
g15
F60.311043977737427
sg44
g11
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg14
S'return'
p65
sa(dp66
g16
Nsg18
Nsg60
S'./basicStim/21M_DI_O.jpg'
p67
sg21
F4.2549999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p68
I0
sg44
g11
sS'basicLoop.thisRepN'
p69
I0
sg20
S'DIS'
p70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p71
I0
sS'basicLoop.thisIndex'
p72
I43
sa(dp73
g16
Nsg18
S'FEA'
p74
sg60
S'./basicStim/28M_FE_O.jpg'
p75
sg21
Nsg19
F2.2650000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p76
I1
sg44
g11
sS'basicLoop.thisRepN'
p77
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p78
I1
sS'basicLoop.thisIndex'
p79
I65
sa(dp80
g16
S'SAD'
p81
sg18
Nsg60
S'./basicStim/28M_SA_C.jpg'
p82
sg21
Nsg19
Nsg17
F4.1399999999999997
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p83
I2
sg44
g11
sS'basicLoop.thisRepN'
p84
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p85
I2
sS'basicLoop.thisIndex'
p86
I67
sa(dp87
g16
g81
sg18
Nsg60
S'./basicStim/09F_SA_C.jpg'
p88
sg21
Nsg19
Nsg17
F1.431
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p89
I3
sg44
g11
sS'basicLoop.thisRepN'
p90
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p91
I3
sS'basicLoop.thisIndex'
p92
I39
sa(dp93
g16
Nsg18
Nsg60
S'./basicStim/01F_DI_O.jpg'
p94
sg21
F2.7349999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p95
I4
sg44
g11
sS'basicLoop.thisRepN'
p96
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p97
I4
sS'basicLoop.thisIndex'
p98
I1
sa(dp99
g16
Nsg18
S'ANG'
p100
sg60
S'./basicStim/01F_AN_O.jpg'
p101
sg21
Nsg19
F3.661
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p102
I5
sg44
g11
sS'basicLoop.thisRepN'
p103
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p104
I5
sS'basicLoop.thisIndex'
p105
I0
sa(dp106
g16
Nsg18
Nsg60
S'./basicStim/23M_SP_O.jpg'
p107
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.3140000000000001
sg22
S'dummy'
p108
sS'basicLoop.thisTrialN'
p109
I6
sg44
g11
sS'basicLoop.thisRepN'
p110
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p111
I6
sS'basicLoop.thisIndex'
p112
I54
sa(dp113
g16
Nsg18
Nsg60
S'./basicStim/36M_DI_O.jpg'
p114
sg21
F2.0129999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p115
I7
sg44
g11
sS'basicLoop.thisRepN'
p116
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p117
I7
sS'basicLoop.thisIndex'
p118
I78
sa(dp119
g16
Nsg18
Nsg60
S'./basicStim/02F_DI_O.jpg'
p120
sg21
F2.5499999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p121
I8
sg44
g11
sS'basicLoop.thisRepN'
p122
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p123
I8
sS'basicLoop.thisIndex'
p124
I8
sa(dp125
g16
Nsg18
Nsg60
S'./basicStim/36M_NE_C.jpg'
p126
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F3.5870000000000002
sg22
S'NTR'
p127
sS'basicLoop.thisTrialN'
p128
I9
sg44
g11
sS'basicLoop.thisRepN'
p129
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p130
I9
sS'basicLoop.thisIndex'
p131
I83
sa(dp132
g16
S'HAP'
p133
sg18
Nsg60
S'./basicStim/28M_HA_O.jpg'
p134
sg21
Nsg19
Nsg17
F1.5980000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p135
I10
sg44
g11
sS'basicLoop.thisRepN'
p136
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p137
I10
sS'basicLoop.thisIndex'
p138
I66
sa(dp139
g16
Nsg18
g74
sg60
S'./basicStim/01F_FE_O.jpg'
p140
sg21
Nsg19
F2.3180000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p141
I11
sg44
g11
sS'basicLoop.thisRepN'
p142
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p143
I11
sS'basicLoop.thisIndex'
p144
I2
sa(dp145
g16
Nsg18
g100
sg60
S'./basicStim/07F_AN_O.jpg'
p146
sg21
Nsg19
F1.347
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p147
I12
sg44
g11
sS'basicLoop.thisRepN'
p148
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p149
I12
sS'basicLoop.thisIndex'
p150
I28
sa(dp151
g16
Nsg18
Nsg60
S'./basicStim/28M_NE_C.jpg'
p152
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.484
sg22
g127
sS'basicLoop.thisTrialN'
p153
I13
sg44
g11
sS'basicLoop.thisRepN'
p154
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p155
I13
sS'basicLoop.thisIndex'
p156
I69
sa(dp157
g16
Nsg18
g74
sg60
S'./basicStim/34M_SA_C.jpg'
p158
sg21
Nsg19
F4.6440000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p159
I14
sg44
g11
sS'basicLoop.thisRepN'
p160
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p161
I14
sS'basicLoop.thisIndex'
p162
I74
sa(dp163
g16
Nsg18
Nsg60
S'./basicStim/09F_FE_O.jpg'
p164
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F6.2699999999999996
sg22
g127
sS'basicLoop.thisTrialN'
p165
I15
sg44
g11
sS'basicLoop.thisRepN'
p166
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p167
I15
sS'basicLoop.thisIndex'
p168
I37
sa(dp169
g16
Nsg18
Nsg60
S'./basicStim/09F_NE_C.jpg'
p170
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.9950000000000001
sg22
g127
sS'basicLoop.thisTrialN'
p171
I16
sg44
g11
sS'basicLoop.thisRepN'
p172
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p173
I16
sS'basicLoop.thisIndex'
p174
I41
sa(dp175
g16
Nsg18
g74
sg60
S'./basicStim/23M_FE_O.jpg'
p176
sg21
Nsg19
F4.5620000000000003
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p177
I17
sg44
g11
sS'basicLoop.thisRepN'
p178
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p179
I17
sS'basicLoop.thisIndex'
p180
I51
sa(dp181
g16
g133
sg18
Nsg60
S'./basicStim/06F_HA_O.jpg'
p182
sg21
Nsg19
Nsg17
F2.1499999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p183
I18
sg44
g11
sS'basicLoop.thisRepN'
p184
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p185
I18
sS'basicLoop.thisIndex'
p186
I24
sa(dp187
g16
g81
sg18
Nsg60
S'./basicStim/01F_SA_C.jpg'
p188
sg21
Nsg19
Nsg17
F1.6339999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p189
I19
sg44
g11
sS'basicLoop.thisRepN'
p190
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p191
I19
sS'basicLoop.thisIndex'
p192
I4
sa(dp193
g16
Nsg18
g74
sg60
S'./basicStim/06F_FE_O.jpg'
p194
sg21
Nsg19
F1.131
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p195
I20
sg44
g11
sS'basicLoop.thisRepN'
p196
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p197
I20
sS'basicLoop.thisIndex'
p198
I23
sa(dp199
g16
Nsg18
g100
sg60
S'./basicStim/06F_AN_O.jpg'
p200
sg21
Nsg19
F4.1760000000000002
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p201
I21
sg44
g11
sS'basicLoop.thisRepN'
p202
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p203
I21
sS'basicLoop.thisIndex'
p204
I21
sa(dp205
g16
Nsg18
Nsg60
S'./basicStim/34M_SP_O.jpg'
p206
sg21
F1.9650000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p207
I22
sg44
g11
sS'basicLoop.thisRepN'
p208
I0
sg20
S'SUP'
p209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p210
I22
sS'basicLoop.thisIndex'
p211
I75
sa(dp212
g16
Nsg18
g100
sg60
S'./basicStim/23M_AN_O.jpg'
p213
sg21
Nsg19
F0.97099999999999997
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p214
I23
sg44
g11
sS'basicLoop.thisRepN'
p215
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p216
I23
sS'basicLoop.thisIndex'
p217
I49
sa(dp218
g16
Nsg18
g74
sg60
S'./basicStim/28M_SP_O.jpg'
p219
sg21
Nsg19
F1.478
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p220
I24
sg44
g11
sS'basicLoop.thisRepN'
p221
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p222
I24
sS'basicLoop.thisIndex'
p223
I68
sa(dp224
g16
Nsg18
g74
sg60
S'./basicStim/36M_FE_O.jpg'
p225
sg21
Nsg19
F0.82199999999999995
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p226
I25
sg44
g11
sS'basicLoop.thisRepN'
p227
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p228
I25
sS'basicLoop.thisIndex'
p229
I79
sa(dp230
g16
g133
sg18
Nsg60
S'./basicStim/02F_HA_O.jpg'
p231
sg21
Nsg19
Nsg17
F1.655
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p232
I26
sg44
g11
sS'basicLoop.thisRepN'
p233
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p234
I26
sS'basicLoop.thisIndex'
p235
I10
sa(dp236
g16
Nsg18
Nsg60
S'./basicStim/09F_SP_O.jpg'
p237
sg21
F3.2890000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p238
I27
sg44
g11
sS'basicLoop.thisRepN'
p239
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p240
I27
sS'basicLoop.thisIndex'
p241
I40
sa(dp242
g16
g81
sg18
Nsg60
S'./basicStim/24M_SA_C.jpg'
p243
sg21
Nsg19
Nsg17
F1.865
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p244
I28
sg44
g11
sS'basicLoop.thisRepN'
p245
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p246
I28
sS'basicLoop.thisIndex'
p247
I60
sa(dp248
g16
Nsg18
Nsg60
S'./basicStim/23M_NE_C.jpg'
p249
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.2130000000000001
sg22
g127
sS'basicLoop.thisTrialN'
p250
I29
sg44
g11
sS'basicLoop.thisRepN'
p251
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p252
I29
sS'basicLoop.thisIndex'
p253
I55
sa(dp254
g16
Nsg18
Nsg60
S'./basicStim/28M_AN_O.jpg'
p255
sg21
F2.3639999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p256
I30
sg44
g11
sS'basicLoop.thisRepN'
p257
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p258
I30
sS'basicLoop.thisIndex'
p259
I63
sa(dp260
g16
Nsg18
Nsg60
S'./basicStim/23M_SA_C.jpg'
p261
sg21
F1.6779999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p262
I31
sg44
g11
sS'basicLoop.thisRepN'
p263
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p264
I31
sS'basicLoop.thisIndex'
p265
I53
sa(dp266
g16
Nsg18
g100
sg60
S'./basicStim/36M_AN_O.jpg'
p267
sg21
Nsg19
F1.4610000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p268
I32
sg44
g11
sS'basicLoop.thisRepN'
p269
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p270
I32
sS'basicLoop.thisIndex'
p271
I77
sa(dp272
g16
g133
sg18
Nsg60
S'./basicStim/03F_SP_O.jpg'
p273
sg21
Nsg19
Nsg17
F1.5149999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p274
I33
sg44
g11
sS'basicLoop.thisRepN'
p275
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p276
I33
sS'basicLoop.thisIndex'
p277
I19
sa(dp278
g16
Nsg18
g100
sg60
S'./basicStim/09F_AN_O.jpg'
p279
sg21
Nsg19
F2.0299999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p280
I34
sg44
g11
sS'basicLoop.thisRepN'
p281
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p282
I34
sS'basicLoop.thisIndex'
p283
I35
sa(dp284
g16
Nsg18
Nsg60
S'./basicStim/36M_SP_O.jpg'
p285
sg21
F1.274
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p286
I35
sg44
g11
sS'basicLoop.thisRepN'
p287
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p288
I35
sS'basicLoop.thisIndex'
p289
I82
sa(dp290
g16
Nsg18
g100
sg60
S'./basicStim/03F_AN_O.jpg'
p291
sg21
Nsg19
F0.99099999999999999
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p292
I36
sg44
g11
sS'basicLoop.thisRepN'
p293
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p294
I36
sS'basicLoop.thisIndex'
p295
I14
sa(dp296
g16
Nsg18
Nsg60
S'./basicStim/24M_AN_O.jpg'
p297
sg21
F1.5429999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p298
I37
sg44
g11
sS'basicLoop.thisRepN'
p299
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p300
I37
sS'basicLoop.thisIndex'
p301
I56
sa(dp302
g16
g81
sg18
Nsg60
S'./basicStim/24M_DI_O.jpg'
p303
sg21
Nsg19
Nsg17
F1.2450000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p304
I38
sg44
g11
sS'basicLoop.thisRepN'
p305
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p306
I38
sS'basicLoop.thisIndex'
p307
I57
sa(dp308
g16
g81
sg18
Nsg60
S'./basicStim/21M_SA_C.jpg'
p309
sg21
Nsg19
Nsg17
F2.1659999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p310
I39
sg44
g11
sS'basicLoop.thisRepN'
p311
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p312
I39
sS'basicLoop.thisIndex'
p313
I46
sa(dp314
g16
Nsg18
Nsg60
S'./basicStim/21M_NE_C.jpg'
p315
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.319
sg22
g127
sS'basicLoop.thisTrialN'
p316
I40
sg44
g11
sS'basicLoop.thisRepN'
p317
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p318
I40
sS'basicLoop.thisIndex'
p319
I48
sa(dp320
g16
g133
sg18
Nsg60
S'./basicStim/01F_HA_O.jpg'
p321
sg21
Nsg19
Nsg17
F0.97699999999999998
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p322
I41
sg44
g11
sS'basicLoop.thisRepN'
p323
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p324
I41
sS'basicLoop.thisIndex'
p325
I3
sa(dp326
g16
Nsg18
Nsg60
S'./basicStim/01F_NE_C.jpg'
p327
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F4.4630000000000001
sg22
g127
sS'basicLoop.thisTrialN'
p328
I42
sg44
g11
sS'basicLoop.thisRepN'
p329
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p330
I42
sS'basicLoop.thisIndex'
p331
I6
sa(dp332
g16
Nsg18
g100
sg60
S'./basicStim/21M_AN_O.jpg'
p333
sg21
Nsg19
F2.032
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p334
I43
sg44
g11
sS'basicLoop.thisRepN'
p335
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p336
I43
sS'basicLoop.thisIndex'
p337
I42
sa(dp338
g16
g133
sg18
Nsg60
S'./basicStim/23M_HA_O.jpg'
p339
sg21
Nsg19
Nsg17
F0.66200000000000003
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p340
I44
sg44
g11
sS'basicLoop.thisRepN'
p341
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p342
I44
sS'basicLoop.thisIndex'
p343
I52
sa(dp344
g16
Nsg18
Nsg60
S'./basicStim/02F_FE_O.jpg'
p345
sg21
F2.2549999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p346
I45
sg44
g11
sS'basicLoop.thisRepN'
p347
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p348
I45
sS'basicLoop.thisIndex'
p349
I9
sa(dp350
g16
g133
sg18
Nsg60
S'./basicStim/03F_HA_O.jpg'
p351
sg21
Nsg19
Nsg17
F1.1970000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p352
I46
sg44
g11
sS'basicLoop.thisRepN'
p353
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p354
I46
sS'basicLoop.thisIndex'
p355
I17
sa(dp356
g16
Nsg18
Nsg60
S'./basicStim/09F_DI_O.jpg'
p357
sg21
F1.2110000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p358
I47
sg44
g11
sS'basicLoop.thisRepN'
p359
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p360
I47
sS'basicLoop.thisIndex'
p361
I36
sa(dp362
g16
Nsg18
Nsg60
S'./basicStim/03F_NE_C.jpg'
p363
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.375
sg22
g127
sS'basicLoop.thisTrialN'
p364
I48
sg44
g11
sS'basicLoop.thisRepN'
p365
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p366
I48
sS'basicLoop.thisIndex'
p367
I20
sa(dp368
g16
Nsg18
Nsg60
S'./basicStim/34M_DI_O.jpg'
p369
sg21
F2.0150000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p370
I49
sg44
g11
sS'basicLoop.thisRepN'
p371
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p372
I49
sS'basicLoop.thisIndex'
p373
I71
sa(dp374
g16
g133
sg18
Nsg60
S'./basicStim/34M_HA_O.jpg'
p375
sg21
Nsg19
Nsg17
F1.1459999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p376
I50
sg44
g11
sS'basicLoop.thisRepN'
p377
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p378
I50
sS'basicLoop.thisIndex'
p379
I73
sa(dp380
g16
Nsg18
g100
sg60
S'./basicStim/02F_AN_O.jpg'
p381
sg21
Nsg19
F2.3820000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p382
I51
sg44
g11
sS'basicLoop.thisRepN'
p383
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p384
I51
sS'basicLoop.thisIndex'
p385
I7
sa(dp386
g16
Nsg18
Nsg60
S'./basicStim/07F_DI_O.jpg'
p387
sg21
F1.139
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p388
I52
sg44
g11
sS'basicLoop.thisRepN'
p389
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p390
I52
sS'basicLoop.thisIndex'
p391
I29
sa(dp392
g16
Nsg18
Nsg60
S'./basicStim/02F_SP_O.jpg'
p393
sg21
F0.98199999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p394
I53
sg44
g11
sS'basicLoop.thisRepN'
p395
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p396
I53
sS'basicLoop.thisIndex'
p397
I12
sa(dp398
g16
Nsg18
Nsg60
S'./basicStim/06F_SP_O.jpg'
p399
sg21
F1.0109999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p400
I54
sg44
g11
sS'basicLoop.thisRepN'
p401
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p402
I54
sS'basicLoop.thisIndex'
p403
I26
sa(dp404
g16
Nsg18
Nsg60
S'./basicStim/21M_SP_O.jpg'
p405
sg21
F1.7150000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p406
I55
sg44
g11
sS'basicLoop.thisRepN'
p407
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p408
I55
sS'basicLoop.thisIndex'
p409
I47
sa(dp410
g16
Nsg18
Nsg60
S'./basicStim/24M_NE_C.jpg'
p411
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F4.6340000000000003
sg22
g127
sS'basicLoop.thisTrialN'
p412
I56
sg44
g11
sS'basicLoop.thisRepN'
p413
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p414
I56
sS'basicLoop.thisIndex'
p415
I62
sa(dp416
g16
Nsg18
g74
sg60
S'./basicStim/03F_SA_C.jpg'
p417
sg21
Nsg19
F5.0640000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p418
I57
sg44
g11
sS'basicLoop.thisRepN'
p419
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p420
I57
sS'basicLoop.thisIndex'
p421
I18
sa(dp422
g16
g81
sg18
Nsg60
S'./basicStim/06F_SA_C.jpg'
p423
sg21
Nsg19
Nsg17
F3.1070000000000002
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p424
I58
sg44
g11
sS'basicLoop.thisRepN'
p425
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p426
I58
sS'basicLoop.thisIndex'
p427
I25
sa(dp428
g16
Nsg18
Nsg60
S'./basicStim/34M_NE_C.jpg'
p429
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.3650000000000002
sg22
g127
sS'basicLoop.thisTrialN'
p430
I59
sg44
g11
sS'basicLoop.thisRepN'
p431
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p432
I59
sS'basicLoop.thisIndex'
p433
I76
sa(dp434
g16
Nsg18
g74
sg60
S'./basicStim/03F_FE_O.jpg'
p435
sg21
Nsg19
F2.0350000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p436
I60
sg44
g11
sS'basicLoop.thisRepN'
p437
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p438
I60
sS'basicLoop.thisIndex'
p439
I16
sa(dp440
g16
Nsg18
g100
sg60
S'./basicStim/34M_AN_O.jpg'
p441
sg21
Nsg19
F1.4330000000000001
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p442
I61
sg44
g11
sS'basicLoop.thisRepN'
p443
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p444
I61
sS'basicLoop.thisIndex'
p445
I70
sa(dp446
g16
g133
sg18
Nsg60
S'./basicStim/36M_HA_O.jpg'
p447
sg21
Nsg19
Nsg17
F1.8500000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p448
I62
sg44
g11
sS'basicLoop.thisRepN'
p449
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p450
I62
sS'basicLoop.thisIndex'
p451
I80
sa(dp452
g16
g81
sg18
Nsg60
S'./basicStim/36M_SA_C.jpg'
p453
sg21
Nsg19
Nsg17
F1.5620000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p454
I63
sg44
g11
sS'basicLoop.thisRepN'
p455
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p456
I63
sS'basicLoop.thisIndex'
p457
I81
sa(dp458
g16
Nsg18
g74
sg60
S'./basicStim/34M_FE_O.jpg'
p459
sg21
Nsg19
F4.2439999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p460
I64
sg44
g11
sS'basicLoop.thisRepN'
p461
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p462
I64
sS'basicLoop.thisIndex'
p463
I72
sa(dp464
g16
g81
sg18
Nsg60
S'./basicStim/02F_SA_C.jpg'
p465
sg21
Nsg19
Nsg17
F2.0510000000000002
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p466
I65
sg44
g11
sS'basicLoop.thisRepN'
p467
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p468
I65
sS'basicLoop.thisIndex'
p469
I11
sa(dp470
g16
Nsg18
Nsg60
S'./basicStim/06F_DI_O.jpg'
p471
sg21
F1.7669999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p472
I66
sg44
g11
sS'basicLoop.thisRepN'
p473
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p474
I66
sS'basicLoop.thisIndex'
p475
I22
sa(dp476
g16
g133
sg18
Nsg60
S'./basicStim/09F_HA_O.jpg'
p477
sg21
Nsg19
Nsg17
F1.1930000000000001
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p478
I67
sg44
g11
sS'basicLoop.thisRepN'
p479
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p480
I67
sS'basicLoop.thisIndex'
p481
I38
sa(dp482
g16
Nsg18
Nsg60
S'./basicStim/24M_SP_O.jpg'
p483
sg21
F2.5619999999999998
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p484
I68
sg44
g11
sS'basicLoop.thisRepN'
p485
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p486
I68
sS'basicLoop.thisIndex'
p487
I61
sa(dp488
g16
Nsg18
g74
sg60
S'./basicStim/07F_HA_O.jpg'
p489
sg21
Nsg19
F1.163
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p490
I69
sg44
g11
sS'basicLoop.thisRepN'
p491
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p492
I69
sS'basicLoop.thisIndex'
p493
I31
sa(dp494
g16
g81
sg18
Nsg60
S'./basicStim/07F_SA_C.jpg'
p495
sg21
Nsg19
Nsg17
F1.1459999999999999
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p496
I70
sg44
g11
sS'basicLoop.thisRepN'
p497
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p498
I70
sS'basicLoop.thisIndex'
p499
I32
sa(dp500
g16
Nsg18
Nsg60
S'./basicStim/03F_DI_O.jpg'
p501
sg21
F3.5899999999999999
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p502
I71
sg44
g11
sS'basicLoop.thisRepN'
p503
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p504
I71
sS'basicLoop.thisIndex'
p505
I15
sa(dp506
g16
Nsg18
Nsg60
S'./basicStim/02F_NE_C.jpg'
p507
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F2.2829999999999999
sg22
g127
sS'basicLoop.thisTrialN'
p508
I72
sg44
g11
sS'basicLoop.thisRepN'
p509
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p510
I72
sS'basicLoop.thisIndex'
p511
I13
sa(dp512
g16
Nsg18
Nsg60
S'./basicStim/07F_SP_O.jpg'
p513
sg21
F2.117
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p514
I73
sg44
g11
sS'basicLoop.thisRepN'
p515
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p516
I73
sS'basicLoop.thisIndex'
p517
I33
sa(dp518
g16
Nsg18
Nsg60
S'./basicStim/01F_SP_O.jpg'
p519
sg21
F1.0960000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p520
I74
sg44
g11
sS'basicLoop.thisRepN'
p521
I0
sg20
g209
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p522
I74
sS'basicLoop.thisIndex'
p523
I5
sa(dp524
g16
Nsg18
Nsg60
S'./basicStim/06F_NE_C.jpg'
p525
sg21
Nsg19
Nsg17
Nsg45
g46
sg47
g51
sg23
F1.978
sg22
g127
sS'basicLoop.thisTrialN'
p526
I75
sg44
g11
sS'basicLoop.thisRepN'
p527
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p528
I75
sS'basicLoop.thisIndex'
p529
I27
sa(dp530
g16
Nsg18
g74
sg60
S'./basicStim/07F_NE_C.jpg'
p531
sg21
Nsg19
F3.1720000000000002
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p532
I76
sg44
g11
sS'basicLoop.thisRepN'
p533
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p534
I76
sS'basicLoop.thisIndex'
p535
I34
sa(dp536
g16
g81
sg18
Nsg60
S'./basicStim/23M_DI_O.jpg'
p537
sg21
Nsg19
Nsg17
F1.514
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p538
I77
sg44
g11
sS'basicLoop.thisRepN'
p539
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p540
I77
sS'basicLoop.thisIndex'
p541
I50
sa(dp542
g16
g133
sg18
Nsg60
S'./basicStim/21M_HA_O.jpg'
p543
sg21
Nsg19
Nsg17
F0.72699999999999998
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p544
I78
sg44
g11
sS'basicLoop.thisRepN'
p545
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p546
I78
sS'basicLoop.thisIndex'
p547
I45
sa(dp548
g16
Nsg18
g74
sg60
S'./basicStim/24M_FE_O.jpg'
p549
sg21
Nsg19
F2.988
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p550
I79
sg44
g11
sS'basicLoop.thisRepN'
p551
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p552
I79
sS'basicLoop.thisIndex'
p553
I58
sa(dp554
g16
Nsg18
Nsg60
S'./basicStim/28M_DI_O.jpg'
p555
sg21
F2.0990000000000002
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p556
I80
sg44
g11
sS'basicLoop.thisRepN'
p557
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p558
I80
sS'basicLoop.thisIndex'
p559
I64
sa(dp560
g16
Nsg18
g74
sg60
S'./basicStim/21M_FE_O.jpg'
p561
sg21
Nsg19
F2.2839999999999998
sg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p562
I81
sg44
g11
sS'basicLoop.thisRepN'
p563
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p564
I81
sS'basicLoop.thisIndex'
p565
I44
sa(dp566
g16
g133
sg18
Nsg60
S'./basicStim/24M_HA_O.jpg'
p567
sg21
Nsg19
Nsg17
F1.028
sg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p568
I82
sg44
g11
sS'basicLoop.thisRepN'
p569
I0
sg20
Nsg41
g42
sg43
VG
sS'basicLoop.thisN'
p570
I82
sS'basicLoop.thisIndex'
p571
I59
sa(dp572
g16
Nsg18
Nsg60
S'./basicStim/07F_FE_O.jpg'
p573
sg21
F3.7330000000000001
sg19
Nsg17
Nsg45
g46
sg47
g51
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p574
I83
sg44
g11
sS'basicLoop.thisRepN'
p575
I0
sg20
g70
sg41
g42
sg43
VG
sS'basicLoop.thisN'
p576
I83
sS'basicLoop.thisIndex'
p577
I30
sa(dp578
g44
g11
sg43
VG
sg41
g42
sg24
S'return'
p579
sg45
g46
sg47
g51
sg25
F18.001030206680298
sa(dp580
g15
F9.9212520122528076
sg44
g11
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg14
S'return'
p581
sa(dp582
g44
g11
sg43
VG
sg41
g42
sg24
S'return'
p583
sg45
g46
sg47
g51
sg25
F4.8430778980255127
sa(dp584
g41
g42
sg44
g11
sg27
F1.3910090923309326
sg26
S'return'
p585
sg43
VG
sg45
g46
sg47
g51
sa(dp586
g31
I0
sg44
g11
sg43
VG
sS'img'
p587
S'./stim/MorphM5_05_orig.jpg'
p588
sS'trials.thisIndex'
p589
g48
(g49
(S'i8'
I0
I1
tRp590
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp591
sS'trials.thisRepN'
p592
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp593
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp594
sg30
I0
sg61
g48
(g590
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp595
sS'trials.thisTrialN'
p596
I0
sg32
I1
sg41
g42
sg45
g46
sg33
F11.786551952362061
sS'trials.thisN'
p597
I0
sa(dp598
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_03_orig.jpg'
p599
sS'trials.thisIndex'
p600
g48
(g590
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp601
sS'trials.thisRepN'
p602
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp603
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdd#\xc0'
tRp604
sg30
I1
sg61
g48
(g590
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp605
sS'trials.thisTrialN'
p606
I1
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9914219379425049
sS'trials.thisN'
p607
I1
sa(dp608
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_10_orig.jpg'
p609
sS'trials.thisIndex'
p610
g48
(g590
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp611
sS'trials.thisRepN'
p612
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp613
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfa$\xc0'
tRp614
sg30
I0
sg61
g48
(g590
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp615
sS'trials.thisTrialN'
p616
I2
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1382839679718018
sS'trials.thisN'
p617
I2
sa(dp618
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_05_orig.jpg'
p619
sS'trials.thisIndex'
p620
g48
(g590
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp621
sS'trials.thisRepN'
p622
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp623
sg29
g48
(g50
S"\x00\x00\x00\x00\x00a'\xc0"
tRp624
sg30
I1
sg61
g48
(g590
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp625
sS'trials.thisTrialN'
p626
I3
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9202578067779541
sS'trials.thisN'
p627
I3
sa(dp628
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_08_orig.jpg'
p629
sS'trials.thisIndex'
p630
g48
(g590
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp631
sS'trials.thisRepN'
p632
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\xff\xbf'
tRp633
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x7f'\xc0"
tRp634
sg30
I0
sg61
g48
(g590
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp635
sS'trials.thisTrialN'
p636
I4
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1381821632385254
sS'trials.thisN'
p637
I4
sa(dp638
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_01_orig.jpg'
p639
sS'trials.thisIndex'
p640
g48
(g590
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp641
sS'trials.thisRepN'
p642
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp643
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B(\xc0'
tRp644
sg30
I1
sg61
g48
(g590
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp645
sS'trials.thisTrialN'
p646
I5
sg32
I0
sg41
g42
sg45
g46
sg33
F11.596752166748047
sS'trials.thisN'
p647
I5
sa(dp648
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_09_orig.jpg'
p649
sS'trials.thisIndex'
p650
g48
(g590
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp651
sS'trials.thisRepN'
p652
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp653
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\xca'\xc0"
tRp654
sg30
I0
sg61
g48
(g590
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp655
sS'trials.thisTrialN'
p656
I6
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1248540878295898
sS'trials.thisN'
p657
I6
sa(dp658
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_02_orig.jpg'
p659
sS'trials.thisIndex'
p660
g48
(g590
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp661
sS'trials.thisRepN'
p662
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00x\xfe\xbf'
tRp663
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x05)\xc0'
tRp664
sg30
I1
sg61
g48
(g590
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp665
sS'trials.thisTrialN'
p666
I7
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7971351146697998
sS'trials.thisN'
p667
I7
sa(dp668
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_08_orig.jpg'
p669
sS'trials.thisIndex'
p670
g48
(g590
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp671
sS'trials.thisRepN'
p672
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x88\xfd\xbf'
tRp673
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9c(\xc0'
tRp674
sg30
I0
sg61
g48
(g590
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp675
sS'trials.thisTrialN'
p676
I8
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0208809375762939
sS'trials.thisN'
p677
I8
sa(dp678
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_07_orig.jpg'
p679
sS'trials.thisIndex'
p680
g48
(g590
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp681
sS'trials.thisRepN'
p682
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\xff\xbf'
tRp683
sg29
g48
(g50
S'\x00\x00\x00\x00\x00#)\xc0'
tRp684
sg30
I1
sg61
g48
(g590
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp685
sS'trials.thisTrialN'
p686
I9
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7082870006561279
sS'trials.thisN'
p687
I9
sa(dp688
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_03_orig.jpg'
p689
sS'trials.thisIndex'
p690
g48
(g590
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp691
sS'trials.thisRepN'
p692
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp693
sg29
g48
(g50
S'\x00\x00\x00\x00\x002)\xc0'
tRp694
sg30
I1
sg61
g48
(g590
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp695
sS'trials.thisTrialN'
p696
I10
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3051700592041016
sS'trials.thisN'
p697
I10
sa(dp698
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_07_orig.jpg'
p699
sS'trials.thisIndex'
p700
g48
(g590
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp701
sS'trials.thisRepN'
p702
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp703
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp704
sg30
I0
sg61
g48
(g590
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp705
sS'trials.thisTrialN'
p706
I11
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8426699638366699
sS'trials.thisN'
p707
I11
sa(dp708
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_05_orig.jpg'
p709
sS'trials.thisIndex'
p710
g48
(g590
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp711
sS'trials.thisRepN'
p712
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp713
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp714
sg30
I1
sg61
g48
(g590
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp715
sS'trials.thisTrialN'
p716
I12
sg32
I0
sg41
g42
sg45
g46
sg33
F3.8198380470275879
sS'trials.thisN'
p717
I12
sa(dp718
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_06_orig.jpg'
p719
sS'trials.thisIndex'
p720
g48
(g590
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp721
sS'trials.thisRepN'
p722
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp723
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9b)\xc0'
tRp724
sg30
I1
sg61
g48
(g590
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp725
sS'trials.thisTrialN'
p726
I13
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7402358055114746
sS'trials.thisN'
p727
I13
sa(dp728
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_10_orig.jpg'
p729
sS'trials.thisIndex'
p730
g48
(g590
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp731
sS'trials.thisRepN'
p732
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x02\xc0'
tRp733
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x13*\xc0'
tRp734
sg30
I0
sg61
g48
(g590
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp735
sS'trials.thisTrialN'
p736
I14
sg32
I1
sg41
g42
sg45
g46
sg33
F1.925839900970459
sS'trials.thisN'
p737
I14
sa(dp738
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_07_orig.jpg'
p739
sS'trials.thisIndex'
p740
g48
(g590
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp741
sS'trials.thisRepN'
p742
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe6\x19\xc0'
tRp743
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp744
sg30
I1
sg61
g48
(g590
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp745
sS'trials.thisTrialN'
p746
I15
sg32
I0
sg41
g42
sg45
g46
sg33
F3.853593111038208
sS'trials.thisN'
p747
I15
sa(dp748
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_05_orig.jpg'
p749
sS'trials.thisIndex'
p750
g48
(g590
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp751
sS'trials.thisRepN'
p752
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\x12\xc0'
tRp753
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf6(\xc0'
tRp754
sg30
I1
sg61
g48
(g590
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp755
sS'trials.thisTrialN'
p756
I16
sg32
I0
sg41
g42
sg45
g46
sg33
F8.5612020492553711
sS'trials.thisN'
p757
I16
sa(dp758
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_07_orig.jpg'
p759
sS'trials.thisIndex'
p760
g48
(g590
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp761
sS'trials.thisRepN'
p762
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp763
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9c(\xc0'
tRp764
sg30
I0
sg61
g48
(g590
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp765
sS'trials.thisTrialN'
p766
I17
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2871720790863037
sS'trials.thisN'
p767
I17
sa(dp768
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_03_orig.jpg'
p769
sS'trials.thisIndex'
p770
g48
(g590
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp771
sS'trials.thisRepN'
p772
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00B\x18\xc0'
tRp773
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp774
sg30
I1
sg61
g48
(g590
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp775
sS'trials.thisTrialN'
p776
I18
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7132229804992676
sS'trials.thisN'
p777
I18
sa(dp778
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_02_orig.jpg'
p779
sS'trials.thisIndex'
p780
g48
(g590
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp781
sS'trials.thisRepN'
p782
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00~\x18\xc0'
tRp783
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp784
sg30
I1
sg61
g48
(g590
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp785
sS'trials.thisTrialN'
p786
I19
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3453519344329834
sS'trials.thisN'
p787
I19
sa(dp788
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_04_orig.jpg'
p789
sS'trials.thisIndex'
p790
g48
(g590
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp791
sS'trials.thisRepN'
p792
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00$\x18\xc0'
tRp793
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp794
sg30
I1
sg61
g48
(g590
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp795
sS'trials.thisTrialN'
p796
I20
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5069661140441895
sS'trials.thisN'
p797
I20
sa(dp798
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_03_orig.jpg'
p799
sS'trials.thisIndex'
p800
g48
(g590
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp801
sS'trials.thisRepN'
p802
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x18\xc0'
tRp803
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp804
sg30
I0
sg61
g48
(g590
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp805
sS'trials.thisTrialN'
p806
I21
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0882580280303955
sS'trials.thisN'
p807
I21
sa(dp808
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_06_orig.jpg'
p809
sS'trials.thisIndex'
p810
g48
(g590
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp811
sS'trials.thisRepN'
p812
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp813
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp814
sg30
I1
sg61
g48
(g590
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp815
sS'trials.thisTrialN'
p816
I22
sg32
I0
sg41
g42
sg45
g46
sg33
F7.8585519790649414
sS'trials.thisN'
p817
I22
sa(dp818
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_04_orig.jpg'
p819
sS'trials.thisIndex'
p820
g48
(g590
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp821
sS'trials.thisRepN'
p822
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\x19\xc0'
tRp823
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1e\x1e\xc0'
tRp824
sg30
I1
sg61
g48
(g590
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp825
sS'trials.thisTrialN'
p826
I23
sg32
I0
sg41
g42
sg45
g46
sg33
F1.172119140625
sS'trials.thisN'
p827
I23
sa(dp828
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_04_orig.jpg'
p829
sS'trials.thisIndex'
p830
g48
(g590
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp831
sS'trials.thisRepN'
p832
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe6\x19\xc0'
tRp833
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x88\x1d\xc0'
tRp834
sg30
I0
sg61
g48
(g590
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp835
sS'trials.thisTrialN'
p836
I24
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7072079181671143
sS'trials.thisN'
p837
I24
sa(dp838
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_01_orig.jpg'
p839
sS'trials.thisIndex'
p840
g48
(g590
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp841
sS'trials.thisRepN'
p842
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00N\x1b\xc0'
tRp843
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb6\x1c\xc0'
tRp844
sg30
I1
sg61
g48
(g590
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp845
sS'trials.thisTrialN'
p846
I25
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1554498672485352
sS'trials.thisN'
p847
I25
sa(dp848
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_02_orig.jpg'
p849
sS'trials.thisIndex'
p850
g48
(g590
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp851
sS'trials.thisRepN'
p852
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp853
sg29
g48
(g50
S'\x00\x00\x00\x00\x00z\x1c\xc0'
tRp854
sg30
I1
sg61
g48
(g590
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp855
sS'trials.thisTrialN'
p856
I26
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95395207405090332
sS'trials.thisN'
p857
I26
sa(dp858
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_09_orig.jpg'
p859
sS'trials.thisIndex'
p860
g48
(g590
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp861
sS'trials.thisRepN'
p862
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\x1a\xc0'
tRp863
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x1b\xc0'
tRp864
sg30
I0
sg61
g48
(g590
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp865
sS'trials.thisTrialN'
p866
I27
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98747706413269043
sS'trials.thisN'
p867
I27
sa(dp868
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_08_orig.jpg'
p869
sS'trials.thisIndex'
p870
g48
(g590
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp871
sS'trials.thisRepN'
p872
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9c\x18\xc0'
tRp873
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc6\x1b\xc0'
tRp874
sg30
I0
sg61
g48
(g590
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp875
sS'trials.thisTrialN'
p876
I28
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0714371204376221
sS'trials.thisN'
p877
I28
sa(dp878
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_04_orig.jpg'
p879
sS'trials.thisIndex'
p880
g48
(g590
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp881
sS'trials.thisRepN'
p882
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp883
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf6\x18\xc0'
tRp884
sg30
I1
sg61
g48
(g590
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp885
sS'trials.thisTrialN'
p886
I29
sg32
I0
sg41
g42
sg45
g46
sg33
F4.0543348789215088
sS'trials.thisN'
p887
I29
sa(dp888
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_06_orig.jpg'
p889
sS'trials.thisIndex'
p890
g48
(g590
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp891
sS'trials.thisRepN'
p892
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00~\x18\xc0'
tRp893
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B\x18\xc0'
tRp894
sg30
I0
sg61
g48
(g590
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp895
sS'trials.thisTrialN'
p896
I30
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3399560451507568
sS'trials.thisN'
p897
I30
sa(dp898
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_09_orig.jpg'
p899
sS'trials.thisIndex'
p900
g48
(g590
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp901
sS'trials.thisRepN'
p902
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x16\xc0'
tRp903
sg29
g48
(g50
S'\x00\x00\x00\x00\x00$\x18\xc0'
tRp904
sg30
I0
sg61
g48
(g590
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp905
sS'trials.thisTrialN'
p906
I31
sg32
I1
sg41
g42
sg45
g46
sg33
F6.8696608543395996
sS'trials.thisN'
p907
I31
sa(dp908
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_09_orig.jpg'
p909
sS'trials.thisIndex'
p910
g48
(g590
S' \x00\x00\x00\x00\x00\x00\x00'
tRp911
sS'trials.thisRepN'
p912
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x16\x17\xc0'
tRp913
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe6\x19\xc0'
tRp914
sg30
I0
sg61
g48
(g590
S' \x00\x00\x00\x00\x00\x00\x00'
tRp915
sS'trials.thisTrialN'
p916
I32
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5912210941314697
sS'trials.thisN'
p917
I32
sa(dp918
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_00_orig.jpg'
p919
sS'trials.thisIndex'
p920
g48
(g590
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp921
sS'trials.thisRepN'
p922
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x16\xc0'
tRp923
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c\x19\xc0'
tRp924
sg30
I1
sg61
g48
(g590
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp925
sS'trials.thisTrialN'
p926
I33
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3729159832000732
sS'trials.thisN'
p927
I33
sa(dp928
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_09_orig.jpg'
p929
sS'trials.thisIndex'
p930
g48
(g590
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp931
sS'trials.thisRepN'
p932
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x16\xc0'
tRp933
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8c\x19\xc0'
tRp934
sg30
I0
sg61
g48
(g590
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp935
sS'trials.thisTrialN'
p936
I34
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4063210487365723
sS'trials.thisN'
p937
I34
sa(dp938
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_07_orig.jpg'
p939
sS'trials.thisIndex'
p940
g48
(g590
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp941
sS'trials.thisRepN'
p942
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x15\xc0'
tRp943
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14\x19\xc0'
tRp944
sg30
I0
sg61
g48
(g590
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp945
sS'trials.thisTrialN'
p946
I35
sg32
I1
sg41
g42
sg45
g46
sg33
F1.976585865020752
sS'trials.thisN'
p947
I35
sa(dp948
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_01_orig.jpg'
p949
sS'trials.thisIndex'
p950
g48
(g590
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp951
sS'trials.thisRepN'
p952
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x15\xc0'
tRp953
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"\x1a\xc0'
tRp954
sg30
I1
sg61
g48
(g590
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp955
sS'trials.thisTrialN'
p956
I36
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3561019897460938
sS'trials.thisN'
p957
I36
sa(dp958
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_00_orig.jpg'
p959
sS'trials.thisIndex'
p960
g48
(g590
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp961
sS'trials.thisRepN'
p962
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00d\x14\xc0'
tRp963
sg29
g48
(g50
S'\x00\x00\x00\x00\x00n\x19\xc0'
tRp964
sg30
I1
sg61
g48
(g590
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp965
sS'trials.thisTrialN'
p966
I37
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95256304740905762
sS'trials.thisN'
p967
I37
sa(dp968
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_10_orig.jpg'
p969
sS'trials.thisIndex'
p970
g48
(g590
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp971
sS'trials.thisRepN'
p972
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\n\x14\xc0'
tRp973
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\x18\xc0'
tRp974
sg30
I0
sg61
g48
(g590
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp975
sS'trials.thisTrialN'
p976
I38
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8581860065460205
sS'trials.thisN'
p977
I38
sa(dp978
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_01_orig.jpg'
p979
sS'trials.thisIndex'
p980
g48
(g590
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp981
sS'trials.thisRepN'
p982
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00V\x13\xc0'
tRp983
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xda\x16\xc0'
tRp984
sg30
I1
sg61
g48
(g590
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp985
sS'trials.thisTrialN'
p986
I39
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0382540225982666
sS'trials.thisN'
p987
I39
sa(dp988
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_06_orig.jpg'
p989
sS'trials.thisIndex'
p990
g48
(g590
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp991
sS'trials.thisRepN'
p992
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\x12\xc0'
tRp993
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x16\x17\xc0'
tRp994
sg30
I1
sg61
g48
(g590
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp995
sS'trials.thisTrialN'
p996
I40
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1887829303741455
sS'trials.thisN'
p997
I40
sa(dp998
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_04_orig.jpg'
p999
sS'trials.thisIndex'
p1000
g48
(g590
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1001
sS'trials.thisRepN'
p1002
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\x12\xc0'
tRp1003
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x16\xc0'
tRp1004
sg30
I1
sg61
g48
(g590
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1005
sS'trials.thisTrialN'
p1006
I41
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7642009258270264
sS'trials.thisN'
p1007
I41
sa(dp1008
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_06_orig.jpg'
p1009
sS'trials.thisIndex'
p1010
g48
(g590
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1011
sS'trials.thisRepN'
p1012
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x12\xc0'
tRp1013
sg29
g48
(g50
S'\x00\x00\x00\x00\x004\x17\xc0'
tRp1014
sg30
I0
sg61
g48
(g590
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1015
sS'trials.thisTrialN'
p1016
I42
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5067851543426514
sS'trials.thisN'
p1017
I42
sa(dp1018
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_08_orig.jpg'
p1019
sS'trials.thisIndex'
p1020
g48
(g590
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1021
sS'trials.thisRepN'
p1022
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00v\x11\xc0'
tRp1023
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x16\x17\xc0'
tRp1024
sg30
I0
sg61
g48
(g590
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1025
sS'trials.thisTrialN'
p1026
I43
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8646039962768555
sS'trials.thisN'
p1027
I43
sa(dp1028
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_09_orig.jpg'
p1029
sS'trials.thisIndex'
p1030
g48
(g590
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1031
sS'trials.thisRepN'
p1032
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x10\xc0'
tRp1033
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x16\xc0'
tRp1034
sg30
I0
sg61
g48
(g590
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1035
sS'trials.thisTrialN'
p1036
I44
sg32
I1
sg41
g42
sg45
g46
sg33
F2.007641077041626
sS'trials.thisN'
p1037
I44
sa(dp1038
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_02_orig.jpg'
p1039
sS'trials.thisIndex'
p1040
g48
(g590
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1041
sS'trials.thisRepN'
p1042
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc4\r\xc0'
tRp1043
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x15\xc0'
tRp1044
sg30
I1
sg61
g48
(g590
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1045
sS'trials.thisTrialN'
p1046
I45
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0371320247650146
sS'trials.thisN'
p1047
I45
sa(dp1048
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_10_orig.jpg'
p1049
sS'trials.thisIndex'
p1050
g48
(g590
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1051
sS'trials.thisRepN'
p1052
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0e\x10\xc0'
tRp1053
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xee\x11\xc0'
tRp1054
sg30
I0
sg61
g48
(g590
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1055
sS'trials.thisTrialN'
p1056
I46
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3733329772949219
sS'trials.thisN'
p1057
I46
sa(dp1058
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_02_orig.jpg'
p1059
sS'trials.thisIndex'
p1060
g48
(g590
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1061
sS'trials.thisRepN'
p1062
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xee\x11\xc0'
tRp1063
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xde\x12\xc0'
tRp1064
sg30
I1
sg61
g48
(g590
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1065
sS'trials.thisTrialN'
p1066
I47
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5571680068969727
sS'trials.thisN'
p1067
I47
sa(dp1068
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_06_orig.jpg'
p1069
sS'trials.thisIndex'
p1070
g48
(g590
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1071
sS'trials.thisRepN'
p1072
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00V\x13\xc0'
tRp1073
sg29
g48
(g50
S'\x00\x00\x00\x00\x00H\x12\xc0'
tRp1074
sg30
I1
sg61
g48
(g590
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1075
sS'trials.thisTrialN'
p1076
I48
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0314509868621826
sS'trials.thisN'
p1077
I48
sa(dp1078
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_09_orig.jpg'
p1079
sS'trials.thisIndex'
p1080
g48
(g590
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1081
sS'trials.thisRepN'
p1082
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00F\x14\xc0'
tRp1083
sg29
g48
(g50
S'\x00\x00\x00\x00\x00(\x14\xc0'
tRp1084
sg30
I0
sg61
g48
(g590
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1085
sS'trials.thisTrialN'
p1086
I49
sg32
I1
sg41
g42
sg45
g46
sg33
F3.2164890766143799
sS'trials.thisN'
p1087
I49
sa(dp1088
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_08_orig.jpg'
p1089
sS'trials.thisIndex'
p1090
g48
(g590
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1091
sS'trials.thisRepN'
p1092
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00f\x12\xc0'
tRp1093
sg29
g48
(g50
S'\x00\x00\x00\x00\x00b\x16\xc0'
tRp1094
sg30
I0
sg61
g48
(g590
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1095
sS'trials.thisTrialN'
p1096
I50
sg32
I1
sg41
g42
sg45
g46
sg33
F3.6689660549163818
sS'trials.thisN'
p1097
I50
sa(dp1098
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_05_orig.jpg'
p1099
sS'trials.thisIndex'
p1100
g48
(g590
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1101
sS'trials.thisRepN'
p1102
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd0\x11\xc0'
tRp1103
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xda\x16\xc0'
tRp1104
sg30
I1
sg61
g48
(g590
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1105
sS'trials.thisTrialN'
p1106
I51
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98736310005187988
sS'trials.thisN'
p1107
I51
sa(dp1108
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_09_orig.jpg'
p1109
sS'trials.thisIndex'
p1110
g48
(g590
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1111
sS'trials.thisRepN'
p1112
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00*\x12\xc0'
tRp1113
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e\x16\xc0'
tRp1114
sg30
I0
sg61
g48
(g590
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1115
sS'trials.thisTrialN'
p1116
I52
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1546831130981445
sS'trials.thisN'
p1117
I52
sa(dp1118
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_10_orig.jpg'
p1119
sS'trials.thisIndex'
p1120
g48
(g590
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1121
sS'trials.thisRepN'
p1122
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x12\xc0'
tRp1123
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x16\xc0'
tRp1124
sg30
I0
sg61
g48
(g590
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1125
sS'trials.thisTrialN'
p1126
I53
sg32
I1
sg41
g42
sg45
g46
sg33
F2.580348014831543
sS'trials.thisN'
p1127
I53
sa(dp1128
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_00_orig.jpg'
p1129
sS'trials.thisIndex'
p1130
g48
(g590
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1131
sS'trials.thisRepN'
p1132
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00f\x12\xc0'
tRp1133
sg29
g48
(g50
S'\x00\x00\x00\x00\x00R\x17\xc0'
tRp1134
sg30
I1
sg61
g48
(g590
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1135
sS'trials.thisTrialN'
p1136
I54
sg32
I0
sg41
g42
sg45
g46
sg33
F0.91887307167053223
sS'trials.thisN'
p1137
I54
sa(dp1138
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_06_orig.jpg'
p1139
sS'trials.thisIndex'
p1140
g48
(g590
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1141
sS'trials.thisRepN'
p1142
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11\xc0'
tRp1143
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\x17\xc0'
tRp1144
sg30
I1
sg61
g48
(g590
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1145
sS'trials.thisTrialN'
p1146
I55
sg32
I0
sg41
g42
sg45
g46
sg33
F2.461918830871582
sS'trials.thisN'
p1147
I55
sa(dp1148
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_02_orig.jpg'
p1149
sS'trials.thisIndex'
p1150
g48
(g590
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1151
sS'trials.thisRepN'
p1152
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfe\x10\xc0'
tRp1153
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B\x18\xc0'
tRp1154
sg30
I1
sg61
g48
(g590
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1155
sS'trials.thisTrialN'
p1156
I56
sg32
I0
sg41
g42
sg45
g46
sg33
F4.9597737789154053
sS'trials.thisN'
p1157
I56
sa(dp1158
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_09_orig.jpg'
p1159
sS'trials.thisIndex'
p1160
g48
(g590
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1161
sS'trials.thisRepN'
p1162
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10\xc0'
tRp1163
sg29
g48
(g50
S'\x00\x00\x00\x00\x00~\x18\xc0'
tRp1164
sg30
I0
sg61
g48
(g590
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1165
sS'trials.thisTrialN'
p1166
I57
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4903860092163086
sS'trials.thisN'
p1167
I57
sa(dp1168
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_03_orig.jpg'
p1169
sS'trials.thisIndex'
p1170
g48
(g590
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1171
sS'trials.thisRepN'
p1172
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\x10\xc0'
tRp1173
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xac\x17\xc0'
tRp1174
sg30
I1
sg61
g48
(g590
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1175
sS'trials.thisTrialN'
p1176
I58
sg32
I0
sg41
g42
sg45
g46
sg33
F4.7750608921051025
sS'trials.thisN'
p1177
I58
sa(dp1178
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_02_orig.jpg'
p1179
sS'trials.thisIndex'
p1180
g48
(g590
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1181
sS'trials.thisRepN'
p1182
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x10\xc0'
tRp1183
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xac\x17\xc0'
tRp1184
sg30
I1
sg61
g48
(g590
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1185
sS'trials.thisTrialN'
p1186
I59
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2219469547271729
sS'trials.thisN'
p1187
I59
sa(dp1188
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_10_orig.jpg'
p1189
sS'trials.thisIndex'
p1190
g48
(g590
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1191
sS'trials.thisRepN'
p1192
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10\xc0'
tRp1193
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x06\x18\xc0'
tRp1194
sg30
I0
sg61
g48
(g590
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1195
sS'trials.thisTrialN'
p1196
I60
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3451619148254395
sS'trials.thisN'
p1197
I60
sa(dp1198
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_03_orig.jpg'
p1199
sS'trials.thisIndex'
p1200
g48
(g590
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1201
sS'trials.thisRepN'
p1202
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00*\x12\xc0'
tRp1203
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B\x18\xc0'
tRp1204
sg30
I1
sg61
g48
(g590
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1205
sS'trials.thisTrialN'
p1206
I61
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2217650413513184
sS'trials.thisN'
p1207
I61
sa(dp1208
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_03_orig.jpg'
p1209
sS'trials.thisIndex'
p1210
g48
(g590
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1211
sS'trials.thisRepN'
p1212
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11\xc0'
tRp1213
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xda\x16\xc0'
tRp1214
sg30
I1
sg61
g48
(g590
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1215
sS'trials.thisTrialN'
p1216
I62
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8244738578796387
sS'trials.thisN'
p1217
I62
sa(dp1218
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_02_orig.jpg'
p1219
sS'trials.thisIndex'
p1220
g48
(g590
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1221
sS'trials.thisRepN'
p1222
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\x10\xc0'
tRp1223
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae\x15\xc0'
tRp1224
sg30
I0
sg61
g48
(g590
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1225
sS'trials.thisTrialN'
p1226
I63
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5908350944519043
sS'trials.thisN'
p1227
I63
sa(dp1228
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_07_orig.jpg'
p1229
sS'trials.thisIndex'
p1230
g48
(g590
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1231
sS'trials.thisRepN'
p1232
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfe\x10\xc0'
tRp1233
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xea\x15\xc0'
tRp1234
sg30
I0
sg61
g48
(g590
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1235
sS'trials.thisTrialN'
p1236
I64
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5966939926147461
sS'trials.thisN'
p1237
I64
sa(dp1238
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_10_orig.jpg'
p1239
sS'trials.thisIndex'
p1240
g48
(g590
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1241
sS'trials.thisRepN'
p1242
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c\xc0'
tRp1243
sg29
g48
(g50
S'\x00\x00\x00\x00\x00&\x16\xc0'
tRp1244
sg30
I0
sg61
g48
(g590
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1245
sS'trials.thisTrialN'
p1246
I65
sg32
I1
sg41
g42
sg45
g46
sg33
F2.7456958293914795
sS'trials.thisN'
p1247
I65
sa(dp1248
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_10_orig.jpg'
p1249
sS'trials.thisIndex'
p1250
g48
(g590
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1251
sS'trials.thisRepN'
p1252
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\x0b\xc0'
tRp1253
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8e\x17\xc0'
tRp1254
sg30
I0
sg61
g48
(g590
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1255
sS'trials.thisTrialN'
p1256
I66
sg32
I1
sg41
g42
sg45
g46
sg33
F5.9463520050048828
sS'trials.thisN'
p1257
I66
sa(dp1258
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_05_orig.jpg'
p1259
sS'trials.thisIndex'
p1260
g48
(g590
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1261
sS'trials.thisRepN'
p1262
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa8\x0b\xc0'
tRp1263
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\x17\xc0'
tRp1264
sg30
I0
sg61
g48
(g590
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1265
sS'trials.thisTrialN'
p1266
I67
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1098668575286865
sS'trials.thisN'
p1267
I67
sa(dp1268
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_06_orig.jpg'
p1269
sS'trials.thisIndex'
p1270
g48
(g590
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1271
sS'trials.thisRepN'
p1272
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b\xc0'
tRp1273
sg29
g48
(g50
S'\x00\x00\x00\x00\x004\x17\xc0'
tRp1274
sg30
I1
sg61
g48
(g590
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1275
sS'trials.thisTrialN'
p1276
I68
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5909199714660645
sS'trials.thisN'
p1277
I68
sa(dp1278
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_05_orig.jpg'
p1279
sS'trials.thisIndex'
p1280
g48
(g590
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1281
sS'trials.thisRepN'
p1282
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\n\xc0'
tRp1283
sg29
g48
(g50
S'\x00\x00\x00\x00\x00$\x18\xc0'
tRp1284
sg30
I0
sg61
g48
(g590
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1285
sS'trials.thisTrialN'
p1286
I69
sg32
I1
sg41
g42
sg45
g46
sg33
F3.300346851348877
sS'trials.thisN'
p1287
I69
sa(dp1288
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_00_orig.jpg'
p1289
sS'trials.thisIndex'
p1290
g48
(g590
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1291
sS'trials.thisRepN'
p1292
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp1293
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9c\x18\xc0'
tRp1294
sg30
I1
sg61
g48
(g590
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1295
sS'trials.thisTrialN'
p1296
I70
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2213327884674072
sS'trials.thisN'
p1297
I70
sa(dp1298
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_04_orig.jpg'
p1299
sS'trials.thisIndex'
p1300
g48
(g590
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1301
sS'trials.thisRepN'
p1302
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x06\xc0'
tRp1303
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf6\x18\xc0'
tRp1304
sg30
I1
sg61
g48
(g590
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1305
sS'trials.thisTrialN'
p1306
I71
sg32
I0
sg41
g42
sg45
g46
sg33
F7.1048200130462646
sS'trials.thisN'
p1307
I71
sa(dp1308
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_06_orig.jpg'
p1309
sS'trials.thisIndex'
p1310
g48
(g590
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1311
sS'trials.thisRepN'
p1312
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp1313
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14\x19\xc0'
tRp1314
sg30
I1
sg61
g48
(g590
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1315
sS'trials.thisTrialN'
p1316
I72
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9148080348968506
sS'trials.thisN'
p1317
I72
sa(dp1318
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_03_orig.jpg'
p1319
sS'trials.thisIndex'
p1320
g48
(g590
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1321
sS'trials.thisRepN'
p1322
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06\xc0'
tRp1323
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`\x18\xc0'
tRp1324
sg30
I1
sg61
g48
(g590
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1325
sS'trials.thisTrialN'
p1326
I73
sg32
I0
sg41
g42
sg45
g46
sg33
F4.1551470756530762
sS'trials.thisN'
p1327
I73
sa(dp1328
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_02_orig.jpg'
p1329
sS'trials.thisIndex'
p1330
g48
(g590
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1331
sS'trials.thisRepN'
p1332
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x06\xc0'
tRp1333
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\x18\xc0'
tRp1334
sg30
I1
sg61
g48
(g590
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1335
sS'trials.thisTrialN'
p1336
I74
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2390241622924805
sS'trials.thisN'
p1337
I74
sa(dp1338
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_08_orig.jpg'
p1339
sS'trials.thisIndex'
p1340
g48
(g590
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1341
sS'trials.thisRepN'
p1342
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x06\xc0'
tRp1343
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x04\x1a\xc0'
tRp1344
sg30
I0
sg61
g48
(g590
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1345
sS'trials.thisTrialN'
p1346
I75
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3731482028961182
sS'trials.thisN'
p1347
I75
sa(dp1348
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_09_orig.jpg'
p1349
sS'trials.thisIndex'
p1350
g48
(g590
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1351
sS'trials.thisRepN'
p1352
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x06\xc0'
tRp1353
sg29
g48
(g50
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp1354
sg30
I0
sg61
g48
(g590
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1355
sS'trials.thisTrialN'
p1356
I76
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6947519779205322
sS'trials.thisN'
p1357
I76
sa(dp1358
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_02_orig.jpg'
p1359
sS'trials.thisIndex'
p1360
g48
(g590
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1361
sS'trials.thisRepN'
p1362
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00T\x05\xc0'
tRp1363
sg29
g48
(g50
S'\x00\x00\x00\x00\x00N\x1b\xc0'
tRp1364
sg30
I1
sg61
g48
(g590
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1365
sS'trials.thisTrialN'
p1366
I77
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4567830562591553
sS'trials.thisN'
p1367
I77
sa(dp1368
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_07_orig.jpg'
p1369
sS'trials.thisIndex'
p1370
g48
(g590
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1371
sS'trials.thisRepN'
p1372
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x06\xc0'
tRp1373
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc6\x1b\xc0'
tRp1374
sg30
I1
sg61
g48
(g590
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1375
sS'trials.thisTrialN'
p1376
I78
sg32
I0
sg41
g42
sg45
g46
sg33
F5.9804320335388184
sS'trials.thisN'
p1377
I78
sa(dp1378
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_10_orig.jpg'
p1379
sS'trials.thisIndex'
p1380
g48
(g590
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1381
sS'trials.thisRepN'
p1382
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp1383
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\\\x1c\xc0'
tRp1384
sg30
I1
sg61
g48
(g590
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1385
sS'trials.thisTrialN'
p1386
I79
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1435120105743408
sS'trials.thisN'
p1387
I79
sa(dp1388
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_00_orig.jpg'
p1389
sS'trials.thisIndex'
p1390
g48
(g590
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1391
sS'trials.thisRepN'
p1392
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xec\x03\xc0'
tRp1393
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\\\x1c\xc0'
tRp1394
sg30
I1
sg61
g48
(g590
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1395
sS'trials.thisTrialN'
p1396
I80
sg32
I0
sg41
g42
sg45
g46
sg33
F3.4680490493774414
sS'trials.thisN'
p1397
I80
sa(dp1398
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_01_orig.jpg'
p1399
sS'trials.thisIndex'
p1400
g48
(g590
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1401
sS'trials.thisRepN'
p1402
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xec\x03\xc0'
tRp1403
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x1c\xc0'
tRp1404
sg30
I1
sg61
g48
(g590
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1405
sS'trials.thisTrialN'
p1406
I81
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5238029956817627
sS'trials.thisN'
p1407
I81
sa(dp1408
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_01_orig.jpg'
p1409
sS'trials.thisIndex'
p1410
g48
(g590
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1411
sS'trials.thisRepN'
p1412
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x02\xc0'
tRp1413
sg29
g48
(g50
S'\x00\x00\x00\x00\x00>\x1c\xc0'
tRp1414
sg30
I1
sg61
g48
(g590
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1415
sS'trials.thisTrialN'
p1416
I82
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1203639507293701
sS'trials.thisN'
p1417
I82
sa(dp1418
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_01_orig.jpg'
p1419
sS'trials.thisIndex'
p1420
g48
(g590
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1421
sS'trials.thisRepN'
p1422
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x02\xc0'
tRp1423
sg29
g48
(g50
S'\x00\x00\x00\x00\x00>\x1c\xc0'
tRp1424
sg30
I1
sg61
g48
(g590
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1425
sS'trials.thisTrialN'
p1426
I83
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1772301197052002
sS'trials.thisN'
p1427
I83
sa(dp1428
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_07_orig.jpg'
p1429
sS'trials.thisIndex'
p1430
g48
(g590
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1431
sS'trials.thisRepN'
p1432
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c\x02\xc0'
tRp1433
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x02\x1c\xc0'
tRp1434
sg30
I0
sg61
g48
(g590
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1435
sS'trials.thisTrialN'
p1436
I84
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6249740123748779
sS'trials.thisN'
p1437
I84
sa(dp1438
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_08_orig.jpg'
p1439
sS'trials.thisIndex'
p1440
g48
(g590
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1441
sS'trials.thisRepN'
p1442
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp1443
sg29
g48
(g50
S'\x00\x00\x00\x00\x00>\x1c\xc0'
tRp1444
sg30
I0
sg61
g48
(g590
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1445
sS'trials.thisTrialN'
p1446
I85
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1384720802307129
sS'trials.thisN'
p1447
I85
sa(dp1448
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_10_orig.jpg'
p1449
sS'trials.thisIndex'
p1450
g48
(g590
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1451
sS'trials.thisRepN'
p1452
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00X\x01\xc0'
tRp1453
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x1c\xc0'
tRp1454
sg30
I0
sg61
g48
(g590
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1455
sS'trials.thisTrialN'
p1456
I86
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2442200183868408
sS'trials.thisN'
p1457
I86
sa(dp1458
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_03_orig.jpg'
p1459
sS'trials.thisIndex'
p1460
g48
(g590
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1461
sS'trials.thisRepN'
p1462
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c\x02\xc0'
tRp1463
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x1c\xc0'
tRp1464
sg30
I1
sg61
g48
(g590
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1465
sS'trials.thisTrialN'
p1466
I87
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0692548751831055
sS'trials.thisN'
p1467
I87
sa(dp1468
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_05_orig.jpg'
p1469
sS'trials.thisIndex'
p1470
g48
(g590
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1471
sS'trials.thisRepN'
p1472
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c\x02\xc0'
tRp1473
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x1c\xc0'
tRp1474
sg30
I1
sg61
g48
(g590
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1475
sS'trials.thisTrialN'
p1476
I88
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1719198226928711
sS'trials.thisN'
p1477
I88
sa(dp1478
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_10_orig.jpg'
p1479
sS'trials.thisIndex'
p1480
g48
(g590
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1481
sS'trials.thisRepN'
p1482
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00t\x03\xc0'
tRp1483
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1e\x1e\xc0'
tRp1484
sg30
I0
sg61
g48
(g590
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1485
sS'trials.thisTrialN'
p1486
I89
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6802840232849121
sS'trials.thisN'
p1487
I89
sa(dp1488
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_06_orig.jpg'
p1489
sS'trials.thisIndex'
p1490
g48
(g590
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1491
sS'trials.thisRepN'
p1492
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x04\xc0'
tRp1493
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\x1e\xc0'
tRp1494
sg30
I0
sg61
g48
(g590
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1495
sS'trials.thisTrialN'
p1496
I90
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8130698204040527
sS'trials.thisN'
p1497
I90
sa(dp1498
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_08_orig.jpg'
p1499
sS'trials.thisIndex'
p1500
g48
(g590
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1501
sS'trials.thisRepN'
p1502
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\x04\xc0'
tRp1503
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd2\x1e\xc0'
tRp1504
sg30
I0
sg61
g48
(g590
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1505
sS'trials.thisTrialN'
p1506
I91
sg32
I1
sg41
g42
sg45
g46
sg33
F3.3842971324920654
sS'trials.thisN'
p1507
I91
sa(dp1508
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_05_orig.jpg'
p1509
sS'trials.thisIndex'
p1510
g48
(g590
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1511
sS'trials.thisRepN'
p1512
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x06\xc0'
tRp1513
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe2\x1d\xc0'
tRp1514
sg30
I1
sg61
g48
(g590
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1515
sS'trials.thisTrialN'
p1516
I92
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0991771221160889
sS'trials.thisN'
p1517
I92
sa(dp1518
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_06_orig.jpg'
p1519
sS'trials.thisIndex'
p1520
g48
(g590
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1521
sS'trials.thisRepN'
p1522
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x06\xc0'
tRp1523
sg29
g48
(g50
S'\x00\x00\x00\x00\x00j\x1d\xc0'
tRp1524
sg30
I0
sg61
g48
(g590
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1525
sS'trials.thisTrialN'
p1526
I93
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4234941005706787
sS'trials.thisN'
p1527
I93
sa(dp1528
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_03_orig.jpg'
p1529
sS'trials.thisIndex'
p1530
g48
(g590
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1531
sS'trials.thisRepN'
p1532
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp1533
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x10\x1d\xc0'
tRp1534
sg30
I1
sg61
g48
(g590
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1535
sS'trials.thisTrialN'
p1536
I94
sg32
I0
sg41
g42
sg45
g46
sg33
F0.9707331657409668
sS'trials.thisN'
p1537
I94
sa(dp1538
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_04_orig.jpg'
p1539
sS'trials.thisIndex'
p1540
g48
(g590
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1541
sS'trials.thisRepN'
p1542
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp1543
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x1c\xc0'
tRp1544
sg30
I1
sg61
g48
(g590
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1545
sS'trials.thisTrialN'
p1546
I95
sg32
I0
sg41
g42
sg45
g46
sg33
F4.1885919570922852
sS'trials.thisN'
p1547
I95
sa(dp1548
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_09_orig.jpg'
p1549
sS'trials.thisIndex'
p1550
g48
(g590
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1551
sS'trials.thisRepN'
p1552
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp1553
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf2\x1c\xc0'
tRp1554
sg30
I0
sg61
g48
(g590
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1555
sS'trials.thisTrialN'
p1556
I96
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1594288349151611
sS'trials.thisN'
p1557
I96
sa(dp1558
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_03_orig.jpg'
p1559
sS'trials.thisIndex'
p1560
g48
(g590
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1561
sS'trials.thisRepN'
p1562
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x06\xc0'
tRp1563
sg29
g48
(g50
S'\x00\x00\x00\x00\x00z\x1c\xc0'
tRp1564
sg30
I1
sg61
g48
(g590
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1565
sS'trials.thisTrialN'
p1566
I97
sg32
I0
sg41
g42
sg45
g46
sg33
F4.7245199680328369
sS'trials.thisN'
p1567
I97
sa(dp1568
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_07_orig.jpg'
p1569
sS'trials.thisIndex'
p1570
g48
(g590
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1571
sS'trials.thisRepN'
p1572
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x05\xc0'
tRp1573
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x1c\xc0'
tRp1574
sg30
I1
sg61
g48
(g590
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1575
sS'trials.thisTrialN'
p1576
I98
sg32
I0
sg41
g42
sg45
g46
sg33
F4.3386740684509277
sS'trials.thisN'
p1577
I98
sa(dp1578
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_05_orig.jpg'
p1579
sS'trials.thisIndex'
p1580
g48
(g590
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1581
sS'trials.thisRepN'
p1582
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x06\xc0'
tRp1583
sg29
g48
(g50
S'\x00\x00\x00\x00\x00.\x1d\xc0'
tRp1584
sg30
I1
sg61
g48
(g590
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1585
sS'trials.thisTrialN'
p1586
I99
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4232981204986572
sS'trials.thisN'
p1587
I99
sa(dp1588
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_00_orig.jpg'
p1589
sS'trials.thisIndex'
p1590
g48
(g590
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1591
sS'trials.thisRepN'
p1592
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcc\x05\xc0'
tRp1593
sg29
g48
(g50
S'\x00\x00\x00\x00\x00L\x1d\xc0'
tRp1594
sg30
I1
sg61
g48
(g590
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1595
sS'trials.thisTrialN'
p1596
I100
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1548140048980713
sS'trials.thisN'
p1597
I100
sa(dp1598
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_05_orig.jpg'
p1599
sS'trials.thisIndex'
p1600
g48
(g590
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1601
sS'trials.thisRepN'
p1602
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp1603
sg29
g48
(g50
S'\x00\x00\x00\x00\x00 \x1c\xc0'
tRp1604
sg30
I1
sg61
g48
(g590
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1605
sS'trials.thisTrialN'
p1606
I101
sg32
I0
sg41
g42
sg45
g46
sg33
F14.781246185302734
sS'trials.thisN'
p1607
I101
sa(dp1608
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_09_orig.jpg'
p1609
sS'trials.thisIndex'
p1610
g48
(g590
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1611
sS'trials.thisRepN'
p1612
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x01\xc0'
tRp1613
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8a\x1b\xc0'
tRp1614
sg30
I0
sg61
g48
(g590
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1615
sS'trials.thisTrialN'
p1616
I102
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9243659973144531
sS'trials.thisN'
p1617
I102
sa(dp1618
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_03_orig.jpg'
p1619
sS'trials.thisIndex'
p1620
g48
(g590
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1621
sS'trials.thisRepN'
p1622
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x02\xc0'
tRp1623
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\\\x1c\xc0'
tRp1624
sg30
I1
sg61
g48
(g590
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1625
sS'trials.thisTrialN'
p1626
I103
sg32
I0
sg41
g42
sg45
g46
sg33
F6.8859829902648926
sS'trials.thisN'
p1627
I103
sa(dp1628
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_07_orig.jpg'
p1629
sS'trials.thisIndex'
p1630
g48
(g590
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1631
sS'trials.thisRepN'
p1632
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0c\x02\xc0'
tRp1633
sg29
g48
(g50
S'\x00\x00\x00\x00\x00>\x1c\xc0'
tRp1634
sg30
I0
sg61
g48
(g590
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1635
sS'trials.thisTrialN'
p1636
I104
sg32
I1
sg41
g42
sg45
g46
sg33
F3.3669509887695312
sS'trials.thisN'
p1637
I104
sa(dp1638
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_07_orig.jpg'
p1639
sS'trials.thisIndex'
p1640
g48
(g590
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1641
sS'trials.thisRepN'
p1642
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\x00\xc0'
tRp1643
sg29
g48
(g50
S'\x00\x00\x00\x00\x00L\x1d\xc0'
tRp1644
sg30
I0
sg61
g48
(g590
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1645
sS'trials.thisTrialN'
p1646
I105
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8456268310546875
sS'trials.thisN'
p1647
I105
sa(dp1648
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_07_orig.jpg'
p1649
sS'trials.thisIndex'
p1650
g48
(g590
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1651
sS'trials.thisRepN'
p1652
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x02\xc0'
tRp1653
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa6\x1d\xc0'
tRp1654
sg30
I1
sg61
g48
(g590
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1655
sS'trials.thisTrialN'
p1656
I106
sg32
I0
sg41
g42
sg45
g46
sg33
F3.3506078720092773
sS'trials.thisN'
p1657
I106
sa(dp1658
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_04_orig.jpg'
p1659
sS'trials.thisIndex'
p1660
g48
(g590
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1661
sS'trials.thisRepN'
p1662
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x01\xc0'
tRp1663
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa6\x1d\xc0'
tRp1664
sg30
I1
sg61
g48
(g590
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1665
sS'trials.thisTrialN'
p1666
I107
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2611329555511475
sS'trials.thisN'
p1667
I107
sa(dp1668
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_06_orig.jpg'
p1669
sS'trials.thisIndex'
p1670
g48
(g590
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1671
sS'trials.thisRepN'
p1672
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp1673
sg29
g48
(g50
S'\x00\x00\x00\x00\x00j\x1d\xc0'
tRp1674
sg30
I0
sg61
g48
(g590
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1675
sS'trials.thisTrialN'
p1676
I108
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3216209411621094
sS'trials.thisN'
p1677
I108
sa(dp1678
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_02_orig.jpg'
p1679
sS'trials.thisIndex'
p1680
g48
(g590
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1681
sS'trials.thisRepN'
p1682
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x00\xc0'
tRp1683
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe2\x1d\xc0'
tRp1684
sg30
I1
sg61
g48
(g590
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1685
sS'trials.thisTrialN'
p1686
I109
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3904941082000732
sS'trials.thisN'
p1687
I109
sa(dp1688
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_10_orig.jpg'
p1689
sS'trials.thisIndex'
p1690
g48
(g590
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1691
sS'trials.thisRepN'
p1692
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp1693
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb4\x1e\xc0'
tRp1694
sg30
I0
sg61
g48
(g590
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1695
sS'trials.thisTrialN'
p1696
I110
sg32
I1
sg41
g42
sg45
g46
sg33
F7.2364099025726318
sS'trials.thisN'
p1697
I110
sa(dp1698
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_06_orig.jpg'
p1699
sS'trials.thisIndex'
p1700
g48
(g590
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1701
sS'trials.thisRepN'
p1702
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x04\xc0'
tRp1703
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp1704
sg30
I1
sg61
g48
(g590
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1705
sS'trials.thisTrialN'
p1706
I111
sg32
I0
sg41
g42
sg45
g46
sg33
F3.41693115234375
sS'trials.thisN'
p1707
I111
sa(dp1708
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_03_orig.jpg'
p1709
sS'trials.thisIndex'
p1710
g48
(g590
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1711
sS'trials.thisRepN'
p1712
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xfb\xbf'
tRp1713
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp1714
sg30
I0
sg61
g48
(g590
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1715
sS'trials.thisTrialN'
p1716
I112
sg32
I1
sg41
g42
sg45
g46
sg33
F13.591250896453857
sS'trials.thisN'
p1717
I112
sa(dp1718
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_00_orig.jpg'
p1719
sS'trials.thisIndex'
p1720
g48
(g590
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1721
sS'trials.thisRepN'
p1722
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp1723
sg29
g48
(g50
S'\x00\x00\x00\x00\x00X!\xc0'
tRp1724
sg30
I1
sg61
g48
(g590
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1725
sS'trials.thisTrialN'
p1726
I113
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3898289203643799
sS'trials.thisN'
p1727
I113
sa(dp1728
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_09_orig.jpg'
p1729
sS'trials.thisIndex'
p1730
g48
(g590
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1731
sS'trials.thisRepN'
p1732
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp1733
sg29
g48
(g50
S'\x00\x00\x00\x00\x00g!\xc0'
tRp1734
sg30
I0
sg61
g48
(g590
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1735
sS'trials.thisTrialN'
p1736
I114
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0050098896026611
sS'trials.thisN'
p1737
I114
sa(dp1738
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_02_orig.jpg'
p1739
sS'trials.thisIndex'
p1740
g48
(g590
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1741
sS'trials.thisRepN'
p1742
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\x04\xc0'
tRp1743
sg29
g48
(g50
S'\x00\x00\x00\x00\x00g!\xc0'
tRp1744
sg30
I1
sg61
g48
(g590
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1745
sS'trials.thisTrialN'
p1746
I115
sg32
I0
sg41
g42
sg45
g46
sg33
F1.338080883026123
sS'trials.thisN'
p1747
I115
sa(dp1748
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_07_orig.jpg'
p1749
sS'trials.thisIndex'
p1750
g48
(g590
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1751
sS'trials.thisRepN'
p1752
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x06\xc0'
tRp1753
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x94!\xc0'
tRp1754
sg30
I1
sg61
g48
(g590
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1755
sS'trials.thisTrialN'
p1756
I116
sg32
I0
sg41
g42
sg45
g46
sg33
F8.2597520351409912
sS'trials.thisN'
p1757
I116
sa(dp1758
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_01_orig.jpg'
p1759
sS'trials.thisIndex'
p1760
g48
(g590
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1761
sS'trials.thisRepN'
p1762
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9c\x08\xc0'
tRp1763
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0 \xc0'
tRp1764
sg30
I1
sg61
g48
(g590
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1765
sS'trials.thisTrialN'
p1766
I117
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7414340972900391
sS'trials.thisN'
p1767
I117
sa(dp1768
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_08_orig.jpg'
p1769
sS'trials.thisIndex'
p1770
g48
(g590
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1771
sS'trials.thisRepN'
p1772
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\x08\xc0'
tRp1773
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4 \xc0'
tRp1774
sg30
I0
sg61
g48
(g590
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1775
sS'trials.thisTrialN'
p1776
I118
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7087979316711426
sS'trials.thisN'
p1777
I118
sa(dp1778
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_00_orig.jpg'
p1779
sS'trials.thisIndex'
p1780
g48
(g590
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1781
sS'trials.thisRepN'
p1782
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\x08\xc0'
tRp1783
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86 \xc0'
tRp1784
sg30
I1
sg61
g48
(g590
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1785
sS'trials.thisTrialN'
p1786
I119
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2713899612426758
sS'trials.thisN'
p1787
I119
sa(dp1788
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_10_orig.jpg'
p1789
sS'trials.thisIndex'
p1790
g48
(g590
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1791
sS'trials.thisRepN'
p1792
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|\n\xc0'
tRp1793
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1794
sg30
I0
sg61
g48
(g590
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1795
sS'trials.thisTrialN'
p1796
I120
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98512387275695801
sS'trials.thisN'
p1797
I120
sa(dp1798
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_06_orig.jpg'
p1799
sS'trials.thisIndex'
p1800
g48
(g590
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1801
sS'trials.thisRepN'
p1802
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa8\x0b\xc0'
tRp1803
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86 \xc0'
tRp1804
sg30
I0
sg61
g48
(g590
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1805
sS'trials.thisTrialN'
p1806
I121
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5464410781860352
sS'trials.thisN'
p1807
I121
sa(dp1808
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_09_orig.jpg'
p1809
sS'trials.thisIndex'
p1810
g48
(g590
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1811
sS'trials.thisRepN'
p1812
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c\xc0'
tRp1813
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb3 \xc0'
tRp1814
sg30
I1
sg61
g48
(g590
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1815
sS'trials.thisTrialN'
p1816
I122
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1552338600158691
sS'trials.thisN'
p1817
I122
sa(dp1818
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_07_orig.jpg'
p1819
sS'trials.thisIndex'
p1820
g48
(g590
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1821
sS'trials.thisRepN'
p1822
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00X\x11\xc0'
tRp1823
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86 \xc0'
tRp1824
sg30
I0
sg61
g48
(g590
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1825
sS'trials.thisTrialN'
p1826
I123
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6913628578186035
sS'trials.thisN'
p1827
I123
sa(dp1828
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_09_orig.jpg'
p1829
sS'trials.thisIndex'
p1830
g48
(g590
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1831
sS'trials.thisRepN'
p1832
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xee\x11\xc0'
tRp1833
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h \xc0'
tRp1834
sg30
I0
sg61
g48
(g590
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1835
sS'trials.thisTrialN'
p1836
I124
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8418359756469727
sS'trials.thisN'
p1837
I124
sa(dp1838
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_09_orig.jpg'
p1839
sS'trials.thisIndex'
p1840
g48
(g590
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1841
sS'trials.thisRepN'
p1842
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11\xc0'
tRp1843
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb3 \xc0'
tRp1844
sg30
I0
sg61
g48
(g590
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1845
sS'trials.thisTrialN'
p1846
I125
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4908180236816406
sS'trials.thisN'
p1847
I125
sa(dp1848
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_08_orig.jpg'
p1849
sS'trials.thisIndex'
p1850
g48
(g590
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1851
sS'trials.thisRepN'
p1852
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa2\x12\xc0'
tRp1853
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Y \xc0'
tRp1854
sg30
I0
sg61
g48
(g590
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1855
sS'trials.thisTrialN'
p1856
I126
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8921298980712891
sS'trials.thisN'
p1857
I126
sa(dp1858
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_01_orig.jpg'
p1859
sS'trials.thisIndex'
p1860
g48
(g590
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1861
sS'trials.thisRepN'
p1862
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00V\x13\xc0'
tRp1863
sg29
g48
(g50
S'\x00\x00\x00\x00\x00w \xc0'
tRp1864
sg30
I1
sg61
g48
(g590
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1865
sS'trials.thisTrialN'
p1866
I127
sg32
I0
sg41
g42
sg45
g46
sg33
F1.222074031829834
sS'trials.thisN'
p1867
I127
sa(dp1868
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_01_orig.jpg'
p1869
sS'trials.thisIndex'
p1870
g48
(g590
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1871
sS'trials.thisRepN'
p1872
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\n\x14\xc0'
tRp1873
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Y \xc0'
tRp1874
sg30
I1
sg61
g48
(g590
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1875
sS'trials.thisTrialN'
p1876
I128
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95394277572631836
sS'trials.thisN'
p1877
I128
sa(dp1878
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_06_orig.jpg'
p1879
sS'trials.thisIndex'
p1880
g48
(g590
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1881
sS'trials.thisRepN'
p1882
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x92\x13\xc0'
tRp1883
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x0e \xc0'
tRp1884
sg30
I0
sg61
g48
(g590
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1885
sS'trials.thisTrialN'
p1886
I129
sg32
I1
sg41
g42
sg45
g46
sg33
F3.585745096206665
sS'trials.thisN'
p1887
I129
sa(dp1888
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_03_orig.jpg'
p1889
sS'trials.thisIndex'
p1890
g48
(g590
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1891
sS'trials.thisRepN'
p1892
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xce\x13\xc0'
tRp1893
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h \xc0'
tRp1894
sg30
I1
sg61
g48
(g590
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1895
sS'trials.thisTrialN'
p1896
I130
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7396860122680664
sS'trials.thisN'
p1897
I130
sa(dp1898
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_03_orig.jpg'
p1899
sS'trials.thisIndex'
p1900
g48
(g590
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1901
sS'trials.thisRepN'
p1902
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb2\x11\xc0'
tRp1903
sg29
g48
(g50
S'\x00\x00\x00\x00\x00h \xc0'
tRp1904
sg30
I1
sg61
g48
(g590
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1905
sS'trials.thisTrialN'
p1906
I131
sg32
I0
sg41
g42
sg45
g46
sg33
F1.338493824005127
sS'trials.thisN'
p1907
I131
sa(dp1908
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_03_orig.jpg'
p1909
sS'trials.thisIndex'
p1910
g48
(g590
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1911
sS'trials.thisRepN'
p1912
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10\xc0'
tRp1913
sg29
g48
(g50
S'\x00\x00\x00\x00\x00w \xc0'
tRp1914
sg30
I1
sg61
g48
(g590
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1915
sS'trials.thisTrialN'
p1916
I132
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8415601253509521
sS'trials.thisN'
p1917
I132
sa(dp1918
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_03_orig.jpg'
p1919
sS'trials.thisIndex'
p1920
g48
(g590
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1921
sS'trials.thisRepN'
p1922
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x0f\xc0'
tRp1923
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Y \xc0'
tRp1924
sg30
I1
sg61
g48
(g590
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1925
sS'trials.thisTrialN'
p1926
I133
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6232039928436279
sS'trials.thisN'
p1927
I133
sa(dp1928
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_06_orig.jpg'
p1929
sS'trials.thisIndex'
p1930
g48
(g590
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1931
sS'trials.thisRepN'
p1932
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc4\r\xc0'
tRp1933
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4 \xc0'
tRp1934
sg30
I0
sg61
g48
(g590
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1935
sS'trials.thisTrialN'
p1936
I134
sg32
I1
sg41
g42
sg45
g46
sg33
F2.562791109085083
sS'trials.thisN'
p1937
I134
sa(dp1938
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_10_orig.jpg'
p1939
sS'trials.thisIndex'
p1940
g48
(g590
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1941
sS'trials.thisRepN'
p1942
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10\xc0'
tRp1943
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4 \xc0'
tRp1944
sg30
I0
sg61
g48
(g590
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1945
sS'trials.thisTrialN'
p1946
I135
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9150378704071045
sS'trials.thisN'
p1947
I135
sa(dp1948
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_02_orig.jpg'
p1949
sS'trials.thisIndex'
p1950
g48
(g590
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1951
sS'trials.thisRepN'
p1952
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xae\x15\xc0'
tRp1953
sg29
g48
(g50
S'\x00\x00\x00\x00\x00*"\xc0'
tRp1954
sg30
I1
sg61
g48
(g590
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1955
sS'trials.thisTrialN'
p1956
I136
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0941359996795654
sS'trials.thisN'
p1957
I136
sa(dp1958
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_10_orig.jpg'
p1959
sS'trials.thisIndex'
p1960
g48
(g590
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1961
sS'trials.thisRepN'
p1962
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\n\x14\xc0'
tRp1963
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc1!\xc0'
tRp1964
sg30
I0
sg61
g48
(g590
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1965
sS'trials.thisTrialN'
p1966
I137
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6411089897155762
sS'trials.thisN'
p1967
I137
sa(dp1968
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_10_orig.jpg'
p1969
sS'trials.thisIndex'
p1970
g48
(g590
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1971
sS'trials.thisRepN'
p1972
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xce\x13\xc0'
tRp1973
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp1974
sg30
I1
sg61
g48
(g590
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1975
sS'trials.thisTrialN'
p1976
I138
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0540018081665039
sS'trials.thisN'
p1977
I138
sa(dp1978
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_08_orig.jpg'
p1979
sS'trials.thisIndex'
p1980
g48
(g590
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1981
sS'trials.thisRepN'
p1982
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xce\x13\xc0'
tRp1983
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd0!\xc0'
tRp1984
sg30
I1
sg61
g48
(g590
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1985
sS'trials.thisTrialN'
p1986
I139
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3393790721893311
sS'trials.thisN'
p1987
I139
sa(dp1988
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_04_orig.jpg'
p1989
sS'trials.thisIndex'
p1990
g48
(g590
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1991
sS'trials.thisRepN'
p1992
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\x12\xc0'
tRp1993
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc1!\xc0'
tRp1994
sg30
I1
sg61
g48
(g590
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1995
sS'trials.thisTrialN'
p1996
I140
sg32
I0
sg41
g42
sg45
g46
sg33
F10.472819805145264
sS'trials.thisN'
p1997
I140
sa(dp1998
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_07_orig.jpg'
p1999
sS'trials.thisIndex'
p2000
g48
(g590
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2001
sS'trials.thisRepN'
p2002
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xde\x12\xc0'
tRp2003
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa3!\xc0'
tRp2004
sg30
I0
sg61
g48
(g590
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2005
sS'trials.thisTrialN'
p2006
I141
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4626059532165527
sS'trials.thisN'
p2007
I141
sa(dp2008
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_02_orig.jpg'
p2009
sS'trials.thisIndex'
p2010
g48
(g590
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2011
sS'trials.thisRepN'
p2012
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x12\xc0'
tRp2013
sg29
g48
(g50
S'\x00\x00\x00\x00\x00f"\xc0'
tRp2014
sg30
I1
sg61
g48
(g590
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2015
sS'trials.thisTrialN'
p2016
I142
sg32
I0
sg41
g42
sg45
g46
sg33
F3.3503561019897461
sS'trials.thisN'
p2017
I142
sa(dp2018
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_09_orig.jpg'
p2019
sS'trials.thisIndex'
p2020
g48
(g590
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2021
sS'trials.thisRepN'
p2022
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00F\x14\xc0'
tRp2023
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp2024
sg30
I0
sg61
g48
(g590
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2025
sS'trials.thisTrialN'
p2026
I143
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9762418270111084
sS'trials.thisN'
p2027
I143
sa(dp2028
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_08_orig.jpg'
p2029
sS'trials.thisIndex'
p2030
g48
(g590
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2031
sS'trials.thisRepN'
p2032
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00t\x13\xc0'
tRp2033
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xed"\xc0'
tRp2034
sg30
I0
sg61
g48
(g590
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2035
sS'trials.thisTrialN'
p2036
I144
sg32
I1
sg41
g42
sg45
g46
sg33
F9.33384108543396
sS'trials.thisN'
p2037
I144
sa(dp2038
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_01_orig.jpg'
p2039
sS'trials.thisIndex'
p2040
g48
(g590
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2041
sS'trials.thisRepN'
p2042
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xce\x13\xc0'
tRp2043
sg29
g48
(g50
S'\x00\x00\x00\x00\x00W"\xc0'
tRp2044
sg30
I1
sg61
g48
(g590
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2045
sS'trials.thisTrialN'
p2046
I145
sg32
I0
sg41
g42
sg45
g46
sg33
F3.5850019454956055
sS'trials.thisN'
p2047
I145
sa(dp2048
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_09_orig.jpg'
p2049
sS'trials.thisIndex'
p2050
g48
(g590
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2051
sS'trials.thisRepN'
p2052
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\n\x14\xc0'
tRp2053
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp2054
sg30
I0
sg61
g48
(g590
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2055
sS'trials.thisTrialN'
p2056
I146
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4740738868713379
sS'trials.thisN'
p2057
I146
sa(dp2058
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_06_orig.jpg'
p2059
sS'trials.thisIndex'
p2060
g48
(g590
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2061
sS'trials.thisRepN'
p2062
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\t\xc0'
tRp2063
sg29
g48
(g50
S'\x00\x00\x00\x00\x00w \xc0'
tRp2064
sg30
I1
sg61
g48
(g590
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2065
sS'trials.thisTrialN'
p2066
I147
sg32
I0
sg41
g42
sg45
g46
sg33
F71.359266042709351
sS'trials.thisN'
p2067
I147
sa(dp2068
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_02_orig.jpg'
p2069
sS'trials.thisIndex'
p2070
g48
(g590
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2071
sS'trials.thisRepN'
p2072
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x10\xc0'
tRp2073
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp2074
sg30
I1
sg61
g48
(g590
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2075
sS'trials.thisTrialN'
p2076
I148
sg32
I0
sg41
g42
sg45
g46
sg33
F54.71867299079895
sS'trials.thisN'
p2077
I148
sa(dp2078
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_07_orig.jpg'
p2079
sS'trials.thisIndex'
p2080
g48
(g590
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2081
sS'trials.thisRepN'
p2082
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x10\xc0'
tRp2083
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp2084
sg30
I0
sg61
g48
(g590
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2085
sS'trials.thisTrialN'
p2086
I149
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1431751251220703
sS'trials.thisN'
p2087
I149
sa(dp2088
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_01_orig.jpg'
p2089
sS'trials.thisIndex'
p2090
g48
(g590
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2091
sS'trials.thisRepN'
p2092
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa2\x12\xc0'
tRp2093
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x83#\xc0'
tRp2094
sg30
I1
sg61
g48
(g590
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2095
sS'trials.thisTrialN'
p2096
I150
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6748900413513184
sS'trials.thisN'
p2097
I150
sa(dp2098
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_02_orig.jpg'
p2099
sS'trials.thisIndex'
p2100
g48
(g590
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2101
sS'trials.thisRepN'
p2102
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00d\x14\xc0'
tRp2103
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x17&\xc0'
tRp2104
sg30
I1
sg61
g48
(g590
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2105
sS'trials.thisTrialN'
p2106
I151
sg32
I0
sg41
g42
sg45
g46
sg33
F39.719247102737427
sS'trials.thisN'
p2107
I151
sa(dp2108
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_00_orig.jpg'
p2109
sS'trials.thisIndex'
p2110
g48
(g590
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2111
sS'trials.thisRepN'
p2112
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x16\xc0'
tRp2113
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdb%\xc0'
tRp2114
sg30
I1
sg61
g48
(g590
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2115
sS'trials.thisTrialN'
p2116
I152
sg32
I0
sg41
g42
sg45
g46
sg33
F9.0825529098510742
sS'trials.thisN'
p2117
I152
sa(dp2118
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_02_orig.jpg'
p2119
sS'trials.thisIndex'
p2120
g48
(g590
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2121
sS'trials.thisRepN'
p2122
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00d\x14\xc0'
tRp2123
sg29
g48
(g50
S'\x00\x00\x00\x00\x007$\xc0'
tRp2124
sg30
I1
sg61
g48
(g590
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2125
sS'trials.thisTrialN'
p2126
I153
sg32
I0
sg41
g42
sg45
g46
sg33
F32.830852031707764
sS'trials.thisN'
p2127
I153
sa(dp2128
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_01_orig.jpg'
p2129
sS'trials.thisIndex'
p2130
g48
(g590
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2131
sS'trials.thisRepN'
p2132
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00t\x03\xc0'
tRp2133
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2134
sg30
I1
sg61
g48
(g590
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2135
sS'trials.thisTrialN'
p2136
I154
sg32
I0
sg41
g42
sg45
g46
sg33
F21.870371103286743
sS'trials.thisN'
p2137
I154
sa(dp2138
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_07_orig.jpg'
p2139
sS'trials.thisIndex'
p2140
g48
(g590
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2141
sS'trials.thisRepN'
p2142
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp2143
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp2144
sg30
I0
sg61
g48
(g590
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2145
sS'trials.thisTrialN'
p2146
I155
sg32
I1
sg41
g42
sg45
g46
sg33
F4.1026790142059326
sS'trials.thisN'
p2147
I155
sa(dp2148
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_05_orig.jpg'
p2149
sS'trials.thisIndex'
p2150
g48
(g590
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2151
sS'trials.thisRepN'
p2152
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x06\xc0'
tRp2153
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2154
sg30
I1
sg61
g48
(g590
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2155
sS'trials.thisTrialN'
p2156
I156
sg32
I0
sg41
g42
sg45
g46
sg33
F7.1721420288085938
sS'trials.thisN'
p2157
I156
sa(dp2158
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_07_orig.jpg'
p2159
sS'trials.thisIndex'
p2160
g48
(g590
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2161
sS'trials.thisRepN'
p2162
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\xf4\xbf'
tRp2163
sg29
g48
(g50
S'\x00\x00\x00\x00\x001*\xc0'
tRp2164
sg30
I0
sg61
g48
(g590
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2165
sS'trials.thisTrialN'
p2166
I157
sg32
I1
sg41
g42
sg45
g46
sg33
F45.282263994216919
sS'trials.thisN'
p2167
I157
sa(dp2168
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_01_orig.jpg'
p2169
sS'trials.thisIndex'
p2170
g48
(g590
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2171
sS'trials.thisRepN'
p2172
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x04\n\xc0'
tRp2173
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp2174
sg30
I1
sg61
g48
(g590
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2175
sS'trials.thisTrialN'
p2176
I158
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5456161499023438
sS'trials.thisN'
p2177
I158
sa(dp2178
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_10_orig.jpg'
p2179
sS'trials.thisIndex'
p2180
g48
(g590
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2181
sS'trials.thisRepN'
p2182
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p\x07\xc0'
tRp2183
sg29
g48
(g50
S'\x00\x00\x00\x00\x00A)\xc0'
tRp2184
sg30
I0
sg61
g48
(g590
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2185
sS'trials.thisTrialN'
p2186
I159
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9918429851531982
sS'trials.thisN'
p2187
I159
sa(dp2188
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_04_orig.jpg'
p2189
sS'trials.thisIndex'
p2190
g48
(g590
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2191
sS'trials.thisRepN'
p2192
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00T\x05\xc0'
tRp2193
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp2194
sg30
I1
sg61
g48
(g590
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2195
sS'trials.thisTrialN'
p2196
I160
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7921631336212158
sS'trials.thisN'
p2197
I160
sa(dp2198
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_09_orig.jpg'
p2199
sS'trials.thisIndex'
p2200
g48
(g590
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2201
sS'trials.thisRepN'
p2202
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xac\x17\xc0'
tRp2203
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp2204
sg30
I0
sg61
g48
(g590
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2205
sS'trials.thisTrialN'
p2206
I161
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5276529788970947
sS'trials.thisN'
p2207
I161
sa(dp2208
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_01_orig.jpg'
p2209
sS'trials.thisIndex'
p2210
g48
(g590
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2211
sS'trials.thisRepN'
p2212
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xda6\xc0'
tRp2213
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2214
sg30
I1
sg61
g48
(g590
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2215
sS'trials.thisTrialN'
p2216
I162
sg32
I0
sg41
g42
sg45
g46
sg33
F2.109900951385498
sS'trials.thisN'
p2217
I162
sa(dp2218
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_04_orig.jpg'
p2219
sS'trials.thisIndex'
p2220
g48
(g590
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2221
sS'trials.thisRepN'
p2222
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x876\xc0'
tRp2223
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp2224
sg30
I1
sg61
g48
(g590
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2225
sS'trials.thisTrialN'
p2226
I163
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8980350494384766
sS'trials.thisN'
p2227
I163
sa(dp2228
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_00_orig.jpg'
p2229
sS'trials.thisIndex'
p2230
g48
(g590
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2231
sS'trials.thisRepN'
p2232
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xa56\xc0'
tRp2233
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp2234
sg30
I1
sg61
g48
(g590
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2235
sS'trials.thisTrialN'
p2236
I164
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0323920249938965
sS'trials.thisN'
p2237
I164
sa(dp2238
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_05_orig.jpg'
p2239
sS'trials.thisIndex'
p2240
g48
(g590
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2241
sS'trials.thisRepN'
p2242
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x033\xc0'
tRp2243
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc4\r\xc0'
tRp2244
sg30
I1
sg61
g48
(g590
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2245
sS'trials.thisTrialN'
p2246
I165
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3223059177398682
sS'trials.thisN'
p2247
I165
sa(dp2248
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_05_orig.jpg'
p2249
sS'trials.thisIndex'
p2250
g48
(g590
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2251
sS'trials.thisRepN'
p2252
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0b3\xc0'
tRp2253
sg29
g48
(g50
S'\x00\x00\x00\x00\x00,\x10\xc0'
tRp2254
sg30
I1
sg61
g48
(g590
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2255
sS'trials.thisTrialN'
p2256
I166
sg32
I0
sg41
g42
sg45
g46
sg33
F24.63542103767395
sS'trials.thisN'
p2257
I166
sa(dp2258
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_08_orig.jpg'
p2259
sS'trials.thisIndex'
p2260
g48
(g590
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2261
sS'trials.thisRepN'
p2262
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc2\xc0'
tRp2263
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd0\x11\xc0'
tRp2264
sg30
I0
sg61
g48
(g590
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2265
sS'trials.thisTrialN'
p2266
I167
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5960071086883545
sS'trials.thisN'
p2267
I167
sa(dp2268
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM5_00_orig.jpg'
p2269
sS'trials.thisIndex'
p2270
g48
(g590
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2271
sS'trials.thisRepN'
p2272
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x941\xc0'
tRp2273
sg29
g48
(g50
S'\x00\x00\x00\x00\x00*\x12\xc0'
tRp2274
sg30
I1
sg61
g48
(g590
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2275
sS'trials.thisTrialN'
p2276
I168
sg32
I0
sg41
g42
sg45
g46
sg33
F17.110233068466187
sS'trials.thisN'
p2277
I168
sa(dp2278
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_00_orig.jpg'
p2279
sS'trials.thisIndex'
p2280
g48
(g590
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2281
sS'trials.thisRepN'
p2282
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00+1\xc0'
tRp2283
sg29
g48
(g50
S'\x00\x00\x00\x00\x00X\x11\xc0'
tRp2284
sg30
I1
sg61
g48
(g590
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2285
sS'trials.thisTrialN'
p2286
I169
sg32
I0
sg41
g42
sg45
g46
sg33
F3.5013260841369629
sS'trials.thisN'
p2287
I169
sa(dp2288
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_04_orig.jpg'
p2289
sS'trials.thisIndex'
p2290
g48
(g590
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2291
sS'trials.thisRepN'
p2292
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x86/\xc0'
tRp2293
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb0\x03\xc0'
tRp2294
sg30
I0
sg61
g48
(g590
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2295
sS'trials.thisTrialN'
p2296
I170
sg32
I1
sg41
g42
sg45
g46
sg33
F7.5724420547485352
sS'trials.thisN'
p2297
I170
sa(dp2298
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_05_orig.jpg'
p2299
sS'trials.thisIndex'
p2300
g48
(g590
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2301
sS'trials.thisRepN'
p2302
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb3/\xc0'
tRp2303
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp2304
sg30
I0
sg61
g48
(g590
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2305
sS'trials.thisTrialN'
p2306
I171
sg32
I1
sg41
g42
sg45
g46
sg33
F3.0976290702819824
sS'trials.thisN'
p2307
I171
sa(dp2308
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_01_orig.jpg'
p2309
sS'trials.thisIndex'
p2310
g48
(g590
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2311
sS'trials.thisRepN'
p2312
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4/\xc0'
tRp2313
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10\xc0'
tRp2314
sg30
I1
sg61
g48
(g590
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2315
sS'trials.thisTrialN'
p2316
I172
sg32
I0
sg41
g42
sg45
g46
sg33
F2.4622020721435547
sS'trials.thisN'
p2317
I172
sa(dp2318
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_03_orig.jpg'
p2319
sS'trials.thisIndex'
p2320
g48
(g590
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2321
sS'trials.thisRepN'
p2322
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf2,\xc0'
tRp2323
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\t\xc0'
tRp2324
sg30
I0
sg61
g48
(g590
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2325
sS'trials.thisTrialN'
p2326
I173
sg32
I1
sg41
g42
sg45
g46
sg33
F17.961809873580933
sS'trials.thisN'
p2327
I173
sa(dp2328
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_10_orig.jpg'
p2329
sS'trials.thisIndex'
p2330
g48
(g590
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2331
sS'trials.thisRepN'
p2332
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,0\xc0'
tRp2333
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x0c\x12\xc0'
tRp2334
sg30
I0
sg61
g48
(g590
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2335
sS'trials.thisTrialN'
p2336
I174
sg32
I1
sg41
g42
sg45
g46
sg33
F3.166083812713623
sS'trials.thisN'
p2337
I174
sa(dp2338
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_05_orig.jpg'
p2339
sS'trials.thisIndex'
p2340
g48
(g590
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2341
sS'trials.thisRepN'
p2342
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80B0\xc0'
tRp2343
sg29
g48
(g50
S'\x00\x00\x00\x00\x00:\x11\xc0'
tRp2344
sg30
I0
sg61
g48
(g590
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2345
sS'trials.thisTrialN'
p2346
I175
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4964439868927002
sS'trials.thisN'
p2347
I175
sa(dp2348
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_08_orig.jpg'
p2349
sS'trials.thisIndex'
p2350
g48
(g590
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2351
sS'trials.thisRepN'
p2352
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xde2\xc0'
tRp2353
sg29
g48
(g50
S'\x00\x00\x00\x00\x00H\x12\xc0'
tRp2354
sg30
I0
sg61
g48
(g590
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2355
sS'trials.thisTrialN'
p2356
I176
sg32
I1
sg41
g42
sg45
g46
sg33
F2.0434880256652832
sS'trials.thisN'
p2357
I176
sa(dp2358
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_04_orig.jpg'
p2359
sS'trials.thisIndex'
p2360
g48
(g590
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2361
sS'trials.thisRepN'
p2362
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2363
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfe \xc0'
tRp2364
sg30
I1
sg61
g48
(g590
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2365
sS'trials.thisTrialN'
p2366
I177
sg32
I0
sg41
g42
sg45
g46
sg33
F1.924807071685791
sS'trials.thisN'
p2367
I177
sa(dp2368
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_04_orig.jpg'
p2369
sS'trials.thisIndex'
p2370
g48
(g590
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2371
sS'trials.thisRepN'
p2372
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80Y7\xc0'
tRp2373
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x0c\xc0'
tRp2374
sg30
I1
sg61
g48
(g590
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2375
sS'trials.thisTrialN'
p2376
I178
sg32
I0
sg41
g42
sg45
g46
sg33
F4.3896458148956299
sS'trials.thisN'
p2377
I178
sa(dp2378
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_07_orig.jpg'
p2379
sS'trials.thisIndex'
p2380
g48
(g590
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2381
sS'trials.thisRepN'
p2382
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80;7\xc0'
tRp2383
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c\xc0'
tRp2384
sg30
I0
sg61
g48
(g590
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2385
sS'trials.thisTrialN'
p2386
I179
sg32
I1
sg41
g42
sg45
g46
sg33
F1.9601600170135498
sS'trials.thisN'
p2387
I179
sa(dp2388
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_04_orig.jpg'
p2389
sS'trials.thisIndex'
p2390
g48
(g590
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2391
sS'trials.thisRepN'
p2392
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2393
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\t\xc0'
tRp2394
sg30
I0
sg61
g48
(g590
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2395
sS'trials.thisTrialN'
p2396
I180
sg32
I1
sg41
g42
sg45
g46
sg33
F3.1655271053314209
sS'trials.thisN'
p2397
I180
sa(dp2398
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_08_orig.jpg'
p2399
sS'trials.thisIndex'
p2400
g48
(g590
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2401
sS'trials.thisRepN'
p2402
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xff6\xc0'
tRp2403
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp2404
sg30
I0
sg61
g48
(g590
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2405
sS'trials.thisTrialN'
p2406
I181
sg32
I1
sg41
g42
sg45
g46
sg33
F1.675137996673584
sS'trials.thisN'
p2407
I181
sa(dp2408
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_05_orig.jpg'
p2409
sS'trials.thisIndex'
p2410
g48
(g590
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2411
sS'trials.thisRepN'
p2412
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp2413
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x06\xc0'
tRp2414
sg30
I0
sg61
g48
(g590
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2415
sS'trials.thisTrialN'
p2416
I182
sg32
I1
sg41
g42
sg45
g46
sg33
F3.7859680652618408
sS'trials.thisN'
p2417
I182
sa(dp2418
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_01_orig.jpg'
p2419
sS'trials.thisIndex'
p2420
g48
(g590
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2421
sS'trials.thisRepN'
p2422
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2423
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe8\x07\xc0'
tRp2424
sg30
I1
sg61
g48
(g590
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2425
sS'trials.thisTrialN'
p2426
I183
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3399450778961182
sS'trials.thisN'
p2427
I183
sa(dp2428
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_02_orig.jpg'
p2429
sS'trials.thisIndex'
p2430
g48
(g590
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2431
sS'trials.thisRepN'
p2432
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80"2\xc0'
tRp2433
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x86\x10\xc0'
tRp2434
sg30
I1
sg61
g48
(g590
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2435
sS'trials.thisTrialN'
p2436
I184
sg32
I0
sg41
g42
sg45
g46
sg33
F3.8699748516082764
sS'trials.thisN'
p2437
I184
sa(dp2438
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_08_orig.jpg'
p2439
sS'trials.thisIndex'
p2440
g48
(g590
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2441
sS'trials.thisRepN'
p2442
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe52\xc0'
tRp2443
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x04\n\xc0'
tRp2444
sg30
I0
sg61
g48
(g590
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2445
sS'trials.thisTrialN'
p2446
I185
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5740470886230469
sS'trials.thisN'
p2447
I185
sa(dp2448
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_00_orig.jpg'
p2449
sS'trials.thisIndex'
p2450
g48
(g590
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2451
sS'trials.thisRepN'
p2452
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80?3\xc0'
tRp2453
sg29
g48
(g50
S'\x00\x00\x00\x00\x00l\x0b\xc0'
tRp2454
sg30
I1
sg61
g48
(g590
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2455
sS'trials.thisTrialN'
p2456
I186
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6131820678710938
sS'trials.thisN'
p2457
I186
sa(dp2458
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_04_orig.jpg'
p2459
sS'trials.thisIndex'
p2460
g48
(g590
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2461
sS'trials.thisRepN'
p2462
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x8003\xc0'
tRp2463
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\t\xc0'
tRp2464
sg30
I1
sg61
g48
(g590
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2465
sS'trials.thisTrialN'
p2466
I187
sg32
I0
sg41
g42
sg45
g46
sg33
F8.2592370510101318
sS'trials.thisN'
p2467
I187
sa(dp2468
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_00_orig.jpg'
p2469
sS'trials.thisIndex'
p2470
g48
(g590
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2471
sS'trials.thisRepN'
p2472
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf51\xc0'
tRp2473
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp2474
sg30
I1
sg61
g48
(g590
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2475
sS'trials.thisTrialN'
p2476
I188
sg32
I0
sg41
g42
sg45
g46
sg33
F1.79158616065979
sS'trials.thisN'
p2477
I188
sa(dp2478
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_01_orig.jpg'
p2479
sS'trials.thisIndex'
p2480
g48
(g590
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2481
sS'trials.thisRepN'
p2482
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf60\xc0'
tRp2483
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x01\xc0'
tRp2484
sg30
I1
sg61
g48
(g590
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2485
sS'trials.thisTrialN'
p2486
I189
sg32
I0
sg41
g42
sg45
g46
sg33
F2.7465240955352783
sS'trials.thisN'
p2487
I189
sa(dp2488
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_08_orig.jpg'
p2489
sS'trials.thisIndex'
p2490
g48
(g590
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2491
sS'trials.thisRepN'
p2492
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb30\xc0'
tRp2493
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp2494
sg30
I0
sg61
g48
(g590
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2495
sS'trials.thisTrialN'
p2496
I190
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98718500137329102
sS'trials.thisN'
p2497
I190
sa(dp2498
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_01_orig.jpg'
p2499
sS'trials.thisIndex'
p2500
g48
(g590
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2501
sS'trials.thisRepN'
p2502
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc20\xc0'
tRp2503
sg29
g48
(g50
S'\x00\x00\x00\x00\x00p\xf7\xbf'
tRp2504
sg30
I1
sg61
g48
(g590
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2505
sS'trials.thisTrialN'
p2506
I191
sg32
I0
sg41
g42
sg45
g46
sg33
F10.457658052444458
sS'trials.thisN'
p2507
I191
sa(dp2508
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_07_orig.jpg'
p2509
sS'trials.thisIndex'
p2510
g48
(g590
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2511
sS'trials.thisRepN'
p2512
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb30\xc0'
tRp2513
sg29
g48
(g50
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp2514
sg30
I0
sg61
g48
(g590
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2515
sS'trials.thisTrialN'
p2516
I192
sg32
I1
sg41
g42
sg45
g46
sg33
F4.7228331565856934
sS'trials.thisN'
p2517
I192
sa(dp2518
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF10_00_orig.jpg'
p2519
sS'trials.thisIndex'
p2520
g48
(g590
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2521
sS'trials.thisRepN'
p2522
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd10\xc0'
tRp2523
sg29
g48
(g50
S'\x00\x00\x00\x00\x008\xf3\xbf'
tRp2524
sg30
I1
sg61
g48
(g590
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2525
sS'trials.thisTrialN'
p2526
I193
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6136348247528076
sS'trials.thisN'
p2527
I193
sa(dp2528
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_02_orig.jpg'
p2529
sS'trials.thisIndex'
p2530
g48
(g590
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2531
sS'trials.thisRepN'
p2532
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe00\xc0'
tRp2533
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xf2\xbf'
tRp2534
sg30
I0
sg61
g48
(g590
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2535
sS'trials.thisTrialN'
p2536
I194
sg32
I1
sg41
g42
sg45
g46
sg33
F5.5940010547637939
sS'trials.thisN'
p2537
I194
sa(dp2538
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF8_06_orig.jpg'
p2539
sS'trials.thisIndex'
p2540
g48
(g590
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2541
sS'trials.thisRepN'
p2542
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\r1\xc0'
tRp2543
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp2544
sg30
I1
sg61
g48
(g590
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2545
sS'trials.thisTrialN'
p2546
I195
sg32
I0
sg41
g42
sg45
g46
sg33
F15.367501020431519
sS'trials.thisN'
p2547
I195
sa(dp2548
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_05_orig.jpg'
p2549
sS'trials.thisIndex'
p2550
g48
(g590
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2551
sS'trials.thisRepN'
p2552
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00K.\xc0'
tRp2553
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x88\xfd\xbf'
tRp2554
sg30
I0
sg61
g48
(g590
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2555
sS'trials.thisTrialN'
p2556
I196
sg32
I1
sg41
g42
sg45
g46
sg33
F6.5518100261688232
sS'trials.thisN'
p2557
I196
sa(dp2558
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_04_orig.jpg'
p2559
sS'trials.thisIndex'
p2560
g48
(g590
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2561
sS'trials.thisRepN'
p2562
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd1/\xc0'
tRp2563
sg29
g48
(g50
S'\x00\x00\x00\x00\x00n\x19\xc0'
tRp2564
sg30
I0
sg61
g48
(g590
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2565
sS'trials.thisTrialN'
p2566
I197
sg32
I1
sg41
g42
sg45
g46
sg33
F11.411412954330444
sS'trials.thisN'
p2567
I197
sa(dp2568
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF2_03_orig.jpg'
p2569
sS'trials.thisIndex'
p2570
g48
(g590
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2571
sS'trials.thisRepN'
p2572
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x860\xc0'
tRp2573
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe2\x1d\xc0'
tRp2574
sg30
I1
sg61
g48
(g590
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2575
sS'trials.thisTrialN'
p2576
I198
sg32
I0
sg41
g42
sg45
g46
sg33
F3.9207408428192139
sS'trials.thisN'
p2577
I198
sa(dp2578
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF9_06_orig.jpg'
p2579
sS'trials.thisIndex'
p2580
g48
(g590
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2581
sS'trials.thisRepN'
p2582
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4+\xc0'
tRp2583
sg29
g48
(g50
S'\x00\x00\x00\x00\x00)#\xc0'
tRp2584
sg30
I1
sg61
g48
(g590
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2585
sS'trials.thisTrialN'
p2586
I199
sg32
I0
sg41
g42
sg45
g46
sg33
F4.0711071491241455
sS'trials.thisN'
p2587
I199
sa(dp2588
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF5_10_orig.jpg'
p2589
sS'trials.thisIndex'
p2590
g48
(g590
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2591
sS'trials.thisRepN'
p2592
I0
sg47
g51
sg28
g48
(g50
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp2593
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd1 \xc0'
tRp2594
sg30
I0
sg61
g48
(g590
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2595
sS'trials.thisTrialN'
p2596
I200
sg32
I1
sg41
g42
sg45
g46
sg33
F5.5287001132965088
sS'trials.thisN'
p2597
I200
sa(dp2598
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_00_orig.jpg'
p2599
sS'trials.thisIndex'
p2600
g48
(g590
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2601
sS'trials.thisRepN'
p2602
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xcd$\xc0'
tRp2603
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfa\x14\xc0'
tRp2604
sg30
I0
sg61
g48
(g590
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2605
sS'trials.thisTrialN'
p2606
I201
sg32
I1
sg41
g42
sg45
g46
sg33
F17.294986009597778
sS'trials.thisN'
p2607
I201
sa(dp2608
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM9_01_orig.jpg'
p2609
sS'trials.thisIndex'
p2610
g48
(g590
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2611
sS'trials.thisRepN'
p2612
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp2613
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp2614
sg30
I1
sg61
g48
(g590
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2615
sS'trials.thisTrialN'
p2616
I202
sg32
I0
sg41
g42
sg45
g46
sg33
F10.071774005889893
sS'trials.thisN'
p2617
I202
sa(dp2618
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_08_orig.jpg'
p2619
sS'trials.thisIndex'
p2620
g48
(g590
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2621
sS'trials.thisRepN'
p2622
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9b)\xc0'
tRp2623
sg29
g48
(g50
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp2624
sg30
I0
sg61
g48
(g590
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2625
sS'trials.thisTrialN'
p2626
I203
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3778328895568848
sS'trials.thisN'
p2627
I203
sa(dp2628
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_08_orig.jpg'
p2629
sS'trials.thisIndex'
p2630
g48
(g590
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2631
sS'trials.thisRepN'
p2632
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00M,\xc0'
tRp2633
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\xd4\xbf'
tRp2634
sg30
I1
sg61
g48
(g590
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2635
sS'trials.thisTrialN'
p2636
I204
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4915931224822998
sS'trials.thisN'
p2637
I204
sa(dp2638
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF6_03_orig.jpg'
p2639
sS'trials.thisIndex'
p2640
g48
(g590
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2641
sS'trials.thisRepN'
p2642
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp2643
sg29
g48
(g50
S'\x00\x00\x00\x00\x00 \xdc?'
tRp2644
sg30
I1
sg61
g48
(g590
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2645
sS'trials.thisTrialN'
p2646
I205
sg32
I0
sg41
g42
sg45
g46
sg33
F4.0364880561828613
sS'trials.thisN'
p2647
I205
sa(dp2648
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF7_00_orig.jpg'
p2649
sS'trials.thisIndex'
p2650
g48
(g590
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2651
sS'trials.thisRepN'
p2652
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd1/\xc0'
tRp2653
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp2654
sg30
I1
sg61
g48
(g590
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2655
sS'trials.thisTrialN'
p2656
I206
sg32
I0
sg41
g42
sg45
g46
sg33
F6.7862949371337891
sS'trials.thisN'
p2657
I206
sa(dp2658
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM8_00_orig.jpg'
p2659
sS'trials.thisIndex'
p2660
g48
(g590
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2661
sS'trials.thisRepN'
p2662
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xba0\xc0'
tRp2663
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcf"\xc0'
tRp2664
sg30
I0
sg61
g48
(g590
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2665
sS'trials.thisTrialN'
p2666
I207
sg32
I1
sg41
g42
sg45
g46
sg33
F3.0994620323181152
sS'trials.thisN'
p2667
I207
sa(dp2668
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF3_04_orig.jpg'
p2669
sS'trials.thisIndex'
p2670
g48
(g590
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2671
sS'trials.thisRepN'
p2672
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00?+\xc0'
tRp2673
sg29
g48
(g50
S'\x00\x00\x00\x00\x00:!\xc0'
tRp2674
sg30
I0
sg61
g48
(g590
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2675
sS'trials.thisTrialN'
p2676
I208
sg32
I1
sg41
g42
sg45
g46
sg33
F10.406840085983276
sS'trials.thisN'
p2677
I208
sa(dp2678
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_04_orig.jpg'
p2679
sS'trials.thisIndex'
p2680
g48
(g590
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2681
sS'trials.thisRepN'
p2682
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfb3\xc0'
tRp2683
sg29
g48
(g50
S'\x00\x00\x00\x00\x00e#\xc0'
tRp2684
sg30
I0
sg61
g48
(g590
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2685
sS'trials.thisTrialN'
p2686
I209
sg32
I1
sg41
g42
sg45
g46
sg33
F3.5011911392211914
sS'trials.thisN'
p2687
I209
sa(dp2688
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF1_00_orig.jpg'
p2689
sS'trials.thisIndex'
p2690
g48
(g590
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2691
sS'trials.thisRepN'
p2692
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x993\xc0'
tRp2693
sg29
g48
(g50
S'\x00\x00\x00\x00\x00V#\xc0'
tRp2694
sg30
I1
sg61
g48
(g590
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2695
sS'trials.thisTrialN'
p2696
I210
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1198410987854004
sS'trials.thisN'
p2697
I210
sa(dp2698
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM1_08_orig.jpg'
p2699
sS'trials.thisIndex'
p2700
g48
(g590
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2701
sS'trials.thisRepN'
p2702
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xb73\xc0'
tRp2703
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb0#\xc0'
tRp2704
sg30
I1
sg61
g48
(g590
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2705
sS'trials.thisTrialN'
p2706
I211
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0485968589782715
sS'trials.thisN'
p2707
I211
sa(dp2708
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_06_orig.jpg'
p2709
sS'trials.thisIndex'
p2710
g48
(g590
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2711
sS'trials.thisRepN'
p2712
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xe34\xc0'
tRp2713
sg29
g48
(g50
S'\x00\x00\x00\x00\x007$\xc0'
tRp2714
sg30
I0
sg61
g48
(g590
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2715
sS'trials.thisTrialN'
p2716
I212
sg32
I1
sg41
g42
sg45
g46
sg33
F4.507249116897583
sS'trials.thisN'
p2717
I212
sa(dp2718
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphF4_10_orig.jpg'
p2719
sS'trials.thisIndex'
p2720
g48
(g590
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2721
sS'trials.thisRepN'
p2722
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80[5\xc0'
tRp2723
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x82$\xc0'
tRp2724
sg30
I0
sg61
g48
(g590
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2725
sS'trials.thisTrialN'
p2726
I213
sg32
I1
sg41
g42
sg45
g46
sg33
F5.3446991443634033
sS'trials.thisN'
p2727
I213
sa(dp2728
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM7_04_orig.jpg'
p2729
sS'trials.thisIndex'
p2730
g48
(g590
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2731
sS'trials.thisRepN'
p2732
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x815\xc0'
tRp2733
sg29
g48
(g50
S'\x00\x00\x00\x00\x00F$\xc0'
tRp2734
sg30
I0
sg61
g48
(g590
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2735
sS'trials.thisTrialN'
p2736
I214
sg32
I1
sg41
g42
sg45
g46
sg33
F8.041860818862915
sS'trials.thisN'
p2737
I214
sa(dp2738
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM2_05_orig.jpg'
p2739
sS'trials.thisIndex'
p2740
g48
(g590
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2741
sS'trials.thisRepN'
p2742
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80j5\xc0'
tRp2743
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfb#\xc0'
tRp2744
sg30
I1
sg61
g48
(g590
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2745
sS'trials.thisTrialN'
p2746
I215
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9630038738250732
sS'trials.thisN'
p2747
I215
sa(dp2748
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM3_00_orig.jpg'
p2749
sS'trials.thisIndex'
p2750
g48
(g590
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2751
sS'trials.thisRepN'
p2752
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xd44\xc0'
tRp2753
sg29
g48
(g50
S'\x00\x00\x00\x00\x00e#\xc0'
tRp2754
sg30
I1
sg61
g48
(g590
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2755
sS'trials.thisTrialN'
p2756
I216
sg32
I0
sg41
g42
sg45
g46
sg33
F2.563244104385376
sS'trials.thisN'
p2757
I216
sa(dp2758
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM10_02_orig.jpg'
p2759
sS'trials.thisIndex'
p2760
g48
(g590
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2761
sS'trials.thisRepN'
p2762
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00s4\xc0'
tRp2763
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xde"\xc0'
tRp2764
sg30
I1
sg61
g48
(g590
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2765
sS'trials.thisTrialN'
p2766
I217
sg32
I0
sg41
g42
sg45
g46
sg33
F1.892038106918335
sS'trials.thisN'
p2767
I217
sa(dp2768
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM4_09_orig.jpg'
p2769
sS'trials.thisIndex'
p2770
g48
(g590
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2771
sS'trials.thisRepN'
p2772
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80M4\xc0'
tRp2773
sg29
g48
(g50
S'\x00\x00\x00\x00\x00H"\xc0'
tRp2774
sg30
I0
sg61
g48
(g590
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2775
sS'trials.thisTrialN'
p2776
I218
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4115090370178223
sS'trials.thisN'
p2777
I218
sa(dp2778
g31
I0
sg44
g11
sg43
VG
sg587
S'./stim/MorphM6_05_orig.jpg'
p2779
sS'trials.thisIndex'
p2780
g48
(g590
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2781
sS'trials.thisRepN'
p2782
I0
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00U4\xc0'
tRp2783
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa3!\xc0'
tRp2784
sg30
I1
sg61
g48
(g590
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2785
sS'trials.thisTrialN'
p2786
I219
sg32
I0
sg41
g42
sg45
g46
sg33
F3.568809986114502
sS'trials.thisN'
p2787
I219
sa(dp2788
g44
g11
sg34
S'return'
p2789
sg43
VG
sg41
g42
sg45
g46
sg47
g51
sg35
F24.838092088699341
sa(dp2790
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2791
g48
(g590
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2792
sS'trials2.thisRepN'
p2793
I0
sS'trials2.thisTrialN'
p2794
I0
sS'img'
p2795
S'./stim/MorphF1_02_orig.jpg'
p2796
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x894\xc0'
tRp2797
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb2!\xc0'
tRp2798
sg30
I1
sS'num'
p2799
g48
(g590
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2800
sg32
I0
sg41
g42
sg45
g46
sg33
F3.4344100952148438
sS'trials2.thisN'
p2801
I0
sa(dp2802
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2803
g48
(g590
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2804
sS'trials2.thisRepN'
p2805
I0
sS'trials2.thisTrialN'
p2806
I1
sg2795
S'./stim/MorphF3_06_orig.jpg'
p2807
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\x894\xc0'
tRp2808
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1c!\xc0'
tRp2809
sg30
I1
sg2799
g48
(g590
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2810
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6295828819274902
sS'trials2.thisN'
p2811
I1
sa(dp2812
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2813
g48
(g590
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2814
sS'trials2.thisRepN'
p2815
I0
sS'trials2.thisTrialN'
p2816
I2
sg2795
S'./stim/MorphF5_06_orig.jpg'
p2817
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xb46\xc0'
tRp2818
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb1"\xc0'
tRp2819
sg30
I0
sg2799
g48
(g590
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2820
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8923468589782715
sS'trials2.thisN'
p2821
I2
sa(dp2822
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2823
g48
(g590
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2824
sS'trials2.thisRepN'
p2825
I0
sS'trials2.thisTrialN'
p2826
I3
sg2795
S'./stim/MorphM8_01_orig.jpg'
p2827
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80z4\xc0'
tRp2828
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x95 @'
tRp2829
sg30
I1
sg2799
g48
(g590
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2830
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1263680458068848
sS'trials2.thisN'
p2831
I3
sa(dp2832
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2833
g48
(g590
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2834
sS'trials2.thisRepN'
p2835
I0
sS'trials2.thisTrialN'
p2836
I4
sg2795
S'./stim/MorphF10_04_orig.jpg'
p2837
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xc45\xc0'
tRp2838
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x12@'
tRp2839
sg30
I1
sg2799
g48
(g590
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2840
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3601939678192139
sS'trials2.thisN'
p2841
I4
sa(dp2842
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2843
g48
(g590
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2844
sS'trials2.thisRepN'
p2845
I0
sS'trials2.thisTrialN'
p2846
I5
sg2795
S'./stim/MorphF6_04_orig.jpg'
p2847
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80;7\xc0'
tRp2848
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp2849
sg30
I1
sg2799
g48
(g590
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2850
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4065649509429932
sS'trials2.thisN'
p2851
I5
sa(dp2852
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2853
g48
(g590
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2854
sS'trials2.thisRepN'
p2855
I0
sS'trials2.thisTrialN'
p2856
I6
sg2795
S'./stim/MorphM9_01_orig.jpg'
p2857
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00%7\xc0'
tRp2858
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp2859
sg30
I1
sg2799
g48
(g590
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2860
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0826818943023682
sS'trials2.thisN'
p2861
I6
sa(dp2862
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2863
g48
(g590
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2864
sS'trials2.thisRepN'
p2865
I0
sS'trials2.thisTrialN'
p2866
I7
sg2795
S'./stim/MorphM4_03_orig.jpg'
p2867
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80;7\xc0'
tRp2868
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2869
sg30
I0
sg2799
g48
(g590
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2870
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2941040992736816
sS'trials2.thisN'
p2871
I7
sa(dp2872
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2873
g48
(g590
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2874
sS'trials2.thisRepN'
p2875
I0
sS'trials2.thisTrialN'
p2876
I8
sg2795
S'./stim/MorphF5_00_orig.jpg'
p2877
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80\xf06\xc0'
tRp2878
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08\xf6?'
tRp2879
sg30
I1
sg2799
g48
(g590
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2880
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3897449970245361
sS'trials2.thisN'
p2881
I8
sa(dp2882
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2883
g48
(g590
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2884
sS'trials2.thisRepN'
p2885
I0
sS'trials2.thisTrialN'
p2886
I9
sg2795
S'./stim/MorphM8_02_orig.jpg'
p2887
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe96\xc0'
tRp2888
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xfe?'
tRp2889
sg30
I0
sg2799
g48
(g590
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2890
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5403141975402832
sS'trials2.thisN'
p2891
I9
sa(dp2892
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2893
g48
(g590
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2894
sS'trials2.thisRepN'
p2895
I0
sS'trials2.thisTrialN'
p2896
I10
sg2795
S'./stim/MorphM5_04_orig.jpg'
p2897
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2898
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x00@'
tRp2899
sg30
I0
sg2799
g48
(g590
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2900
sg32
I1
sg41
g42
sg45
g46
sg33
F4.0704760551452637
sS'trials2.thisN'
p2901
I10
sa(dp2902
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2903
g48
(g590
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2904
sS'trials2.thisRepN'
p2905
I0
sS'trials2.thisTrialN'
p2906
I11
sg2795
S'./stim/MorphM3_03_orig.jpg'
p2907
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2908
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp2909
sg30
I1
sg2799
g48
(g590
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2910
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95144009590148926
sS'trials2.thisN'
p2911
I11
sa(dp2912
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2913
g48
(g590
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2914
sS'trials2.thisRepN'
p2915
I0
sS'trials2.thisTrialN'
p2916
I12
sg2795
S'./stim/MorphM5_08_orig.jpg'
p2917
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp2918
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xc2\xbf'
tRp2919
sg30
I0
sg2799
g48
(g590
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2920
sg32
I1
sg41
g42
sg45
g46
sg33
F5.6118271350860596
sS'trials2.thisN'
p2921
I12
sa(dp2922
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2923
g48
(g590
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2924
sS'trials2.thisRepN'
p2925
I0
sS'trials2.thisTrialN'
p2926
I13
sg2795
S'./stim/MorphF8_09_orig.jpg'
p2927
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80,7\xc0'
tRp2928
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2929
sg30
I0
sg2799
g48
(g590
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2930
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8978939056396484
sS'trials2.thisN'
p2931
I13
sa(dp2932
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2933
g48
(g590
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2934
sS'trials2.thisRepN'
p2935
I0
sS'trials2.thisTrialN'
p2936
I14
sg2795
S'./stim/MorphM1_07_orig.jpg'
p2937
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2938
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp2939
sg30
I1
sg2799
g48
(g590
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2940
sg32
I0
sg41
g42
sg45
g46
sg33
F1.9274959564208984
sS'trials2.thisN'
p2941
I14
sa(dp2942
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2943
g48
(g590
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2944
sS'trials2.thisRepN'
p2945
I0
sS'trials2.thisTrialN'
p2946
I15
sg2795
S'./stim/MorphM7_07_orig.jpg'
p2947
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2948
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xdf?'
tRp2949
sg30
I0
sg2799
g48
(g590
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2950
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0033779144287109
sS'trials2.thisN'
p2951
I15
sa(dp2952
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2953
g48
(g590
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2954
sS'trials2.thisRepN'
p2955
I0
sS'trials2.thisTrialN'
p2956
I16
sg2795
S'./stim/MorphF7_06_orig.jpg'
p2957
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2958
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xce?'
tRp2959
sg30
I0
sg2799
g48
(g590
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2960
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5796158313751221
sS'trials2.thisN'
p2961
I16
sa(dp2962
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2963
g48
(g590
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2964
sS'trials2.thisRepN'
p2965
I0
sS'trials2.thisTrialN'
p2966
I17
sg2795
S'./stim/MorphM10_07_orig.jpg'
p2967
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2968
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xd0\xbf'
tRp2969
sg30
I0
sg2799
g48
(g590
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2970
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6424620151519775
sS'trials2.thisN'
p2971
I17
sa(dp2972
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2973
g48
(g590
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2974
sS'trials2.thisRepN'
p2975
I0
sS'trials2.thisTrialN'
p2976
I18
sg2795
S'./stim/MorphF4_00_orig.jpg'
p2977
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x0047\xc0'
tRp2978
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp2979
sg30
I1
sg2799
g48
(g590
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2980
sg32
I0
sg41
g42
sg45
g46
sg33
F0.86927103996276855
sS'trials2.thisN'
p2981
I18
sa(dp2982
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2983
g48
(g590
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2984
sS'trials2.thisRepN'
p2985
I0
sS'trials2.thisTrialN'
p2986
I19
sg2795
S'./stim/MorphM7_08_orig.jpg'
p2987
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2988
sg29
g48
(g50
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp2989
sg30
I0
sg2799
g48
(g590
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2990
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6300389766693115
sS'trials2.thisN'
p2991
I19
sa(dp2992
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p2993
g48
(g590
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2994
sS'trials2.thisRepN'
p2995
I0
sS'trials2.thisTrialN'
p2996
I20
sg2795
S'./stim/MorphM8_06_orig.jpg'
p2997
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00p7\xc0'
tRp2998
sg29
g48
(g50
S'\x00\x00\x00\x00\x00x\xfe\xbf'
tRp2999
sg30
I0
sg2799
g48
(g590
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp3000
sg32
I1
sg41
g42
sg45
g46
sg33
F3.8198449611663818
sS'trials2.thisN'
p3001
I20
sa(dp3002
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3003
g48
(g590
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3004
sS'trials2.thisRepN'
p3005
I0
sS'trials2.thisTrialN'
p3006
I21
sg2795
S'./stim/MorphM5_09_orig.jpg'
p3007
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R7\xc0'
tRp3008
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp3009
sg30
I0
sg2799
g48
(g590
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3010
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2773549556732178
sS'trials2.thisN'
p3011
I21
sa(dp3012
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3013
g48
(g590
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3014
sS'trials2.thisRepN'
p3015
I0
sS'trials2.thisTrialN'
p3016
I22
sg2795
S'./stim/MorphF3_00_orig.jpg'
p3017
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80x6\xc0'
tRp3018
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x16\xc0'
tRp3019
sg30
I1
sg2799
g48
(g590
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3020
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7583479881286621
sS'trials2.thisN'
p3021
I22
sa(dp3022
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3023
g48
(g590
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3024
sS'trials2.thisRepN'
p3025
I0
sS'trials2.thisTrialN'
p3026
I23
sg2795
S'./stim/MorphF4_07_orig.jpg'
p3027
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00&6\xc0'
tRp3028
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08\xf6?'
tRp3029
sg30
I0
sg2799
g48
(g590
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3030
sg32
I1
sg41
g42
sg45
g46
sg33
F1.7416539192199707
sS'trials2.thisN'
p3031
I23
sa(dp3032
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3033
g48
(g590
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3034
sS'trials2.thisRepN'
p3035
I0
sS'trials2.thisTrialN'
p3036
I24
sg2795
S'./stim/MorphM6_02_orig.jpg'
p3037
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x80/4\xc0'
tRp3038
sg29
g48
(g50
S'\x00\x00\x00\x00\x008\x03@'
tRp3039
sg30
I1
sg2799
g48
(g590
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3040
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0269889831542969
sS'trials2.thisN'
p3041
I24
sa(dp3042
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3043
g48
(g590
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3044
sS'trials2.thisRepN'
p3045
I0
sS'trials2.thisTrialN'
p3046
I25
sg2795
S'./stim/MorphF10_01_orig.jpg'
p3047
sg47
g51
sg28
g48
(g50
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp3048
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#@'
tRp3049
sg30
I0
sg2799
g48
(g590
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3050
sg32
I1
sg41
g42
sg45
g46
sg33
F14.026426076889038
sS'trials2.thisN'
p3051
I25
sa(dp3052
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3053
g48
(g590
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3054
sS'trials2.thisRepN'
p3055
I0
sS'trials2.thisTrialN'
p3056
I26
sg2795
S'./stim/MorphF9_06_orig.jpg'
p3057
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00})\xc0'
tRp3058
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1b"@'
tRp3059
sg30
I0
sg2799
g48
(g590
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3060
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4401638507843018
sS'trials2.thisN'
p3061
I26
sa(dp3062
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3063
g48
(g590
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3064
sS'trials2.thisRepN'
p3065
I0
sS'trials2.thisTrialN'
p3066
I27
sg2795
S'./stim/MorphM6_03_orig.jpg'
p3067
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc5,\xc0'
tRp3068
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp3069
sg30
I1
sg2799
g48
(g590
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3070
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0261299610137939
sS'trials2.thisN'
p3071
I27
sa(dp3072
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3073
g48
(g590
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3074
sS'trials2.thisRepN'
p3075
I0
sS'trials2.thisTrialN'
p3076
I28
sg2795
S'./stim/MorphM2_03_orig.jpg'
p3077
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x02,\xc0'
tRp3078
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Y @'
tRp3079
sg30
I1
sg2799
g48
(g590
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3080
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2730228900909424
sS'trials2.thisN'
p3081
I28
sa(dp3082
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3083
g48
(g590
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3084
sS'trials2.thisRepN'
p3085
I0
sS'trials2.thisTrialN'
p3086
I29
sg2795
S'./stim/MorphF8_02_orig.jpg'
p3087
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x11,\xc0'
tRp3088
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb3 @'
tRp3089
sg30
I1
sg2799
g48
(g590
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3090
sg32
I0
sg41
g42
sg45
g46
sg33
F4.2531530857086182
sS'trials2.thisN'
p3091
I29
sa(dp3092
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3093
g48
(g590
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3094
sS'trials2.thisRepN'
p3095
I0
sS'trials2.thisTrialN'
p3096
I30
sg2795
S'./stim/MorphM8_03_orig.jpg'
p3097
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00]+\xc0'
tRp3098
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0 @'
tRp3099
sg30
I0
sg2799
g48
(g590
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3100
sg32
I1
sg41
g42
sg45
g46
sg33
F3.0825932025909424
sS'trials2.thisN'
p3101
I30
sa(dp3102
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3103
g48
(g590
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3104
sS'trials2.thisRepN'
p3105
I0
sS'trials2.thisTrialN'
p3106
I31
sg2795
S'./stim/MorphM9_05_orig.jpg'
p3107
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|*\xc0'
tRp3108
sg29
g48
(g50
S'\x00\x00\x00\x00\x00I!@'
tRp3109
sg30
I1
sg2799
g48
(g590
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3110
sg32
I0
sg41
g42
sg45
g46
sg33
F6.1325349807739258
sS'trials2.thisN'
p3111
I31
sa(dp3112
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3113
g48
(g590
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3114
sS'trials2.thisRepN'
p3115
I0
sS'trials2.thisTrialN'
p3116
I32
sg2795
S'./stim/MorphF5_09_orig.jpg'
p3117
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp3118
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe0 @'
tRp3119
sg30
I0
sg2799
g48
(g590
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3120
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2388479709625244
sS'trials2.thisN'
p3121
I32
sa(dp3122
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3123
g48
(g590
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3124
sS'trials2.thisRepN'
p3125
I0
sS'trials2.thisTrialN'
p3126
I33
sg2795
S'./stim/MorphM2_08_orig.jpg'
p3127
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00/,\xc0'
tRp3128
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\x18@'
tRp3129
sg30
I0
sg2799
g48
(g590
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3130
sg32
I1
sg41
g42
sg45
g46
sg33
F2.7465310096740723
sS'trials2.thisN'
p3131
I33
sa(dp3132
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3133
g48
(g590
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3134
sS'trials2.thisRepN'
p3135
I0
sS'trials2.thisTrialN'
p3136
I34
sg2795
S'./stim/MorphM6_08_orig.jpg'
p3137
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe3,\xc0'
tRp3138
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\x19@'
tRp3139
sg30
I1
sg2799
g48
(g590
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3140
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8638598918914795
sS'trials2.thisN'
p3141
I34
sa(dp3142
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3143
g48
(g590
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3144
sS'trials2.thisRepN'
p3145
I0
sS'trials2.thisTrialN'
p3146
I35
sg2795
S'./stim/MorphF5_04_orig.jpg'
p3147
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00<.\xc0'
tRp3148
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xea\x15@'
tRp3149
sg30
I1
sg2799
g48
(g590
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3150
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5125210285186768
sS'trials2.thisN'
p3151
I35
sa(dp3152
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3153
g48
(g590
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3154
sS'trials2.thisRepN'
p3155
I0
sS'trials2.thisTrialN'
p3156
I36
sg2795
S'./stim/MorphF4_08_orig.jpg'
p3157
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4*\xc0'
tRp3158
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\x1a@'
tRp3159
sg30
I0
sg2799
g48
(g590
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3160
sg32
I1
sg41
g42
sg45
g46
sg33
F5.2588398456573486
sS'trials2.thisN'
p3161
I36
sa(dp3162
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3163
g48
(g590
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3164
sS'trials2.thisRepN'
p3165
I0
sS'trials2.thisTrialN'
p3166
I37
sg2795
S'./stim/MorphM8_00_orig.jpg'
p3167
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe6)\xc0'
tRp3168
sg29
g48
(g50
S'\x00\x00\x00\x00\x00n\x19@'
tRp3169
sg30
I1
sg2799
g48
(g590
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3170
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9484729766845703
sS'trials2.thisN'
p3171
I37
sa(dp3172
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3173
g48
(g590
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3174
sS'trials2.thisRepN'
p3175
I0
sS'trials2.thisTrialN'
p3176
I38
sg2795
S'./stim/MorphF9_00_orig.jpg'
p3177
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe5*\xc0'
tRp3178
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x1c@'
tRp3179
sg30
I1
sg2799
g48
(g590
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3180
sg32
I0
sg41
g42
sg45
g46
sg33
F8.930171012878418
sS'trials2.thisN'
p3181
I38
sa(dp3182
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3183
g48
(g590
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3184
sS'trials2.thisRepN'
p3185
I0
sS'trials2.thisTrialN'
p3186
I39
sg2795
S'./stim/MorphF1_05_orig.jpg'
p3187
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe5*\xc0'
tRp3188
sg29
g48
(g50
S'\x00\x00\x00\x00\x00x\x1e@'
tRp3189
sg30
I1
sg2799
g48
(g590
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3190
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8087930679321289
sS'trials2.thisN'
p3191
I39
sa(dp3192
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3193
g48
(g590
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3194
sS'trials2.thisRepN'
p3195
I0
sS'trials2.thisTrialN'
p3196
I40
sg2795
S'./stim/MorphM4_05_orig.jpg'
p3197
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe5*\xc0'
tRp3198
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp3199
sg30
I0
sg2799
g48
(g590
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3200
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1376309394836426
sS'trials2.thisN'
p3201
I40
sa(dp3202
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3203
g48
(g590
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3204
sS'trials2.thisRepN'
p3205
I0
sS'trials2.thisTrialN'
p3206
I41
sg2795
S'./stim/MorphM1_05_orig.jpg'
p3207
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe5*\xc0'
tRp3208
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa4 @'
tRp3209
sg30
I0
sg2799
g48
(g590
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3210
sg32
I1
sg41
g42
sg45
g46
sg33
F3.2673618793487549
sS'trials2.thisN'
p3211
I41
sa(dp3212
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3213
g48
(g590
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3214
sS'trials2.thisRepN'
p3215
I0
sS'trials2.thisTrialN'
p3216
I42
sg2795
S'./stim/MorphM8_10_orig.jpg'
p3217
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc7*\xc0'
tRp3218
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd1 @'
tRp3219
sg30
I0
sg2799
g48
(g590
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3220
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3056261539459229
sS'trials2.thisN'
p3221
I42
sa(dp3222
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3223
g48
(g590
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3224
sS'trials2.thisRepN'
p3225
I0
sS'trials2.thisTrialN'
p3226
I43
sg2795
S'./stim/MorphF8_00_orig.jpg'
p3227
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa8+\xc0'
tRp3228
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x94!@'
tRp3229
sg30
I1
sg2799
g48
(g590
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3230
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0434191226959229
sS'trials2.thisN'
p3231
I43
sa(dp3232
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3233
g48
(g590
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3234
sS'trials2.thisRepN'
p3235
I0
sS'trials2.thisTrialN'
p3236
I44
sg2795
S'./stim/MorphF7_10_orig.jpg'
p3237
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x98,\xc0'
tRp3238
sg29
g48
(g50
S'\x00\x00\x00\x00\x00W"@'
tRp3239
sg30
I0
sg2799
g48
(g590
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3240
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5240380764007568
sS'trials2.thisN'
p3241
I44
sa(dp3242
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3243
g48
(g590
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3244
sS'trials2.thisRepN'
p3245
I0
sS'trials2.thisTrialN'
p3246
I45
sg2795
S'./stim/MorphM8_05_orig.jpg'
p3247
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd4,\xc0'
tRp3248
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#@'
tRp3249
sg30
I1
sg2799
g48
(g590
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3250
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0748858451843262
sS'trials2.thisN'
p3251
I45
sa(dp3252
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3253
g48
(g590
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3254
sS'trials2.thisRepN'
p3255
I0
sS'trials2.thisTrialN'
p3256
I46
sg2795
S'./stim/MorphM4_00_orig.jpg'
p3257
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf2,\xc0'
tRp3258
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x91$@'
tRp3259
sg30
I1
sg2799
g48
(g590
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3260
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4576630592346191
sS'trials2.thisN'
p3261
I46
sa(dp3262
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3263
g48
(g590
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3264
sS'trials2.thisRepN'
p3265
I0
sS'trials2.thisTrialN'
p3266
I47
sg2795
S'./stim/MorphF1_00_orig.jpg'
p3267
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1f-\xc0'
tRp3268
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdc$@'
tRp3269
sg30
I1
sg2799
g48
(g590
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3270
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95291686058044434
sS'trials2.thisN'
p3271
I47
sa(dp3272
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3273
g48
(g590
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3274
sS'trials2.thisRepN'
p3275
I0
sS'trials2.thisTrialN'
p3276
I48
sg2795
S'./stim/MorphF5_02_orig.jpg'
p3277
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00.-\xc0'
tRp3278
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xfa$@'
tRp3279
sg30
I1
sg2799
g48
(g590
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3280
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3889479637145996
sS'trials2.thisN'
p3281
I48
sa(dp3282
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3283
g48
(g590
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3284
sS'trials2.thisRepN'
p3285
I0
sS'trials2.thisTrialN'
p3286
I49
sg2795
S'./stim/MorphF7_00_orig.jpg'
p3287
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd4,\xc0'
tRp3288
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcd$@'
tRp3289
sg30
I1
sg2799
g48
(g590
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3290
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3897750377655029
sS'trials2.thisN'
p3291
I49
sa(dp3292
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3293
g48
(g590
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3294
sS'trials2.thisRepN'
p3295
I0
sS'trials2.thisTrialN'
p3296
I50
sg2795
S'./stim/MorphM2_07_orig.jpg'
p3297
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x89,\xc0'
tRp3298
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa0$@'
tRp3299
sg30
I0
sg2799
g48
(g590
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3300
sg32
I1
sg41
g42
sg45
g46
sg33
F1.6912040710449219
sS'trials2.thisN'
p3301
I50
sa(dp3302
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3303
g48
(g590
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3304
sS'trials2.thisRepN'
p3305
I0
sS'trials2.thisTrialN'
p3306
I51
sg2795
S'./stim/MorphM9_04_orig.jpg'
p3307
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00z,\xc0'
tRp3308
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x82$@'
tRp3309
sg30
I1
sg2799
g48
(g590
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3310
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5073740482330322
sS'trials2.thisN'
p3311
I51
sa(dp3312
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3313
g48
(g590
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3314
sS'trials2.thisRepN'
p3315
I0
sS'trials2.thisTrialN'
p3316
I52
sg2795
S'./stim/MorphM3_00_orig.jpg'
p3317
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\\,\xc0'
tRp3318
sg29
g48
(g50
S'\x00\x00\x00\x00\x00F$@'
tRp3319
sg30
I1
sg2799
g48
(g590
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3320
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6465919017791748
sS'trials2.thisN'
p3321
I52
sa(dp3322
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3323
g48
(g590
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3324
sS'trials2.thisRepN'
p3325
I0
sS'trials2.thisTrialN'
p3326
I53
sg2795
S'./stim/MorphM1_04_orig.jpg'
p3327
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4+\xc0'
tRp3328
sg29
g48
(g50
S'\x00\x00\x00\x00\x00u"@'
tRp3329
sg30
I1
sg2799
g48
(g590
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3330
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6079158782958984
sS'trials2.thisN'
p3331
I53
sa(dp3332
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3333
g48
(g590
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3334
sS'trials2.thisRepN'
p3335
I0
sS'trials2.thisTrialN'
p3336
I54
sg2795
S'./stim/MorphM2_06_orig.jpg'
p3337
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd5+\xc0'
tRp3338
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x84"@'
tRp3339
sg30
I0
sg2799
g48
(g590
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3340
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3265459537506104
sS'trials2.thisN'
p3341
I54
sa(dp3342
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3343
g48
(g590
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3344
sS'trials2.thisRepN'
p3345
I0
sS'trials2.thisTrialN'
p3346
I55
sg2795
S'./stim/MorphM3_04_orig.jpg'
p3347
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp3348
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x17&\xc0'
tRp3349
sg30
I1
sg2799
g48
(g590
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3350
sg32
I0
sg41
g42
sg45
g46
sg33
F9.8702771663665771
sS'trials2.thisN'
p3351
I55
sa(dp3352
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3353
g48
(g590
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3354
sS'trials2.thisRepN'
p3355
I0
sS'trials2.thisTrialN'
p3356
I56
sg2795
S'./stim/MorphF9_09_orig.jpg'
p3357
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3358
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9f%\xc0'
tRp3359
sg30
I0
sg2799
g48
(g590
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3360
sg32
I1
sg41
g42
sg45
g46
sg33
F2.3289580345153809
sS'trials2.thisN'
p3361
I56
sa(dp3362
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3363
g48
(g590
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3364
sS'trials2.thisRepN'
p3365
I0
sS'trials2.thisTrialN'
p3366
I57
sg2795
S'./stim/MorphM7_03_orig.jpg'
p3367
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb2\x11@'
tRp3368
sg29
g48
(g50
S'\x00\x00\x00\x00\x00E%\xc0'
tRp3369
sg30
I1
sg2799
g48
(g590
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3370
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7748739719390869
sS'trials2.thisN'
p3371
I57
sa(dp3372
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3373
g48
(g590
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3374
sS'trials2.thisRepN'
p3375
I0
sS'trials2.thisTrialN'
p3376
I58
sg2795
S'./stim/MorphF7_04_orig.jpg'
p3377
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00*\x12@'
tRp3378
sg29
g48
(g50
S'\x00\x00\x00\x00\x00E%\xc0'
tRp3379
sg30
I1
sg2799
g48
(g590
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3380
sg32
I0
sg41
g42
sg45
g46
sg33
F7.4234941005706787
sS'trials2.thisN'
p3381
I58
sa(dp3382
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3383
g48
(g590
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3384
sS'trials2.thisRepN'
p3385
I0
sS'trials2.thisTrialN'
p3386
I59
sg2795
S'./stim/MorphM3_02_orig.jpg'
p3387
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp3388
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\t%\xc0'
tRp3389
sg30
I1
sg2799
g48
(g590
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3390
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6124789714813232
sS'trials2.thisN'
p3391
I59
sa(dp3392
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3393
g48
(g590
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3394
sS'trials2.thisRepN'
p3395
I0
sS'trials2.thisTrialN'
p3396
I60
sg2795
S'./stim/MorphM2_09_orig.jpg'
p3397
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp3398
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\t%\xc0'
tRp3399
sg30
I0
sg2799
g48
(g590
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3400
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1721441745758057
sS'trials2.thisN'
p3401
I60
sa(dp3402
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3403
g48
(g590
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3404
sS'trials2.thisRepN'
p3405
I0
sS'trials2.thisTrialN'
p3406
I61
sg2795
S'./stim/MorphM5_00_orig.jpg'
p3407
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x0f@'
tRp3408
sg29
g48
(g50
S"\x00\x00\x00\x00\x00'%\xc0"
tRp3409
sg30
I0
sg2799
g48
(g590
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3410
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8132529258728027
sS'trials2.thisN'
p3411
I61
sa(dp3412
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3413
g48
(g590
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3414
sS'trials2.thisRepN'
p3415
I0
sS'trials2.thisTrialN'
p3416
I62
sg2795
S'./stim/MorphF5_08_orig.jpg'
p3417
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\x0e@'
tRp3418
sg29
g48
(g50
S'\x00\x00\x00\x00\x00r%\xc0'
tRp3419
sg30
I1
sg2799
g48
(g590
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3420
sg32
I0
sg41
g42
sg45
g46
sg33
F7.5067489147186279
sS'trials2.thisN'
p3421
I62
sa(dp3422
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3423
g48
(g590
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3424
sS'trials2.thisRepN'
p3425
I0
sS'trials2.thisTrialN'
p3426
I63
sg2795
S'./stim/MorphF6_02_orig.jpg'
p3427
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\x0e@'
tRp3428
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae%\xc0'
tRp3429
sg30
I1
sg2799
g48
(g590
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3430
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90414714813232422
sS'trials2.thisN'
p3431
I63
sa(dp3432
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3433
g48
(g590
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3434
sS'trials2.thisRepN'
p3435
I0
sS'trials2.thisTrialN'
p3436
I64
sg2795
S'./stim/MorphF2_03_orig.jpg'
p3437
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x10@'
tRp3438
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9f%\xc0'
tRp3439
sg30
I0
sg2799
g48
(g590
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3440
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8751680850982666
sS'trials2.thisN'
p3441
I64
sa(dp3442
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3443
g48
(g590
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3444
sS'trials2.thisRepN'
p3445
I0
sS'trials2.thisTrialN'
p3446
I65
sg2795
S'./stim/MorphM10_01_orig.jpg'
p3447
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3448
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcc%\xc0'
tRp3449
sg30
I1
sg2799
g48
(g590
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3450
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1552360057830811
sS'trials2.thisN'
p3451
I65
sa(dp3452
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3453
g48
(g590
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3454
sS'trials2.thisRepN'
p3455
I0
sS'trials2.thisTrialN'
p3456
I66
sg2795
S'./stim/MorphM4_02_orig.jpg'
p3457
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00J\x10@'
tRp3458
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdb%\xc0'
tRp3459
sg30
I1
sg2799
g48
(g590
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3460
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4567818641662598
sS'trials2.thisN'
p3461
I66
sa(dp3462
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3463
g48
(g590
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3464
sS'trials2.thisRepN'
p3465
I0
sS'trials2.thisTrialN'
p3466
I67
sg2795
S'./stim/MorphF8_08_orig.jpg'
p3467
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0e\x10@'
tRp3468
sg29
g48
(g50
S"\x00\x00\x00\x00\x00'%\xc0"
tRp3469
sg30
I0
sg2799
g48
(g590
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3470
sg32
I1
sg41
g42
sg45
g46
sg33
F2.429020881652832
sS'trials2.thisN'
p3471
I67
sa(dp3472
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3473
g48
(g590
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3474
sS'trials2.thisRepN'
p3475
I0
sS'trials2.thisTrialN'
p3476
I68
sg2795
S'./stim/MorphF4_05_orig.jpg'
p3477
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x0f@'
tRp3478
sg29
g48
(g50
S'\x00\x00\x00\x00\x00c%\xc0'
tRp3479
sg30
I1
sg2799
g48
(g590
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3480
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4398229122161865
sS'trials2.thisN'
p3481
I68
sa(dp3482
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3483
g48
(g590
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3484
sS'trials2.thisRepN'
p3485
I0
sS'trials2.thisTrialN'
p3486
I69
sg2795
S'./stim/MorphM9_10_orig.jpg'
p3487
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10@'
tRp3488
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae%\xc0'
tRp3489
sg30
I0
sg2799
g48
(g590
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3490
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4564471244812012
sS'trials2.thisN'
p3491
I69
sa(dp3492
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3493
g48
(g590
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3494
sS'trials2.thisRepN'
p3495
I0
sS'trials2.thisTrialN'
p3496
I70
sg2795
S'./stim/MorphM4_09_orig.jpg'
p3497
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3498
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90%\xc0'
tRp3499
sg30
I0
sg2799
g48
(g590
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3500
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9145510196685791
sS'trials2.thisN'
p3501
I70
sa(dp3502
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3503
g48
(g590
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3504
sS'trials2.thisRepN'
p3505
I0
sS'trials2.thisTrialN'
p3506
I71
sg2795
S'./stim/MorphF8_03_orig.jpg'
p3507
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x0e\x10@'
tRp3508
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9f%\xc0'
tRp3509
sg30
I1
sg2799
g48
(g590
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3510
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0883121490478516
sS'trials2.thisN'
p3511
I71
sa(dp3512
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3513
g48
(g590
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3514
sS'trials2.thisRepN'
p3515
I0
sS'trials2.thisTrialN'
p3516
I72
sg2795
S'./stim/MorphF10_07_orig.jpg'
p3517
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11@'
tRp3518
sg29
g48
(g50
S'\x00\x00\x00\x00\x00r%\xc0'
tRp3519
sg30
I1
sg2799
g48
(g590
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3520
sg32
I0
sg41
g42
sg45
g46
sg33
F4.7579278945922852
sS'trials2.thisN'
p3521
I72
sa(dp3522
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3523
g48
(g590
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3524
sS'trials2.thisRepN'
p3525
I0
sS'trials2.thisTrialN'
p3526
I73
sg2795
S'./stim/MorphF9_02_orig.jpg'
p3527
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00*\x12@'
tRp3528
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\t%\xc0'
tRp3529
sg30
I1
sg2799
g48
(g590
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3530
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6130750179290771
sS'trials2.thisN'
p3531
I73
sa(dp3532
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3533
g48
(g590
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3534
sS'trials2.thisRepN'
p3535
I0
sS'trials2.thisTrialN'
p3536
I74
sg2795
S'./stim/MorphM6_10_orig.jpg'
p3537
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\x12@'
tRp3538
sg29
g48
(g50
S'\x00\x00\x00\x00\x00r%\xc0'
tRp3539
sg30
I0
sg2799
g48
(g590
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3540
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2388110160827637
sS'trials2.thisN'
p3541
I74
sa(dp3542
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3543
g48
(g590
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3544
sS'trials2.thisRepN'
p3545
I0
sS'trials2.thisTrialN'
p3546
I75
sg2795
S'./stim/MorphF9_05_orig.jpg'
p3547
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x12@'
tRp3548
sg29
g48
(g50
S'\x00\x00\x00\x00\x00c%\xc0'
tRp3549
sg30
I0
sg2799
g48
(g590
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3550
sg32
I1
sg41
g42
sg45
g46
sg33
F4.4735391139984131
sS'trials2.thisN'
p3551
I75
sa(dp3552
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3553
g48
(g590
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3554
sS'trials2.thisRepN'
p3555
I0
sS'trials2.thisTrialN'
p3556
I76
sg2795
S'./stim/MorphF7_01_orig.jpg'
p3557
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x92\x13@'
tRp3558
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x81%\xc0'
tRp3559
sg30
I1
sg2799
g48
(g590
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3560
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1867029666900635
sS'trials2.thisN'
p3561
I76
sa(dp3562
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3563
g48
(g590
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3564
sS'trials2.thisRepN'
p3565
I0
sS'trials2.thisTrialN'
p3566
I77
sg2795
S'./stim/MorphM7_05_orig.jpg'
p3567
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x92\x13@'
tRp3568
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae%\xc0'
tRp3569
sg30
I0
sg2799
g48
(g590
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3570
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5462570190429688
sS'trials2.thisN'
p3571
I77
sa(dp3572
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3573
g48
(g590
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3574
sS'trials2.thisRepN'
p3575
I0
sS'trials2.thisTrialN'
p3576
I78
sg2795
S'./stim/MorphM5_03_orig.jpg'
p3577
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1a\x13@'
tRp3578
sg29
g48
(g50
S'\x00\x00\x00\x00\x00E%\xc0'
tRp3579
sg30
I1
sg2799
g48
(g590
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3580
sg32
I0
sg41
g42
sg45
g46
sg33
F2.4789600372314453
sS'trials2.thisN'
p3581
I78
sa(dp3582
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3583
g48
(g590
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3584
sS'trials2.thisRepN'
p3585
I0
sS'trials2.thisTrialN'
p3586
I79
sg2795
S'./stim/MorphF1_08_orig.jpg'
p3587
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\x12@'
tRp3588
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x18%\xc0'
tRp3589
sg30
I0
sg2799
g48
(g590
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3590
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2443060874938965
sS'trials2.thisN'
p3591
I79
sa(dp3592
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3593
g48
(g590
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3594
sS'trials2.thisRepN'
p3595
I0
sS'trials2.thisTrialN'
p3596
I80
sg2795
S'./stim/MorphM9_07_orig.jpg'
p3597
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa2\x12@'
tRp3598
sg29
g48
(g50
S'\x00\x00\x00\x00\x00T%\xc0'
tRp3599
sg30
I1
sg2799
g48
(g590
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3600
sg32
I0
sg41
g42
sg45
g46
sg33
F4.673997163772583
sS'trials2.thisN'
p3601
I80
sa(dp3602
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3603
g48
(g590
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3604
sS'trials2.thisRepN'
p3605
I0
sS'trials2.thisTrialN'
p3606
I81
sg2795
S'./stim/MorphM3_01_orig.jpg'
p3607
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xde\x12@'
tRp3608
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90%\xc0'
tRp3609
sg30
I1
sg2799
g48
(g590
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3610
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2599020004272461
sS'trials2.thisN'
p3611
I81
sa(dp3612
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3613
g48
(g590
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3614
sS'trials2.thisRepN'
p3615
I0
sS'trials2.thisTrialN'
p3616
I82
sg2795
S'./stim/MorphM10_08_orig.jpg'
p3617
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x12@'
tRp3618
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9f%\xc0'
tRp3619
sg30
I0
sg2799
g48
(g590
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3620
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5071089267730713
sS'trials2.thisN'
p3621
I82
sa(dp3622
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3623
g48
(g590
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3624
sS'trials2.thisRepN'
p3625
I0
sS'trials2.thisTrialN'
p3626
I83
sg2795
S'./stim/MorphM7_00_orig.jpg'
p3627
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x008\x13@'
tRp3628
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3629
sg30
I0
sg2799
g48
(g590
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3630
sg32
I1
sg41
g42
sg45
g46
sg33
F3.8370978832244873
sS'trials2.thisN'
p3631
I83
sa(dp3632
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3633
g48
(g590
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3634
sS'trials2.thisRepN'
p3635
I0
sS'trials2.thisTrialN'
p3636
I84
sg2795
S'./stim/MorphF6_01_orig.jpg'
p3637
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x008\x13@'
tRp3638
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3639
sg30
I1
sg2799
g48
(g590
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3640
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8978481292724609
sS'trials2.thisN'
p3641
I84
sa(dp3642
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3643
g48
(g590
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3644
sS'trials2.thisRepN'
p3645
I0
sS'trials2.thisTrialN'
p3646
I85
sg2795
S'./stim/MorphM1_10_orig.jpg'
p3647
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x008\x13@'
tRp3648
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3649
sg30
I0
sg2799
g48
(g590
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3650
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2758519649505615
sS'trials2.thisN'
p3651
I85
sa(dp3652
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3653
g48
(g590
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3654
sS'trials2.thisRepN'
p3655
I0
sS'trials2.thisTrialN'
p3656
I86
sg2795
S'./stim/MorphF10_02_orig.jpg'
p3657
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x008\x13@'
tRp3658
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3659
sg30
I1
sg2799
g48
(g590
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3660
sg32
I0
sg41
g42
sg45
g46
sg33
F4.9250349998474121
sS'trials2.thisN'
p3661
I86
sa(dp3662
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3663
g48
(g590
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3664
sS'trials2.thisRepN'
p3665
I0
sS'trials2.thisTrialN'
p3666
I87
sg2795
S'./stim/MorphF6_00_orig.jpg'
p3667
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00V\x13@'
tRp3668
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3669
sg30
I1
sg2799
g48
(g590
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3670
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1047191619873047
sS'trials2.thisN'
p3671
I87
sa(dp3672
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3673
g48
(g590
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3674
sS'trials2.thisRepN'
p3675
I0
sS'trials2.thisTrialN'
p3676
I88
sg2795
S'./stim/MorphM3_10_orig.jpg'
p3677
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb0\x13@'
tRp3678
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcc%\xc0'
tRp3679
sg30
I0
sg2799
g48
(g590
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3680
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2559199333190918
sS'trials2.thisN'
p3681
I88
sa(dp3682
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3683
g48
(g590
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3684
sS'trials2.thisRepN'
p3685
I0
sS'trials2.thisTrialN'
p3686
I89
sg2795
S'./stim/MorphM6_07_orig.jpg'
p3687
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x14@'
tRp3688
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90%\xc0'
tRp3689
sg30
I0
sg2799
g48
(g590
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3690
sg32
I1
sg41
g42
sg45
g46
sg33
F3.3508479595184326
sS'trials2.thisN'
p3691
I89
sa(dp3692
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3693
g48
(g590
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3694
sS'trials2.thisRepN'
p3695
I0
sS'trials2.thisTrialN'
p3696
I90
sg2795
S'./stim/MorphM3_08_orig.jpg'
p3697
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x14@'
tRp3698
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90%\xc0'
tRp3699
sg30
I1
sg2799
g48
(g590
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3700
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7584319114685059
sS'trials2.thisN'
p3701
I90
sa(dp3702
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3703
g48
(g590
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3704
sS'trials2.thisRepN'
p3705
I0
sS'trials2.thisTrialN'
p3706
I91
sg2795
S'./stim/MorphM10_02_orig.jpg'
p3707
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00(\x14@'
tRp3708
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90%\xc0'
tRp3709
sg30
I1
sg2799
g48
(g590
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3710
sg32
I0
sg41
g42
sg45
g46
sg33
F1.037722110748291
sS'trials2.thisN'
p3711
I91
sa(dp3712
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3713
g48
(g590
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3714
sS'trials2.thisRepN'
p3715
I0
sS'trials2.thisTrialN'
p3716
I92
sg2795
S'./stim/MorphM4_08_orig.jpg'
p3717
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00F\x14@'
tRp3718
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x81%\xc0'
tRp3719
sg30
I0
sg2799
g48
(g590
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3720
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3389139175415039
sS'trials2.thisN'
p3721
I92
sa(dp3722
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3723
g48
(g590
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3724
sS'trials2.thisRepN'
p3725
I0
sS'trials2.thisTrialN'
p3726
I93
sg2795
S'./stim/MorphF3_08_orig.jpg'
p3727
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\n\x14@'
tRp3728
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9f%\xc0'
tRp3729
sg30
I1
sg2799
g48
(g590
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3730
sg32
I0
sg41
g42
sg45
g46
sg33
F2.3454699516296387
sS'trials2.thisN'
p3731
I93
sa(dp3732
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3733
g48
(g590
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3734
sS'trials2.thisRepN'
p3735
I0
sS'trials2.thisTrialN'
p3736
I94
sg2795
S'./stim/MorphF9_10_orig.jpg'
p3737
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xce\x13@'
tRp3738
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae%\xc0'
tRp3739
sg30
I0
sg2799
g48
(g590
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3740
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8472559452056885
sS'trials2.thisN'
p3741
I94
sa(dp3742
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3743
g48
(g590
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3744
sS'trials2.thisRepN'
p3745
I0
sS'trials2.thisTrialN'
p3746
I95
sg2795
S'./stim/MorphF10_06_orig.jpg'
p3747
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x16@'
tRp3748
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdb%\xc0'
tRp3749
sg30
I0
sg2799
g48
(g590
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3750
sg32
I1
sg41
g42
sg45
g46
sg33
F4.9933221340179443
sS'trials2.thisN'
p3751
I95
sa(dp3752
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3753
g48
(g590
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3754
sS'trials2.thisRepN'
p3755
I0
sS'trials2.thisTrialN'
p3756
I96
sg2795
S'./stim/MorphM8_07_orig.jpg'
p3757
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00r\x15@'
tRp3758
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08&\xc0'
tRp3759
sg30
I0
sg2799
g48
(g590
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3760
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4878878593444824
sS'trials2.thisN'
p3761
I96
sa(dp3762
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3763
g48
(g590
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3764
sS'trials2.thisRepN'
p3765
I0
sS'trials2.thisTrialN'
p3766
I97
sg2795
S'./stim/MorphF6_10_orig.jpg'
p3767
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x16@'
tRp3768
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3769
sg30
I0
sg2799
g48
(g590
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3770
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2049300670623779
sS'trials2.thisN'
p3771
I97
sa(dp3772
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3773
g48
(g590
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3774
sS'trials2.thisRepN'
p3775
I0
sS'trials2.thisTrialN'
p3776
I98
sg2795
S'./stim/MorphF2_10_orig.jpg'
p3777
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp3778
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcc%\xc0'
tRp3779
sg30
I0
sg2799
g48
(g590
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3780
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4068701267242432
sS'trials2.thisN'
p3781
I98
sa(dp3782
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3783
g48
(g590
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3784
sS'trials2.thisRepN'
p3785
I0
sS'trials2.thisTrialN'
p3786
I99
sg2795
S'./stim/MorphM5_02_orig.jpg'
p3787
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp3788
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf9%\xc0'
tRp3789
sg30
I1
sg2799
g48
(g590
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3790
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5910429954528809
sS'trials2.thisN'
p3791
I99
sa(dp3792
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3793
g48
(g590
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3794
sS'trials2.thisRepN'
p3795
I0
sS'trials2.thisTrialN'
p3796
I100
sg2795
S'./stim/MorphM6_09_orig.jpg'
p3797
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\x15@'
tRp3798
sg29
g48
(g50
S'\x00\x00\x00\x00\x00c%\xc0'
tRp3799
sg30
I0
sg2799
g48
(g590
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3800
sg32
I1
sg41
g42
sg45
g46
sg33
F2.4455409049987793
sS'trials2.thisN'
p3801
I100
sa(dp3802
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3803
g48
(g590
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3804
sS'trials2.thisRepN'
p3805
I0
sS'trials2.thisTrialN'
p3806
I101
sg2795
S'./stim/MorphM1_02_orig.jpg'
p3807
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x16@'
tRp3808
sg29
g48
(g50
S'\x00\x00\x00\x00\x00T%\xc0'
tRp3809
sg30
I1
sg2799
g48
(g590
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3810
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0547370910644531
sS'trials2.thisN'
p3811
I101
sa(dp3812
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3813
g48
(g590
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3814
sS'trials2.thisRepN'
p3815
I0
sS'trials2.thisTrialN'
p3816
I102
sg2795
S'./stim/MorphF10_09_orig.jpg'
p3817
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp3818
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae%\xc0'
tRp3819
sg30
I0
sg2799
g48
(g590
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3820
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4046158790588379
sS'trials2.thisN'
p3821
I102
sa(dp3822
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3823
g48
(g590
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3824
sS'trials2.thisRepN'
p3825
I0
sS'trials2.thisTrialN'
p3826
I103
sg2795
S'./stim/MorphM4_10_orig.jpg'
p3827
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp3828
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdb%\xc0'
tRp3829
sg30
I0
sg2799
g48
(g590
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3830
sg32
I1
sg41
g42
sg45
g46
sg33
F2.8962008953094482
sS'trials2.thisN'
p3831
I103
sa(dp3832
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3833
g48
(g590
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3834
sS'trials2.thisRepN'
p3835
I0
sS'trials2.thisTrialN'
p3836
I104
sg2795
S'./stim/MorphF3_02_orig.jpg'
p3837
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp3838
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf9%\xc0'
tRp3839
sg30
I1
sg2799
g48
(g590
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3840
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0359330177307129
sS'trials2.thisN'
p3841
I104
sa(dp3842
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3843
g48
(g590
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3844
sS'trials2.thisRepN'
p3845
I0
sS'trials2.thisTrialN'
p3846
I105
sg2795
S'./stim/MorphF6_07_orig.jpg'
p3847
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp3848
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x08&\xc0'
tRp3849
sg30
I1
sg2799
g48
(g590
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3850
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8591749668121338
sS'trials2.thisN'
p3851
I105
sa(dp3852
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3853
g48
(g590
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3854
sS'trials2.thisRepN'
p3855
I0
sS'trials2.thisTrialN'
p3856
I106
sg2795
S'./stim/MorphM3_06_orig.jpg'
p3857
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x16@'
tRp3858
sg29
g48
(g50
S'\x00\x00\x00\x00\x00&&\xc0'
tRp3859
sg30
I1
sg2799
g48
(g590
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3860
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7412099838256836
sS'trials2.thisN'
p3861
I106
sa(dp3862
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3863
g48
(g590
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3864
sS'trials2.thisRepN'
p3865
I0
sS'trials2.thisTrialN'
p3866
I107
sg2795
S'./stim/MorphF4_04_orig.jpg'
p3867
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x16@'
tRp3868
sg29
g48
(g50
S'\x00\x00\x00\x00\x00&&\xc0'
tRp3869
sg30
I1
sg2799
g48
(g590
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3870
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2891149520874023
sS'trials2.thisN'
p3871
I107
sa(dp3872
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3873
g48
(g590
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3874
sS'trials2.thisRepN'
p3875
I0
sS'trials2.thisTrialN'
p3876
I108
sg2795
S'./stim/MorphM2_01_orig.jpg'
p3877
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x16@'
tRp3878
sg29
g48
(g50
S'\x00\x00\x00\x00\x00&&\xc0'
tRp3879
sg30
I1
sg2799
g48
(g590
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3880
sg32
I0
sg41
g42
sg45
g46
sg33
F0.98779988288879395
sS'trials2.thisN'
p3881
I108
sa(dp3882
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3883
g48
(g590
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3884
sS'trials2.thisRepN'
p3885
I0
sS'trials2.thisTrialN'
p3886
I109
sg2795
S'./stim/MorphF4_01_orig.jpg'
p3887
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00D\x16@'
tRp3888
sg29
g48
(g50
S'\x00\x00\x00\x00\x00&&\xc0'
tRp3889
sg30
I1
sg2799
g48
(g590
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3890
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3057229518890381
sS'trials2.thisN'
p3891
I109
sa(dp3892
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3893
g48
(g590
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3894
sS'trials2.thisRepN'
p3895
I0
sS'trials2.thisTrialN'
p3896
I110
sg2795
S'./stim/MorphM6_00_orig.jpg'
p3897
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00&\x16@'
tRp3898
sg29
g48
(g50
S'\x00\x00\x00\x00\x005&\xc0'
tRp3899
sg30
I1
sg2799
g48
(g590
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3900
sg32
I0
sg41
g42
sg45
g46
sg33
F2.8648929595947266
sS'trials2.thisN'
p3901
I110
sa(dp3902
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3903
g48
(g590
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3904
sS'trials2.thisRepN'
p3905
I0
sS'trials2.thisTrialN'
p3906
I111
sg2795
S'./stim/MorphF9_07_orig.jpg'
p3907
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00&\x16@'
tRp3908
sg29
g48
(g50
S'\x00\x00\x00\x00\x005&\xc0'
tRp3909
sg30
I0
sg2799
g48
(g590
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3910
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2053501605987549
sS'trials2.thisN'
p3911
I111
sa(dp3912
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3913
g48
(g590
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3914
sS'trials2.thisRepN'
p3915
I0
sS'trials2.thisTrialN'
p3916
I112
sg2795
S'./stim/MorphF5_05_orig.jpg'
p3917
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00b\x16@'
tRp3918
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf9%\xc0'
tRp3919
sg30
I1
sg2799
g48
(g590
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3920
sg32
I0
sg41
g42
sg45
g46
sg33
F2.9310939311981201
sS'trials2.thisN'
p3921
I112
sa(dp3922
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3923
g48
(g590
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3924
sS'trials2.thisRepN'
p3925
I0
sS'trials2.thisTrialN'
p3926
I113
sg2795
S'./stim/MorphF2_01_orig.jpg'
p3927
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp3928
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbd%\xc0'
tRp3929
sg30
I0
sg2799
g48
(g590
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3930
sg32
I1
sg41
g42
sg45
g46
sg33
F4.0881450176239014
sS'trials2.thisN'
p3931
I113
sa(dp3932
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3933
g48
(g590
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3934
sS'trials2.thisRepN'
p3935
I0
sS'trials2.thisTrialN'
p3936
I114
sg2795
S'./stim/MorphF1_06_orig.jpg'
p3937
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp3938
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x90%\xc0'
tRp3939
sg30
I0
sg2799
g48
(g590
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3940
sg32
I1
sg41
g42
sg45
g46
sg33
F11.41021990776062
sS'trials2.thisN'
p3941
I114
sa(dp3942
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3943
g48
(g590
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3944
sS'trials2.thisRepN'
p3945
I0
sS'trials2.thisTrialN'
p3946
I115
sg2795
S'./stim/MorphM10_00_orig.jpg'
p3947
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp3948
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xae%\xc0'
tRp3949
sg30
I1
sg2799
g48
(g590
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3950
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3054418563842773
sS'trials2.thisN'
p3951
I115
sa(dp3952
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3953
g48
(g590
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3954
sS'trials2.thisRepN'
p3955
I0
sS'trials2.thisTrialN'
p3956
I116
sg2795
S'./stim/MorphM6_05_orig.jpg'
p3957
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00R\x17@'
tRp3958
sg29
g48
(g50
S'\x00\x00\x00\x00\x00b&\xc0'
tRp3959
sg30
I0
sg2799
g48
(g590
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3960
sg32
I1
sg41
g42
sg45
g46
sg33
F3.8362679481506348
sS'trials2.thisN'
p3961
I116
sa(dp3962
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3963
g48
(g590
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3964
sS'trials2.thisRepN'
p3965
I0
sS'trials2.thisTrialN'
p3966
I117
sg2795
S'./stim/MorphF8_06_orig.jpg'
p3967
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00T\x15@'
tRp3968
sg29
g48
(g50
S'\x00\x00\x00\x00\x002)\xc0'
tRp3969
sg30
I1
sg2799
g48
(g590
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3970
sg32
I0
sg41
g42
sg45
g46
sg33
F1.4900860786437988
sS'trials2.thisN'
p3971
I117
sa(dp3972
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3973
g48
(g590
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3974
sS'trials2.thisRepN'
p3975
I0
sS'trials2.thisTrialN'
p3976
I118
sg2795
S'./stim/MorphF3_07_orig.jpg'
p3977
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x18\x15@'
tRp3978
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp3979
sg30
I1
sg2799
g48
(g590
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3980
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88709807395935059
sS'trials2.thisN'
p3981
I118
sa(dp3982
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3983
g48
(g590
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3984
sS'trials2.thisRepN'
p3985
I0
sS'trials2.thisTrialN'
p3986
I119
sg2795
S'./stim/MorphM1_06_orig.jpg'
p3987
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x82\x14@'
tRp3988
sg29
g48
(g50
S'\x00\x00\x00\x00\x00A)\xc0'
tRp3989
sg30
I1
sg2799
g48
(g590
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3990
sg32
I0
sg41
g42
sg45
g46
sg33
F7.4567527770996094
sS'trials2.thisN'
p3991
I119
sa(dp3992
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p3993
g48
(g590
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3994
sS'trials2.thisRepN'
p3995
I0
sS'trials2.thisTrialN'
p3996
I120
sg2795
S'./stim/MorphF7_03_orig.jpg'
p3997
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa0\x14@'
tRp3998
sg29
g48
(g50
S'\x00\x00\x00\x00\x00_)\xc0'
tRp3999
sg30
I1
sg2799
g48
(g590
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp4000
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6911289691925049
sS'trials2.thisN'
p4001
I120
sa(dp4002
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4003
g48
(g590
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4004
sS'trials2.thisRepN'
p4005
I0
sS'trials2.thisTrialN'
p4006
I121
sg2795
S'./stim/MorphF1_10_orig.jpg'
p4007
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00T\x15@'
tRp4008
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P)\xc0'
tRp4009
sg30
I0
sg2799
g48
(g590
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4010
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3393440246582031
sS'trials2.thisN'
p4011
I121
sa(dp4012
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4013
g48
(g590
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4014
sS'trials2.thisRepN'
p4015
I0
sS'trials2.thisTrialN'
p4016
I122
sg2795
S'./stim/MorphF6_08_orig.jpg'
p4017
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00H\x02@'
tRp4018
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe6)\xc0'
tRp4019
sg30
I0
sg2799
g48
(g590
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4020
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2393300533294678
sS'trials2.thisN'
p4021
I122
sa(dp4022
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4023
g48
(g590
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4024
sS'trials2.thisRepN'
p4025
I0
sS'trials2.thisTrialN'
p4026
I123
sg2795
S'./stim/MorphF4_10_orig.jpg'
p4027
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb0\xe3?'
tRp4028
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4029
sg30
I0
sg2799
g48
(g590
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4030
sg32
I1
sg41
g42
sg45
g46
sg33
F3.8869378566741943
sS'trials2.thisN'
p4031
I123
sa(dp4032
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4033
g48
(g590
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4034
sS'trials2.thisRepN'
p4035
I0
sS'trials2.thisTrialN'
p4036
I124
sg2795
S'./stim/MorphM10_10_orig.jpg'
p4037
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xae\xbf'
tRp4038
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4039
sg30
I0
sg2799
g48
(g590
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4040
sg32
I1
sg41
g42
sg45
g46
sg33
F5.2109968662261963
sS'trials2.thisN'
p4041
I124
sa(dp4042
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4043
g48
(g590
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4044
sS'trials2.thisRepN'
p4045
I0
sS'trials2.thisTrialN'
p4046
I125
sg2795
S'./stim/MorphF8_07_orig.jpg'
p4047
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xc2?'
tRp4048
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4049
sg30
I0
sg2799
g48
(g590
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4050
sg32
I1
sg41
g42
sg45
g46
sg33
F6.0820009708404541
sS'trials2.thisN'
p4051
I125
sa(dp4052
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4053
g48
(g590
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4054
sS'trials2.thisRepN'
p4055
I0
sS'trials2.thisTrialN'
p4056
I126
sg2795
S'./stim/MorphM1_03_orig.jpg'
p4057
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\xb6\xbf'
tRp4058
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4059
sg30
I1
sg2799
g48
(g590
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4060
sg32
I0
sg41
g42
sg45
g46
sg33
F0.75304508209228516
sS'trials2.thisN'
p4061
I126
sa(dp4062
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4063
g48
(g590
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4064
sS'trials2.thisRepN'
p4065
I0
sS'trials2.thisTrialN'
p4066
I127
sg2795
S'./stim/MorphF1_01_orig.jpg'
p4067
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xae?'
tRp4068
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4069
sg30
I1
sg2799
g48
(g590
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4070
sg32
I0
sg41
g42
sg45
g46
sg33
F0.85222482681274414
sS'trials2.thisN'
p4071
I127
sa(dp4072
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4073
g48
(g590
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4074
sS'trials2.thisRepN'
p4075
I0
sS'trials2.thisTrialN'
p4076
I128
sg2795
S'./stim/MorphM7_09_orig.jpg'
p4077
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xbe?'
tRp4078
sg29
g48
(g50
S'\x00\x00\x00\x00\x00@*\xc0'
tRp4079
sg30
I0
sg2799
g48
(g590
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4080
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1188428401947021
sS'trials2.thisN'
p4081
I128
sa(dp4082
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4083
g48
(g590
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4084
sS'trials2.thisRepN'
p4085
I0
sS'trials2.thisTrialN'
p4086
I129
sg2795
S'./stim/MorphF2_07_orig.jpg'
p4087
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\x9e?'
tRp4088
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x13*\xc0'
tRp4089
sg30
I0
sg2799
g48
(g590
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4090
sg32
I1
sg41
g42
sg45
g46
sg33
F2.0767629146575928
sS'trials2.thisN'
p4091
I129
sa(dp4092
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4093
g48
(g590
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4094
sS'trials2.thisRepN'
p4095
I0
sS'trials2.thisTrialN'
p4096
I130
sg2795
S'./stim/MorphM7_02_orig.jpg'
p4097
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\x9e?'
tRp4098
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4099
sg30
I1
sg2799
g48
(g590
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4100
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3716058731079102
sS'trials2.thisN'
p4101
I130
sa(dp4102
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4103
g48
(g590
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4104
sS'trials2.thisRepN'
p4105
I0
sS'trials2.thisTrialN'
p4106
I131
sg2795
S'./stim/MorphF3_01_orig.jpg'
p4107
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\xb6?'
tRp4108
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4109
sg30
I1
sg2799
g48
(g590
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4110
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88783502578735352
sS'trials2.thisN'
p4111
I131
sa(dp4112
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4113
g48
(g590
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4114
sS'trials2.thisRepN'
p4115
I0
sS'trials2.thisTrialN'
p4116
I132
sg2795
S'./stim/MorphF9_04_orig.jpg'
p4117
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\xc6\xbf'
tRp4118
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xf5)\xc0'
tRp4119
sg30
I0
sg2799
g48
(g590
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4120
sg32
I1
sg41
g42
sg45
g46
sg33
F8.7276599407196045
sS'trials2.thisN'
p4121
I132
sa(dp4122
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4123
g48
(g590
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4124
sS'trials2.thisRepN'
p4125
I0
sS'trials2.thisTrialN'
p4126
I133
sg2795
S'./stim/MorphM1_00_orig.jpg'
p4127
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xfe\xbf'
tRp4128
sg29
g48
(g50
S'\x00\x00\x00\x00\x001*\xc0'
tRp4129
sg30
I1
sg2799
g48
(g590
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4130
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1887161731719971
sS'trials2.thisN'
p4131
I133
sa(dp4132
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4133
g48
(g590
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4134
sS'trials2.thisRepN'
p4135
I0
sS'trials2.thisTrialN'
p4136
I134
sg2795
S'./stim/MorphM7_01_orig.jpg'
p4137
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp4138
sg29
g48
(g50
S'\x00\x00\x00\x00\x001*\xc0'
tRp4139
sg30
I1
sg2799
g48
(g590
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4140
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2756609916687012
sS'trials2.thisN'
p4141
I134
sa(dp4142
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4143
g48
(g590
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4144
sS'trials2.thisRepN'
p4145
I0
sS'trials2.thisTrialN'
p4146
I135
sg2795
S'./stim/MorphF6_06_orig.jpg'
p4147
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp4148
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp4149
sg30
I0
sg2799
g48
(g590
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4150
sg32
I1
sg41
g42
sg45
g46
sg33
F2.6621131896972656
sS'trials2.thisN'
p4151
I135
sa(dp4152
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4153
g48
(g590
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4154
sS'trials2.thisRepN'
p4155
I0
sS'trials2.thisTrialN'
p4156
I136
sg2795
S'./stim/MorphF8_05_orig.jpg'
p4157
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00X\x01\xc0'
tRp4158
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4159
sg30
I1
sg2799
g48
(g590
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4160
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5965681076049805
sS'trials2.thisN'
p4161
I136
sa(dp4162
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4163
g48
(g590
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4164
sS'trials2.thisRepN'
p4165
I0
sS'trials2.thisTrialN'
p4166
I137
sg2795
S'./stim/MorphF3_05_orig.jpg'
p4167
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\xf8\xbf'
tRp4168
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp4169
sg30
I1
sg2799
g48
(g590
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4170
sg32
I0
sg41
g42
sg45
g46
sg33
F2.5628149509429932
sS'trials2.thisN'
p4171
I137
sa(dp4172
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4173
g48
(g590
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4174
sS'trials2.thisRepN'
p4175
I0
sS'trials2.thisTrialN'
p4176
I138
sg2795
S'./stim/MorphM5_10_orig.jpg'
p4177
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\xf8\xbf'
tRp4178
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp4179
sg30
I0
sg2799
g48
(g590
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4180
sg32
I1
sg41
g42
sg45
g46
sg33
F1.1881167888641357
sS'trials2.thisN'
p4181
I138
sa(dp4182
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4183
g48
(g590
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4184
sS'trials2.thisRepN'
p4185
I0
sS'trials2.thisTrialN'
p4186
I139
sg2795
S'./stim/MorphF4_03_orig.jpg'
p4187
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\xf9\xbf'
tRp4188
sg29
g48
(g50
S'\x00\x00\x00\x00\x00n)\xc0'
tRp4189
sg30
I1
sg2799
g48
(g590
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4190
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2060019969940186
sS'trials2.thisN'
p4191
I139
sa(dp4192
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4193
g48
(g590
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4194
sS'trials2.thisRepN'
p4195
I0
sS'trials2.thisTrialN'
p4196
I140
sg2795
S'./stim/MorphM6_01_orig.jpg'
p4197
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\xf9\xbf'
tRp4198
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp4199
sg30
I1
sg2799
g48
(g590
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4200
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8058500289916992
sS'trials2.thisN'
p4201
I140
sa(dp4202
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4203
g48
(g590
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4204
sS'trials2.thisRepN'
p4205
I0
sS'trials2.thisTrialN'
p4206
I141
sg2795
S'./stim/MorphF5_03_orig.jpg'
p4207
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x00\xfe\xbf'
tRp4208
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp4209
sg30
I1
sg2799
g48
(g590
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4210
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1437680721282959
sS'trials2.thisN'
p4211
I141
sa(dp4212
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4213
g48
(g590
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4214
sS'trials2.thisRepN'
p4215
I0
sS'trials2.thisTrialN'
p4216
I142
sg2795
S'./stim/MorphF2_08_orig.jpg'
p4217
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4218
sg29
g48
(g50
S'\x00\x00\x00\x00\x00O*\xc0'
tRp4219
sg30
I0
sg2799
g48
(g590
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4220
sg32
I1
sg41
g42
sg45
g46
sg33
F0.9871668815612793
sS'trials2.thisN'
p4221
I142
sa(dp4222
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4223
g48
(g590
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4224
sS'trials2.thisRepN'
p4225
I0
sS'trials2.thisTrialN'
p4226
I143
sg2795
S'./stim/MorphF3_10_orig.jpg'
p4227
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00x\xfe\xbf'
tRp4228
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xb9)\xc0'
tRp4229
sg30
I1
sg2799
g48
(g590
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4230
sg32
I0
sg41
g42
sg45
g46
sg33
F0.96898818016052246
sS'trials2.thisN'
p4231
I143
sa(dp4232
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4233
g48
(g590
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4234
sS'trials2.thisRepN'
p4235
I0
sS'trials2.thisTrialN'
p4236
I144
sg2795
S'./stim/MorphF1_07_orig.jpg'
p4237
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp4238
sg29
g48
(g50
S'\x00\x00\x00\x00\x001*\xc0'
tRp4239
sg30
I0
sg2799
g48
(g590
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4240
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1582989692687988
sS'trials2.thisN'
p4241
I144
sa(dp4242
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4243
g48
(g590
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4244
sS'trials2.thisRepN'
p4245
I0
sS'trials2.thisTrialN'
p4246
I145
sg2795
S'./stim/MorphM7_04_orig.jpg'
p4247
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\x00\xc0'
tRp4248
sg29
g48
(g50
S'\x00\x00\x00\x00\x00_)\xc0'
tRp4249
sg30
I0
sg2799
g48
(g590
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4250
sg32
I1
sg41
g42
sg45
g46
sg33
F6.2999200820922852
sS'trials2.thisN'
p4251
I145
sa(dp4252
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4253
g48
(g590
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4254
sS'trials2.thisRepN'
p4255
I0
sS'trials2.thisTrialN'
p4256
I146
sg2795
S'./stim/MorphM5_01_orig.jpg'
p4257
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\x02\xc0'
tRp4258
sg29
g48
(g50
S'\x00\x00\x00\x00\x00#)\xc0'
tRp4259
sg30
I1
sg2799
g48
(g590
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4260
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1716930866241455
sS'trials2.thisN'
p4261
I146
sa(dp4262
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4263
g48
(g590
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4264
sS'trials2.thisRepN'
p4265
I0
sS'trials2.thisTrialN'
p4266
I147
sg2795
S'./stim/MorphM4_06_orig.jpg'
p4267
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xec\x03\xc0'
tRp4268
sg29
g48
(g50
S'\x00\x00\x00\x00\x00#)\xc0'
tRp4269
sg30
I0
sg2799
g48
(g590
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4270
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1253058910369873
sS'trials2.thisN'
p4271
I147
sa(dp4272
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4273
g48
(g590
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4274
sS'trials2.thisRepN'
p4275
I0
sS'trials2.thisTrialN'
p4276
I148
sg2795
S'./stim/MorphM2_02_orig.jpg'
p4277
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x02\xc0'
tRp4278
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x05)\xc0'
tRp4279
sg30
I1
sg2799
g48
(g590
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4280
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0047390460968018
sS'trials2.thisN'
p4281
I148
sa(dp4282
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4283
g48
(g590
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4284
sS'trials2.thisRepN'
p4285
I0
sS'trials2.thisTrialN'
p4286
I149
sg2795
S'./stim/MorphM10_05_orig.jpg'
p4287
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x94\x01\xc0'
tRp4288
sg29
g48
(g50
S'\x00\x00\x00\x00\x002)\xc0'
tRp4289
sg30
I0
sg2799
g48
(g590
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4290
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8923358917236328
sS'trials2.thisN'
p4291
I149
sa(dp4292
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4293
g48
(g590
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4294
sS'trials2.thisRepN'
p4295
I0
sS'trials2.thisTrialN'
p4296
I150
sg2795
S'./stim/MorphF4_02_orig.jpg'
p4297
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\x00\xc0'
tRp4298
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x14)\xc0'
tRp4299
sg30
I1
sg2799
g48
(g590
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4300
sg32
I0
sg41
g42
sg45
g46
sg33
F0.95206999778747559
sS'trials2.thisN'
p4301
I150
sa(dp4302
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4303
g48
(g590
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4304
sS'trials2.thisRepN'
p4305
I0
sS'trials2.thisTrialN'
p4306
I151
sg2795
S'./stim/MorphF2_02_orig.jpg'
p4307
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp4308
sg29
g48
(g50
S'\x00\x00\x00\x00\x00A)\xc0'
tRp4309
sg30
I1
sg2799
g48
(g590
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4310
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8254249095916748
sS'trials2.thisN'
p4311
I151
sa(dp4312
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4313
g48
(g590
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4314
sS'trials2.thisRepN'
p4315
I0
sS'trials2.thisTrialN'
p4316
I152
sg2795
S'./stim/MorphM2_10_orig.jpg'
p4317
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp4318
sg29
g48
(g50
S'\x00\x00\x00\x00\x00_)\xc0'
tRp4319
sg30
I0
sg2799
g48
(g590
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4320
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5571069717407227
sS'trials2.thisN'
p4321
I152
sa(dp4322
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4323
g48
(g590
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4324
sS'trials2.thisRepN'
p4325
I0
sS'trials2.thisTrialN'
p4326
I153
sg2795
S'./stim/MorphM10_03_orig.jpg'
p4327
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc2\x10\xc0'
tRp4328
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe7(\xc0'
tRp4329
sg30
I1
sg2799
g48
(g590
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4330
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1053330898284912
sS'trials2.thisN'
p4331
I153
sa(dp4332
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4333
g48
(g590
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4334
sS'trials2.thisRepN'
p4335
I0
sS'trials2.thisTrialN'
p4336
I154
sg2795
S'./stim/MorphF3_03_orig.jpg'
p4337
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x10\xc0'
tRp4338
sg29
g48
(g50
S'\x00\x00\x00\x00\x00#)\xc0'
tRp4339
sg30
I1
sg2799
g48
(g590
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4340
sg32
I0
sg41
g42
sg45
g46
sg33
F1.322030782699585
sS'trials2.thisN'
p4341
I154
sa(dp4342
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4343
g48
(g590
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4344
sS'trials2.thisRepN'
p4345
I0
sS'trials2.thisTrialN'
p4346
I155
sg2795
S'./stim/MorphF10_10_orig.jpg'
p4347
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x88\r\xc0'
tRp4348
sg29
g48
(g50
S'\x00\x00\x00\x00\x00"*\xc0'
tRp4349
sg30
I0
sg2799
g48
(g590
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4350
sg32
I1
sg41
g42
sg45
g46
sg33
F1.490048885345459
sS'trials2.thisN'
p4351
I155
sa(dp4352
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4353
g48
(g590
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4354
sS'trials2.thisRepN'
p4355
I0
sS'trials2.thisTrialN'
p4356
I156
sg2795
S'./stim/MorphF2_05_orig.jpg'
p4357
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\\\x0c\xc0'
tRp4358
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x04*\xc0'
tRp4359
sg30
I0
sg2799
g48
(g590
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4360
sg32
I1
sg41
g42
sg45
g46
sg33
F2.2115850448608398
sS'trials2.thisN'
p4361
I156
sa(dp4362
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4363
g48
(g590
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4364
sS'trials2.thisRepN'
p4365
I0
sS'trials2.thisTrialN'
p4366
I157
sg2795
S'./stim/MorphF8_04_orig.jpg'
p4367
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00x\x0e\xc0'
tRp4368
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe6)\xc0'
tRp4369
sg30
I1
sg2799
g48
(g590
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4370
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8914220333099365
sS'trials2.thisN'
p4371
I157
sa(dp4372
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4373
g48
(g590
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4374
sS'trials2.thisRepN'
p4375
I0
sS'trials2.thisTrialN'
p4376
I158
sg2795
S'./stim/MorphM9_02_orig.jpg'
p4377
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x88\r\xc0'
tRp4378
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xba(\xc0'
tRp4379
sg30
I1
sg2799
g48
(g590
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4380
sg32
I0
sg41
g42
sg45
g46
sg33
F3.4011449813842773
sS'trials2.thisN'
p4381
I158
sa(dp4382
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4383
g48
(g590
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4384
sS'trials2.thisRepN'
p4385
I0
sS'trials2.thisTrialN'
p4386
I159
sg2795
S'./stim/MorphM4_01_orig.jpg'
p4387
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x10\r\xc0'
tRp4388
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8d(\xc0'
tRp4389
sg30
I1
sg2799
g48
(g590
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4390
sg32
I0
sg41
g42
sg45
g46
sg33
F2.143092155456543
sS'trials2.thisN'
p4391
I159
sa(dp4392
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4393
g48
(g590
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4394
sS'trials2.thisRepN'
p4395
I0
sS'trials2.thisTrialN'
p4396
I160
sg2795
S'./stim/MorphM10_09_orig.jpg'
p4397
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00L\r\xc0'
tRp4398
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`(\xc0'
tRp4399
sg30
I0
sg2799
g48
(g590
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4400
sg32
I1
sg41
g42
sg45
g46
sg33
F1.136667013168335
sS'trials2.thisN'
p4401
I160
sa(dp4402
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4403
g48
(g590
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4404
sS'trials2.thisRepN'
p4405
I0
sS'trials2.thisTrialN'
p4406
I161
sg2795
S'./stim/MorphM9_06_orig.jpg'
p4407
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x98\x0c\xc0'
tRp4408
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8d(\xc0'
tRp4409
sg30
I0
sg2799
g48
(g590
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4410
sg32
I1
sg41
g42
sg45
g46
sg33
F2.1256868839263916
sS'trials2.thisN'
p4411
I161
sa(dp4412
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4413
g48
(g590
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4414
sS'trials2.thisRepN'
p4415
I0
sS'trials2.thisTrialN'
p4416
I162
sg2795
S'./stim/MorphM6_06_orig.jpg'
p4417
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb4\x0e\xc0'
tRp4418
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9c(\xc0'
tRp4419
sg30
I0
sg2799
g48
(g590
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4420
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3038649559020996
sS'trials2.thisN'
p4421
I162
sa(dp4422
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4423
g48
(g590
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4424
sS'trials2.thisRepN'
p4425
I0
sS'trials2.thisTrialN'
p4426
I163
sg2795
S'./stim/MorphF10_00_orig.jpg'
p4427
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp4428
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x7f'\xc0"
tRp4429
sg30
I1
sg2799
g48
(g590
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4430
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0257830619812012
sS'trials2.thisN'
p4431
I163
sa(dp4432
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4433
g48
(g590
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4434
sS'trials2.thisRepN'
p4435
I0
sS'trials2.thisTrialN'
p4436
I164
sg2795
S'./stim/MorphM2_00_orig.jpg'
p4437
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb4\x0e\xc0'
tRp4438
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x7f'\xc0"
tRp4439
sg30
I1
sg2799
g48
(g590
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4440
sg32
I0
sg41
g42
sg45
g46
sg33
F1.087230920791626
sS'trials2.thisN'
p4441
I164
sa(dp4442
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4443
g48
(g590
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4444
sS'trials2.thisRepN'
p4445
I0
sS'trials2.thisTrialN'
p4446
I165
sg2795
S'./stim/MorphM6_04_orig.jpg'
p4447
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd4\x0c\xc0'
tRp4448
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp4449
sg30
I0
sg2799
g48
(g590
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4450
sg32
I1
sg41
g42
sg45
g46
sg33
F0.93752479553222656
sS'trials2.thisN'
p4451
I165
sa(dp4452
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4453
g48
(g590
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4454
sS'trials2.thisRepN'
p4455
I0
sS'trials2.thisTrialN'
p4456
I166
sg2795
S'./stim/MorphM2_04_orig.jpg'
p4457
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd0\x11\xc0'
tRp4458
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp4459
sg30
I1
sg2799
g48
(g590
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4460
sg32
I0
sg41
g42
sg45
g46
sg33
F2.4446330070495605
sS'trials2.thisN'
p4461
I166
sa(dp4462
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4463
g48
(g590
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4464
sS'trials2.thisRepN'
p4465
I0
sS'trials2.thisTrialN'
p4466
I167
sg2795
S'./stim/MorphF2_06_orig.jpg'
p4467
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp4468
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp4469
sg30
I0
sg2799
g48
(g590
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4470
sg32
I1
sg41
g42
sg45
g46
sg33
F1.2388210296630859
sS'trials2.thisN'
p4471
I167
sa(dp4472
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4473
g48
(g590
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4474
sS'trials2.thisRepN'
p4475
I0
sS'trials2.thisTrialN'
p4476
I168
sg2795
S'./stim/MorphM7_06_orig.jpg'
p4477
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp4478
sg29
g48
(g50
S"\x00\x00\x00\x00\x004'\xc0"
tRp4479
sg30
I1
sg2799
g48
(g590
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4480
sg32
I0
sg41
g42
sg45
g46
sg33
F3.0984690189361572
sS'trials2.thisN'
p4481
I168
sa(dp4482
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4483
g48
(g590
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4484
sS'trials2.thisRepN'
p4485
I0
sS'trials2.thisTrialN'
p4486
I169
sg2795
S'./stim/MorphF5_10_orig.jpg'
p4487
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00@\n\xc0'
tRp4488
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\xf7'\xc0"
tRp4489
sg30
I0
sg2799
g48
(g590
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4490
sg32
I1
sg41
g42
sg45
g46
sg33
F4.7419331073760986
sS'trials2.thisN'
p4491
I169
sa(dp4492
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4493
g48
(g590
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4494
sS'trials2.thisRepN'
p4495
I0
sS'trials2.thisTrialN'
p4496
I170
sg2795
S'./stim/MorphM3_07_orig.jpg'
p4497
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x10\r\xc0'
tRp4498
sg29
g48
(g50
S'\x00\x00\x00\x00\x00`(\xc0'
tRp4499
sg30
I0
sg2799
g48
(g590
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4500
sg32
I1
sg41
g42
sg45
g46
sg33
F8.831355094909668
sS'trials2.thisN'
p4501
I170
sa(dp4502
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4503
g48
(g590
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4504
sS'trials2.thisRepN'
p4505
I0
sS'trials2.thisTrialN'
p4506
I171
sg2795
S'./stim/MorphM10_04_orig.jpg'
p4507
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x8c\t\xc0'
tRp4508
sg29
g48
(g50
S'\x00\x00\x00\x00\x00P)\xc0'
tRp4509
sg30
I1
sg2799
g48
(g590
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4510
sg32
I0
sg41
g42
sg45
g46
sg33
F4.255579948425293
sS'trials2.thisN'
p4511
I171
sa(dp4512
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4513
g48
(g590
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4514
sS'trials2.thisRepN'
p4515
I0
sS'trials2.thisTrialN'
p4516
I172
sg2795
S'./stim/MorphF2_00_orig.jpg'
p4517
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xd8\x08\xc0'
tRp4518
sg29
g48
(g50
S'\x00\x00\x00\x00\x00#)\xc0'
tRp4519
sg30
I0
sg2799
g48
(g590
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4520
sg32
I1
sg41
g42
sg45
g46
sg33
F3.7691500186920166
sS'trials2.thisN'
p4521
I172
sa(dp4522
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4523
g48
(g590
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4524
sS'trials2.thisRepN'
p4525
I0
sS'trials2.thisTrialN'
p4526
I173
sg2795
S'./stim/MorphF7_05_orig.jpg'
p4527
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x004\x07\xc0'
tRp4528
sg29
g48
(g50
S'\x00\x00\x00\x00\x00A)\xc0'
tRp4529
sg30
I0
sg2799
g48
(g590
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4530
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5239179134368896
sS'trials2.thisN'
p4531
I173
sa(dp4532
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4533
g48
(g590
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4534
sS'trials2.thisRepN'
p4535
I0
sS'trials2.thisTrialN'
p4536
I174
sg2795
S'./stim/MorphF2_09_orig.jpg'
p4537
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x004\x07\xc0'
tRp4538
sg29
g48
(g50
S'\x00\x00\x00\x00\x00})\xc0'
tRp4539
sg30
I0
sg2799
g48
(g590
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4540
sg32
I1
sg41
g42
sg45
g46
sg33
F0.83619999885559082
sS'trials2.thisN'
p4541
I174
sa(dp4542
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4543
g48
(g590
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4544
sS'trials2.thisRepN'
p4545
I0
sS'trials2.thisTrialN'
p4546
I175
sg2795
S'./stim/MorphM7_10_orig.jpg'
p4547
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x004\x07\xc0'
tRp4548
sg29
g48
(g50
S'\x00\x00\x00\x00\x00_)\xc0'
tRp4549
sg30
I0
sg2799
g48
(g590
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4550
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3729760646820068
sS'trials2.thisN'
p4551
I175
sa(dp4552
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4553
g48
(g590
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4554
sS'trials2.thisRepN'
p4555
I0
sS'trials2.thisTrialN'
p4556
I176
sg2795
S'./stim/MorphM1_01_orig.jpg'
p4557
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp4558
sg29
g48
(g50
S'\x00\x00\x00\x00\x00A)\xc0'
tRp4559
sg30
I1
sg2799
g48
(g590
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4560
sg32
I0
sg41
g42
sg45
g46
sg33
F0.90233993530273438
sS'trials2.thisN'
p4561
I176
sa(dp4562
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4563
g48
(g590
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4564
sS'trials2.thisRepN'
p4565
I0
sS'trials2.thisTrialN'
p4566
I177
sg2795
S'./stim/MorphM10_06_orig.jpg'
p4567
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x08\x06\xc0'
tRp4568
sg29
g48
(g50
S'\x00\x00\x00\x00\x00B(\xc0'
tRp4569
sg30
I0
sg2799
g48
(g590
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4570
sg32
I1
sg41
g42
sg45
g46
sg33
F21.836625099182129
sS'trials2.thisN'
p4571
I177
sa(dp4572
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4573
g48
(g590
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4574
sS'trials2.thisRepN'
p4575
I0
sS'trials2.thisTrialN'
p4576
I178
sg2795
S'./stim/MorphF6_05_orig.jpg'
p4577
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x14\t\xc0'
tRp4578
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x06(\xc0'
tRp4579
sg30
I1
sg2799
g48
(g590
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4580
sg32
I0
sg41
g42
sg45
g46
sg33
F1.0043659210205078
sS'trials2.thisN'
p4581
I178
sa(dp4582
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4583
g48
(g590
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4584
sS'trials2.thisRepN'
p4585
I0
sS'trials2.thisTrialN'
p4586
I179
sg2795
S'./stim/MorphF1_04_orig.jpg'
p4587
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb8\n\xc0'
tRp4588
sg29
g48
(g50
S'\x00\x00\x00\x00\x00Q(\xc0'
tRp4589
sg30
I1
sg2799
g48
(g590
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4590
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1087260246276855
sS'trials2.thisN'
p4591
I179
sa(dp4592
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4593
g48
(g590
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4594
sS'trials2.thisRepN'
p4595
I0
sS'trials2.thisTrialN'
p4596
I180
sg2795
S'./stim/MorphF3_09_orig.jpg'
p4597
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc4\r\xc0'
tRp4598
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp4599
sg30
I0
sg2799
g48
(g590
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4600
sg32
I1
sg41
g42
sg45
g46
sg33
F2.9962821006774902
sS'trials2.thisN'
p4601
I180
sa(dp4602
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4603
g48
(g590
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4604
sS'trials2.thisRepN'
p4605
I0
sS'trials2.thisTrialN'
p4606
I181
sg2795
S'./stim/MorphM9_09_orig.jpg'
p4607
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x10\r\xc0'
tRp4608
sg29
g48
(g50
S"\x00\x00\x00\x00\x00C'\xc0"
tRp4609
sg30
I0
sg2799
g48
(g590
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4610
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0687689781188965
sS'trials2.thisN'
p4611
I181
sa(dp4612
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4613
g48
(g590
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4614
sS'trials2.thisRepN'
p4615
I0
sS'trials2.thisTrialN'
p4616
I182
sg2795
S'./stim/MorphM4_07_orig.jpg'
p4617
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x10\r\xc0'
tRp4618
sg29
g48
(g50
S"\x00\x00\x00\x00\x00a'\xc0"
tRp4619
sg30
I0
sg2799
g48
(g590
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4620
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3059310913085938
sS'trials2.thisN'
p4621
I182
sa(dp4622
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4623
g48
(g590
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4624
sS'trials2.thisRepN'
p4625
I0
sS'trials2.thisTrialN'
p4626
I183
sg2795
S'./stim/MorphF2_04_orig.jpg'
p4627
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c\xc0'
tRp4628
sg29
g48
(g50
S"\x00\x00\x00\x00\x00R'\xc0"
tRp4629
sg30
I1
sg2799
g48
(g590
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4630
sg32
I0
sg41
g42
sg45
g46
sg33
F2.2429399490356445
sS'trials2.thisN'
p4631
I183
sa(dp4632
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4633
g48
(g590
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4634
sS'trials2.thisRepN'
p4635
I0
sS'trials2.thisTrialN'
p4636
I184
sg2795
S'./stim/MorphF7_02_orig.jpg'
p4637
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c\xc0'
tRp4638
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp4639
sg30
I1
sg2799
g48
(g590
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4640
sg32
I0
sg41
g42
sg45
g46
sg33
F0.88804197311401367
sS'trials2.thisN'
p4641
I184
sa(dp4642
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4643
g48
(g590
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4644
sS'trials2.thisRepN'
p4645
I0
sS'trials2.thisTrialN'
p4646
I185
sg2795
S'./stim/MorphM2_05_orig.jpg'
p4647
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe4\x0b\xc0'
tRp4648
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp4649
sg30
I1
sg2799
g48
(g590
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4650
sg32
I0
sg41
g42
sg45
g46
sg33
F1.8915359973907471
sS'trials2.thisN'
p4651
I185
sa(dp4652
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4653
g48
(g590
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4654
sS'trials2.thisRepN'
p4655
I0
sS'trials2.thisTrialN'
p4656
I186
sg2795
S'./stim/MorphF4_09_orig.jpg'
p4657
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00|\n\xc0'
tRp4658
sg29
g48
(g50
S"\x00\x00\x00\x00\x00\x7f'\xc0"
tRp4659
sg30
I0
sg2799
g48
(g590
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4660
sg32
I1
sg41
g42
sg45
g46
sg33
F0.96872210502624512
sS'trials2.thisN'
p4661
I186
sa(dp4662
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4663
g48
(g590
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4664
sS'trials2.thisRepN'
p4665
I0
sS'trials2.thisTrialN'
p4666
I187
sg2795
S'./stim/MorphF9_01_orig.jpg'
p4667
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \x0c\xc0'
tRp4668
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xda&\xc0'
tRp4669
sg30
I0
sg2799
g48
(g590
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4670
sg32
I1
sg41
g42
sg45
g46
sg33
F4.3875858783721924
sS'trials2.thisN'
p4671
I187
sa(dp4672
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4673
g48
(g590
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4674
sS'trials2.thisRepN'
p4675
I0
sS'trials2.thisTrialN'
p4676
I188
sg2795
S'./stim/MorphF7_07_orig.jpg'
p4677
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp4678
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x8f&\xc0'
tRp4679
sg30
I0
sg2799
g48
(g590
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4680
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5247929096221924
sS'trials2.thisN'
p4681
I188
sa(dp4682
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4683
g48
(g590
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4684
sS'trials2.thisRepN'
p4685
I0
sS'trials2.thisTrialN'
p4686
I189
sg2795
S'./stim/MorphF5_07_orig.jpg'
p4687
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x04\n\xc0'
tRp4688
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp4689
sg30
I1
sg2799
g48
(g590
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4690
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7727210521697998
sS'trials2.thisN'
p4691
I189
sa(dp4692
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4693
g48
(g590
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4694
sS'trials2.thisRepN'
p4695
I0
sS'trials2.thisTrialN'
p4696
I190
sg2795
S'./stim/MorphF10_05_orig.jpg'
p4697
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x14\t\xc0'
tRp4698
sg29
g48
(g50
S'\x00\x00\x00\x00\x00b&\xc0'
tRp4699
sg30
I0
sg2799
g48
(g590
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4700
sg32
I1
sg41
g42
sg45
g46
sg33
F1.4905807971954346
sS'trials2.thisN'
p4701
I190
sa(dp4702
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4703
g48
(g590
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4704
sS'trials2.thisRepN'
p4705
I0
sS'trials2.thisTrialN'
p4706
I191
sg2795
S'./stim/MorphM5_05_orig.jpg'
p4707
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00P\t\xc0'
tRp4708
sg29
g48
(g50
S'\x00\x00\x00\x00\x00S&\xc0'
tRp4709
sg30
I1
sg2799
g48
(g590
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4710
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6888620853424072
sS'trials2.thisN'
p4711
I191
sa(dp4712
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4713
g48
(g590
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4714
sS'trials2.thisRepN'
p4715
I0
sS'trials2.thisTrialN'
p4716
I192
sg2795
S'./stim/MorphM4_04_orig.jpg'
p4717
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc8\t\xc0'
tRp4718
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp4719
sg30
I0
sg2799
g48
(g590
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4720
sg32
I1
sg41
g42
sg45
g46
sg33
F0.98745107650756836
sS'trials2.thisN'
p4721
I192
sa(dp4722
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4723
g48
(g590
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4724
sS'trials2.thisRepN'
p4725
I0
sS'trials2.thisTrialN'
p4726
I193
sg2795
S'./stim/MorphF1_09_orig.jpg'
p4727
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00L\r\xc0'
tRp4728
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp4729
sg30
I1
sg2799
g48
(g590
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4730
sg32
I0
sg41
g42
sg45
g46
sg33
F3.8364858627319336
sS'trials2.thisN'
p4731
I193
sa(dp4732
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4733
g48
(g590
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4734
sS'trials2.thisRepN'
p4735
I0
sS'trials2.thisTrialN'
p4736
I194
sg2795
S'./stim/MorphM5_06_orig.jpg'
p4737
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00v\x11\xc0'
tRp4738
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x19$\xc0'
tRp4739
sg30
I0
sg2799
g48
(g590
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4740
sg32
I1
sg41
g42
sg45
g46
sg33
F5.3109750747680664
sS'trials2.thisN'
p4741
I194
sa(dp4742
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4743
g48
(g590
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4744
sS'trials2.thisRepN'
p4745
I0
sS'trials2.thisTrialN'
p4746
I195
sg2795
S'./stim/MorphM9_08_orig.jpg'
p4747
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfe\x10\xc0'
tRp4748
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcd$\xc0'
tRp4749
sg30
I0
sg2799
g48
(g590
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4750
sg32
I1
sg41
g42
sg45
g46
sg33
F1.0526340007781982
sS'trials2.thisN'
p4751
I195
sa(dp4752
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4753
g48
(g590
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4754
sS'trials2.thisRepN'
p4755
I0
sS'trials2.thisTrialN'
p4756
I196
sg2795
S'./stim/MorphF4_06_orig.jpg'
p4757
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00:\x11\xc0'
tRp4758
sg29
g48
(g50
S'\x00\x00\x00\x00\x00s$\xc0'
tRp4759
sg30
I1
sg2799
g48
(g590
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4760
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2366328239440918
sS'trials2.thisN'
p4761
I196
sa(dp4762
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4763
g48
(g590
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4764
sS'trials2.thisRepN'
p4765
I0
sS'trials2.thisTrialN'
p4766
I197
sg2795
S'./stim/MorphF10_08_orig.jpg'
p4767
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x84\x12\xc0'
tRp4768
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdd#\xc0'
tRp4769
sg30
I1
sg2799
g48
(g590
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4770
sg32
I0
sg41
g42
sg45
g46
sg33
F1.5072250366210938
sS'trials2.thisN'
p4771
I197
sa(dp4772
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4773
g48
(g590
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4774
sS'trials2.thisRepN'
p4775
I0
sS'trials2.thisTrialN'
p4776
I198
sg2795
S'./stim/MorphF9_08_orig.jpg'
p4777
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\x12\xc0'
tRp4778
sg29
g48
(g50
S'\x00\x00\x00\x00\x00($\xc0'
tRp4779
sg30
I0
sg2799
g48
(g590
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4780
sg32
I1
sg41
g42
sg45
g46
sg33
F1.3056590557098389
sS'trials2.thisN'
p4781
I198
sa(dp4782
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4783
g48
(g590
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4784
sS'trials2.thisRepN'
p4785
I0
sS'trials2.thisTrialN'
p4786
I199
sg2795
S'./stim/MorphM1_09_orig.jpg'
p4787
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xfc\x12\xc0'
tRp4788
sg29
g48
(g50
S'\x00\x00\x00\x00\x00d$\xc0'
tRp4789
sg30
I1
sg2799
g48
(g590
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4790
sg32
I0
sg41
g42
sg45
g46
sg33
F1.7235848903656006
sS'trials2.thisN'
p4791
I199
sa(dp4792
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4793
g48
(g590
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4794
sS'trials2.thisRepN'
p4795
I0
sS'trials2.thisTrialN'
p4796
I200
sg2795
S'./stim/MorphM8_04_orig.jpg'
p4797
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\x12\xc0'
tRp4798
sg29
g48
(g50
S'\x00\x00\x00\x00\x00U$\xc0'
tRp4799
sg30
I0
sg2799
g48
(g590
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4800
sg32
I1
sg41
g42
sg45
g46
sg33
F3.4846651554107666
sS'trials2.thisN'
p4801
I200
sa(dp4802
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4803
g48
(g590
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4804
sS'trials2.thisRepN'
p4805
I0
sS'trials2.thisTrialN'
p4806
I201
sg2795
S'./stim/MorphM3_05_orig.jpg'
p4807
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb2\x11\xc0'
tRp4808
sg29
g48
(g50
S'\x00\x00\x00\x00\x00t#\xc0'
tRp4809
sg30
I1
sg2799
g48
(g590
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4810
sg32
I0
sg41
g42
sg45
g46
sg33
F1.892117977142334
sS'trials2.thisN'
p4811
I201
sa(dp4812
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4813
g48
(g590
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4814
sS'trials2.thisRepN'
p4815
I0
sS'trials2.thisTrialN'
p4816
I202
sg2795
S'./stim/MorphM8_09_orig.jpg'
p4817
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00J\x10\xc0'
tRp4818
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp4819
sg30
I0
sg2799
g48
(g590
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4820
sg32
I1
sg41
g42
sg45
g46
sg33
F2.5630779266357422
sS'trials2.thisN'
p4821
I202
sa(dp4822
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4823
g48
(g590
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4824
sS'trials2.thisRepN'
p4825
I0
sS'trials2.thisTrialN'
p4826
I203
sg2795
S'./stim/MorphM1_08_orig.jpg'
p4827
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp4828
sg29
g48
(g50
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4829
sg30
I0
sg2799
g48
(g590
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4830
sg32
I1
sg41
g42
sg45
g46
sg33
F4.5407199859619141
sS'trials2.thisN'
p4831
I203
sa(dp4832
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4833
g48
(g590
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4834
sS'trials2.thisRepN'
p4835
I0
sS'trials2.thisTrialN'
p4836
I204
sg2795
S'./stim/MorphM8_08_orig.jpg'
p4837
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00h\x0f\xc0'
tRp4838
sg29
g48
(g50
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4839
sg30
I0
sg2799
g48
(g590
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4840
sg32
I1
sg41
g42
sg45
g46
sg33
F1.5217769145965576
sS'trials2.thisN'
p4841
I204
sa(dp4842
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4843
g48
(g590
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4844
sS'trials2.thisRepN'
p4845
I0
sS'trials2.thisTrialN'
p4846
I205
sg2795
S'./stim/MorphF1_03_orig.jpg'
p4847
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\x0e\xc0'
tRp4848
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4849
sg30
I1
sg2799
g48
(g590
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4850
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83647799491882324
sS'trials2.thisN'
p4851
I205
sa(dp4852
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4853
g48
(g590
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4854
sS'trials2.thisRepN'
p4855
I0
sS'trials2.thisTrialN'
p4856
I206
sg2795
S'./stim/MorphF10_03_orig.jpg'
p4857
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x0f\xc0'
tRp4858
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4859
sg30
I1
sg2799
g48
(g590
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4860
sg32
I0
sg41
g42
sg45
g46
sg33
F1.6410081386566162
sS'trials2.thisN'
p4861
I206
sa(dp4862
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4863
g48
(g590
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4864
sS'trials2.thisRepN'
p4865
I0
sS'trials2.thisTrialN'
p4866
I207
sg2795
S'./stim/MorphF6_03_orig.jpg'
p4867
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00,\x0f\xc0'
tRp4868
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4869
sg30
I1
sg2799
g48
(g590
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4870
sg32
I0
sg41
g42
sg45
g46
sg33
F0.83671689033508301
sS'trials2.thisN'
p4871
I207
sa(dp4872
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4873
g48
(g590
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4874
sS'trials2.thisRepN'
p4875
I0
sS'trials2.thisTrialN'
p4876
I208
sg2795
S'./stim/MorphF3_04_orig.jpg'
p4877
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00x\x0e\xc0'
tRp4878
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4879
sg30
I1
sg2799
g48
(g590
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4880
sg32
I0
sg41
g42
sg45
g46
sg33
F2.1582369804382324
sS'trials2.thisN'
p4881
I208
sa(dp4882
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4883
g48
(g590
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4884
sS'trials2.thisRepN'
p4885
I0
sS'trials2.thisTrialN'
p4886
I209
sg2795
S'./stim/MorphF5_01_orig.jpg'
p4887
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00L\r\xc0'
tRp4888
sg29
g48
(g50
S'\x00\x00\x00\x00\x009"\xc0'
tRp4889
sg30
I1
sg2799
g48
(g590
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4890
sg32
I0
sg41
g42
sg45
g46
sg33
F1.2724599838256836
sS'trials2.thisN'
p4891
I209
sa(dp4892
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4893
g48
(g590
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4894
sS'trials2.thisRepN'
p4895
I0
sS'trials2.thisTrialN'
p4896
I210
sg2795
S'./stim/MorphM3_09_orig.jpg'
p4897
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xb0\xe3?'
tRp4898
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x0b#\xc0'
tRp4899
sg30
I0
sg2799
g48
(g590
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4900
sg32
I1
sg41
g42
sg45
g46
sg33
F21.265170097351074
sS'trials2.thisN'
p4901
I210
sa(dp4902
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4903
g48
(g590
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4904
sS'trials2.thisRepN'
p4905
I0
sS'trials2.thisTrialN'
p4906
I211
sg2795
S'./stim/MorphF7_08_orig.jpg'
p4907
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp4908
sg29
g48
(g50
S'\x00\x00\x00\x00\x00s$\xc0'
tRp4909
sg30
I1
sg2799
g48
(g590
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4910
sg32
I0
sg41
g42
sg45
g46
sg33
F2.0592968463897705
sS'trials2.thisN'
p4911
I211
sa(dp4912
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4913
g48
(g590
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4914
sS'trials2.thisRepN'
p4915
I0
sS'trials2.thisTrialN'
p4916
I212
sg2795
S'./stim/MorphF6_09_orig.jpg'
p4917
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp4918
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcd$\xc0'
tRp4919
sg30
I1
sg2799
g48
(g590
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4920
sg32
I0
sg41
g42
sg45
g46
sg33
F5.69687819480896
sS'trials2.thisN'
p4921
I212
sa(dp4922
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4923
g48
(g590
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4924
sS'trials2.thisRepN'
p4925
I0
sS'trials2.thisTrialN'
p4926
I213
sg2795
S'./stim/MorphF8_10_orig.jpg'
p4927
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xe0\xf0?'
tRp4928
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdc$\xc0'
tRp4929
sg30
I0
sg2799
g48
(g590
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4930
sg32
I1
sg41
g42
sg45
g46
sg33
F4.7573449611663818
sS'trials2.thisN'
p4931
I213
sa(dp4932
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4933
g48
(g590
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4934
sS'trials2.thisRepN'
p4935
I0
sS'trials2.thisTrialN'
p4936
I214
sg2795
S'./stim/MorphF7_09_orig.jpg'
p4937
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xf0\xee?'
tRp4938
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xbe$\xc0'
tRp4939
sg30
I0
sg2799
g48
(g590
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4940
sg32
I1
sg41
g42
sg45
g46
sg33
F1.8411469459533691
sS'trials2.thisN'
p4941
I214
sa(dp4942
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4943
g48
(g590
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4944
sS'trials2.thisRepN'
p4945
I0
sS'trials2.thisTrialN'
p4946
I215
sg2795
S'./stim/MorphF8_01_orig.jpg'
p4947
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00 \xec?'
tRp4948
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcd$\xc0'
tRp4949
sg30
I1
sg2799
g48
(g590
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4950
sg32
I0
sg41
g42
sg45
g46
sg33
F0.73599481582641602
sS'trials2.thisN'
p4951
I215
sa(dp4952
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4953
g48
(g590
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4954
sS'trials2.thisRepN'
p4955
I0
sS'trials2.thisTrialN'
p4956
I216
sg2795
S'./stim/MorphM5_07_orig.jpg'
p4957
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp4958
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xcd$\xc0'
tRp4959
sg30
I1
sg2799
g48
(g590
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4960
sg32
I0
sg41
g42
sg45
g46
sg33
F2.6453530788421631
sS'trials2.thisN'
p4961
I216
sa(dp4962
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4963
g48
(g590
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4964
sS'trials2.thisRepN'
p4965
I0
sS'trials2.thisTrialN'
p4966
I217
sg2795
S'./stim/MorphM9_03_orig.jpg'
p4967
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp4968
sg29
g48
(g50
S'\x00\x00\x00\x00\x00r%\xc0'
tRp4969
sg30
I1
sg2799
g48
(g590
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4970
sg32
I0
sg41
g42
sg45
g46
sg33
F1.1362488269805908
sS'trials2.thisN'
p4971
I217
sa(dp4972
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4973
g48
(g590
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4974
sS'trials2.thisRepN'
p4975
I0
sS'trials2.thisTrialN'
p4976
I218
sg2795
S'./stim/MorphF9_03_orig.jpg'
p4977
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x000\xeb?'
tRp4978
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\xdc$\xc0'
tRp4979
sg30
I1
sg2799
g48
(g590
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4980
sg32
I0
sg41
g42
sg45
g46
sg33
F1.3378090858459473
sS'trials2.thisN'
p4981
I218
sa(dp4982
g31
I0
sg44
g11
sg43
VG
sS'trials2.thisIndex'
p4983
g48
(g590
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4984
sS'trials2.thisRepN'
p4985
I0
sS'trials2.thisTrialN'
p4986
I219
sg2795
S'./stim/MorphM9_00_orig.jpg'
p4987
sg47
g51
sg28
g48
(g50
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp4988
sg29
g48
(g50
S'\x00\x00\x00\x00\x00\x18%\xc0'
tRp4989
sg30
I1
sg2799
g48
(g590
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4990
sg32
I0
sg41
g42
sg45
g46
sg33
F15.049159049987793
sS'trials2.thisN'
p4991
I219
sa(dp4992
g44
g11
sg43
VG
sg36
S'return'
p4993
sg41
g42
sg37
F1.7882978916168213
sg45
g46
sg47
g51
sasS'loops'
p4994
(lp4995
g1
(cpsychopy.data
TrialHandler
p4996
g3
NtRp4997
(dp4998
S'origin'
p4999
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5000
sS'thisTrial'
p5001
(lp5002
sS'_exp'
p5003
I140041876542800
sg10
S'basicLoop'
p5004
sg6
S'/home/labor/faces/emoFaces.py'
p5005
sS'thisRepN'
p5006
I1
sg38
I01
sg39
g40
sS'data'
p5007
g1
(cpsychopy.data
DataHandler
p5008
c__builtin__
dict
p5009
(dp5010
g16
cnumpy.core.multiarray
_reconstruct
p5011
(cnumpy
ndarray
p5012
(I0
tS'b'
tRp5013
(I1
(I84
I1
tg49
(S'O8'
I0
I1
tRp5014
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5015
NaNaNag133
ag81
aNaNaNaNaNag133
ag81
aNaNaNaNaNag133
aNag133
aNaNaNaNag133
ag81
aNaNaNaNaNaNag81
aNaNaNaNaNag133
ag81
aNaNaNaNaNag133
ag81
aNaNaNag81
aNag133
aNaNaNaNag81
aNag133
ag81
aNaNaNaNaNag133
ag81
aNaNaNaNaNag133
aNaNaNaNaNaNag133
ag81
aNaNatbsg18
g5011
(g5012
(I0
tS'b'
tRp5016
(I1
(I84
I1
tg5014
I00
(lp5017
g100
aNag74
aNaNaNaNag100
aNaNaNaNaNaNag100
aNag74
aNag74
aNaNag100
aNag74
aNaNaNaNag100
aNaNag74
aNaNag74
ag100
aNaNaNaNaNaNag100
aNag74
aNaNaNaNag100
aNag74
aNaNaNaNaNaNag74
aNaNaNaNaNaNag74
aNaNag74
aNag100
aNag74
aNag74
aNaNag100
aNag74
aNaNaNaNatbsg21
g5011
(g5012
(I0
tS'b'
tRp5018
(I1
(I84
I1
tg5014
I00
(lp5019
NaF2.7349999999999999
aNaNaNaF1.0960000000000001
aNaNaF2.5499999999999998
aF2.2549999999999999
aNaNaF0.98199999999999998
aNaNaF3.5899999999999999
aNaNaNaNaNaNaF1.7669999999999999
aNaNaNaF1.0109999999999999
aNaNaF1.139
aF3.7330000000000001
aNaNaF2.117
aNaNaF1.2110000000000001
aNaNaNaF3.2890000000000001
aNaNaS'4.'
p5020
aNaNaNaF1.7150000000000001
aNaNaNaNaNaF1.6779999999999999
aNaNaF1.5429999999999999
aNaNaNaNaF2.5619999999999998
aNaF2.3639999999999999
aF2.0990000000000002
aNaNaNaNaNaNaF2.0150000000000001
aNaNaNaF1.9650000000000001
aNaNaF2.0129999999999999
aNaNaNaF1.274
aNatbsS'ran'
p5021
cnumpy.ma.core
_mareconstruct
p5022
(cnumpy.ma.core
MaskedArray
p5023
g5012
(I0
tp5024
S'b'
tRp5025
(I1
(I84
I1
tg49
(S'f4'
I0
I1
tRp5026
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5011
(g5012
(I0
tS'b'
tRp5027
(I1
(I84
I1
tg5014
I00
(lp5028
NaNaNaF0.97699999999999998
aF1.6339999999999999
aNaNaNaNaNaF1.655
aF2.0510000000000002
aNaNaNaNaNaF1.1970000000000001
aNaF1.5149999999999999
aNaNaNaNaF2.1499999999999999
aF3.1070000000000002
aNaNaNaNaNaNaF1.1459999999999999
aNaNaNaNaNaF1.1930000000000001
aF1.431
aNaNaNaNaNaF0.72699999999999998
aF2.1659999999999999
aNaNaNaF1.514
aNaF0.66200000000000003
aNaNaNaNaF1.2450000000000001
aNaF1.028
aF1.865
aNaNaNaNaNaF1.5980000000000001
aF4.1399999999999997
aNaNaNaNaNaF1.1459999999999999
aNaNaNaNaNaNaF1.8500000000000001
aF1.5620000000000001
aNaNatbsg23
g5011
(g5012
(I0
tS'b'
tRp5029
(I1
(I84
I1
tg5014
I00
(lp5030
NaNaNaNaNaNaF4.4630000000000001
aNaNaNaNaNaNaF2.2829999999999999
aNaNaNaNaNaNaF1.375
aNaNaNaNaNaNaF1.978
aNaNaNaNaNaNaNaNaNaF6.2699999999999996
aNaNaNaF1.9950000000000001
aNaNaNaNaNaNaF2.319
aNaNaNaNaNaF2.3140000000000001
aF1.2130000000000001
aNaNaNaNaNaNaF4.6340000000000003
aNaNaNaNaNaNaF2.484
aNaNaNaNaNaNaF2.3650000000000002
aNaNaNaNaNaNaF3.5870000000000002
atbsg22
g5011
(g5012
(I0
tS'b'
tRp5031
(I1
(I84
I1
tg5014
I00
(lp5032
NaNaNaNaNaNag127
aNaNaNaNaNaNag127
aNaNaNaNaNaNag127
aNaNaNaNaNaNag127
aNaNaNaNaNaNaNaNaNag127
aNaNaNag127
aNaNaNaNaNaNag127
aNaNaNaNaNag108
ag127
aNaNaNaNaNaNag127
aNaNaNaNaNaNag127
aNaNaNaNaNaNag127
aNaNaNaNaNaNag127
atbsg19
g5011
(g5012
(I0
tS'b'
tRp5033
(I1
(I84
I1
tg5014
I00
(lp5034
F3.661
aNaF2.3180000000000001
aNaNaNaNaF2.3820000000000001
aNaNaNaNaNaNaF0.99099999999999999
aNaF2.0350000000000001
aNaF5.0640000000000001
aNaNaF4.1760000000000002
aNaF1.131
aNaNaNaNaF1.347
aNaNaF1.163
aNaNaF3.1720000000000002
aF2.0299999999999998
aNaNaNaNaNaNaF2.032
aNaF2.2839999999999998
aNaNaNaNaF0.97099999999999997
aNaF4.5620000000000003
aNaNaNaNaNaNaF2.988
aNaNaNaNaNaNaF2.2650000000000001
aNaNaF1.478
aNaF1.4330000000000001
aNaF4.2439999999999998
aNaF4.6440000000000001
aNaNaF1.4610000000000001
aNaF0.82199999999999995
aNaNaNaNatbsg20
g5011
(g5012
(I0
tS'b'
tRp5035
(I1
(I84
I1
tg5014
I00
(lp5036
Nag70
aNaNaNag209
aNaNag70
ag70
aNaNag209
aNaNag70
aNaNaNaNaNaNag70
aNaNaNag209
aNaNag70
ag70
aNaNag209
aNaNag70
aNaNaNag209
aNaNag70
aNaNaNag209
aNaNaNaNaNag209
aNaNag70
aNaNaNaNag209
aNag70
ag70
aNaNaNaNaNaNag70
aNaNaNag209
aNaNag70
aNaNaNag209
aNatbsS'order'
p5037
g5022
(g5023
g5012
g5024
S'b'
tRp5038
(I1
(I84
I1
tg5026
I00
S'\x00\x00\xa0@\x00\x00\x80@\x00\x000A\x00\x00$B\x00\x00\x98A\x00\x00\x94B\x00\x00(B\x00\x00LB\x00\x00\x00A\x00\x004B\x00\x00\xd0A\x00\x00\x82B\x00\x00TB\x00\x00\x90B\x00\x00\x10B\x00\x00\x8eB\x00\x00pB\x00\x008B\x00\x00dB\x00\x00\x04B\x00\x00@B\x00\x00\xa8A\x00\x00\x84B\x00\x00\xa0A\x00\x00\x90A\x00\x00hB\x00\x00XB\x00\x00\x96B\x00\x00@A\x00\x00PB\x00\x00\xa6B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x92B\x00\x00\x98B\x00\x00\x08B\x00\x00<B\x00\x00pA\x00\x00\x86B\x00\x00@@\x00\x00\xd8A\x00\x00\x80A\x00\x00,B\x00\x00\x00\x00\x00\x00\xa2B\x00\x00\x9cB\x00\x00\x1cB\x00\x00\\B\x00\x00 B\x00\x00\xb8A\x00\x00\x9aB\x00\x00\x88A\x00\x000B\x00\x00\xf8A\x00\x00\xc0@\x00\x00\xe8A\x00\x00\x14B\x00\x00\x18B\x00\x00\x9eB\x00\x00\xa4B\x00\x00\xe0A\x00\x00\x88B\x00\x00`B\x00\x00\xf0A\x00\x00\xa0B\x00\x00\x80?\x00\x00 A\x00\x00\x00@\x00\x00\xc0A\x00\x00PA\x00\x00tB\x00\x00DB\x00\x00\x80B\x00\x00HB\x00\x00`A\x00\x00\xb0A\x00\x00lB\x00\x00\x00B\x00\x00\xe0@\x00\x00\xc8A\x00\x00xB\x00\x00|B\x00\x00\x0cB\x00\x00\x10A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5039
(dp5040
S'isNumeric'
p5041
(dp5042
g16
I00
sg18
I00
sg21
I00
sg5021
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5037
I01
ssS'trials'
p5043
g4997
sS'dataTypes'
p5044
(lp5045
g5021
ag5037
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5046
(lp5047
I84
aI1
asbsS'method'
p5048
S'fullRandom'
p5049
sS'sequenceIndices'
p5050
g5011
(g5012
(I0
tS'b'
tRp5051
(I1
(I84
I1
tg5014
I00
(lp5052
I43
aI65
aI67
aI39
aI1
aI0
aI54
aI78
aI8
aI83
aI66
aI2
aI28
aI69
aI74
aI37
aI41
aI51
aI24
aI4
aI23
aI21
aI75
aI49
aI68
aI79
aI10
aI40
aI60
aI55
aI63
aI53
aI77
aI19
aI35
aI82
aI14
aI56
aI57
aI46
aI48
aI3
aI6
aI42
aI52
aI9
aI17
aI36
aI20
aI71
aI73
aI7
aI29
aI12
aI26
aI47
aI62
aI18
aI25
aI76
aI16
aI70
aI80
aI81
aI72
aI11
aI22
aI38
aI61
aI31
aI32
aI15
aI13
aI33
aI5
aI27
aI34
aI50
aI45
aI58
aI64
aI44
aI59
aI30
atbsS'finished'
p5053
I01
sS'nReps'
p5054
I1
sS'nRemaining'
p5055
I-1
sS'trialList'
p5056
(lp5057
g1
(cpsychopy.data
TrialType
p5058
g5009
(dp5059
g60
g101
stRp5060
ag1
(g5058
g5009
(dp5061
g60
g94
stRp5062
ag1
(g5058
g5009
(dp5063
g60
g140
stRp5064
ag1
(g5058
g5009
(dp5065
g60
g321
stRp5066
ag1
(g5058
g5009
(dp5067
g60
g188
stRp5068
ag1
(g5058
g5009
(dp5069
g60
g519
stRp5070
ag1
(g5058
g5009
(dp5071
g60
g327
stRp5072
ag1
(g5058
g5009
(dp5073
g60
g381
stRp5074
ag1
(g5058
g5009
(dp5075
g60
g120
stRp5076
ag1
(g5058
g5009
(dp5077
g60
g345
stRp5078
ag1
(g5058
g5009
(dp5079
g60
g231
stRp5080
ag1
(g5058
g5009
(dp5081
g60
g465
stRp5082
ag1
(g5058
g5009
(dp5083
g60
g393
stRp5084
ag1
(g5058
g5009
(dp5085
g60
g507
stRp5086
ag1
(g5058
g5009
(dp5087
g60
g291
stRp5088
ag1
(g5058
g5009
(dp5089
g60
g501
stRp5090
ag1
(g5058
g5009
(dp5091
g60
g435
stRp5092
ag1
(g5058
g5009
(dp5093
g60
g351
stRp5094
ag1
(g5058
g5009
(dp5095
g60
g417
stRp5096
ag1
(g5058
g5009
(dp5097
g60
g273
stRp5098
ag1
(g5058
g5009
(dp5099
g60
g363
stRp5100
ag1
(g5058
g5009
(dp5101
g60
g200
stRp5102
ag1
(g5058
g5009
(dp5103
g60
g471
stRp5104
ag1
(g5058
g5009
(dp5105
g60
g194
stRp5106
ag1
(g5058
g5009
(dp5107
g60
g182
stRp5108
ag1
(g5058
g5009
(dp5109
g60
g423
stRp5110
ag1
(g5058
g5009
(dp5111
g60
g399
stRp5112
ag1
(g5058
g5009
(dp5113
g60
g525
stRp5114
ag1
(g5058
g5009
(dp5115
g60
g146
stRp5116
ag1
(g5058
g5009
(dp5117
g60
g387
stRp5118
ag1
(g5058
g5009
(dp5119
g60
g573
stRp5120
ag1
(g5058
g5009
(dp5121
g60
g489
stRp5122
ag1
(g5058
g5009
(dp5123
g60
g495
stRp5124
ag1
(g5058
g5009
(dp5125
g60
g513
stRp5126
ag1
(g5058
g5009
(dp5127
g60
g531
stRp5128
ag1
(g5058
g5009
(dp5129
g60
g279
stRp5130
ag1
(g5058
g5009
(dp5131
g60
g357
stRp5132
ag1
(g5058
g5009
(dp5133
g60
g164
stRp5134
ag1
(g5058
g5009
(dp5135
g60
g477
stRp5136
ag1
(g5058
g5009
(dp5137
g60
g88
stRp5138
ag1
(g5058
g5009
(dp5139
g60
g237
stRp5140
ag1
(g5058
g5009
(dp5141
g60
g170
stRp5142
ag1
(g5058
g5009
(dp5143
g60
g333
stRp5144
ag1
(g5058
g5009
(dp5145
g60
g67
stRp5146
ag1
(g5058
g5009
(dp5147
g60
g561
stRp5148
ag1
(g5058
g5009
(dp5149
g60
g543
stRp5150
ag1
(g5058
g5009
(dp5151
g60
g309
stRp5152
ag1
(g5058
g5009
(dp5153
g60
g405
stRp5154
ag1
(g5058
g5009
(dp5155
g60
g315
stRp5156
ag1
(g5058
g5009
(dp5157
g60
g213
stRp5158
ag1
(g5058
g5009
(dp5159
g60
g537
stRp5160
ag1
(g5058
g5009
(dp5161
g60
g176
stRp5162
ag1
(g5058
g5009
(dp5163
g60
g339
stRp5164
ag1
(g5058
g5009
(dp5165
g60
g261
stRp5166
ag1
(g5058
g5009
(dp5167
g60
g107
stRp5168
ag1
(g5058
g5009
(dp5169
g60
g249
stRp5170
ag1
(g5058
g5009
(dp5171
g60
g297
stRp5172
ag1
(g5058
g5009
(dp5173
g60
g303
stRp5174
ag1
(g5058
g5009
(dp5175
g60
g549
stRp5176
ag1
(g5058
g5009
(dp5177
g60
g567
stRp5178
ag1
(g5058
g5009
(dp5179
g60
g243
stRp5180
ag1
(g5058
g5009
(dp5181
g60
g483
stRp5182
ag1
(g5058
g5009
(dp5183
g60
g411
stRp5184
ag1
(g5058
g5009
(dp5185
g60
g255
stRp5186
ag1
(g5058
g5009
(dp5187
g60
g555
stRp5188
ag1
(g5058
g5009
(dp5189
g60
g75
stRp5190
ag1
(g5058
g5009
(dp5191
g60
g134
stRp5192
ag1
(g5058
g5009
(dp5193
g60
g82
stRp5194
ag1
(g5058
g5009
(dp5195
g60
g219
stRp5196
ag1
(g5058
g5009
(dp5197
g60
g152
stRp5198
ag1
(g5058
g5009
(dp5199
g60
g441
stRp5200
ag1
(g5058
g5009
(dp5201
g60
g369
stRp5202
ag1
(g5058
g5009
(dp5203
g60
g459
stRp5204
ag1
(g5058
g5009
(dp5205
g60
g375
stRp5206
ag1
(g5058
g5009
(dp5207
g60
g158
stRp5208
ag1
(g5058
g5009
(dp5209
g60
g206
stRp5210
ag1
(g5058
g5009
(dp5211
g60
g429
stRp5212
ag1
(g5058
g5009
(dp5213
g60
g267
stRp5214
ag1
(g5058
g5009
(dp5215
g60
g114
stRp5216
ag1
(g5058
g5009
(dp5217
g60
g225
stRp5218
ag1
(g5058
g5009
(dp5219
g60
g447
stRp5220
ag1
(g5058
g5009
(dp5221
g60
g453
stRp5222
ag1
(g5058
g5009
(dp5223
g60
g285
stRp5224
ag1
(g5058
g5009
(dp5225
g60
g126
stRp5226
asS'seed'
p5227
NsS'thisIndex'
p5228
I30
sS'thisN'
p5229
I84
sS'thisTrialN'
p5230
I0
sS'nTotal'
p5231
I84
sS'_warnUseOfNext'
p5232
I01
sbag1
(g4996
g3
NtRp5233
(dp5234
g4999
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5235
sg5001
(lp5236
sg5003
I140041876542800
sg10
g5043
sg6
g5005
sg5006
I1
sg38
I01
sg39
g40
sg5007
g1
(g5008
g5009
(dp5237
g30
g5022
(g5023
g5012
g5024
S'b'
tRp5238
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5021
g5022
(g5023
g5012
g5024
S'b'
tRp5239
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5011
(g5012
(I0
tS'b'
tRp5240
(I1
(I220
I1
tg5014
I00
(lp5241
g593
ag603
ag613
ag623
ag633
ag643
ag653
ag663
ag673
ag683
ag693
ag703
ag713
ag723
ag733
ag743
ag753
ag763
ag773
ag783
ag793
ag803
ag813
ag823
ag833
ag843
ag853
ag863
ag873
ag883
ag893
ag903
ag913
ag923
ag933
ag943
ag953
ag963
ag973
ag983
ag993
ag1003
ag1013
ag1023
ag1033
ag1043
ag1053
ag1063
ag1073
ag1083
ag1093
ag1103
ag1113
ag1123
ag1133
ag1143
ag1153
ag1163
ag1173
ag1183
ag1193
ag1203
ag1213
ag1223
ag1233
ag1243
ag1253
ag1263
ag1273
ag1283
ag1293
ag1303
ag1313
ag1323
ag1333
ag1343
ag1353
ag1363
ag1373
ag1383
ag1393
ag1403
ag1413
ag1423
ag1433
ag1443
ag1453
ag1463
ag1473
ag1483
ag1493
ag1503
ag1513
ag1523
ag1533
ag1543
ag1553
ag1563
ag1573
ag1583
ag1593
ag1603
ag1613
ag1623
ag1633
ag1643
ag1653
ag1663
ag1673
ag1683
ag1693
ag1703
ag1713
ag1723
ag1733
ag1743
ag1753
ag1763
ag1773
ag1783
ag1793
ag1803
ag1813
ag1823
ag1833
ag1843
ag1853
ag1863
ag1873
ag1883
ag1893
ag1903
ag1913
ag1923
ag1933
ag1943
ag1953
ag1963
ag1973
ag1983
ag1993
ag2003
ag2013
ag2023
ag2033
ag2043
ag2053
ag2063
ag2073
ag2083
ag2093
ag2103
ag2113
ag2123
ag2133
ag2143
ag2153
ag2163
ag2173
ag2183
ag2193
ag2203
ag2213
ag2223
ag2233
ag2243
ag2253
ag2263
ag2273
ag2283
ag2293
ag2303
ag2313
ag2323
ag2333
ag2343
ag2353
ag2363
ag2373
ag2383
ag2393
ag2403
ag2413
ag2423
ag2433
ag2443
ag2453
ag2463
ag2473
ag2483
ag2493
ag2503
ag2513
ag2523
ag2533
ag2543
ag2553
ag2563
ag2573
ag2583
ag2593
ag2603
ag2613
ag2623
ag2633
ag2643
ag2653
ag2663
ag2673
ag2683
ag2693
ag2703
ag2713
ag2723
ag2733
ag2743
ag2753
ag2763
ag2773
ag2783
atbsg29
g5011
(g5012
(I0
tS'b'
tRp5242
(I1
(I220
I1
tg5014
I00
(lp5243
g594
ag604
ag614
ag624
ag634
ag644
ag654
ag664
ag674
ag684
ag694
ag704
ag714
ag724
ag734
ag744
ag754
ag764
ag774
ag784
ag794
ag804
ag814
ag824
ag834
ag844
ag854
ag864
ag874
ag884
ag894
ag904
ag914
ag924
ag934
ag944
ag954
ag964
ag974
ag984
ag994
ag1004
ag1014
ag1024
ag1034
ag1044
ag1054
ag1064
ag1074
ag1084
ag1094
ag1104
ag1114
ag1124
ag1134
ag1144
ag1154
ag1164
ag1174
ag1184
ag1194
ag1204
ag1214
ag1224
ag1234
ag1244
ag1254
ag1264
ag1274
ag1284
ag1294
ag1304
ag1314
ag1324
ag1334
ag1344
ag1354
ag1364
ag1374
ag1384
ag1394
ag1404
ag1414
ag1424
ag1434
ag1444
ag1454
ag1464
ag1474
ag1484
ag1494
ag1504
ag1514
ag1524
ag1534
ag1544
ag1554
ag1564
ag1574
ag1584
ag1594
ag1604
ag1614
ag1624
ag1634
ag1644
ag1654
ag1664
ag1674
ag1684
ag1694
ag1704
ag1714
ag1724
ag1734
ag1744
ag1754
ag1764
ag1774
ag1784
ag1794
ag1804
ag1814
ag1824
ag1834
ag1844
ag1854
ag1864
ag1874
ag1884
ag1894
ag1904
ag1914
ag1924
ag1934
ag1944
ag1954
ag1964
ag1974
ag1984
ag1994
ag2004
ag2014
ag2024
ag2034
ag2044
ag2054
ag2064
ag2074
ag2084
ag2094
ag2104
ag2114
ag2124
ag2134
ag2144
ag2154
ag2164
ag2174
ag2184
ag2194
ag2204
ag2214
ag2224
ag2234
ag2244
ag2254
ag2264
ag2274
ag2284
ag2294
ag2304
ag2314
ag2324
ag2334
ag2344
ag2354
ag2364
ag2374
ag2384
ag2394
ag2404
ag2414
ag2424
ag2434
ag2444
ag2454
ag2464
ag2474
ag2484
ag2494
ag2504
ag2514
ag2524
ag2534
ag2544
ag2554
ag2564
ag2574
ag2584
ag2594
ag2604
ag2614
ag2624
ag2634
ag2644
ag2654
ag2664
ag2674
ag2684
ag2694
ag2704
ag2714
ag2724
ag2734
ag2744
ag2754
ag2764
ag2774
ag2784
atbsg31
g5022
(g5023
g5012
g5024
S'b'
tRp5244
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5022
(g5023
g5012
g5024
S'b'
tRp5245
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5022
(g5023
g5012
g5024
S'b'
tRp5246
(I1
(I220
I1
tg5026
I00
S'\xb8\x95<A\xea\xe6\xfe?J\xb3\x91?\x04\x96k?\xf4\xaf\x91?L\x8c9A\x9c\xfd\x07@C\x043@:\xac\x82?&\xa9\xda?\xd0\x0f\xa7?\x9c\xdc\xeb?:xt@\x0c\xc0\xde?\xec\x81\xf6?E\xa1v@\xaf\xfa\x08A\x0e\xc2\xa4?r\xa5-@?\x1a\x16@D\xe4\xc0?\nL\x8b?By\xfb@\x00\x08\x96?\xca\x85\xda?\xc8\xe5\x93?46t?L\xcb|?\xda$\x89?\x1c\xbd\x81@\xae\x83\xab?C\xd4\xdb@"\xad\xcb?\xb6\xbb\xaf?T\x02\xb4?\xc4\x00\xfd?\xc0\x94\xad?,\xdbs?\n\xd9\xed?\x82\xe5\x84?\n*\x98?\xab\xe80@V\xde\xc0?\xacU7@1}\x00@\xbe\xc0\x84?`\xc9\xaf?HQ\xc7?K\x03B@\xf5\xdaM@W\xd0j@\xd4\xc3|?\xa8\xcc\x93?l$%@D;k?\x14\x90\x1d@x\xb6\x9e@\xf8\xc4\xbe?L\xcd\x98@\xc2h\x9c?"\x17\x16@\xccb\x9c?\\\x88\xe9?|\xa0\xcb?<0&@{\xb9/@\x84H\xbe@\x0f\x08\x07@D\xa3\xcb?\xe28S@\xa2T\x9c?\xb0Z\xe3@7\x8c:@\xf7\xf6\x84@X\x98\x9e?R\xc3\xaf?\xd1v,@\xdew\xba?\xb3_\xbf@M/\t@\x84\xf4]@\xfa\x0b\xc3?\x16h\x8f?\xbdW\x0b@&\xff\xcf?t\xb9\x91?M\xa1\x0f@X\xdd\x88?x\x01\x96?\xc6\x89+@V\t4@S\x98X@\xebXF@\x0e5\xb6?\xf8\x81x?\xf2\x08\x86@\x154\n@D/\x97@k\xd6\x8a@\xa2.\xb6?\xf2\xd0\x93?\xfc\x7flA\xa0Q\xf6?\xf9Y\xdc@ |W@\xc0\x1e6@\\pV@g\xb6\x10@\xe0*\xa9?\xb6\xfb\xb1?\xac\x90\xe7@\x00\xafZ@\xc4uYA\xea\xe5\xb1?*\xa4\x80?<F\xab?\xf2\'\x04AP\xe7\xde?\xe4\xb9\xda?\xe8\xbc\xa2?\x141|?\xe4\xf8"@\xb4\xde\x93?\x94~\xd8?H\xc1\xeb? \xd3\xbe?P1\xf2?\xecl\x9c?\x985t?\xd9|e@\x08\xae\xde?\xc4S\xab?>\xb8\xeb?&\xc5\xcf?\xc5\x04$@\xfb\x8f:@S\x06\x06@\xdc\x0f\xd2?\x88\xe9\x86?\xc6p\xab?\xac\x90\'AV\x9b\x1d@<lV@~\xf5\xfc?jW\x15A\xacpe@t\xae\xbc?\xf2\xb7\x8eB\xec\xdfZB\xc8)\t@\xccb\xd6?\x82\xe0\x1eB#R\x11A\xcbR\x03B\x85\xf6\xaeA&I\x83@0\x82\xe5@\n!5B`\xeb"@\xb6\xf4\xfe?\x9ae\xe5?\x11\xc5!@\x9e\x08\x07@hy9@\xb6\x12B@RA\xa9?X\x15\xc5A\xfb$&@\xc2\xe1\x88A\xba\x15`@rQ\xf2@\x8e?F@\xb8\x94\x1d@\xc9\xb1\x8fA\x1e\xa1J@\xbd\xc5\x1f@\x82\xc8\x02@\x14`\xf6?\xfaw\x8c@\x86\xe6\xfa?\xff\x97J@\xecj\xd6?MMr@R\x83\xab?\xab\xadw@`z\xc9?`>\'@\xd6%\x04A\xb2R\xe5?\r\xc7/@(\xb8|?\x91R\'As!\x97@\xcbE\'@\x0e\x02\xb3@I\xe1uAn\xa8\xd1@&\x956Ak\xedz@\x82F\x82@\x1c\xeb\xb0@"\\\x8aA\xfc%!Aj.\x18@\x86\xec\xbe?\xe9*\x81@T)\xd9@\x96]F@k\x82&A\x84\x13`@\xf4V\x8f?6\x1cC@b;\x90@\xc6\x07\xab@v\xab\x00A\xdb\xa1=@1\x0c$@N.\xf2?*V\x1a@bgd@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5037
g5022
(g5023
g5012
g5024
S'b'
tRp5247
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5248
(dp5249
g5041
(dp5250
g31
I01
sg5021
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5037
I01
ssg5043
g5233
sg5044
(lp5251
g5021
ag5037
ag28
ag29
ag30
ag31
ag32
ag33
asg5046
(lp5252
I220
aI1
asbsg5048
S'sequential'
p5253
sg5050
g5011
(g5012
(I0
tS'b'
tRp5254
(I1
(I220
I1
tg590
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5053
I01
sg5054
I1
sg5055
I-1
sg5056
(lp5255
g1
(g5058
g5009
(dp5256
g61
g595
sg587
g588
stRp5257
ag1
(g5058
g5009
(dp5258
g61
g605
sg587
g599
stRp5259
ag1
(g5058
g5009
(dp5260
g61
g615
sg587
g609
stRp5261
ag1
(g5058
g5009
(dp5262
g61
g625
sg587
g619
stRp5263
ag1
(g5058
g5009
(dp5264
g61
g635
sg587
g629
stRp5265
ag1
(g5058
g5009
(dp5266
g61
g645
sg587
g639
stRp5267
ag1
(g5058
g5009
(dp5268
g61
g655
sg587
g649
stRp5269
ag1
(g5058
g5009
(dp5270
g61
g665
sg587
g659
stRp5271
ag1
(g5058
g5009
(dp5272
g61
g675
sg587
g669
stRp5273
ag1
(g5058
g5009
(dp5274
g61
g685
sg587
g679
stRp5275
ag1
(g5058
g5009
(dp5276
g61
g695
sg587
g689
stRp5277
ag1
(g5058
g5009
(dp5278
g61
g705
sg587
g699
stRp5279
ag1
(g5058
g5009
(dp5280
g61
g715
sg587
g709
stRp5281
ag1
(g5058
g5009
(dp5282
g61
g725
sg587
g719
stRp5283
ag1
(g5058
g5009
(dp5284
g61
g735
sg587
g729
stRp5285
ag1
(g5058
g5009
(dp5286
g61
g745
sg587
g739
stRp5287
ag1
(g5058
g5009
(dp5288
g61
g755
sg587
g749
stRp5289
ag1
(g5058
g5009
(dp5290
g61
g765
sg587
g759
stRp5291
ag1
(g5058
g5009
(dp5292
g61
g775
sg587
g769
stRp5293
ag1
(g5058
g5009
(dp5294
g61
g785
sg587
g779
stRp5295
ag1
(g5058
g5009
(dp5296
g61
g795
sg587
g789
stRp5297
ag1
(g5058
g5009
(dp5298
g61
g805
sg587
g799
stRp5299
ag1
(g5058
g5009
(dp5300
g61
g815
sg587
g809
stRp5301
ag1
(g5058
g5009
(dp5302
g61
g825
sg587
g819
stRp5303
ag1
(g5058
g5009
(dp5304
g61
g835
sg587
g829
stRp5305
ag1
(g5058
g5009
(dp5306
g61
g845
sg587
g839
stRp5307
ag1
(g5058
g5009
(dp5308
g61
g855
sg587
g849
stRp5309
ag1
(g5058
g5009
(dp5310
g61
g865
sg587
g859
stRp5311
ag1
(g5058
g5009
(dp5312
g61
g875
sg587
g869
stRp5313
ag1
(g5058
g5009
(dp5314
g61
g885
sg587
g879
stRp5315
ag1
(g5058
g5009
(dp5316
g61
g895
sg587
g889
stRp5317
ag1
(g5058
g5009
(dp5318
g61
g905
sg587
g899
stRp5319
ag1
(g5058
g5009
(dp5320
g61
g915
sg587
g909
stRp5321
ag1
(g5058
g5009
(dp5322
g61
g925
sg587
g919
stRp5323
ag1
(g5058
g5009
(dp5324
g61
g935
sg587
g929
stRp5325
ag1
(g5058
g5009
(dp5326
g61
g945
sg587
g939
stRp5327
ag1
(g5058
g5009
(dp5328
g61
g955
sg587
g949
stRp5329
ag1
(g5058
g5009
(dp5330
g61
g965
sg587
g959
stRp5331
ag1
(g5058
g5009
(dp5332
g61
g975
sg587
g969
stRp5333
ag1
(g5058
g5009
(dp5334
g61
g985
sg587
g979
stRp5335
ag1
(g5058
g5009
(dp5336
g61
g995
sg587
g989
stRp5337
ag1
(g5058
g5009
(dp5338
g61
g1005
sg587
g999
stRp5339
ag1
(g5058
g5009
(dp5340
g61
g1015
sg587
g1009
stRp5341
ag1
(g5058
g5009
(dp5342
g61
g1025
sg587
g1019
stRp5343
ag1
(g5058
g5009
(dp5344
g61
g1035
sg587
g1029
stRp5345
ag1
(g5058
g5009
(dp5346
g61
g1045
sg587
g1039
stRp5347
ag1
(g5058
g5009
(dp5348
g61
g1055
sg587
g1049
stRp5349
ag1
(g5058
g5009
(dp5350
g61
g1065
sg587
g1059
stRp5351
ag1
(g5058
g5009
(dp5352
g61
g1075
sg587
g1069
stRp5353
ag1
(g5058
g5009
(dp5354
g61
g1085
sg587
g1079
stRp5355
ag1
(g5058
g5009
(dp5356
g61
g1095
sg587
g1089
stRp5357
ag1
(g5058
g5009
(dp5358
g61
g1105
sg587
g1099
stRp5359
ag1
(g5058
g5009
(dp5360
g61
g1115
sg587
g1109
stRp5361
ag1
(g5058
g5009
(dp5362
g61
g1125
sg587
g1119
stRp5363
ag1
(g5058
g5009
(dp5364
g61
g1135
sg587
g1129
stRp5365
ag1
(g5058
g5009
(dp5366
g61
g1145
sg587
g1139
stRp5367
ag1
(g5058
g5009
(dp5368
g61
g1155
sg587
g1149
stRp5369
ag1
(g5058
g5009
(dp5370
g61
g1165
sg587
g1159
stRp5371
ag1
(g5058
g5009
(dp5372
g61
g1175
sg587
g1169
stRp5373
ag1
(g5058
g5009
(dp5374
g61
g1185
sg587
g1179
stRp5375
ag1
(g5058
g5009
(dp5376
g61
g1195
sg587
g1189
stRp5377
ag1
(g5058
g5009
(dp5378
g61
g1205
sg587
g1199
stRp5379
ag1
(g5058
g5009
(dp5380
g61
g1215
sg587
g1209
stRp5381
ag1
(g5058
g5009
(dp5382
g61
g1225
sg587
g1219
stRp5383
ag1
(g5058
g5009
(dp5384
g61
g1235
sg587
g1229
stRp5385
ag1
(g5058
g5009
(dp5386
g61
g1245
sg587
g1239
stRp5387
ag1
(g5058
g5009
(dp5388
g61
g1255
sg587
g1249
stRp5389
ag1
(g5058
g5009
(dp5390
g61
g1265
sg587
g1259
stRp5391
ag1
(g5058
g5009
(dp5392
g61
g1275
sg587
g1269
stRp5393
ag1
(g5058
g5009
(dp5394
g61
g1285
sg587
g1279
stRp5395
ag1
(g5058
g5009
(dp5396
g61
g1295
sg587
g1289
stRp5397
ag1
(g5058
g5009
(dp5398
g61
g1305
sg587
g1299
stRp5399
ag1
(g5058
g5009
(dp5400
g61
g1315
sg587
g1309
stRp5401
ag1
(g5058
g5009
(dp5402
g61
g1325
sg587
g1319
stRp5403
ag1
(g5058
g5009
(dp5404
g61
g1335
sg587
g1329
stRp5405
ag1
(g5058
g5009
(dp5406
g61
g1345
sg587
g1339
stRp5407
ag1
(g5058
g5009
(dp5408
g61
g1355
sg587
g1349
stRp5409
ag1
(g5058
g5009
(dp5410
g61
g1365
sg587
g1359
stRp5411
ag1
(g5058
g5009
(dp5412
g61
g1375
sg587
g1369
stRp5413
ag1
(g5058
g5009
(dp5414
g61
g1385
sg587
g1379
stRp5415
ag1
(g5058
g5009
(dp5416
g61
g1395
sg587
g1389
stRp5417
ag1
(g5058
g5009
(dp5418
g61
g1405
sg587
g1399
stRp5419
ag1
(g5058
g5009
(dp5420
g61
g1415
sg587
g1409
stRp5421
ag1
(g5058
g5009
(dp5422
g61
g1425
sg587
g1419
stRp5423
ag1
(g5058
g5009
(dp5424
g61
g1435
sg587
g1429
stRp5425
ag1
(g5058
g5009
(dp5426
g61
g1445
sg587
g1439
stRp5427
ag1
(g5058
g5009
(dp5428
g61
g1455
sg587
g1449
stRp5429
ag1
(g5058
g5009
(dp5430
g61
g1465
sg587
g1459
stRp5431
ag1
(g5058
g5009
(dp5432
g61
g1475
sg587
g1469
stRp5433
ag1
(g5058
g5009
(dp5434
g61
g1485
sg587
g1479
stRp5435
ag1
(g5058
g5009
(dp5436
g61
g1495
sg587
g1489
stRp5437
ag1
(g5058
g5009
(dp5438
g61
g1505
sg587
g1499
stRp5439
ag1
(g5058
g5009
(dp5440
g61
g1515
sg587
g1509
stRp5441
ag1
(g5058
g5009
(dp5442
g61
g1525
sg587
g1519
stRp5443
ag1
(g5058
g5009
(dp5444
g61
g1535
sg587
g1529
stRp5445
ag1
(g5058
g5009
(dp5446
g61
g1545
sg587
g1539
stRp5447
ag1
(g5058
g5009
(dp5448
g61
g1555
sg587
g1549
stRp5449
ag1
(g5058
g5009
(dp5450
g61
g1565
sg587
g1559
stRp5451
ag1
(g5058
g5009
(dp5452
g61
g1575
sg587
g1569
stRp5453
ag1
(g5058
g5009
(dp5454
g61
g1585
sg587
g1579
stRp5455
ag1
(g5058
g5009
(dp5456
g61
g1595
sg587
g1589
stRp5457
ag1
(g5058
g5009
(dp5458
g61
g1605
sg587
g1599
stRp5459
ag1
(g5058
g5009
(dp5460
g61
g1615
sg587
g1609
stRp5461
ag1
(g5058
g5009
(dp5462
g61
g1625
sg587
g1619
stRp5463
ag1
(g5058
g5009
(dp5464
g61
g1635
sg587
g1629
stRp5465
ag1
(g5058
g5009
(dp5466
g61
g1645
sg587
g1639
stRp5467
ag1
(g5058
g5009
(dp5468
g61
g1655
sg587
g1649
stRp5469
ag1
(g5058
g5009
(dp5470
g61
g1665
sg587
g1659
stRp5471
ag1
(g5058
g5009
(dp5472
g61
g1675
sg587
g1669
stRp5473
ag1
(g5058
g5009
(dp5474
g61
g1685
sg587
g1679
stRp5475
ag1
(g5058
g5009
(dp5476
g61
g1695
sg587
g1689
stRp5477
ag1
(g5058
g5009
(dp5478
g61
g1705
sg587
g1699
stRp5479
ag1
(g5058
g5009
(dp5480
g61
g1715
sg587
g1709
stRp5481
ag1
(g5058
g5009
(dp5482
g61
g1725
sg587
g1719
stRp5483
ag1
(g5058
g5009
(dp5484
g61
g1735
sg587
g1729
stRp5485
ag1
(g5058
g5009
(dp5486
g61
g1745
sg587
g1739
stRp5487
ag1
(g5058
g5009
(dp5488
g61
g1755
sg587
g1749
stRp5489
ag1
(g5058
g5009
(dp5490
g61
g1765
sg587
g1759
stRp5491
ag1
(g5058
g5009
(dp5492
g61
g1775
sg587
g1769
stRp5493
ag1
(g5058
g5009
(dp5494
g61
g1785
sg587
g1779
stRp5495
ag1
(g5058
g5009
(dp5496
g61
g1795
sg587
g1789
stRp5497
ag1
(g5058
g5009
(dp5498
g61
g1805
sg587
g1799
stRp5499
ag1
(g5058
g5009
(dp5500
g61
g1815
sg587
g1809
stRp5501
ag1
(g5058
g5009
(dp5502
g61
g1825
sg587
g1819
stRp5503
ag1
(g5058
g5009
(dp5504
g61
g1835
sg587
g1829
stRp5505
ag1
(g5058
g5009
(dp5506
g61
g1845
sg587
g1839
stRp5507
ag1
(g5058
g5009
(dp5508
g61
g1855
sg587
g1849
stRp5509
ag1
(g5058
g5009
(dp5510
g61
g1865
sg587
g1859
stRp5511
ag1
(g5058
g5009
(dp5512
g61
g1875
sg587
g1869
stRp5513
ag1
(g5058
g5009
(dp5514
g61
g1885
sg587
g1879
stRp5515
ag1
(g5058
g5009
(dp5516
g61
g1895
sg587
g1889
stRp5517
ag1
(g5058
g5009
(dp5518
g61
g1905
sg587
g1899
stRp5519
ag1
(g5058
g5009
(dp5520
g61
g1915
sg587
g1909
stRp5521
ag1
(g5058
g5009
(dp5522
g61
g1925
sg587
g1919
stRp5523
ag1
(g5058
g5009
(dp5524
g61
g1935
sg587
g1929
stRp5525
ag1
(g5058
g5009
(dp5526
g61
g1945
sg587
g1939
stRp5527
ag1
(g5058
g5009
(dp5528
g61
g1955
sg587
g1949
stRp5529
ag1
(g5058
g5009
(dp5530
g61
g1965
sg587
g1959
stRp5531
ag1
(g5058
g5009
(dp5532
g61
g1975
sg587
g1969
stRp5533
ag1
(g5058
g5009
(dp5534
g61
g1985
sg587
g1979
stRp5535
ag1
(g5058
g5009
(dp5536
g61
g1995
sg587
g1989
stRp5537
ag1
(g5058
g5009
(dp5538
g61
g2005
sg587
g1999
stRp5539
ag1
(g5058
g5009
(dp5540
g61
g2015
sg587
g2009
stRp5541
ag1
(g5058
g5009
(dp5542
g61
g2025
sg587
g2019
stRp5543
ag1
(g5058
g5009
(dp5544
g61
g2035
sg587
g2029
stRp5545
ag1
(g5058
g5009
(dp5546
g61
g2045
sg587
g2039
stRp5547
ag1
(g5058
g5009
(dp5548
g61
g2055
sg587
g2049
stRp5549
ag1
(g5058
g5009
(dp5550
g61
g2065
sg587
g2059
stRp5551
ag1
(g5058
g5009
(dp5552
g61
g2075
sg587
g2069
stRp5553
ag1
(g5058
g5009
(dp5554
g61
g2085
sg587
g2079
stRp5555
ag1
(g5058
g5009
(dp5556
g61
g2095
sg587
g2089
stRp5557
ag1
(g5058
g5009
(dp5558
g61
g2105
sg587
g2099
stRp5559
ag1
(g5058
g5009
(dp5560
g61
g2115
sg587
g2109
stRp5561
ag1
(g5058
g5009
(dp5562
g61
g2125
sg587
g2119
stRp5563
ag1
(g5058
g5009
(dp5564
g61
g2135
sg587
g2129
stRp5565
ag1
(g5058
g5009
(dp5566
g61
g2145
sg587
g2139
stRp5567
ag1
(g5058
g5009
(dp5568
g61
g2155
sg587
g2149
stRp5569
ag1
(g5058
g5009
(dp5570
g61
g2165
sg587
g2159
stRp5571
ag1
(g5058
g5009
(dp5572
g61
g2175
sg587
g2169
stRp5573
ag1
(g5058
g5009
(dp5574
g61
g2185
sg587
g2179
stRp5575
ag1
(g5058
g5009
(dp5576
g61
g2195
sg587
g2189
stRp5577
ag1
(g5058
g5009
(dp5578
g61
g2205
sg587
g2199
stRp5579
ag1
(g5058
g5009
(dp5580
g61
g2215
sg587
g2209
stRp5581
ag1
(g5058
g5009
(dp5582
g61
g2225
sg587
g2219
stRp5583
ag1
(g5058
g5009
(dp5584
g61
g2235
sg587
g2229
stRp5585
ag1
(g5058
g5009
(dp5586
g61
g2245
sg587
g2239
stRp5587
ag1
(g5058
g5009
(dp5588
g61
g2255
sg587
g2249
stRp5589
ag1
(g5058
g5009
(dp5590
g61
g2265
sg587
g2259
stRp5591
ag1
(g5058
g5009
(dp5592
g61
g2275
sg587
g2269
stRp5593
ag1
(g5058
g5009
(dp5594
g61
g2285
sg587
g2279
stRp5595
ag1
(g5058
g5009
(dp5596
g61
g2295
sg587
g2289
stRp5597
ag1
(g5058
g5009
(dp5598
g61
g2305
sg587
g2299
stRp5599
ag1
(g5058
g5009
(dp5600
g61
g2315
sg587
g2309
stRp5601
ag1
(g5058
g5009
(dp5602
g61
g2325
sg587
g2319
stRp5603
ag1
(g5058
g5009
(dp5604
g61
g2335
sg587
g2329
stRp5605
ag1
(g5058
g5009
(dp5606
g61
g2345
sg587
g2339
stRp5607
ag1
(g5058
g5009
(dp5608
g61
g2355
sg587
g2349
stRp5609
ag1
(g5058
g5009
(dp5610
g61
g2365
sg587
g2359
stRp5611
ag1
(g5058
g5009
(dp5612
g61
g2375
sg587
g2369
stRp5613
ag1
(g5058
g5009
(dp5614
g61
g2385
sg587
g2379
stRp5615
ag1
(g5058
g5009
(dp5616
g61
g2395
sg587
g2389
stRp5617
ag1
(g5058
g5009
(dp5618
g61
g2405
sg587
g2399
stRp5619
ag1
(g5058
g5009
(dp5620
g61
g2415
sg587
g2409
stRp5621
ag1
(g5058
g5009
(dp5622
g61
g2425
sg587
g2419
stRp5623
ag1
(g5058
g5009
(dp5624
g61
g2435
sg587
g2429
stRp5625
ag1
(g5058
g5009
(dp5626
g61
g2445
sg587
g2439
stRp5627
ag1
(g5058
g5009
(dp5628
g61
g2455
sg587
g2449
stRp5629
ag1
(g5058
g5009
(dp5630
g61
g2465
sg587
g2459
stRp5631
ag1
(g5058
g5009
(dp5632
g61
g2475
sg587
g2469
stRp5633
ag1
(g5058
g5009
(dp5634
g61
g2485
sg587
g2479
stRp5635
ag1
(g5058
g5009
(dp5636
g61
g2495
sg587
g2489
stRp5637
ag1
(g5058
g5009
(dp5638
g61
g2505
sg587
g2499
stRp5639
ag1
(g5058
g5009
(dp5640
g61
g2515
sg587
g2509
stRp5641
ag1
(g5058
g5009
(dp5642
g61
g2525
sg587
g2519
stRp5643
ag1
(g5058
g5009
(dp5644
g61
g2535
sg587
g2529
stRp5645
ag1
(g5058
g5009
(dp5646
g61
g2545
sg587
g2539
stRp5647
ag1
(g5058
g5009
(dp5648
g61
g2555
sg587
g2549
stRp5649
ag1
(g5058
g5009
(dp5650
g61
g2565
sg587
g2559
stRp5651
ag1
(g5058
g5009
(dp5652
g61
g2575
sg587
g2569
stRp5653
ag1
(g5058
g5009
(dp5654
g61
g2585
sg587
g2579
stRp5655
ag1
(g5058
g5009
(dp5656
g61
g2595
sg587
g2589
stRp5657
ag1
(g5058
g5009
(dp5658
g61
g2605
sg587
g2599
stRp5659
ag1
(g5058
g5009
(dp5660
g61
g2615
sg587
g2609
stRp5661
ag1
(g5058
g5009
(dp5662
g61
g2625
sg587
g2619
stRp5663
ag1
(g5058
g5009
(dp5664
g61
g2635
sg587
g2629
stRp5665
ag1
(g5058
g5009
(dp5666
g61
g2645
sg587
g2639
stRp5667
ag1
(g5058
g5009
(dp5668
g61
g2655
sg587
g2649
stRp5669
ag1
(g5058
g5009
(dp5670
g61
g2665
sg587
g2659
stRp5671
ag1
(g5058
g5009
(dp5672
g61
g2675
sg587
g2669
stRp5673
ag1
(g5058
g5009
(dp5674
g61
g2685
sg587
g2679
stRp5675
ag1
(g5058
g5009
(dp5676
g61
g2695
sg587
g2689
stRp5677
ag1
(g5058
g5009
(dp5678
g61
g2705
sg587
g2699
stRp5679
ag1
(g5058
g5009
(dp5680
g61
g2715
sg587
g2709
stRp5681
ag1
(g5058
g5009
(dp5682
g61
g2725
sg587
g2719
stRp5683
ag1
(g5058
g5009
(dp5684
g61
g2735
sg587
g2729
stRp5685
ag1
(g5058
g5009
(dp5686
g61
g2745
sg587
g2739
stRp5687
ag1
(g5058
g5009
(dp5688
g61
g2755
sg587
g2749
stRp5689
ag1
(g5058
g5009
(dp5690
g61
g2765
sg587
g2759
stRp5691
ag1
(g5058
g5009
(dp5692
g61
g2775
sg587
g2769
stRp5693
ag1
(g5058
g5009
(dp5694
g61
g2785
sg587
g2779
stRp5695
asg5227
Nsg5228
g2781
sg5229
I220
sg5230
I0
sg5231
I220
sg5232
I01
sbag1
(g4996
g3
NtRp5696
(dp5697
g4999
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5698
sg5001
(lp5699
sg5003
I140041876542800
sg10
S'trials2'
p5700
sg6
g5005
sg5006
I1
sg38
I01
sg39
g40
sg5007
g1
(g5008
g5009
(dp5701
g30
g5022
(g5023
g5012
g5024
S'b'
tRp5702
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5021
g5022
(g5023
g5012
g5024
S'b'
tRp5703
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5011
(g5012
(I0
tS'b'
tRp5704
(I1
(I220
I1
tg5014
I00
(lp5705
g2797
ag2808
ag2818
ag2828
ag2838
ag2848
ag2858
ag2868
ag2878
ag2888
ag2898
ag2908
ag2918
ag2928
ag2938
ag2948
ag2958
ag2968
ag2978
ag2988
ag2998
ag3008
ag3018
ag3028
ag3038
ag3048
ag3058
ag3068
ag3078
ag3088
ag3098
ag3108
ag3118
ag3128
ag3138
ag3148
ag3158
ag3168
ag3178
ag3188
ag3198
ag3208
ag3218
ag3228
ag3238
ag3248
ag3258
ag3268
ag3278
ag3288
ag3298
ag3308
ag3318
ag3328
ag3338
ag3348
ag3358
ag3368
ag3378
ag3388
ag3398
ag3408
ag3418
ag3428
ag3438
ag3448
ag3458
ag3468
ag3478
ag3488
ag3498
ag3508
ag3518
ag3528
ag3538
ag3548
ag3558
ag3568
ag3578
ag3588
ag3598
ag3608
ag3618
ag3628
ag3638
ag3648
ag3658
ag3668
ag3678
ag3688
ag3698
ag3708
ag3718
ag3728
ag3738
ag3748
ag3758
ag3768
ag3778
ag3788
ag3798
ag3808
ag3818
ag3828
ag3838
ag3848
ag3858
ag3868
ag3878
ag3888
ag3898
ag3908
ag3918
ag3928
ag3938
ag3948
ag3958
ag3968
ag3978
ag3988
ag3998
ag4008
ag4018
ag4028
ag4038
ag4048
ag4058
ag4068
ag4078
ag4088
ag4098
ag4108
ag4118
ag4128
ag4138
ag4148
ag4158
ag4168
ag4178
ag4188
ag4198
ag4208
ag4218
ag4228
ag4238
ag4248
ag4258
ag4268
ag4278
ag4288
ag4298
ag4308
ag4318
ag4328
ag4338
ag4348
ag4358
ag4368
ag4378
ag4388
ag4398
ag4408
ag4418
ag4428
ag4438
ag4448
ag4458
ag4468
ag4478
ag4488
ag4498
ag4508
ag4518
ag4528
ag4538
ag4548
ag4558
ag4568
ag4578
ag4588
ag4598
ag4608
ag4618
ag4628
ag4638
ag4648
ag4658
ag4668
ag4678
ag4688
ag4698
ag4708
ag4718
ag4728
ag4738
ag4748
ag4758
ag4768
ag4778
ag4788
ag4798
ag4808
ag4818
ag4828
ag4838
ag4848
ag4858
ag4868
ag4878
ag4888
ag4898
ag4908
ag4918
ag4928
ag4938
ag4948
ag4958
ag4968
ag4978
ag4988
atbsg29
g5011
(g5012
(I0
tS'b'
tRp5706
(I1
(I220
I1
tg5014
I00
(lp5707
g2798
ag2809
ag2819
ag2829
ag2839
ag2849
ag2859
ag2869
ag2879
ag2889
ag2899
ag2909
ag2919
ag2929
ag2939
ag2949
ag2959
ag2969
ag2979
ag2989
ag2999
ag3009
ag3019
ag3029
ag3039
ag3049
ag3059
ag3069
ag3079
ag3089
ag3099
ag3109
ag3119
ag3129
ag3139
ag3149
ag3159
ag3169
ag3179
ag3189
ag3199
ag3209
ag3219
ag3229
ag3239
ag3249
ag3259
ag3269
ag3279
ag3289
ag3299
ag3309
ag3319
ag3329
ag3339
ag3349
ag3359
ag3369
ag3379
ag3389
ag3399
ag3409
ag3419
ag3429
ag3439
ag3449
ag3459
ag3469
ag3479
ag3489
ag3499
ag3509
ag3519
ag3529
ag3539
ag3549
ag3559
ag3569
ag3579
ag3589
ag3599
ag3609
ag3619
ag3629
ag3639
ag3649
ag3659
ag3669
ag3679
ag3689
ag3699
ag3709
ag3719
ag3729
ag3739
ag3749
ag3759
ag3769
ag3779
ag3789
ag3799
ag3809
ag3819
ag3829
ag3839
ag3849
ag3859
ag3869
ag3879
ag3889
ag3899
ag3909
ag3919
ag3929
ag3939
ag3949
ag3959
ag3969
ag3979
ag3989
ag3999
ag4009
ag4019
ag4029
ag4039
ag4049
ag4059
ag4069
ag4079
ag4089
ag4099
ag4109
ag4119
ag4129
ag4139
ag4149
ag4159
ag4169
ag4179
ag4189
ag4199
ag4209
ag4219
ag4229
ag4239
ag4249
ag4259
ag4269
ag4279
ag4289
ag4299
ag4309
ag4319
ag4329
ag4339
ag4349
ag4359
ag4369
ag4379
ag4389
ag4399
ag4409
ag4419
ag4429
ag4439
ag4449
ag4459
ag4469
ag4479
ag4489
ag4499
ag4509
ag4519
ag4529
ag4539
ag4549
ag4559
ag4569
ag4579
ag4589
ag4599
ag4609
ag4619
ag4629
ag4639
ag4649
ag4659
ag4669
ag4679
ag4689
ag4699
ag4709
ag4719
ag4729
ag4739
ag4749
ag4759
ag4769
ag4779
ag4789
ag4799
ag4809
ag4819
ag4829
ag4839
ag4849
ag4859
ag4869
ag4879
ag4889
ag4899
ag4909
ag4919
ag4929
ag4939
ag4949
ag4959
ag4969
ag4979
ag4989
atbsg31
g5022
(g5023
g5012
g5024
S'b'
tRp5708
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5022
(g5023
g5012
g5024
S'b'
tRp5709
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5022
(g5023
g5012
g5024
S'b'
tRp5710
(I1
(I220
I1
tg5026
I00
S'`\xcd[@\x16K(@l8\xf2?j\x16\x08@k\r\x17@R\n\xb4?\xa9JE@\x9a\xd2\x12@*\xe3\xb1?\x04)\xc5?WA\x82@\x94\x91s?\x16\x94\xb3@\x18w9@0\xb8\xf6?\xb0n\x80?m\x18%@\x19\x1e)@\x8c\x88^?\x8fR(@Wxt@/\xc0\x11@\x8c\x11\xe1?\x84\xee\xde?0\xba\x01@>l`AJW\xb8?\x1d\xac\x01@j\xf2\xa2?\xd4\x19\x88@5IE@\xba=\xc4@\x92\x92\x9e?*\xc7/@{I7@%\xcd @jH\xa8@\xc8\xb3<@\xfb\xe1\x0eA\x88\x86\xe7?\xe4\x9d\x91?u\x1cQ@\xc2\x1e\xa7?a\xc7\x02@\xae\x13\xc3?\xee\xca\x04@\xb4\x94\xba?\\\xf2s?\x0c\xc9\xb1?&\xe4\xb1?`y\xd8?\xa2\xf1\xc0?\xc3a)@0\xd0\xcd?!\xe6\x14@\xa8\xec\x1dA\xa6\r\x15@\x12/\xe3?D\x8d\xed@\xdb2\'@\xd2\x08\x96?V\x0c4@J7\xf0@0vg?\x82\x05\xf0?\xc6\xde\x93?\xd4w\xba?\x14u\x1b@\x1eL\xb8?\xdcl\xba?\x01\x88:@\xd0M\x8b?\xf2@\x98@\x9f<\'@\\\x91\x9e?<\'\x8f@\xe2\xe5\x97?\xe0\xf5"@H\xa7\x1e@\xb6\xa2\x0f@b\x91\x95@<\xa2\x10@\xf2\xe8\xc0?\x03\x93u@Xv9@\x8f\xa7\x11@\xe3\x99\x9d@pg\x8d?\xfc\xc1\xa0?KtV@L\x14\xe1?\x14\xd4\x84?\x88a\xab?.\x1c\x16@q96@L\xc9\x9f@\x1cs\xbe?&;\x9a?R\x14\xb4?L\xa7\xcb?\xbe\x83\x1c@\xa0\x01\x87?t\xca\xb3?[[9@t\x99\x84?r\xf9\xed?\xf8\xdf\xde?\xb8\x01\xa5?t\xe0|?\xee!\xa7?hZ7@\xeaH\x9a?\x0b\x97;@\x16\xd2\x82@C\x906A\xb8\x18\xa7?j\x85u@$\xbb\xbe?\xdc\x18c?\xb8\x9d\xee@\xeav\xd8?\xa0o\xab?^\xa2\x9e?\x97\xc3x@|\xc0\xa6@\xc0\x9f\xc2@\x90\xc7@?h+Z?>6\x8f?\xaf\xe9\x04@\xc8\x90\xaf?(Ic?\x7f\xa4\x0bA\xda\'\x98?n\xa4\x11@\x10`*@,.&@)\x05$@6\x14\x98?F^\x9a?\x18&\xe7?\x7f3\t@\xf8\xb6|?\x9c\x0fx?\x92!\n@\xf2\x98\xc9@\n\xfa\x95?\x03\x05\x08@J\x9b\x80?\x108\xf2?\xdc\xbas?\x86\xa7\xe9?HO\xc7?\x8e{\x8d?N8\xa9?\xec\xb9\xbe?\x9c\x8a\r@\x1e\x1a\xf2?\\\xacY@l(\t@N~\x91?A\x0b\x08@\x0c\xe5\xa6?n\xa6\x01@b*\x8b?\xa0\x01p?\xdet\x1c@\xb0\x91\x9e?QMF@\xea\xbd\x97@;M\rA\xb6-\x88@\xc19q@\xbe\x0f\xc3?4\x11V?\xae\xbd\xaf?\xc0\xfff?h\xb1\xaeA\x10\x8f\x80?^\xf5\x06@\x16\xc3?@l\xcd\x88?\xc0(\xa7?T\x8c\x0f@\xb8Vc?\xda\x1d\xf2?,\xfew?\x1ag\x8c@j,\xc3?\x86\xe8\xe2?Z\xcb\xbe?\xa2,\xd8?\x98\xc9|?\xfc\x88u@\x82\xf3\xa9@\xb6\xbc\x86?\xfcI\x9e?\xc0\xec\xc0?\xd6\x1f\xa7?n\x9e\xdc?\xc1\x04_@\xec0\xf2?x\t$@\x94M\x91@\x96\xc9\xc2?l#V?\x8e\x0c\xd2?\x143V?\x8e \n@\xf8\xdf\xa2?\x12\x1f\xaaA\x85\xcb\x03@\xd4L\xb6@,<\x98@\xb4\xaa\xeb?(j<?wM)@\x9ap\x91?T=\xab?[\xc9pA'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5037
g5022
(g5023
g5012
g5024
S'b'
tRp5711
(I1
(I220
I1
tg5026
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5712
(dp5713
g5041
(dp5714
g31
I01
sg5021
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5037
I01
ssg5043
g5696
sg5044
(lp5715
g5021
ag5037
ag28
ag29
ag30
ag31
ag32
ag33
asg5046
(lp5716
I220
aI1
asbsg5048
g5253
sg5050
g5011
(g5012
(I0
tS'b'
tRp5717
(I1
(I220
I1
tg590
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5053
I01
sg5054
I1
sg5055
I-1
sg5056
(lp5718
g1
(g5058
g5009
(dp5719
g2799
g2800
sg2795
g2796
stRp5720
ag1
(g5058
g5009
(dp5721
g2799
g2810
sg2795
g2807
stRp5722
ag1
(g5058
g5009
(dp5723
g2799
g2820
sg2795
g2817
stRp5724
ag1
(g5058
g5009
(dp5725
g2799
g2830
sg2795
g2827
stRp5726
ag1
(g5058
g5009
(dp5727
g2799
g2840
sg2795
g2837
stRp5728
ag1
(g5058
g5009
(dp5729
g2799
g2850
sg2795
g2847
stRp5730
ag1
(g5058
g5009
(dp5731
g2799
g2860
sg2795
g2857
stRp5732
ag1
(g5058
g5009
(dp5733
g2799
g2870
sg2795
g2867
stRp5734
ag1
(g5058
g5009
(dp5735
g2799
g2880
sg2795
g2877
stRp5736
ag1
(g5058
g5009
(dp5737
g2799
g2890
sg2795
g2887
stRp5738
ag1
(g5058
g5009
(dp5739
g2799
g2900
sg2795
g2897
stRp5740
ag1
(g5058
g5009
(dp5741
g2799
g2910
sg2795
g2907
stRp5742
ag1
(g5058
g5009
(dp5743
g2799
g2920
sg2795
g2917
stRp5744
ag1
(g5058
g5009
(dp5745
g2799
g2930
sg2795
g2927
stRp5746
ag1
(g5058
g5009
(dp5747
g2799
g2940
sg2795
g2937
stRp5748
ag1
(g5058
g5009
(dp5749
g2799
g2950
sg2795
g2947
stRp5750
ag1
(g5058
g5009
(dp5751
g2799
g2960
sg2795
g2957
stRp5752
ag1
(g5058
g5009
(dp5753
g2799
g2970
sg2795
g2967
stRp5754
ag1
(g5058
g5009
(dp5755
g2799
g2980
sg2795
g2977
stRp5756
ag1
(g5058
g5009
(dp5757
g2799
g2990
sg2795
g2987
stRp5758
ag1
(g5058
g5009
(dp5759
g2799
g3000
sg2795
g2997
stRp5760
ag1
(g5058
g5009
(dp5761
g2799
g3010
sg2795
g3007
stRp5762
ag1
(g5058
g5009
(dp5763
g2799
g3020
sg2795
g3017
stRp5764
ag1
(g5058
g5009
(dp5765
g2799
g3030
sg2795
g3027
stRp5766
ag1
(g5058
g5009
(dp5767
g2799
g3040
sg2795
g3037
stRp5768
ag1
(g5058
g5009
(dp5769
g2799
g3050
sg2795
g3047
stRp5770
ag1
(g5058
g5009
(dp5771
g2799
g3060
sg2795
g3057
stRp5772
ag1
(g5058
g5009
(dp5773
g2799
g3070
sg2795
g3067
stRp5774
ag1
(g5058
g5009
(dp5775
g2799
g3080
sg2795
g3077
stRp5776
ag1
(g5058
g5009
(dp5777
g2799
g3090
sg2795
g3087
stRp5778
ag1
(g5058
g5009
(dp5779
g2799
g3100
sg2795
g3097
stRp5780
ag1
(g5058
g5009
(dp5781
g2799
g3110
sg2795
g3107
stRp5782
ag1
(g5058
g5009
(dp5783
g2799
g3120
sg2795
g3117
stRp5784
ag1
(g5058
g5009
(dp5785
g2799
g3130
sg2795
g3127
stRp5786
ag1
(g5058
g5009
(dp5787
g2799
g3140
sg2795
g3137
stRp5788
ag1
(g5058
g5009
(dp5789
g2799
g3150
sg2795
g3147
stRp5790
ag1
(g5058
g5009
(dp5791
g2799
g3160
sg2795
g3157
stRp5792
ag1
(g5058
g5009
(dp5793
g2799
g3170
sg2795
g3167
stRp5794
ag1
(g5058
g5009
(dp5795
g2799
g3180
sg2795
g3177
stRp5796
ag1
(g5058
g5009
(dp5797
g2799
g3190
sg2795
g3187
stRp5798
ag1
(g5058
g5009
(dp5799
g2799
g3200
sg2795
g3197
stRp5800
ag1
(g5058
g5009
(dp5801
g2799
g3210
sg2795
g3207
stRp5802
ag1
(g5058
g5009
(dp5803
g2799
g3220
sg2795
g3217
stRp5804
ag1
(g5058
g5009
(dp5805
g2799
g3230
sg2795
g3227
stRp5806
ag1
(g5058
g5009
(dp5807
g2799
g3240
sg2795
g3237
stRp5808
ag1
(g5058
g5009
(dp5809
g2799
g3250
sg2795
g3247
stRp5810
ag1
(g5058
g5009
(dp5811
g2799
g3260
sg2795
g3257
stRp5812
ag1
(g5058
g5009
(dp5813
g2799
g3270
sg2795
g3267
stRp5814
ag1
(g5058
g5009
(dp5815
g2799
g3280
sg2795
g3277
stRp5816
ag1
(g5058
g5009
(dp5817
g2799
g3290
sg2795
g3287
stRp5818
ag1
(g5058
g5009
(dp5819
g2799
g3300
sg2795
g3297
stRp5820
ag1
(g5058
g5009
(dp5821
g2799
g3310
sg2795
g3307
stRp5822
ag1
(g5058
g5009
(dp5823
g2799
g3320
sg2795
g3317
stRp5824
ag1
(g5058
g5009
(dp5825
g2799
g3330
sg2795
g3327
stRp5826
ag1
(g5058
g5009
(dp5827
g2799
g3340
sg2795
g3337
stRp5828
ag1
(g5058
g5009
(dp5829
g2799
g3350
sg2795
g3347
stRp5830
ag1
(g5058
g5009
(dp5831
g2799
g3360
sg2795
g3357
stRp5832
ag1
(g5058
g5009
(dp5833
g2799
g3370
sg2795
g3367
stRp5834
ag1
(g5058
g5009
(dp5835
g2799
g3380
sg2795
g3377
stRp5836
ag1
(g5058
g5009
(dp5837
g2799
g3390
sg2795
g3387
stRp5838
ag1
(g5058
g5009
(dp5839
g2799
g3400
sg2795
g3397
stRp5840
ag1
(g5058
g5009
(dp5841
g2799
g3410
sg2795
g3407
stRp5842
ag1
(g5058
g5009
(dp5843
g2799
g3420
sg2795
g3417
stRp5844
ag1
(g5058
g5009
(dp5845
g2799
g3430
sg2795
g3427
stRp5846
ag1
(g5058
g5009
(dp5847
g2799
g3440
sg2795
g3437
stRp5848
ag1
(g5058
g5009
(dp5849
g2799
g3450
sg2795
g3447
stRp5850
ag1
(g5058
g5009
(dp5851
g2799
g3460
sg2795
g3457
stRp5852
ag1
(g5058
g5009
(dp5853
g2799
g3470
sg2795
g3467
stRp5854
ag1
(g5058
g5009
(dp5855
g2799
g3480
sg2795
g3477
stRp5856
ag1
(g5058
g5009
(dp5857
g2799
g3490
sg2795
g3487
stRp5858
ag1
(g5058
g5009
(dp5859
g2799
g3500
sg2795
g3497
stRp5860
ag1
(g5058
g5009
(dp5861
g2799
g3510
sg2795
g3507
stRp5862
ag1
(g5058
g5009
(dp5863
g2799
g3520
sg2795
g3517
stRp5864
ag1
(g5058
g5009
(dp5865
g2799
g3530
sg2795
g3527
stRp5866
ag1
(g5058
g5009
(dp5867
g2799
g3540
sg2795
g3537
stRp5868
ag1
(g5058
g5009
(dp5869
g2799
g3550
sg2795
g3547
stRp5870
ag1
(g5058
g5009
(dp5871
g2799
g3560
sg2795
g3557
stRp5872
ag1
(g5058
g5009
(dp5873
g2799
g3570
sg2795
g3567
stRp5874
ag1
(g5058
g5009
(dp5875
g2799
g3580
sg2795
g3577
stRp5876
ag1
(g5058
g5009
(dp5877
g2799
g3590
sg2795
g3587
stRp5878
ag1
(g5058
g5009
(dp5879
g2799
g3600
sg2795
g3597
stRp5880
ag1
(g5058
g5009
(dp5881
g2799
g3610
sg2795
g3607
stRp5882
ag1
(g5058
g5009
(dp5883
g2799
g3620
sg2795
g3617
stRp5884
ag1
(g5058
g5009
(dp5885
g2799
g3630
sg2795
g3627
stRp5886
ag1
(g5058
g5009
(dp5887
g2799
g3640
sg2795
g3637
stRp5888
ag1
(g5058
g5009
(dp5889
g2799
g3650
sg2795
g3647
stRp5890
ag1
(g5058
g5009
(dp5891
g2799
g3660
sg2795
g3657
stRp5892
ag1
(g5058
g5009
(dp5893
g2799
g3670
sg2795
g3667
stRp5894
ag1
(g5058
g5009
(dp5895
g2799
g3680
sg2795
g3677
stRp5896
ag1
(g5058
g5009
(dp5897
g2799
g3690
sg2795
g3687
stRp5898
ag1
(g5058
g5009
(dp5899
g2799
g3700
sg2795
g3697
stRp5900
ag1
(g5058
g5009
(dp5901
g2799
g3710
sg2795
g3707
stRp5902
ag1
(g5058
g5009
(dp5903
g2799
g3720
sg2795
g3717
stRp5904
ag1
(g5058
g5009
(dp5905
g2799
g3730
sg2795
g3727
stRp5906
ag1
(g5058
g5009
(dp5907
g2799
g3740
sg2795
g3737
stRp5908
ag1
(g5058
g5009
(dp5909
g2799
g3750
sg2795
g3747
stRp5910
ag1
(g5058
g5009
(dp5911
g2799
g3760
sg2795
g3757
stRp5912
ag1
(g5058
g5009
(dp5913
g2799
g3770
sg2795
g3767
stRp5914
ag1
(g5058
g5009
(dp5915
g2799
g3780
sg2795
g3777
stRp5916
ag1
(g5058
g5009
(dp5917
g2799
g3790
sg2795
g3787
stRp5918
ag1
(g5058
g5009
(dp5919
g2799
g3800
sg2795
g3797
stRp5920
ag1
(g5058
g5009
(dp5921
g2799
g3810
sg2795
g3807
stRp5922
ag1
(g5058
g5009
(dp5923
g2799
g3820
sg2795
g3817
stRp5924
ag1
(g5058
g5009
(dp5925
g2799
g3830
sg2795
g3827
stRp5926
ag1
(g5058
g5009
(dp5927
g2799
g3840
sg2795
g3837
stRp5928
ag1
(g5058
g5009
(dp5929
g2799
g3850
sg2795
g3847
stRp5930
ag1
(g5058
g5009
(dp5931
g2799
g3860
sg2795
g3857
stRp5932
ag1
(g5058
g5009
(dp5933
g2799
g3870
sg2795
g3867
stRp5934
ag1
(g5058
g5009
(dp5935
g2799
g3880
sg2795
g3877
stRp5936
ag1
(g5058
g5009
(dp5937
g2799
g3890
sg2795
g3887
stRp5938
ag1
(g5058
g5009
(dp5939
g2799
g3900
sg2795
g3897
stRp5940
ag1
(g5058
g5009
(dp5941
g2799
g3910
sg2795
g3907
stRp5942
ag1
(g5058
g5009
(dp5943
g2799
g3920
sg2795
g3917
stRp5944
ag1
(g5058
g5009
(dp5945
g2799
g3930
sg2795
g3927
stRp5946
ag1
(g5058
g5009
(dp5947
g2799
g3940
sg2795
g3937
stRp5948
ag1
(g5058
g5009
(dp5949
g2799
g3950
sg2795
g3947
stRp5950
ag1
(g5058
g5009
(dp5951
g2799
g3960
sg2795
g3957
stRp5952
ag1
(g5058
g5009
(dp5953
g2799
g3970
sg2795
g3967
stRp5954
ag1
(g5058
g5009
(dp5955
g2799
g3980
sg2795
g3977
stRp5956
ag1
(g5058
g5009
(dp5957
g2799
g3990
sg2795
g3987
stRp5958
ag1
(g5058
g5009
(dp5959
g2799
g4000
sg2795
g3997
stRp5960
ag1
(g5058
g5009
(dp5961
g2799
g4010
sg2795
g4007
stRp5962
ag1
(g5058
g5009
(dp5963
g2799
g4020
sg2795
g4017
stRp5964
ag1
(g5058
g5009
(dp5965
g2799
g4030
sg2795
g4027
stRp5966
ag1
(g5058
g5009
(dp5967
g2799
g4040
sg2795
g4037
stRp5968
ag1
(g5058
g5009
(dp5969
g2799
g4050
sg2795
g4047
stRp5970
ag1
(g5058
g5009
(dp5971
g2799
g4060
sg2795
g4057
stRp5972
ag1
(g5058
g5009
(dp5973
g2799
g4070
sg2795
g4067
stRp5974
ag1
(g5058
g5009
(dp5975
g2799
g4080
sg2795
g4077
stRp5976
ag1
(g5058
g5009
(dp5977
g2799
g4090
sg2795
g4087
stRp5978
ag1
(g5058
g5009
(dp5979
g2799
g4100
sg2795
g4097
stRp5980
ag1
(g5058
g5009
(dp5981
g2799
g4110
sg2795
g4107
stRp5982
ag1
(g5058
g5009
(dp5983
g2799
g4120
sg2795
g4117
stRp5984
ag1
(g5058
g5009
(dp5985
g2799
g4130
sg2795
g4127
stRp5986
ag1
(g5058
g5009
(dp5987
g2799
g4140
sg2795
g4137
stRp5988
ag1
(g5058
g5009
(dp5989
g2799
g4150
sg2795
g4147
stRp5990
ag1
(g5058
g5009
(dp5991
g2799
g4160
sg2795
g4157
stRp5992
ag1
(g5058
g5009
(dp5993
g2799
g4170
sg2795
g4167
stRp5994
ag1
(g5058
g5009
(dp5995
g2799
g4180
sg2795
g4177
stRp5996
ag1
(g5058
g5009
(dp5997
g2799
g4190
sg2795
g4187
stRp5998
ag1
(g5058
g5009
(dp5999
g2799
g4200
sg2795
g4197
stRp6000
ag1
(g5058
g5009
(dp6001
g2799
g4210
sg2795
g4207
stRp6002
ag1
(g5058
g5009
(dp6003
g2799
g4220
sg2795
g4217
stRp6004
ag1
(g5058
g5009
(dp6005
g2799
g4230
sg2795
g4227
stRp6006
ag1
(g5058
g5009
(dp6007
g2799
g4240
sg2795
g4237
stRp6008
ag1
(g5058
g5009
(dp6009
g2799
g4250
sg2795
g4247
stRp6010
ag1
(g5058
g5009
(dp6011
g2799
g4260
sg2795
g4257
stRp6012
ag1
(g5058
g5009
(dp6013
g2799
g4270
sg2795
g4267
stRp6014
ag1
(g5058
g5009
(dp6015
g2799
g4280
sg2795
g4277
stRp6016
ag1
(g5058
g5009
(dp6017
g2799
g4290
sg2795
g4287
stRp6018
ag1
(g5058
g5009
(dp6019
g2799
g4300
sg2795
g4297
stRp6020
ag1
(g5058
g5009
(dp6021
g2799
g4310
sg2795
g4307
stRp6022
ag1
(g5058
g5009
(dp6023
g2799
g4320
sg2795
g4317
stRp6024
ag1
(g5058
g5009
(dp6025
g2799
g4330
sg2795
g4327
stRp6026
ag1
(g5058
g5009
(dp6027
g2799
g4340
sg2795
g4337
stRp6028
ag1
(g5058
g5009
(dp6029
g2799
g4350
sg2795
g4347
stRp6030
ag1
(g5058
g5009
(dp6031
g2799
g4360
sg2795
g4357
stRp6032
ag1
(g5058
g5009
(dp6033
g2799
g4370
sg2795
g4367
stRp6034
ag1
(g5058
g5009
(dp6035
g2799
g4380
sg2795
g4377
stRp6036
ag1
(g5058
g5009
(dp6037
g2799
g4390
sg2795
g4387
stRp6038
ag1
(g5058
g5009
(dp6039
g2799
g4400
sg2795
g4397
stRp6040
ag1
(g5058
g5009
(dp6041
g2799
g4410
sg2795
g4407
stRp6042
ag1
(g5058
g5009
(dp6043
g2799
g4420
sg2795
g4417
stRp6044
ag1
(g5058
g5009
(dp6045
g2799
g4430
sg2795
g4427
stRp6046
ag1
(g5058
g5009
(dp6047
g2799
g4440
sg2795
g4437
stRp6048
ag1
(g5058
g5009
(dp6049
g2799
g4450
sg2795
g4447
stRp6050
ag1
(g5058
g5009
(dp6051
g2799
g4460
sg2795
g4457
stRp6052
ag1
(g5058
g5009
(dp6053
g2799
g4470
sg2795
g4467
stRp6054
ag1
(g5058
g5009
(dp6055
g2799
g4480
sg2795
g4477
stRp6056
ag1
(g5058
g5009
(dp6057
g2799
g4490
sg2795
g4487
stRp6058
ag1
(g5058
g5009
(dp6059
g2799
g4500
sg2795
g4497
stRp6060
ag1
(g5058
g5009
(dp6061
g2799
g4510
sg2795
g4507
stRp6062
ag1
(g5058
g5009
(dp6063
g2799
g4520
sg2795
g4517
stRp6064
ag1
(g5058
g5009
(dp6065
g2799
g4530
sg2795
g4527
stRp6066
ag1
(g5058
g5009
(dp6067
g2799
g4540
sg2795
g4537
stRp6068
ag1
(g5058
g5009
(dp6069
g2799
g4550
sg2795
g4547
stRp6070
ag1
(g5058
g5009
(dp6071
g2799
g4560
sg2795
g4557
stRp6072
ag1
(g5058
g5009
(dp6073
g2799
g4570
sg2795
g4567
stRp6074
ag1
(g5058
g5009
(dp6075
g2799
g4580
sg2795
g4577
stRp6076
ag1
(g5058
g5009
(dp6077
g2799
g4590
sg2795
g4587
stRp6078
ag1
(g5058
g5009
(dp6079
g2799
g4600
sg2795
g4597
stRp6080
ag1
(g5058
g5009
(dp6081
g2799
g4610
sg2795
g4607
stRp6082
ag1
(g5058
g5009
(dp6083
g2799
g4620
sg2795
g4617
stRp6084
ag1
(g5058
g5009
(dp6085
g2799
g4630
sg2795
g4627
stRp6086
ag1
(g5058
g5009
(dp6087
g2799
g4640
sg2795
g4637
stRp6088
ag1
(g5058
g5009
(dp6089
g2799
g4650
sg2795
g4647
stRp6090
ag1
(g5058
g5009
(dp6091
g2799
g4660
sg2795
g4657
stRp6092
ag1
(g5058
g5009
(dp6093
g2799
g4670
sg2795
g4667
stRp6094
ag1
(g5058
g5009
(dp6095
g2799
g4680
sg2795
g4677
stRp6096
ag1
(g5058
g5009
(dp6097
g2799
g4690
sg2795
g4687
stRp6098
ag1
(g5058
g5009
(dp6099
g2799
g4700
sg2795
g4697
stRp6100
ag1
(g5058
g5009
(dp6101
g2799
g4710
sg2795
g4707
stRp6102
ag1
(g5058
g5009
(dp6103
g2799
g4720
sg2795
g4717
stRp6104
ag1
(g5058
g5009
(dp6105
g2799
g4730
sg2795
g4727
stRp6106
ag1
(g5058
g5009
(dp6107
g2799
g4740
sg2795
g4737
stRp6108
ag1
(g5058
g5009
(dp6109
g2799
g4750
sg2795
g4747
stRp6110
ag1
(g5058
g5009
(dp6111
g2799
g4760
sg2795
g4757
stRp6112
ag1
(g5058
g5009
(dp6113
g2799
g4770
sg2795
g4767
stRp6114
ag1
(g5058
g5009
(dp6115
g2799
g4780
sg2795
g4777
stRp6116
ag1
(g5058
g5009
(dp6117
g2799
g4790
sg2795
g4787
stRp6118
ag1
(g5058
g5009
(dp6119
g2799
g4800
sg2795
g4797
stRp6120
ag1
(g5058
g5009
(dp6121
g2799
g4810
sg2795
g4807
stRp6122
ag1
(g5058
g5009
(dp6123
g2799
g4820
sg2795
g4817
stRp6124
ag1
(g5058
g5009
(dp6125
g2799
g4830
sg2795
g4827
stRp6126
ag1
(g5058
g5009
(dp6127
g2799
g4840
sg2795
g4837
stRp6128
ag1
(g5058
g5009
(dp6129
g2799
g4850
sg2795
g4847
stRp6130
ag1
(g5058
g5009
(dp6131
g2799
g4860
sg2795
g4857
stRp6132
ag1
(g5058
g5009
(dp6133
g2799
g4870
sg2795
g4867
stRp6134
ag1
(g5058
g5009
(dp6135
g2799
g4880
sg2795
g4877
stRp6136
ag1
(g5058
g5009
(dp6137
g2799
g4890
sg2795
g4887
stRp6138
ag1
(g5058
g5009
(dp6139
g2799
g4900
sg2795
g4897
stRp6140
ag1
(g5058
g5009
(dp6141
g2799
g4910
sg2795
g4907
stRp6142
ag1
(g5058
g5009
(dp6143
g2799
g4920
sg2795
g4917
stRp6144
ag1
(g5058
g5009
(dp6145
g2799
g4930
sg2795
g4927
stRp6146
ag1
(g5058
g5009
(dp6147
g2799
g4940
sg2795
g4937
stRp6148
ag1
(g5058
g5009
(dp6149
g2799
g4950
sg2795
g4947
stRp6150
ag1
(g5058
g5009
(dp6151
g2799
g4960
sg2795
g4957
stRp6152
ag1
(g5058
g5009
(dp6153
g2799
g4970
sg2795
g4967
stRp6154
ag1
(g5058
g5009
(dp6155
g2799
g4980
sg2795
g4977
stRp6156
ag1
(g5058
g5009
(dp6157
g2799
g4990
sg2795
g4987
stRp6158
asg5227
Nsg5228
g4984
sg5229
I220
sg5230
I0
sg5231
I220
sg5232
I01
sbasS'savePickle'
p6159
I00
sb.