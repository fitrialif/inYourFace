ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/G_20_facesParametric_2015_Oct_24_1213
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
asS'autoLog'
p36
I01
sS'extraInfo'
p37
(dp38
S'date'
p39
V2015_Oct_24_1213
p40
sVgroup
p41
VG
sS'expName'
p42
g11
sVparticipant
p43
V20
p44
sS'frameRate'
p45
cnumpy.core.multiarray
scalar
p46
(cnumpy
dtype
p47
(S'f8'
I0
I1
tRp48
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x02\xd7\x9ajd\xddM@'
tRp49
ssS'loopsUnfinished'
p50
(lp51
sS'saveWideText'
p52
I01
sS'thisEntry'
p53
(dp54
sS'version'
p55
S''
sS'_paramNamesSoFar'
p56
(lp57
S'img'
p58
aS'num'
p59
asS'entries'
p60
(lp61
(dp62
g15
F69.438321113586426
sg42
g11
sg41
VG
sg39
g40
sg43
g44
sg45
g49
sg14
S'return'
p63
sa(dp64
g16
Nsg18
Nsg58
S'./basicStim/09F_SP_O.jpg'
p65
sg21
F4.8319999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p66
I0
sg42
g11
sS'basicLoop.thisRepN'
p67
I0
sg20
S'SUP'
p68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p69
I0
sS'basicLoop.thisIndex'
p70
I40
sa(dp71
g16
S'HAP'
p72
sg18
Nsg58
S'./basicStim/21M_HA_O.jpg'
p73
sg21
Nsg19
Nsg17
F3.5550000000000002
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p74
I1
sg42
g11
sS'basicLoop.thisRepN'
p75
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p76
I1
sS'basicLoop.thisIndex'
p77
I45
sa(dp78
g16
Nsg18
Nsg58
S'./basicStim/09F_FE_O.jpg'
p79
sg21
F2.2170000000000001
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p80
I2
sg42
g11
sS'basicLoop.thisRepN'
p81
I0
sg20
S'DIS'
p82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p83
I2
sS'basicLoop.thisIndex'
p84
I37
sa(dp85
g16
Nsg18
Nsg58
S'./basicStim/24M_DI_O.jpg'
p86
sg21
F6.0209999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p87
I3
sg42
g11
sS'basicLoop.thisRepN'
p88
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p89
I3
sS'basicLoop.thisIndex'
p90
I57
sa(dp91
g16
Nsg18
S'ANG'
p92
sg58
S'./basicStim/03F_AN_O.jpg'
p93
sg21
Nsg19
F3.085
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p94
I4
sg42
g11
sS'basicLoop.thisRepN'
p95
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p96
I4
sS'basicLoop.thisIndex'
p97
I14
sa(dp98
g16
Nsg18
g92
sg58
S'./basicStim/34M_DI_O.jpg'
p99
sg21
Nsg19
F3.9119999999999999
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p100
I5
sg42
g11
sS'basicLoop.thisRepN'
p101
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p102
I5
sS'basicLoop.thisIndex'
p103
I71
sa(dp104
g16
Nsg18
Nsg58
S'./basicStim/34M_FE_O.jpg'
p105
sg21
F2.5030000000000001
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p106
I6
sg42
g11
sS'basicLoop.thisRepN'
p107
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p108
I6
sS'basicLoop.thisIndex'
p109
I72
sa(dp110
g16
Nsg18
Nsg58
S'./basicStim/24M_NE_C.jpg'
p111
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F2.2799999999999998
sg22
S'NTR'
p112
sS'basicLoop.thisTrialN'
p113
I7
sg42
g11
sS'basicLoop.thisRepN'
p114
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p115
I7
sS'basicLoop.thisIndex'
p116
I62
sa(dp117
g16
Nsg18
Nsg58
S'./basicStim/01F_NE_C.jpg'
p118
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F1.5469999999999999
sg22
g112
sS'basicLoop.thisTrialN'
p119
I8
sg42
g11
sS'basicLoop.thisRepN'
p120
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p121
I8
sS'basicLoop.thisIndex'
p122
I6
sa(dp123
g16
Nsg18
Nsg58
S'./basicStim/06F_DI_O.jpg'
p124
sg21
F2.6659999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p125
I9
sg42
g11
sS'basicLoop.thisRepN'
p126
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p127
I9
sS'basicLoop.thisIndex'
p128
I22
sa(dp129
g16
S'SAD'
p130
sg18
Nsg58
S'./basicStim/28M_SA_C.jpg'
p131
sg21
Nsg19
Nsg17
F3.7919999999999998
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p132
I10
sg42
g11
sS'basicLoop.thisRepN'
p133
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p134
I10
sS'basicLoop.thisIndex'
p135
I67
sa(dp136
g16
g72
sg18
Nsg58
S'./basicStim/01F_HA_O.jpg'
p137
sg21
Nsg19
Nsg17
F3.2749999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p138
I11
sg42
g11
sS'basicLoop.thisRepN'
p139
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p140
I11
sS'basicLoop.thisIndex'
p141
I3
sa(dp142
g16
Nsg18
Nsg58
S'./basicStim/06F_SP_O.jpg'
p143
sg21
F3.9940000000000002
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p144
I12
sg42
g11
sS'basicLoop.thisRepN'
p145
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p146
I12
sS'basicLoop.thisIndex'
p147
I26
sa(dp148
g16
Nsg18
Nsg58
S'./basicStim/34M_SP_O.jpg'
p149
sg21
F1.968
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p150
I13
sg42
g11
sS'basicLoop.thisRepN'
p151
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p152
I13
sS'basicLoop.thisIndex'
p153
I75
sa(dp154
g16
Nsg18
Nsg58
S'./basicStim/07F_DI_O.jpg'
p155
sg21
F5.2960000000000003
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p156
I14
sg42
g11
sS'basicLoop.thisRepN'
p157
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p158
I14
sS'basicLoop.thisIndex'
p159
I29
sa(dp160
g16
g130
sg18
Nsg58
S'./basicStim/34M_SA_C.jpg'
p161
sg21
Nsg19
Nsg17
F1.3320000000000001
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p162
I15
sg42
g11
sS'basicLoop.thisRepN'
p163
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p164
I15
sS'basicLoop.thisIndex'
p165
I74
sa(dp166
g16
g130
sg18
Nsg58
S'./basicStim/21M_NE_C.jpg'
p167
sg21
Nsg19
Nsg17
F13.128
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p168
I16
sg42
g11
sS'basicLoop.thisRepN'
p169
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p170
I16
sS'basicLoop.thisIndex'
p171
I48
sa(dp172
g16
Nsg18
Nsg58
S'./basicStim/02F_DI_O.jpg'
p173
sg21
F6.6689999999999996
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p174
I17
sg42
g11
sS'basicLoop.thisRepN'
p175
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p176
I17
sS'basicLoop.thisIndex'
p177
I8
sa(dp178
g16
g72
sg18
Nsg58
S'./basicStim/07F_HA_O.jpg'
p179
sg21
Nsg19
Nsg17
F1.4139999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p180
I18
sg42
g11
sS'basicLoop.thisRepN'
p181
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p182
I18
sS'basicLoop.thisIndex'
p183
I31
sa(dp184
g16
Nsg18
g92
sg58
S'./basicStim/06F_SA_C.jpg'
p185
sg21
Nsg19
F5.0549999999999997
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p186
I19
sg42
g11
sS'basicLoop.thisRepN'
p187
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p188
I19
sS'basicLoop.thisIndex'
p189
I25
sa(dp190
g16
Nsg18
g92
sg58
S'./basicStim/09F_SA_C.jpg'
p191
sg21
Nsg19
F1.2749999999999999
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p192
I20
sg42
g11
sS'basicLoop.thisRepN'
p193
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p194
I20
sS'basicLoop.thisIndex'
p195
I39
sa(dp196
g16
Nsg18
g92
sg58
S'./basicStim/36M_AN_O.jpg'
p197
sg21
Nsg19
F2.2829999999999999
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p198
I21
sg42
g11
sS'basicLoop.thisRepN'
p199
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p200
I21
sS'basicLoop.thisIndex'
p201
I77
sa(dp202
g16
Nsg18
Nsg58
S'./basicStim/03F_FE_O.jpg'
p203
sg21
F4.141
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p204
I22
sg42
g11
sS'basicLoop.thisRepN'
p205
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p206
I22
sS'basicLoop.thisIndex'
p207
I16
sa(dp208
g16
g72
sg18
Nsg58
S'./basicStim/06F_HA_O.jpg'
p209
sg21
Nsg19
Nsg17
F2.0169999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p210
I23
sg42
g11
sS'basicLoop.thisRepN'
p211
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p212
I23
sS'basicLoop.thisIndex'
p213
I24
sa(dp214
g16
g72
sg18
Nsg58
S'./basicStim/09F_HA_O.jpg'
p215
sg21
Nsg19
Nsg17
F0.91700000000000004
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p216
I24
sg42
g11
sS'basicLoop.thisRepN'
p217
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p218
I24
sS'basicLoop.thisIndex'
p219
I38
sa(dp220
g16
g72
sg18
Nsg58
S'./basicStim/28M_HA_O.jpg'
p221
sg21
Nsg19
Nsg17
F1.361
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p222
I25
sg42
g11
sS'basicLoop.thisRepN'
p223
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p224
I25
sS'basicLoop.thisIndex'
p225
I66
sa(dp226
g16
Nsg18
Nsg58
S'./basicStim/36M_NE_C.jpg'
p227
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F1.222
sg22
g112
sS'basicLoop.thisTrialN'
p228
I26
sg42
g11
sS'basicLoop.thisRepN'
p229
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p230
I26
sS'basicLoop.thisIndex'
p231
I83
sa(dp232
g16
g130
sg18
Nsg58
S'./basicStim/01F_SA_C.jpg'
p233
sg21
Nsg19
Nsg17
F2.8530000000000002
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p234
I27
sg42
g11
sS'basicLoop.thisRepN'
p235
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p236
I27
sS'basicLoop.thisIndex'
p237
I4
sa(dp238
g16
Nsg18
S'FEA'
p239
sg58
S'./basicStim/36M_FE_O.jpg'
p240
sg21
Nsg19
F4.032
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p241
I28
sg42
g11
sS'basicLoop.thisRepN'
p242
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p243
I28
sS'basicLoop.thisIndex'
p244
I79
sa(dp245
g16
Nsg18
Nsg58
S'./basicStim/02F_NE_C.jpg'
p246
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F2.8690000000000002
sg22
g112
sS'basicLoop.thisTrialN'
p247
I29
sg42
g11
sS'basicLoop.thisRepN'
p248
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p249
I29
sS'basicLoop.thisIndex'
p250
I13
sa(dp251
g16
Nsg18
Nsg58
S'./basicStim/03F_NE_C.jpg'
p252
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F1.593
sg22
g112
sS'basicLoop.thisTrialN'
p253
I30
sg42
g11
sS'basicLoop.thisRepN'
p254
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p255
I30
sS'basicLoop.thisIndex'
p256
I20
sa(dp257
g16
Nsg18
Nsg58
S'./basicStim/28M_FE_O.jpg'
p258
sg21
F3.8359999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p259
I31
sg42
g11
sS'basicLoop.thisRepN'
p260
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p261
I31
sS'basicLoop.thisIndex'
p262
I65
sa(dp263
g16
Nsg18
g92
sg58
S'./basicStim/21M_AN_O.jpg'
p264
sg21
Nsg19
F2.4580000000000002
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p265
I32
sg42
g11
sS'basicLoop.thisRepN'
p266
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p267
I32
sS'basicLoop.thisIndex'
p268
I42
sa(dp269
g16
Nsg18
Nsg58
S'./basicStim/36M_DI_O.jpg'
p270
sg21
F4.7270000000000003
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p271
I33
sg42
g11
sS'basicLoop.thisRepN'
p272
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p273
I33
sS'basicLoop.thisIndex'
p274
I78
sa(dp275
g16
Nsg18
Nsg58
S'./basicStim/07F_NE_C.jpg'
p276
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F2.6850000000000001
sg22
g112
sS'basicLoop.thisTrialN'
p277
I34
sg42
g11
sS'basicLoop.thisRepN'
p278
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p279
I34
sS'basicLoop.thisIndex'
p280
I34
sa(dp281
g16
Nsg18
Nsg58
S'./basicStim/01F_SP_O.jpg'
p282
sg21
F1.9650000000000001
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p283
I35
sg42
g11
sS'basicLoop.thisRepN'
p284
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p285
I35
sS'basicLoop.thisIndex'
p286
I5
sa(dp287
g16
g130
sg18
Nsg58
S'./basicStim/03F_SA_C.jpg'
p288
sg21
Nsg19
Nsg17
F2.956
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p289
I36
sg42
g11
sS'basicLoop.thisRepN'
p290
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p291
I36
sS'basicLoop.thisIndex'
p292
I18
sa(dp293
g16
g130
sg18
Nsg58
S'./basicStim/24M_SA_C.jpg'
p294
sg21
Nsg19
Nsg17
F3.415
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p295
I37
sg42
g11
sS'basicLoop.thisRepN'
p296
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p297
I37
sS'basicLoop.thisIndex'
p298
I60
sa(dp299
g16
g72
sg18
Nsg58
S'./basicStim/03F_SP_O.jpg'
p300
sg21
Nsg19
Nsg17
F1.5649999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p301
I38
sg42
g11
sS'basicLoop.thisRepN'
p302
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p303
I38
sS'basicLoop.thisIndex'
p304
I19
sa(dp305
g16
Nsg18
Nsg58
S'./basicStim/07F_SP_O.jpg'
p306
sg21
F4.6790000000000003
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p307
I39
sg42
g11
sS'basicLoop.thisRepN'
p308
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p309
I39
sS'basicLoop.thisIndex'
p310
I33
sa(dp311
g16
Nsg18
g239
sg58
S'./basicStim/21M_FE_O.jpg'
p312
sg21
Nsg19
F2.6960000000000002
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p313
I40
sg42
g11
sS'basicLoop.thisRepN'
p314
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p315
I40
sS'basicLoop.thisIndex'
p316
I44
sa(dp317
g16
Nsg18
Nsg58
S'./basicStim/23M_DI_O.jpg'
p318
sg21
F3.5640000000000001
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p319
I41
sg42
g11
sS'basicLoop.thisRepN'
p320
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p321
I41
sS'basicLoop.thisIndex'
p322
I50
sa(dp323
g16
Nsg18
g92
sg58
S'./basicStim/24M_AN_O.jpg'
p324
sg21
Nsg19
F1.218
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p325
I42
sg42
g11
sS'basicLoop.thisRepN'
p326
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p327
I42
sS'basicLoop.thisIndex'
p328
I56
sa(dp329
g16
g72
sg18
Nsg58
S'./basicStim/24M_HA_O.jpg'
p330
sg21
Nsg19
Nsg17
F1.8300000000000001
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p331
I43
sg42
g11
sS'basicLoop.thisRepN'
p332
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p333
I43
sS'basicLoop.thisIndex'
p334
I59
sa(dp335
g16
Nsg18
Nsg58
S'./basicStim/21M_SA_C.jpg'
p336
sg21
F4.2549999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p337
I44
sg42
g11
sS'basicLoop.thisRepN'
p338
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p339
I44
sS'basicLoop.thisIndex'
p340
I46
sa(dp341
g16
Nsg18
Nsg58
S'./basicStim/02F_FE_O.jpg'
p342
sg21
F1.095
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p343
I45
sg42
g11
sS'basicLoop.thisRepN'
p344
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p345
I45
sS'basicLoop.thisIndex'
p346
I9
sa(dp347
g16
Nsg18
Nsg58
S'./basicStim/21M_DI_O.jpg'
p348
sg21
F2.3479999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p349
I46
sg42
g11
sS'basicLoop.thisRepN'
p350
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p351
I46
sS'basicLoop.thisIndex'
p352
I43
sa(dp353
g16
Nsg18
g239
sg58
S'./basicStim/06F_FE_O.jpg'
p354
sg21
Nsg19
F1.681
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p355
I47
sg42
g11
sS'basicLoop.thisRepN'
p356
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p357
I47
sS'basicLoop.thisIndex'
p358
I23
sa(dp359
g16
Nsg18
g92
sg58
S'./basicStim/06F_AN_O.jpg'
p360
sg21
Nsg19
F2.6040000000000001
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p361
I48
sg42
g11
sS'basicLoop.thisRepN'
p362
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p363
I48
sS'basicLoop.thisIndex'
p364
I21
sa(dp365
g16
Nsg18
g239
sg58
S'./basicStim/01F_FE_O.jpg'
p366
sg21
Nsg19
F7.7960000000000003
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p367
I49
sg42
g11
sS'basicLoop.thisRepN'
p368
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p369
I49
sS'basicLoop.thisIndex'
p370
I2
sa(dp371
g16
Nsg18
Nsg58
S'./basicStim/09F_DI_O.jpg'
p372
sg21
F1.913
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p373
I50
sg42
g11
sS'basicLoop.thisRepN'
p374
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p375
I50
sS'basicLoop.thisIndex'
p376
I36
sa(dp377
g16
Nsg18
Nsg58
S'./basicStim/23M_SA_C.jpg'
p378
sg21
F2.6669999999999998
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p379
I51
sg42
g11
sS'basicLoop.thisRepN'
p380
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p381
I51
sS'basicLoop.thisIndex'
p382
I53
sa(dp383
g16
Nsg18
g239
sg58
S'./basicStim/28M_AN_O.jpg'
p384
sg21
Nsg19
F6.3449999999999998
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p385
I52
sg42
g11
sS'basicLoop.thisRepN'
p386
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p387
I52
sS'basicLoop.thisIndex'
p388
I63
sa(dp389
g16
g72
sg18
Nsg58
S'./basicStim/03F_HA_O.jpg'
p390
sg21
Nsg19
Nsg17
F2.5369999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p391
I53
sg42
g11
sS'basicLoop.thisRepN'
p392
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p393
I53
sS'basicLoop.thisIndex'
p394
I17
sa(dp395
g16
Nsg18
Nsg58
S'./basicStim/09F_NE_C.jpg'
p396
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F3.1669999999999998
sg22
g112
sS'basicLoop.thisTrialN'
p397
I54
sg42
g11
sS'basicLoop.thisRepN'
p398
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p399
I54
sS'basicLoop.thisIndex'
p400
I41
sa(dp401
g16
Nsg18
Nsg58
S'./basicStim/36M_SP_O.jpg'
p402
sg21
F1.6759999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p403
I55
sg42
g11
sS'basicLoop.thisRepN'
p404
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p405
I55
sS'basicLoop.thisIndex'
p406
I82
sa(dp407
g16
g130
sg18
Nsg58
S'./basicStim/24M_FE_O.jpg'
p408
sg21
Nsg19
Nsg17
F4.415
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p409
I56
sg42
g11
sS'basicLoop.thisRepN'
p410
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p411
I56
sS'basicLoop.thisIndex'
p412
I58
sa(dp413
g16
Nsg18
g92
sg58
S'./basicStim/01F_AN_O.jpg'
p414
sg21
Nsg19
F1.3779999999999999
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p415
I57
sg42
g11
sS'basicLoop.thisRepN'
p416
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p417
I57
sS'basicLoop.thisIndex'
p418
I0
sa(dp419
g16
Nsg18
Nsg58
S'./basicStim/28M_NE_C.jpg'
p420
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F3.419
sg22
g112
sS'basicLoop.thisTrialN'
p421
I58
sg42
g11
sS'basicLoop.thisRepN'
p422
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p423
I58
sS'basicLoop.thisIndex'
p424
I69
sa(dp425
g16
Nsg18
Nsg58
S'./basicStim/24M_SP_O.jpg'
p426
sg21
F2.4590000000000001
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p427
I59
sg42
g11
sS'basicLoop.thisRepN'
p428
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p429
I59
sS'basicLoop.thisIndex'
p430
I61
sa(dp431
g16
g72
sg18
Nsg58
S'./basicStim/36M_HA_O.jpg'
p432
sg21
Nsg19
Nsg17
F2.1030000000000002
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p433
I60
sg42
g11
sS'basicLoop.thisRepN'
p434
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p435
I60
sS'basicLoop.thisIndex'
p436
I80
sa(dp437
g16
g72
sg18
Nsg58
S'./basicStim/23M_HA_O.jpg'
p438
sg21
Nsg19
Nsg17
F0.85899999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p439
I61
sg42
g11
sS'basicLoop.thisRepN'
p440
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p441
I61
sS'basicLoop.thisIndex'
p442
I52
sa(dp443
g16
Nsg18
Nsg58
S'./basicStim/34M_NE_C.jpg'
p444
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F1.1479999999999999
sg22
g112
sS'basicLoop.thisTrialN'
p445
I62
sg42
g11
sS'basicLoop.thisRepN'
p446
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p447
I62
sS'basicLoop.thisIndex'
p448
I76
sa(dp449
g16
Nsg18
Nsg58
S'./basicStim/01F_DI_O.jpg'
p450
sg21
F2.2309999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p451
I63
sg42
g11
sS'basicLoop.thisRepN'
p452
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p453
I63
sS'basicLoop.thisIndex'
p454
I1
sa(dp455
g16
Nsg18
Nsg58
S'./basicStim/07F_FE_O.jpg'
p456
sg21
F1.5589999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p457
I64
sg42
g11
sS'basicLoop.thisRepN'
p458
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p459
I64
sS'basicLoop.thisIndex'
p460
I30
sa(dp461
g16
Nsg18
Nsg58
S'./basicStim/23M_NE_C.jpg'
p462
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F2.048
sg22
g112
sS'basicLoop.thisTrialN'
p463
I65
sg42
g11
sS'basicLoop.thisRepN'
p464
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p465
I65
sS'basicLoop.thisIndex'
p466
I55
sa(dp467
g16
Nsg18
Nsg58
S'./basicStim/23M_SP_O.jpg'
p468
sg21
F1.3779999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p469
I66
sg42
g11
sS'basicLoop.thisRepN'
p470
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p471
I66
sS'basicLoop.thisIndex'
p472
I54
sa(dp473
g16
Nsg18
Nsg58
S'./basicStim/21M_SP_O.jpg'
p474
sg21
F4.3070000000000004
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p475
I67
sg42
g11
sS'basicLoop.thisRepN'
p476
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p477
I67
sS'basicLoop.thisIndex'
p478
I47
sa(dp479
g16
Nsg18
Nsg58
S'./basicStim/02F_SP_O.jpg'
p480
sg21
F1.21
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p481
I68
sg42
g11
sS'basicLoop.thisRepN'
p482
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p483
I68
sS'basicLoop.thisIndex'
p484
I12
sa(dp485
g16
Nsg18
g92
sg58
S'./basicStim/02F_AN_O.jpg'
p486
sg21
Nsg19
F1.3959999999999999
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p487
I69
sg42
g11
sS'basicLoop.thisRepN'
p488
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p489
I69
sS'basicLoop.thisIndex'
p490
I7
sa(dp491
g16
Nsg18
g92
sg58
S'./basicStim/34M_AN_O.jpg'
p492
sg21
Nsg19
F0.94399999999999995
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p493
I70
sg42
g11
sS'basicLoop.thisRepN'
p494
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p495
I70
sS'basicLoop.thisIndex'
p496
I70
sa(dp497
g16
Nsg18
g92
sg58
S'./basicStim/09F_AN_O.jpg'
p498
sg21
Nsg19
F0.70999999999999996
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p499
I71
sg42
g11
sS'basicLoop.thisRepN'
p500
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p501
I71
sS'basicLoop.thisIndex'
p502
I35
sa(dp503
g16
g130
sg18
Nsg58
S'./basicStim/36M_SA_C.jpg'
p504
sg21
Nsg19
Nsg17
F1.9670000000000001
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p505
I72
sg42
g11
sS'basicLoop.thisRepN'
p506
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p507
I72
sS'basicLoop.thisIndex'
p508
I81
sa(dp509
g16
Nsg18
g92
sg58
S'./basicStim/23M_AN_O.jpg'
p510
sg21
Nsg19
F5.7480000000000002
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p511
I73
sg42
g11
sS'basicLoop.thisRepN'
p512
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p513
I73
sS'basicLoop.thisIndex'
p514
I49
sa(dp515
g16
Nsg18
Nsg58
S'./basicStim/28M_DI_O.jpg'
p516
sg21
F1.9239999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p517
I74
sg42
g11
sS'basicLoop.thisRepN'
p518
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p519
I74
sS'basicLoop.thisIndex'
p520
I64
sa(dp521
g16
g130
sg18
Nsg58
S'./basicStim/23M_FE_O.jpg'
p522
sg21
Nsg19
Nsg17
F4.5460000000000003
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p523
I75
sg42
g11
sS'basicLoop.thisRepN'
p524
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p525
I75
sS'basicLoop.thisIndex'
p526
I51
sa(dp527
g16
Nsg18
Nsg58
S'./basicStim/06F_NE_C.jpg'
p528
sg21
Nsg19
Nsg17
Nsg43
g44
sg45
g49
sg23
F2.4950000000000001
sg22
g112
sS'basicLoop.thisTrialN'
p529
I76
sg42
g11
sS'basicLoop.thisRepN'
p530
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p531
I76
sS'basicLoop.thisIndex'
p532
I27
sa(dp533
g16
Nsg18
Nsg58
S'./basicStim/03F_DI_O.jpg'
p534
sg21
F2.2149999999999999
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p535
I77
sg42
g11
sS'basicLoop.thisRepN'
p536
I0
sg20
g82
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p537
I77
sS'basicLoop.thisIndex'
p538
I15
sa(dp539
g16
g72
sg18
Nsg58
S'./basicStim/34M_HA_O.jpg'
p540
sg21
Nsg19
Nsg17
F3.3069999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p541
I78
sg42
g11
sS'basicLoop.thisRepN'
p542
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p543
I78
sS'basicLoop.thisIndex'
p544
I73
sa(dp545
g16
g130
sg18
Nsg58
S'./basicStim/07F_SA_C.jpg'
p546
sg21
Nsg19
Nsg17
F1.2769999999999999
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p547
I79
sg42
g11
sS'basicLoop.thisRepN'
p548
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p549
I79
sS'basicLoop.thisIndex'
p550
I32
sa(dp551
g16
Nsg18
Nsg58
S'./basicStim/28M_SP_O.jpg'
p552
sg21
F1.7130000000000001
sg19
Nsg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p553
I80
sg42
g11
sS'basicLoop.thisRepN'
p554
I0
sg20
g68
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p555
I80
sS'basicLoop.thisIndex'
p556
I68
sa(dp557
g16
Nsg18
g92
sg58
S'./basicStim/07F_AN_O.jpg'
p558
sg21
Nsg19
F2.214
sg17
Nsg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p559
I81
sg42
g11
sS'basicLoop.thisRepN'
p560
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p561
I81
sS'basicLoop.thisIndex'
p562
I28
sa(dp563
g16
g72
sg18
Nsg58
S'./basicStim/02F_HA_O.jpg'
p564
sg21
Nsg19
Nsg17
F3.8279999999999998
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p565
I82
sg42
g11
sS'basicLoop.thisRepN'
p566
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p567
I82
sS'basicLoop.thisIndex'
p568
I10
sa(dp569
g16
g130
sg18
Nsg58
S'./basicStim/02F_SA_C.jpg'
p570
sg21
Nsg19
Nsg17
F0.93000000000000005
sg43
g44
sg45
g49
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p571
I83
sg42
g11
sS'basicLoop.thisRepN'
p572
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p573
I83
sS'basicLoop.thisIndex'
p574
I11
sa(dp575
g42
g11
sg41
VG
sg39
g40
sg24
S'return'
p576
sg43
g44
sg45
g49
sg25
F5.6319429874420166
sa(dp577
g15
F52.893455028533936
sg42
g11
sg41
VG
sg39
g40
sg43
g44
sg45
g49
sg14
S'return'
p578
sa(dp579
g42
g11
sg41
VG
sg39
g40
sg24
S'return'
p580
sg43
g44
sg45
g49
sg25
F49.859841108322144
sa(dp581
g39
g40
sg42
g11
sg27
F4.0051758289337158
sg26
S'return'
p582
sg41
VG
sg43
g44
sg45
g49
sa(dp583
g31
I0
sg42
g11
sg41
VG
sS'img'
p584
S'./stim/MorphM10_06_orig.jpg'
p585
sS'trials.thisIndex'
p586
g46
(g47
(S'i8'
I0
I1
tRp587
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp588
sS'trials.thisRepN'
p589
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00D\x16@'
tRp590
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp591
sg30
I0
sg59
g46
(g587
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp592
sS'trials.thisTrialN'
p593
I0
sg32
I1
sg39
g40
sg43
g44
sg33
F3.08272385597229
sS'trials.thisN'
p594
I0
sa(dp595
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_10_orig.jpg'
p596
sS'trials.thisIndex'
p597
g46
(g587
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp598
sS'trials.thisRepN'
p599
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp600
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp601
sg30
I0
sg59
g46
(g587
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp602
sS'trials.thisTrialN'
p603
I1
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6372830867767334
sS'trials.thisN'
p604
I1
sa(dp605
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_05_orig.jpg'
p606
sS'trials.thisIndex'
p607
g46
(g587
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp608
sS'trials.thisRepN'
p609
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp610
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp611
sg30
I0
sg59
g46
(g587
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp612
sS'trials.thisTrialN'
p613
I2
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1384580135345459
sS'trials.thisN'
p614
I2
sa(dp615
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_10_orig.jpg'
p616
sS'trials.thisIndex'
p617
g46
(g587
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp618
sS'trials.thisRepN'
p619
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp620
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J @'
tRp621
sg30
I1
sg59
g46
(g587
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp622
sS'trials.thisTrialN'
p623
I3
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7414000034332275
sS'trials.thisN'
p624
I3
sa(dp625
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_07_orig.jpg'
p626
sS'trials.thisIndex'
p627
g46
(g587
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp628
sS'trials.thisRepN'
p629
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp630
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp631
sg30
I1
sg59
g46
(g587
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp632
sS'trials.thisTrialN'
p633
I4
sg32
I0
sg39
g40
sg43
g44
sg33
F2.0084428787231445
sS'trials.thisN'
p634
I4
sa(dp635
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_05_orig.jpg'
p636
sS'trials.thisIndex'
p637
g46
(g587
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp638
sS'trials.thisRepN'
p639
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp640
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp641
sg30
I1
sg59
g46
(g587
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp642
sS'trials.thisTrialN'
p643
I5
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5385160446166992
sS'trials.thisN'
p644
I5
sa(dp645
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_09_orig.jpg'
p646
sS'trials.thisIndex'
p647
g46
(g587
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp648
sS'trials.thisRepN'
p649
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp650
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp651
sg30
I0
sg59
g46
(g587
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp652
sS'trials.thisTrialN'
p653
I6
sg32
I1
sg39
g40
sg43
g44
sg33
F1.9093530178070068
sS'trials.thisN'
p654
I6
sa(dp655
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_08_orig.jpg'
p656
sS'trials.thisIndex'
p657
g46
(g587
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp658
sS'trials.thisRepN'
p659
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp660
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x1d @'
tRp661
sg30
I0
sg59
g46
(g587
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp662
sS'trials.thisTrialN'
p663
I7
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5383200645446777
sS'trials.thisN'
p664
I7
sa(dp665
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_06_orig.jpg'
p666
sS'trials.thisIndex'
p667
g46
(g587
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp668
sS'trials.thisRepN'
p669
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp670
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x1d @'
tRp671
sg30
I0
sg59
g46
(g587
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp672
sS'trials.thisTrialN'
p673
I8
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6581180095672607
sS'trials.thisN'
p674
I8
sa(dp675
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_04_orig.jpg'
p676
sS'trials.thisIndex'
p677
g46
(g587
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp678
sS'trials.thisRepN'
p679
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp680
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e @'
tRp681
sg30
I0
sg59
g46
(g587
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp682
sS'trials.thisTrialN'
p683
I9
sg32
I1
sg39
g40
sg43
g44
sg33
F2.5798699855804443
sS'trials.thisN'
p684
I9
sa(dp685
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_05_orig.jpg'
p686
sS'trials.thisIndex'
p687
g46
(g587
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp688
sS'trials.thisRepN'
p689
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp690
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e @'
tRp691
sg30
I0
sg59
g46
(g587
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp692
sS'trials.thisTrialN'
p693
I10
sg32
I1
sg39
g40
sg43
g44
sg33
F4.7753190994262695
sS'trials.thisN'
p694
I10
sa(dp695
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_06_orig.jpg'
p696
sS'trials.thisIndex'
p697
g46
(g587
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp698
sS'trials.thisRepN'
p699
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp700
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e @'
tRp701
sg30
I1
sg59
g46
(g587
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp702
sS'trials.thisTrialN'
p703
I11
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5079419612884521
sS'trials.thisN'
p704
I11
sa(dp705
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_07_orig.jpg'
p706
sS'trials.thisIndex'
p707
g46
(g587
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp708
sS'trials.thisRepN'
p709
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp710
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp711
sg30
I1
sg59
g46
(g587
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp712
sS'trials.thisTrialN'
p713
I12
sg32
I0
sg39
g40
sg43
g44
sg33
F4.8405618667602539
sS'trials.thisN'
p714
I12
sa(dp715
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_01_orig.jpg'
p716
sS'trials.thisIndex'
p717
g46
(g587
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp718
sS'trials.thisRepN'
p719
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp720
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp721
sg30
I0
sg59
g46
(g587
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp722
sS'trials.thisTrialN'
p723
I13
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5406348705291748
sS'trials.thisN'
p724
I13
sa(dp725
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_03_orig.jpg'
p726
sS'trials.thisIndex'
p727
g46
(g587
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp728
sS'trials.thisRepN'
p729
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp730
sg29
g46
(g48
S'\x00\x00\x00\x00\x00; @'
tRp731
sg30
I0
sg59
g46
(g587
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp732
sS'trials.thisTrialN'
p733
I14
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3618710041046143
sS'trials.thisN'
p734
I14
sa(dp735
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_10_orig.jpg'
p736
sS'trials.thisIndex'
p737
g46
(g587
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp738
sS'trials.thisRepN'
p739
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp740
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J @'
tRp741
sg30
I1
sg59
g46
(g587
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp742
sS'trials.thisTrialN'
p743
I15
sg32
I0
sg39
g40
sg43
g44
sg33
F3.1986548900604248
sS'trials.thisN'
p744
I15
sa(dp745
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_09_orig.jpg'
p746
sS'trials.thisIndex'
p747
g46
(g587
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp748
sS'trials.thisRepN'
p749
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp750
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J @'
tRp751
sg30
I1
sg59
g46
(g587
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp752
sS'trials.thisTrialN'
p753
I16
sg32
I0
sg39
g40
sg43
g44
sg33
F2.1776959896087646
sS'trials.thisN'
p754
I16
sa(dp755
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_09_orig.jpg'
p756
sS'trials.thisIndex'
p757
g46
(g587
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp758
sS'trials.thisRepN'
p759
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp760
sg29
g46
(g48
S'\x00\x00\x00\x00\x00Y @'
tRp761
sg30
I1
sg59
g46
(g587
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp762
sS'trials.thisTrialN'
p763
I17
sg32
I0
sg39
g40
sg43
g44
sg33
F1.8076000213623047
sS'trials.thisN'
p764
I17
sa(dp765
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_07_orig.jpg'
p766
sS'trials.thisIndex'
p767
g46
(g587
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp768
sS'trials.thisRepN'
p769
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp770
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp771
sg30
I1
sg59
g46
(g587
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp772
sS'trials.thisTrialN'
p773
I18
sg32
I0
sg39
g40
sg43
g44
sg33
F1.9432148933410645
sS'trials.thisN'
p774
I18
sa(dp775
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_08_orig.jpg'
p776
sS'trials.thisIndex'
p777
g46
(g587
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp778
sS'trials.thisRepN'
p779
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp780
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp781
sg30
I1
sg59
g46
(g587
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp782
sS'trials.thisTrialN'
p783
I19
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5575308799743652
sS'trials.thisN'
p784
I19
sa(dp785
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_10_orig.jpg'
p786
sS'trials.thisIndex'
p787
g46
(g587
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp788
sS'trials.thisRepN'
p789
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp790
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp791
sg30
I1
sg59
g46
(g587
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp792
sS'trials.thisTrialN'
p793
I20
sg32
I0
sg39
g40
sg43
g44
sg33
F2.0582010746002197
sS'trials.thisN'
p794
I20
sa(dp795
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_10_orig.jpg'
p796
sS'trials.thisIndex'
p797
g46
(g587
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp798
sS'trials.thisRepN'
p799
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp800
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp801
sg30
I1
sg59
g46
(g587
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp802
sS'trials.thisTrialN'
p803
I21
sg32
I0
sg39
g40
sg43
g44
sg33
F6.2835202217102051
sS'trials.thisN'
p804
I21
sa(dp805
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_06_orig.jpg'
p806
sS'trials.thisIndex'
p807
g46
(g587
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp808
sS'trials.thisRepN'
p809
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp810
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp811
sg30
I0
sg59
g46
(g587
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp812
sS'trials.thisTrialN'
p813
I22
sg32
I1
sg39
g40
sg43
g44
sg33
F4.2893719673156738
sS'trials.thisN'
p814
I22
sa(dp815
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_05_orig.jpg'
p816
sS'trials.thisIndex'
p817
g46
(g587
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp818
sS'trials.thisRepN'
p819
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp820
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp821
sg30
I0
sg59
g46
(g587
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp822
sS'trials.thisTrialN'
p823
I23
sg32
I1
sg39
g40
sg43
g44
sg33
F4.2386469841003418
sS'trials.thisN'
p824
I23
sa(dp825
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_03_orig.jpg'
p826
sS'trials.thisIndex'
p827
g46
(g587
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp828
sS'trials.thisRepN'
p829
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp830
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp831
sg30
I0
sg59
g46
(g587
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp832
sS'trials.thisTrialN'
p833
I24
sg32
I1
sg39
g40
sg43
g44
sg33
F4.5573880672454834
sS'trials.thisN'
p834
I24
sa(dp835
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_06_orig.jpg'
p836
sS'trials.thisIndex'
p837
g46
(g587
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp838
sS'trials.thisRepN'
p839
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp840
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp841
sg30
I0
sg59
g46
(g587
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp842
sS'trials.thisTrialN'
p843
I25
sg32
I1
sg39
g40
sg43
g44
sg33
F2.661790132522583
sS'trials.thisN'
p844
I25
sa(dp845
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_09_orig.jpg'
p846
sS'trials.thisIndex'
p847
g46
(g587
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp848
sS'trials.thisRepN'
p849
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp850
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp851
sg30
I1
sg59
g46
(g587
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp852
sS'trials.thisTrialN'
p853
I26
sg32
I0
sg39
g40
sg43
g44
sg33
F4.8258709907531738
sS'trials.thisN'
p854
I26
sa(dp855
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_01_orig.jpg'
p856
sS'trials.thisIndex'
p857
g46
(g587
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp858
sS'trials.thisRepN'
p859
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp860
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp861
sg30
I0
sg59
g46
(g587
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp862
sS'trials.thisTrialN'
p863
I27
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7067620754241943
sS'trials.thisN'
p864
I27
sa(dp865
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_03_orig.jpg'
p866
sS'trials.thisIndex'
p867
g46
(g587
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp868
sS'trials.thisRepN'
p869
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp870
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp871
sg30
I1
sg59
g46
(g587
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp872
sS'trials.thisTrialN'
p873
I28
sg32
I0
sg39
g40
sg43
g44
sg33
F3.5182271003723145
sS'trials.thisN'
p874
I28
sa(dp875
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_04_orig.jpg'
p876
sS'trials.thisIndex'
p877
g46
(g587
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp878
sS'trials.thisRepN'
p879
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp880
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp881
sg30
I0
sg59
g46
(g587
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp882
sS'trials.thisTrialN'
p883
I29
sg32
I1
sg39
g40
sg43
g44
sg33
F2.6472411155700684
sS'trials.thisN'
p884
I29
sa(dp885
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_05_orig.jpg'
p886
sS'trials.thisIndex'
p887
g46
(g587
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp888
sS'trials.thisRepN'
p889
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp890
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp891
sg30
I0
sg59
g46
(g587
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp892
sS'trials.thisTrialN'
p893
I30
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2554140090942383
sS'trials.thisN'
p894
I30
sa(dp895
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_02_orig.jpg'
p896
sS'trials.thisIndex'
p897
g46
(g587
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp898
sS'trials.thisRepN'
p899
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp900
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp901
sg30
I0
sg59
g46
(g587
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp902
sS'trials.thisTrialN'
p903
I31
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4903130531311035
sS'trials.thisN'
p904
I31
sa(dp905
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_07_orig.jpg'
p906
sS'trials.thisIndex'
p907
g46
(g587
S' \x00\x00\x00\x00\x00\x00\x00'
tRp908
sS'trials.thisRepN'
p909
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp910
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp911
sg30
I1
sg59
g46
(g587
S' \x00\x00\x00\x00\x00\x00\x00'
tRp912
sS'trials.thisTrialN'
p913
I32
sg32
I0
sg39
g40
sg43
g44
sg33
F1.741569995880127
sS'trials.thisN'
p914
I32
sa(dp915
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_06_orig.jpg'
p916
sS'trials.thisIndex'
p917
g46
(g587
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp918
sS'trials.thisRepN'
p919
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp920
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp921
sg30
I1
sg59
g46
(g587
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp922
sS'trials.thisTrialN'
p923
I33
sg32
I0
sg39
g40
sg43
g44
sg33
F2.1592400074005127
sS'trials.thisN'
p924
I33
sa(dp925
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_08_orig.jpg'
p926
sS'trials.thisIndex'
p927
g46
(g587
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp928
sS'trials.thisRepN'
p929
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp930
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp931
sg30
I0
sg59
g46
(g587
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp932
sS'trials.thisTrialN'
p933
I34
sg32
I1
sg39
g40
sg43
g44
sg33
F3.9538331031799316
sS'trials.thisN'
p934
I34
sa(dp935
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_08_orig.jpg'
p936
sS'trials.thisIndex'
p937
g46
(g587
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp938
sS'trials.thisRepN'
p939
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp940
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp941
sg30
I1
sg59
g46
(g587
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp942
sS'trials.thisTrialN'
p943
I35
sg32
I0
sg39
g40
sg43
g44
sg33
F2.1105170249938965
sS'trials.thisN'
p944
I35
sa(dp945
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_10_orig.jpg'
p946
sS'trials.thisIndex'
p947
g46
(g587
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp948
sS'trials.thisRepN'
p949
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00&\x16@'
tRp950
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa4 @'
tRp951
sg30
I1
sg59
g46
(g587
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp952
sS'trials.thisTrialN'
p953
I36
sg32
I0
sg39
g40
sg43
g44
sg33
F5.1436970233917236
sS'trials.thisN'
p954
I36
sa(dp955
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_01_orig.jpg'
p956
sS'trials.thisIndex'
p957
g46
(g587
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp958
sS'trials.thisRepN'
p959
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00&\x16@'
tRp960
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp961
sg30
I0
sg59
g46
(g587
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp962
sS'trials.thisTrialN'
p963
I37
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2224922180175781
sS'trials.thisN'
p964
I37
sa(dp965
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_10_orig.jpg'
p966
sS'trials.thisIndex'
p967
g46
(g587
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp968
sS'trials.thisRepN'
p969
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00&\x16@'
tRp970
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp971
sg30
I1
sg59
g46
(g587
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp972
sS'trials.thisTrialN'
p973
I38
sg32
I0
sg39
g40
sg43
g44
sg33
F4.9095818996429443
sS'trials.thisN'
p974
I38
sa(dp975
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_08_orig.jpg'
p976
sS'trials.thisIndex'
p977
g46
(g587
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp978
sS'trials.thisRepN'
p979
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp980
sg29
g46
(g48
S'\x00\x00\x00\x00\x00Y @'
tRp981
sg30
I1
sg59
g46
(g587
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp982
sS'trials.thisTrialN'
p983
I39
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2390110492706299
sS'trials.thisN'
p984
I39
sa(dp985
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_01_orig.jpg'
p986
sS'trials.thisIndex'
p987
g46
(g587
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp988
sS'trials.thisRepN'
p989
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp990
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp991
sg30
I0
sg59
g46
(g587
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp992
sS'trials.thisTrialN'
p993
I40
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5902149677276611
sS'trials.thisN'
p994
I40
sa(dp995
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_06_orig.jpg'
p996
sS'trials.thisIndex'
p997
g46
(g587
S')\x00\x00\x00\x00\x00\x00\x00'
tRp998
sS'trials.thisRepN'
p999
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1000
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1001
sg30
I0
sg59
g46
(g587
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1002
sS'trials.thisTrialN'
p1003
I41
sg32
I1
sg39
g40
sg43
g44
sg33
F2.412261962890625
sS'trials.thisN'
p1004
I41
sa(dp1005
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_05_orig.jpg'
p1006
sS'trials.thisIndex'
p1007
g46
(g587
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1008
sS'trials.thisRepN'
p1009
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1010
sg29
g46
(g48
S'\x00\x00\x00\x00\x00Y @'
tRp1011
sg30
I0
sg59
g46
(g587
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1012
sS'trials.thisTrialN'
p1013
I42
sg32
I1
sg39
g40
sg43
g44
sg33
F5.1938991546630859
sS'trials.thisN'
p1014
I42
sa(dp1015
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_02_orig.jpg'
p1016
sS'trials.thisIndex'
p1017
g46
(g587
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1018
sS'trials.thisRepN'
p1019
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1020
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1021
sg30
I0
sg59
g46
(g587
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1022
sS'trials.thisTrialN'
p1023
I43
sg32
I1
sg39
g40
sg43
g44
sg33
F4.9430770874023438
sS'trials.thisN'
p1024
I43
sa(dp1025
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_00_orig.jpg'
p1026
sS'trials.thisIndex'
p1027
g46
(g587
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1028
sS'trials.thisRepN'
p1029
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1030
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1031
sg30
I0
sg59
g46
(g587
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1032
sS'trials.thisTrialN'
p1033
I44
sg32
I1
sg39
g40
sg43
g44
sg33
F6.5684490203857422
sS'trials.thisN'
p1034
I44
sa(dp1035
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_00_orig.jpg'
p1036
sS'trials.thisIndex'
p1037
g46
(g587
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1038
sS'trials.thisRepN'
p1039
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1040
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1041
sg30
I0
sg59
g46
(g587
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1042
sS'trials.thisTrialN'
p1043
I45
sg32
I1
sg39
g40
sg43
g44
sg33
F1.942147970199585
sS'trials.thisN'
p1044
I45
sa(dp1045
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_07_orig.jpg'
p1046
sS'trials.thisIndex'
p1047
g46
(g587
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1048
sS'trials.thisRepN'
p1049
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1050
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1051
sg30
I1
sg59
g46
(g587
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1052
sS'trials.thisTrialN'
p1053
I46
sg32
I0
sg39
g40
sg43
g44
sg33
F3.852924108505249
sS'trials.thisN'
p1054
I46
sa(dp1055
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_08_orig.jpg'
p1056
sS'trials.thisIndex'
p1057
g46
(g587
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1058
sS'trials.thisRepN'
p1059
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1060
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1061
sg30
I1
sg59
g46
(g587
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1062
sS'trials.thisTrialN'
p1063
I47
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7081680297851562
sS'trials.thisN'
p1064
I47
sa(dp1065
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_04_orig.jpg'
p1066
sS'trials.thisIndex'
p1067
g46
(g587
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1068
sS'trials.thisRepN'
p1069
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1070
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1071
sg30
I0
sg59
g46
(g587
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1072
sS'trials.thisTrialN'
p1073
I48
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5057549476623535
sS'trials.thisN'
p1074
I48
sa(dp1075
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_03_orig.jpg'
p1076
sS'trials.thisIndex'
p1077
g46
(g587
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1078
sS'trials.thisRepN'
p1079
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1080
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1081
sg30
I0
sg59
g46
(g587
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1082
sS'trials.thisTrialN'
p1083
I49
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5388979911804199
sS'trials.thisN'
p1084
I49
sa(dp1085
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_06_orig.jpg'
p1086
sS'trials.thisIndex'
p1087
g46
(g587
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1088
sS'trials.thisRepN'
p1089
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1090
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1091
sg30
I1
sg59
g46
(g587
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1092
sS'trials.thisTrialN'
p1093
I50
sg32
I0
sg39
g40
sg43
g44
sg33
F4.0198018550872803
sS'trials.thisN'
p1094
I50
sa(dp1095
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_05_orig.jpg'
p1096
sS'trials.thisIndex'
p1097
g46
(g587
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1098
sS'trials.thisRepN'
p1099
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1100
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1101
sg30
I0
sg59
g46
(g587
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1102
sS'trials.thisTrialN'
p1103
I51
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7928581237792969
sS'trials.thisN'
p1104
I51
sa(dp1105
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_03_orig.jpg'
p1106
sS'trials.thisIndex'
p1107
g46
(g587
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1108
sS'trials.thisRepN'
p1109
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1110
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1111
sg30
I0
sg59
g46
(g587
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1112
sS'trials.thisTrialN'
p1113
I52
sg32
I1
sg39
g40
sg43
g44
sg33
F3.4000561237335205
sS'trials.thisN'
p1114
I52
sa(dp1115
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_00_orig.jpg'
p1116
sS'trials.thisIndex'
p1117
g46
(g587
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1118
sS'trials.thisRepN'
p1119
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1120
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1121
sg30
I0
sg59
g46
(g587
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1122
sS'trials.thisTrialN'
p1123
I53
sg32
I1
sg39
g40
sg43
g44
sg33
F0.78443479537963867
sS'trials.thisN'
p1124
I53
sa(dp1125
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_01_orig.jpg'
p1126
sS'trials.thisIndex'
p1127
g46
(g587
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1128
sS'trials.thisRepN'
p1129
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1130
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1131
sg30
I0
sg59
g46
(g587
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1132
sS'trials.thisTrialN'
p1133
I54
sg32
I1
sg39
g40
sg43
g44
sg33
F4.7908940315246582
sS'trials.thisN'
p1134
I54
sa(dp1135
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_03_orig.jpg'
p1136
sS'trials.thisIndex'
p1137
g46
(g587
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1138
sS'trials.thisRepN'
p1139
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1140
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1141
sg30
I0
sg59
g46
(g587
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1142
sS'trials.thisTrialN'
p1143
I55
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5069458484649658
sS'trials.thisN'
p1144
I55
sa(dp1145
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_04_orig.jpg'
p1146
sS'trials.thisIndex'
p1147
g46
(g587
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1148
sS'trials.thisRepN'
p1149
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1150
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1151
sg30
I0
sg59
g46
(g587
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1152
sS'trials.thisTrialN'
p1153
I56
sg32
I1
sg39
g40
sg43
g44
sg33
F2.9817068576812744
sS'trials.thisN'
p1154
I56
sa(dp1155
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_02_orig.jpg'
p1156
sS'trials.thisIndex'
p1157
g46
(g587
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1158
sS'trials.thisRepN'
p1159
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1160
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1161
sg30
I0
sg59
g46
(g587
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1162
sS'trials.thisTrialN'
p1163
I57
sg32
I1
sg39
g40
sg43
g44
sg33
F0.98762917518615723
sS'trials.thisN'
p1164
I57
sa(dp1165
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_04_orig.jpg'
p1166
sS'trials.thisIndex'
p1167
g46
(g587
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1168
sS'trials.thisRepN'
p1169
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1170
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1171
sg30
I0
sg59
g46
(g587
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1172
sS'trials.thisTrialN'
p1173
I58
sg32
I1
sg39
g40
sg43
g44
sg33
F1.9930899143218994
sS'trials.thisN'
p1174
I58
sa(dp1175
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_05_orig.jpg'
p1176
sS'trials.thisIndex'
p1177
g46
(g587
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1178
sS'trials.thisRepN'
p1179
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1180
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1181
sg30
I0
sg59
g46
(g587
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1182
sS'trials.thisTrialN'
p1183
I59
sg32
I1
sg39
g40
sg43
g44
sg33
F0.81880712509155273
sS'trials.thisN'
p1184
I59
sa(dp1185
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_10_orig.jpg'
p1186
sS'trials.thisIndex'
p1187
g46
(g587
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1188
sS'trials.thisRepN'
p1189
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1190
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1191
sg30
I1
sg59
g46
(g587
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1192
sS'trials.thisTrialN'
p1193
I60
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6409449577331543
sS'trials.thisN'
p1194
I60
sa(dp1195
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_00_orig.jpg'
p1196
sS'trials.thisIndex'
p1197
g46
(g587
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1198
sS'trials.thisRepN'
p1199
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1200
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1201
sg30
I0
sg59
g46
(g587
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1202
sS'trials.thisTrialN'
p1203
I61
sg32
I1
sg39
g40
sg43
g44
sg33
F1.9757270812988281
sS'trials.thisN'
p1204
I61
sa(dp1205
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_10_orig.jpg'
p1206
sS'trials.thisIndex'
p1207
g46
(g587
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1208
sS'trials.thisRepN'
p1209
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1210
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1211
sg30
I1
sg59
g46
(g587
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1212
sS'trials.thisTrialN'
p1213
I62
sg32
I0
sg39
g40
sg43
g44
sg33
F1.9265389442443848
sS'trials.thisN'
p1214
I62
sa(dp1215
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_04_orig.jpg'
p1216
sS'trials.thisIndex'
p1217
g46
(g587
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1218
sS'trials.thisRepN'
p1219
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1220
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1221
sg30
I1
sg59
g46
(g587
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1222
sS'trials.thisTrialN'
p1223
I63
sg32
I0
sg39
g40
sg43
g44
sg33
F2.393125057220459
sS'trials.thisN'
p1224
I63
sa(dp1225
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_07_orig.jpg'
p1226
sS'trials.thisIndex'
p1227
g46
(g587
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1228
sS'trials.thisRepN'
p1229
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1230
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1231
sg30
I1
sg59
g46
(g587
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1232
sS'trials.thisTrialN'
p1233
I64
sg32
I0
sg39
g40
sg43
g44
sg33
F4.524104118347168
sS'trials.thisN'
p1234
I64
sa(dp1235
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_00_orig.jpg'
p1236
sS'trials.thisIndex'
p1237
g46
(g587
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1238
sS'trials.thisRepN'
p1239
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1240
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1241
sg30
I0
sg59
g46
(g587
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1242
sS'trials.thisTrialN'
p1243
I65
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1388559341430664
sS'trials.thisN'
p1244
I65
sa(dp1245
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_06_orig.jpg'
p1246
sS'trials.thisIndex'
p1247
g46
(g587
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1248
sS'trials.thisRepN'
p1249
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1250
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1251
sg30
I1
sg59
g46
(g587
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1252
sS'trials.thisTrialN'
p1253
I66
sg32
I0
sg39
g40
sg43
g44
sg33
F1.958859920501709
sS'trials.thisN'
p1254
I66
sa(dp1255
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_05_orig.jpg'
p1256
sS'trials.thisIndex'
p1257
g46
(g587
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1258
sS'trials.thisRepN'
p1259
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1260
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1261
sg30
I0
sg59
g46
(g587
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1262
sS'trials.thisTrialN'
p1263
I67
sg32
I1
sg39
g40
sg43
g44
sg33
F3.2837340831756592
sS'trials.thisN'
p1264
I67
sa(dp1265
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_08_orig.jpg'
p1266
sS'trials.thisIndex'
p1267
g46
(g587
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1268
sS'trials.thisRepN'
p1269
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1270
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1271
sg30
I1
sg59
g46
(g587
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1272
sS'trials.thisTrialN'
p1273
I68
sg32
I0
sg39
g40
sg43
g44
sg33
F3.0982351303100586
sS'trials.thisN'
p1274
I68
sa(dp1275
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_02_orig.jpg'
p1276
sS'trials.thisIndex'
p1277
g46
(g587
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1278
sS'trials.thisRepN'
p1279
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1280
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1281
sg30
I0
sg59
g46
(g587
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1282
sS'trials.thisTrialN'
p1283
I69
sg32
I1
sg39
g40
sg43
g44
sg33
F5.8792619705200195
sS'trials.thisN'
p1284
I69
sa(dp1285
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_09_orig.jpg'
p1286
sS'trials.thisIndex'
p1287
g46
(g587
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1288
sS'trials.thisRepN'
p1289
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1290
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1291
sg30
I1
sg59
g46
(g587
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1292
sS'trials.thisTrialN'
p1293
I70
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6079649925231934
sS'trials.thisN'
p1294
I70
sa(dp1295
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_09_orig.jpg'
p1296
sS'trials.thisIndex'
p1297
g46
(g587
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1298
sS'trials.thisRepN'
p1299
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp1300
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1301
sg30
I1
sg59
g46
(g587
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1302
sS'trials.thisTrialN'
p1303
I71
sg32
I0
sg39
g40
sg43
g44
sg33
F1.8242089748382568
sS'trials.thisN'
p1304
I71
sa(dp1305
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_07_orig.jpg'
p1306
sS'trials.thisIndex'
p1307
g46
(g587
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1308
sS'trials.thisRepN'
p1309
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp1310
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x95 @'
tRp1311
sg30
I0
sg59
g46
(g587
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1312
sS'trials.thisTrialN'
p1313
I72
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7420170307159424
sS'trials.thisN'
p1314
I72
sa(dp1315
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_05_orig.jpg'
p1316
sS'trials.thisIndex'
p1317
g46
(g587
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1318
sS'trials.thisRepN'
p1319
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1320
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86 @'
tRp1321
sg30
I1
sg59
g46
(g587
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1322
sS'trials.thisTrialN'
p1323
I73
sg32
I0
sg39
g40
sg43
g44
sg33
F4.0711219310760498
sS'trials.thisN'
p1324
I73
sa(dp1325
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_01_orig.jpg'
p1326
sS'trials.thisIndex'
p1327
g46
(g587
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1328
sS'trials.thisRepN'
p1329
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1330
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1331
sg30
I0
sg59
g46
(g587
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1332
sS'trials.thisTrialN'
p1333
I74
sg32
I1
sg39
g40
sg43
g44
sg33
F3.132641077041626
sS'trials.thisN'
p1334
I74
sa(dp1335
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_04_orig.jpg'
p1336
sS'trials.thisIndex'
p1337
g46
(g587
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1338
sS'trials.thisRepN'
p1339
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1340
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1341
sg30
I0
sg59
g46
(g587
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1342
sS'trials.thisTrialN'
p1343
I75
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8071980476379395
sS'trials.thisN'
p1344
I75
sa(dp1345
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_01_orig.jpg'
p1346
sS'trials.thisIndex'
p1347
g46
(g587
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1348
sS'trials.thisRepN'
p1349
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1350
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1351
sg30
I0
sg59
g46
(g587
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1352
sS'trials.thisTrialN'
p1353
I76
sg32
I1
sg39
g40
sg43
g44
sg33
F3.0828800201416016
sS'trials.thisN'
p1354
I76
sa(dp1355
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_01_orig.jpg'
p1356
sS'trials.thisIndex'
p1357
g46
(g587
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1358
sS'trials.thisRepN'
p1359
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1360
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1361
sg30
I0
sg59
g46
(g587
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1362
sS'trials.thisTrialN'
p1363
I77
sg32
I1
sg39
g40
sg43
g44
sg33
F1.104827880859375
sS'trials.thisN'
p1364
I77
sa(dp1365
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_07_orig.jpg'
p1366
sS'trials.thisIndex'
p1367
g46
(g587
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1368
sS'trials.thisRepN'
p1369
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1370
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1371
sg30
I0
sg59
g46
(g587
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1372
sS'trials.thisTrialN'
p1373
I78
sg32
I1
sg39
g40
sg43
g44
sg33
F3.5157639980316162
sS'trials.thisN'
p1374
I78
sa(dp1375
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_06_orig.jpg'
p1376
sS'trials.thisIndex'
p1377
g46
(g587
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1378
sS'trials.thisRepN'
p1379
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1380
sg29
g46
(g48
S'\x00\x00\x00\x00\x00w @'
tRp1381
sg30
I0
sg59
g46
(g587
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1382
sS'trials.thisTrialN'
p1383
I79
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1203341484069824
sS'trials.thisN'
p1384
I79
sa(dp1385
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_00_orig.jpg'
p1386
sS'trials.thisIndex'
p1387
g46
(g587
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1388
sS'trials.thisRepN'
p1389
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp1390
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1391
sg30
I0
sg59
g46
(g587
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1392
sS'trials.thisTrialN'
p1393
I80
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0379660129547119
sS'trials.thisN'
p1394
I80
sa(dp1395
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_07_orig.jpg'
p1396
sS'trials.thisIndex'
p1397
g46
(g587
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1398
sS'trials.thisRepN'
p1399
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp1400
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h @'
tRp1401
sg30
I1
sg59
g46
(g587
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1402
sS'trials.thisTrialN'
p1403
I81
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5401859283447266
sS'trials.thisN'
p1404
I81
sa(dp1405
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_03_orig.jpg'
p1406
sS'trials.thisIndex'
p1407
g46
(g587
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1408
sS'trials.thisRepN'
p1409
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp1410
sg29
g46
(g48
S'\x00\x00\x00\x00\x00Y @'
tRp1411
sg30
I1
sg59
g46
(g587
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1412
sS'trials.thisTrialN'
p1413
I82
sg32
I0
sg39
g40
sg43
g44
sg33
F3.9537580013275146
sS'trials.thisN'
p1414
I82
sa(dp1415
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_02_orig.jpg'
p1416
sS'trials.thisIndex'
p1417
g46
(g587
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1418
sS'trials.thisRepN'
p1419
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp1420
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J @'
tRp1421
sg30
I0
sg59
g46
(g587
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1422
sS'trials.thisTrialN'
p1423
I83
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0373849868774414
sS'trials.thisN'
p1424
I83
sa(dp1425
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_07_orig.jpg'
p1426
sS'trials.thisIndex'
p1427
g46
(g587
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1428
sS'trials.thisRepN'
p1429
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1430
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp1431
sg30
I1
sg59
g46
(g587
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1432
sS'trials.thisTrialN'
p1433
I84
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5569961071014404
sS'trials.thisN'
p1434
I84
sa(dp1435
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_08_orig.jpg'
p1436
sS'trials.thisIndex'
p1437
g46
(g587
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1438
sS'trials.thisRepN'
p1439
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp1440
sg29
g46
(g48
S'\x00\x00\x00\x00\x00, @'
tRp1441
sg30
I1
sg59
g46
(g587
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1442
sS'trials.thisTrialN'
p1443
I85
sg32
I0
sg39
g40
sg43
g44
sg33
F4.5409820079803467
sS'trials.thisN'
p1444
I85
sa(dp1445
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_06_orig.jpg'
p1446
sS'trials.thisIndex'
p1447
g46
(g587
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1448
sS'trials.thisRepN'
p1449
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp1450
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x1d @'
tRp1451
sg30
I0
sg59
g46
(g587
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1452
sS'trials.thisTrialN'
p1453
I86
sg32
I1
sg39
g40
sg43
g44
sg33
F2.4457309246063232
sS'trials.thisN'
p1454
I86
sa(dp1455
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_02_orig.jpg'
p1456
sS'trials.thisIndex'
p1457
g46
(g587
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1458
sS'trials.thisRepN'
p1459
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp1460
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e @'
tRp1461
sg30
I0
sg59
g46
(g587
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1462
sS'trials.thisTrialN'
p1463
I87
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1382248401641846
sS'trials.thisN'
p1464
I87
sa(dp1465
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_09_orig.jpg'
p1466
sS'trials.thisIndex'
p1467
g46
(g587
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1468
sS'trials.thisRepN'
p1469
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp1470
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e @'
tRp1471
sg30
I1
sg59
g46
(g587
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1472
sS'trials.thisTrialN'
p1473
I88
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3733527660369873
sS'trials.thisN'
p1474
I88
sa(dp1475
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_01_orig.jpg'
p1476
sS'trials.thisIndex'
p1477
g46
(g587
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1478
sS'trials.thisRepN'
p1479
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1480
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1481
sg30
I0
sg59
g46
(g587
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1482
sS'trials.thisTrialN'
p1483
I89
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6232059001922607
sS'trials.thisN'
p1484
I89
sa(dp1485
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_03_orig.jpg'
p1486
sS'trials.thisIndex'
p1487
g46
(g587
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1488
sS'trials.thisRepN'
p1489
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1490
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1491
sg30
I0
sg59
g46
(g587
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1492
sS'trials.thisTrialN'
p1493
I90
sg32
I1
sg39
g40
sg43
g44
sg33
F1.9932279586791992
sS'trials.thisN'
p1494
I90
sa(dp1495
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_09_orig.jpg'
p1496
sS'trials.thisIndex'
p1497
g46
(g587
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1498
sS'trials.thisRepN'
p1499
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1500
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1501
sg30
I1
sg59
g46
(g587
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1502
sS'trials.thisTrialN'
p1503
I91
sg32
I0
sg39
g40
sg43
g44
sg33
F7.5402371883392334
sS'trials.thisN'
p1504
I91
sa(dp1505
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_01_orig.jpg'
p1506
sS'trials.thisIndex'
p1507
g46
(g587
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1508
sS'trials.thisRepN'
p1509
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1510
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1511
sg30
I0
sg59
g46
(g587
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1512
sS'trials.thisTrialN'
p1513
I92
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2721900939941406
sS'trials.thisN'
p1514
I92
sa(dp1515
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_04_orig.jpg'
p1516
sS'trials.thisIndex'
p1517
g46
(g587
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1518
sS'trials.thisRepN'
p1519
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1520
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp1521
sg30
I1
sg59
g46
(g587
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1522
sS'trials.thisTrialN'
p1523
I93
sg32
I0
sg39
g40
sg43
g44
sg33
F3.1820051670074463
sS'trials.thisN'
p1524
I93
sa(dp1525
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_06_orig.jpg'
p1526
sS'trials.thisIndex'
p1527
g46
(g587
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1528
sS'trials.thisRepN'
p1529
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1530
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1531
sg30
I0
sg59
g46
(g587
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1532
sS'trials.thisTrialN'
p1533
I94
sg32
I1
sg39
g40
sg43
g44
sg33
F2.4452180862426758
sS'trials.thisN'
p1534
I94
sa(dp1535
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_02_orig.jpg'
p1536
sS'trials.thisIndex'
p1537
g46
(g587
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1538
sS'trials.thisRepN'
p1539
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1540
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1541
sg30
I0
sg59
g46
(g587
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1542
sS'trials.thisTrialN'
p1543
I95
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2556350231170654
sS'trials.thisN'
p1544
I95
sa(dp1545
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_08_orig.jpg'
p1546
sS'trials.thisIndex'
p1547
g46
(g587
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1548
sS'trials.thisRepN'
p1549
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1550
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1551
sg30
I1
sg59
g46
(g587
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1552
sS'trials.thisTrialN'
p1553
I96
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2213149070739746
sS'trials.thisN'
p1554
I96
sa(dp1555
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_04_orig.jpg'
p1556
sS'trials.thisIndex'
p1557
g46
(g587
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1558
sS'trials.thisRepN'
p1559
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1560
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1561
sg30
I1
sg59
g46
(g587
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1562
sS'trials.thisTrialN'
p1563
I97
sg32
I0
sg39
g40
sg43
g44
sg33
F8.3955059051513672
sS'trials.thisN'
p1564
I97
sa(dp1565
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_09_orig.jpg'
p1566
sS'trials.thisIndex'
p1567
g46
(g587
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1568
sS'trials.thisRepN'
p1569
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1570
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1571
sg30
I0
sg59
g46
(g587
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1572
sS'trials.thisTrialN'
p1573
I98
sg32
I1
sg39
g40
sg43
g44
sg33
F4.7573480606079102
sS'trials.thisN'
p1574
I98
sa(dp1575
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_05_orig.jpg'
p1576
sS'trials.thisIndex'
p1577
g46
(g587
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1578
sS'trials.thisRepN'
p1579
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1580
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1581
sg30
I1
sg59
g46
(g587
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1582
sS'trials.thisTrialN'
p1583
I99
sg32
I0
sg39
g40
sg43
g44
sg33
F2.7469840049743652
sS'trials.thisN'
p1584
I99
sa(dp1585
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_04_orig.jpg'
p1586
sS'trials.thisIndex'
p1587
g46
(g587
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1588
sS'trials.thisRepN'
p1589
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1590
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1591
sg30
I0
sg59
g46
(g587
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1592
sS'trials.thisTrialN'
p1593
I100
sg32
I1
sg39
g40
sg43
g44
sg33
F0.83537888526916504
sS'trials.thisN'
p1594
I100
sa(dp1595
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_04_orig.jpg'
p1596
sS'trials.thisIndex'
p1597
g46
(g587
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1598
sS'trials.thisRepN'
p1599
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1600
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1601
sg30
I0
sg59
g46
(g587
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1602
sS'trials.thisTrialN'
p1603
I101
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5403881072998047
sS'trials.thisN'
p1604
I101
sa(dp1605
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_10_orig.jpg'
p1606
sS'trials.thisIndex'
p1607
g46
(g587
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1608
sS'trials.thisRepN'
p1609
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1610
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1611
sg30
I1
sg59
g46
(g587
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1612
sS'trials.thisTrialN'
p1613
I102
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0883400440216064
sS'trials.thisN'
p1614
I102
sa(dp1615
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_10_orig.jpg'
p1616
sS'trials.thisIndex'
p1617
g46
(g587
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1618
sS'trials.thisRepN'
p1619
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1620
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1621
sg30
I1
sg59
g46
(g587
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1622
sS'trials.thisTrialN'
p1623
I103
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7418928146362305
sS'trials.thisN'
p1624
I103
sa(dp1625
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_09_orig.jpg'
p1626
sS'trials.thisIndex'
p1627
g46
(g587
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1628
sS'trials.thisRepN'
p1629
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1630
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp1631
sg30
I1
sg59
g46
(g587
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1632
sS'trials.thisTrialN'
p1633
I104
sg32
I0
sg39
g40
sg43
g44
sg33
F1.03792405128479
sS'trials.thisN'
p1634
I104
sa(dp1635
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_03_orig.jpg'
p1636
sS'trials.thisIndex'
p1637
g46
(g587
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1638
sS'trials.thisRepN'
p1639
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1640
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp1641
sg30
I0
sg59
g46
(g587
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1642
sS'trials.thisTrialN'
p1643
I105
sg32
I1
sg39
g40
sg43
g44
sg33
F2.6285209655761719
sS'trials.thisN'
p1644
I105
sa(dp1645
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_01_orig.jpg'
p1646
sS'trials.thisIndex'
p1647
g46
(g587
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1648
sS'trials.thisRepN'
p1649
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1650
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp1651
sg30
I0
sg59
g46
(g587
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1652
sS'trials.thisTrialN'
p1653
I106
sg32
I1
sg39
g40
sg43
g44
sg33
F2.0095970630645752
sS'trials.thisN'
p1654
I106
sa(dp1655
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_09_orig.jpg'
p1656
sS'trials.thisIndex'
p1657
g46
(g587
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1658
sS'trials.thisRepN'
p1659
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1660
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp1661
sg30
I1
sg59
g46
(g587
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1662
sS'trials.thisTrialN'
p1663
I107
sg32
I0
sg39
g40
sg43
g44
sg33
F3.2333898544311523
sS'trials.thisN'
p1664
I107
sa(dp1665
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_05_orig.jpg'
p1666
sS'trials.thisIndex'
p1667
g46
(g587
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1668
sS'trials.thisRepN'
p1669
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1670
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd2\x1e@'
tRp1671
sg30
I1
sg59
g46
(g587
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1672
sS'trials.thisTrialN'
p1673
I108
sg32
I0
sg39
g40
sg43
g44
sg33
F3.0135791301727295
sS'trials.thisN'
p1674
I108
sa(dp1675
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_01_orig.jpg'
p1676
sS'trials.thisIndex'
p1677
g46
(g587
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1678
sS'trials.thisRepN'
p1679
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1680
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp1681
sg30
I0
sg59
g46
(g587
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1682
sS'trials.thisTrialN'
p1683
I109
sg32
I1
sg39
g40
sg43
g44
sg33
F4.3394341468811035
sS'trials.thisN'
p1684
I109
sa(dp1685
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_07_orig.jpg'
p1686
sS'trials.thisIndex'
p1687
g46
(g587
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1688
sS'trials.thisRepN'
p1689
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1690
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd2\x1e@'
tRp1691
sg30
I0
sg59
g46
(g587
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1692
sS'trials.thisTrialN'
p1693
I110
sg32
I1
sg39
g40
sg43
g44
sg33
F3.2663698196411133
sS'trials.thisN'
p1694
I110
sa(dp1695
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_03_orig.jpg'
p1696
sS'trials.thisIndex'
p1697
g46
(g587
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1698
sS'trials.thisRepN'
p1699
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1700
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd2\x1e@'
tRp1701
sg30
I0
sg59
g46
(g587
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1702
sS'trials.thisTrialN'
p1703
I111
sg32
I1
sg39
g40
sg43
g44
sg33
F1.239145040512085
sS'trials.thisN'
p1704
I111
sa(dp1705
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_00_orig.jpg'
p1706
sS'trials.thisIndex'
p1707
g46
(g587
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1708
sS'trials.thisRepN'
p1709
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp1710
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd2\x1e@'
tRp1711
sg30
I0
sg59
g46
(g587
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1712
sS'trials.thisTrialN'
p1713
I112
sg32
I1
sg39
g40
sg43
g44
sg33
F3.165956974029541
sS'trials.thisN'
p1714
I112
sa(dp1715
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_03_orig.jpg'
p1716
sS'trials.thisIndex'
p1717
g46
(g587
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1718
sS'trials.thisRepN'
p1719
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1720
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp1721
sg30
I0
sg59
g46
(g587
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1722
sS'trials.thisTrialN'
p1723
I113
sg32
I1
sg39
g40
sg43
g44
sg33
F4.0711970329284668
sS'trials.thisN'
p1724
I113
sa(dp1725
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_10_orig.jpg'
p1726
sS'trials.thisIndex'
p1727
g46
(g587
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1728
sS'trials.thisRepN'
p1729
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1730
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp1731
sg30
I1
sg59
g46
(g587
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1732
sS'trials.thisTrialN'
p1733
I114
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2558939456939697
sS'trials.thisN'
p1734
I114
sa(dp1735
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_10_orig.jpg'
p1736
sS'trials.thisIndex'
p1737
g46
(g587
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1738
sS'trials.thisRepN'
p1739
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1740
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1741
sg30
I1
sg59
g46
(g587
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1742
sS'trials.thisTrialN'
p1743
I115
sg32
I0
sg39
g40
sg43
g44
sg33
F1.9601860046386719
sS'trials.thisN'
p1744
I115
sa(dp1745
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_06_orig.jpg'
p1746
sS'trials.thisIndex'
p1747
g46
(g587
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1748
sS'trials.thisRepN'
p1749
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x004\x17@'
tRp1750
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1751
sg30
I1
sg59
g46
(g587
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1752
sS'trials.thisTrialN'
p1753
I116
sg32
I0
sg39
g40
sg43
g44
sg33
F3.0629310607910156
sS'trials.thisN'
p1754
I116
sa(dp1755
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_05_orig.jpg'
p1756
sS'trials.thisIndex'
p1757
g46
(g587
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1758
sS'trials.thisRepN'
p1759
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1760
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e\x1f@'
tRp1761
sg30
I0
sg59
g46
(g587
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1762
sS'trials.thisTrialN'
p1763
I117
sg32
I1
sg39
g40
sg43
g44
sg33
F4.9932239055633545
sS'trials.thisN'
p1764
I117
sa(dp1765
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_02_orig.jpg'
p1766
sS'trials.thisIndex'
p1767
g46
(g587
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1768
sS'trials.thisRepN'
p1769
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1770
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e\x1f@'
tRp1771
sg30
I0
sg59
g46
(g587
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1772
sS'trials.thisTrialN'
p1773
I118
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2888088226318359
sS'trials.thisN'
p1774
I118
sa(dp1775
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_01_orig.jpg'
p1776
sS'trials.thisIndex'
p1777
g46
(g587
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1778
sS'trials.thisRepN'
p1779
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1780
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e\x1f@'
tRp1781
sg30
I0
sg59
g46
(g587
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1782
sS'trials.thisTrialN'
p1783
I119
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1197090148925781
sS'trials.thisN'
p1784
I119
sa(dp1785
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_01_orig.jpg'
p1786
sS'trials.thisIndex'
p1787
g46
(g587
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1788
sS'trials.thisRepN'
p1789
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1790
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1791
sg30
I0
sg59
g46
(g587
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1792
sS'trials.thisTrialN'
p1793
I120
sg32
I1
sg39
g40
sg43
g44
sg33
F5.3111419677734375
sS'trials.thisN'
p1794
I120
sa(dp1795
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_02_orig.jpg'
p1796
sS'trials.thisIndex'
p1797
g46
(g587
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1798
sS'trials.thisRepN'
p1799
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1800
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1801
sg30
I0
sg59
g46
(g587
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1802
sS'trials.thisTrialN'
p1803
I121
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4896559715270996
sS'trials.thisN'
p1804
I121
sa(dp1805
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_02_orig.jpg'
p1806
sS'trials.thisIndex'
p1807
g46
(g587
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1808
sS'trials.thisRepN'
p1809
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\x16@'
tRp1810
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e\x1f@'
tRp1811
sg30
I0
sg59
g46
(g587
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1812
sS'trials.thisTrialN'
p1813
I122
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3439619541168213
sS'trials.thisN'
p1814
I122
sa(dp1815
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_04_orig.jpg'
p1816
sS'trials.thisIndex'
p1817
g46
(g587
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1818
sS'trials.thisRepN'
p1819
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1820
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1821
sg30
I0
sg59
g46
(g587
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1822
sS'trials.thisTrialN'
p1823
I123
sg32
I1
sg39
g40
sg43
g44
sg33
F2.52944016456604
sS'trials.thisN'
p1824
I123
sa(dp1825
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_10_orig.jpg'
p1826
sS'trials.thisIndex'
p1827
g46
(g587
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1828
sS'trials.thisRepN'
p1829
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1830
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1831
sg30
I0
sg59
g46
(g587
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1832
sS'trials.thisTrialN'
p1833
I124
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1538040637969971
sS'trials.thisN'
p1834
I124
sa(dp1835
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_02_orig.jpg'
p1836
sS'trials.thisIndex'
p1837
g46
(g587
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1838
sS'trials.thisRepN'
p1839
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1840
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1841
sg30
I0
sg59
g46
(g587
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1842
sS'trials.thisTrialN'
p1843
I125
sg32
I1
sg39
g40
sg43
g44
sg33
F2.7130379676818848
sS'trials.thisN'
p1844
I125
sa(dp1845
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_08_orig.jpg'
p1846
sS'trials.thisIndex'
p1847
g46
(g587
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1848
sS'trials.thisRepN'
p1849
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp1850
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp1851
sg30
I1
sg59
g46
(g587
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1852
sS'trials.thisTrialN'
p1853
I126
sg32
I0
sg39
g40
sg43
g44
sg33
F1.9580690860748291
sS'trials.thisN'
p1854
I126
sa(dp1855
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_10_orig.jpg'
p1856
sS'trials.thisIndex'
p1857
g46
(g587
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1858
sS'trials.thisRepN'
p1859
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1860
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1861
sg30
I1
sg59
g46
(g587
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1862
sS'trials.thisTrialN'
p1863
I127
sg32
I0
sg39
g40
sg43
g44
sg33
F1.9593820571899414
sS'trials.thisN'
p1864
I127
sa(dp1865
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_05_orig.jpg'
p1866
sS'trials.thisIndex'
p1867
g46
(g587
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1868
sS'trials.thisRepN'
p1869
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1870
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1871
sg30
I0
sg59
g46
(g587
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1872
sS'trials.thisTrialN'
p1873
I128
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8758480548858643
sS'trials.thisN'
p1874
I128
sa(dp1875
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_10_orig.jpg'
p1876
sS'trials.thisIndex'
p1877
g46
(g587
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1878
sS'trials.thisRepN'
p1879
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp1880
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1881
sg30
I1
sg59
g46
(g587
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1882
sS'trials.thisTrialN'
p1883
I129
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5903949737548828
sS'trials.thisN'
p1884
I129
sa(dp1885
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_09_orig.jpg'
p1886
sS'trials.thisIndex'
p1887
g46
(g587
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1888
sS'trials.thisRepN'
p1889
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1890
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp1891
sg30
I1
sg59
g46
(g587
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1892
sS'trials.thisTrialN'
p1893
I130
sg32
I0
sg39
g40
sg43
g44
sg33
F2.2781460285186768
sS'trials.thisN'
p1894
I130
sa(dp1895
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_08_orig.jpg'
p1896
sS'trials.thisIndex'
p1897
g46
(g587
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1898
sS'trials.thisRepN'
p1899
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1900
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1901
sg30
I0
sg59
g46
(g587
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1902
sS'trials.thisTrialN'
p1903
I131
sg32
I1
sg39
g40
sg43
g44
sg33
F8.2616829872131348
sS'trials.thisN'
p1904
I131
sa(dp1905
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_01_orig.jpg'
p1906
sS'trials.thisIndex'
p1907
g46
(g587
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1908
sS'trials.thisRepN'
p1909
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1910
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1911
sg30
I0
sg59
g46
(g587
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1912
sS'trials.thisTrialN'
p1913
I132
sg32
I1
sg39
g40
sg43
g44
sg33
F2.8475370407104492
sS'trials.thisN'
p1914
I132
sa(dp1915
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_10_orig.jpg'
p1916
sS'trials.thisIndex'
p1917
g46
(g587
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1918
sS'trials.thisRepN'
p1919
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1920
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1921
sg30
I1
sg59
g46
(g587
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1922
sS'trials.thisTrialN'
p1923
I133
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7416870594024658
sS'trials.thisN'
p1924
I133
sa(dp1925
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_07_orig.jpg'
p1926
sS'trials.thisIndex'
p1927
g46
(g587
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1928
sS'trials.thisRepN'
p1929
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00b\x16@'
tRp1930
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1931
sg30
I1
sg59
g46
(g587
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1932
sS'trials.thisTrialN'
p1933
I134
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0043730735778809
sS'trials.thisN'
p1934
I134
sa(dp1935
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_00_orig.jpg'
p1936
sS'trials.thisIndex'
p1937
g46
(g587
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1938
sS'trials.thisRepN'
p1939
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1940
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1941
sg30
I0
sg59
g46
(g587
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1942
sS'trials.thisTrialN'
p1943
I135
sg32
I1
sg39
g40
sg43
g44
sg33
F2.5464339256286621
sS'trials.thisN'
p1944
I135
sa(dp1945
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_05_orig.jpg'
p1946
sS'trials.thisIndex'
p1947
g46
(g587
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1948
sS'trials.thisRepN'
p1949
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1950
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp1951
sg30
I0
sg59
g46
(g587
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1952
sS'trials.thisTrialN'
p1953
I136
sg32
I1
sg39
g40
sg43
g44
sg33
F4.2556130886077881
sS'trials.thisN'
p1954
I136
sa(dp1955
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_03_orig.jpg'
p1956
sS'trials.thisIndex'
p1957
g46
(g587
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1958
sS'trials.thisRepN'
p1959
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1960
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp1961
sg30
I0
sg59
g46
(g587
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1962
sS'trials.thisTrialN'
p1963
I137
sg32
I1
sg39
g40
sg43
g44
sg33
F0.80216217041015625
sS'trials.thisN'
p1964
I137
sa(dp1965
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_02_orig.jpg'
p1966
sS'trials.thisIndex'
p1967
g46
(g587
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1968
sS'trials.thisRepN'
p1969
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1970
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1971
sg30
I0
sg59
g46
(g587
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1972
sS'trials.thisTrialN'
p1973
I138
sg32
I1
sg39
g40
sg43
g44
sg33
F2.7126519680023193
sS'trials.thisN'
p1974
I138
sa(dp1975
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_07_orig.jpg'
p1976
sS'trials.thisIndex'
p1977
g46
(g587
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1978
sS'trials.thisRepN'
p1979
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1980
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1981
sg30
I0
sg59
g46
(g587
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1982
sS'trials.thisTrialN'
p1983
I139
sg32
I1
sg39
g40
sg43
g44
sg33
F3.4853930473327637
sS'trials.thisN'
p1984
I139
sa(dp1985
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_00_orig.jpg'
p1986
sS'trials.thisIndex'
p1987
g46
(g587
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1988
sS'trials.thisRepN'
p1989
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp1990
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp1991
sg30
I0
sg59
g46
(g587
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1992
sS'trials.thisTrialN'
p1993
I140
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2226700782775879
sS'trials.thisN'
p1994
I140
sa(dp1995
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_09_orig.jpg'
p1996
sS'trials.thisIndex'
p1997
g46
(g587
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp1998
sS'trials.thisRepN'
p1999
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp2000
sg29
g46
(g48
S'\x00\x00\x00\x00\x00J\x1f@'
tRp2001
sg30
I1
sg59
g46
(g587
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2002
sS'trials.thisTrialN'
p2003
I141
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2041480541229248
sS'trials.thisN'
p2004
I141
sa(dp2005
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_03_orig.jpg'
p2006
sS'trials.thisIndex'
p2007
g46
(g587
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2008
sS'trials.thisRepN'
p2009
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp2010
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp2011
sg30
I0
sg59
g46
(g587
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2012
sS'trials.thisTrialN'
p2013
I142
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2220189571380615
sS'trials.thisN'
p2014
I142
sa(dp2015
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_04_orig.jpg'
p2016
sS'trials.thisIndex'
p2017
g46
(g587
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2018
sS'trials.thisRepN'
p2019
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp2020
sg29
g46
(g48
S'\x00\x00\x00\x00\x00,\x1f@'
tRp2021
sg30
I1
sg59
g46
(g587
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2022
sS'trials.thisTrialN'
p2023
I143
sg32
I0
sg39
g40
sg43
g44
sg33
F2.0436050891876221
sS'trials.thisN'
p2024
I143
sa(dp2025
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_05_orig.jpg'
p2026
sS'trials.thisIndex'
p2027
g46
(g587
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2028
sS'trials.thisRepN'
p2029
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xbc\x16@'
tRp2030
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x0e\x1f@'
tRp2031
sg30
I0
sg59
g46
(g587
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2032
sS'trials.thisTrialN'
p2033
I144
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8252239227294922
sS'trials.thisN'
p2034
I144
sa(dp2035
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_09_orig.jpg'
p2036
sS'trials.thisIndex'
p2037
g46
(g587
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2038
sS'trials.thisRepN'
p2039
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xda\x16@'
tRp2040
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2041
sg30
I1
sg59
g46
(g587
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2042
sS'trials.thisTrialN'
p2043
I145
sg32
I0
sg39
g40
sg43
g44
sg33
F3.3507049083709717
sS'trials.thisN'
p2044
I145
sa(dp2045
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_07_orig.jpg'
p2046
sS'trials.thisIndex'
p2047
g46
(g587
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2048
sS'trials.thisRepN'
p2049
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp2050
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2051
sg30
I1
sg59
g46
(g587
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2052
sS'trials.thisTrialN'
p2053
I146
sg32
I0
sg39
g40
sg43
g44
sg33
F3.5520060062408447
sS'trials.thisN'
p2054
I146
sa(dp2055
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_00_orig.jpg'
p2056
sS'trials.thisIndex'
p2057
g46
(g587
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2058
sS'trials.thisRepN'
p2059
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp2060
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2061
sg30
I0
sg59
g46
(g587
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2062
sS'trials.thisTrialN'
p2063
I147
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6917948722839355
sS'trials.thisN'
p2064
I147
sa(dp2065
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_02_orig.jpg'
p2066
sS'trials.thisIndex'
p2067
g46
(g587
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2068
sS'trials.thisRepN'
p2069
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp2070
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2071
sg30
I0
sg59
g46
(g587
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2072
sS'trials.thisTrialN'
p2073
I148
sg32
I1
sg39
g40
sg43
g44
sg33
F4.0198140144348145
sS'trials.thisN'
p2074
I148
sa(dp2075
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_10_orig.jpg'
p2076
sS'trials.thisIndex'
p2077
g46
(g587
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2078
sS'trials.thisRepN'
p2079
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x16\x17@'
tRp2080
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2081
sg30
I1
sg59
g46
(g587
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2082
sS'trials.thisTrialN'
p2083
I149
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3392138481140137
sS'trials.thisN'
p2084
I149
sa(dp2085
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_04_orig.jpg'
p2086
sS'trials.thisIndex'
p2087
g46
(g587
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2088
sS'trials.thisRepN'
p2089
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2090
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2091
sg30
I0
sg59
g46
(g587
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2092
sS'trials.thisTrialN'
p2093
I150
sg32
I1
sg39
g40
sg43
g44
sg33
F4.7750308513641357
sS'trials.thisN'
p2094
I150
sa(dp2095
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_00_orig.jpg'
p2096
sS'trials.thisIndex'
p2097
g46
(g587
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2098
sS'trials.thisRepN'
p2099
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2100
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2101
sg30
I0
sg59
g46
(g587
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2102
sS'trials.thisTrialN'
p2103
I151
sg32
I1
sg39
g40
sg43
g44
sg33
F0.7862238883972168
sS'trials.thisN'
p2104
I151
sa(dp2105
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_08_orig.jpg'
p2106
sS'trials.thisIndex'
p2107
g46
(g587
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2108
sS'trials.thisRepN'
p2109
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2110
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2111
sg30
I1
sg59
g46
(g587
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2112
sS'trials.thisTrialN'
p2113
I152
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6243860721588135
sS'trials.thisN'
p2114
I152
sa(dp2115
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_00_orig.jpg'
p2116
sS'trials.thisIndex'
p2117
g46
(g587
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2118
sS'trials.thisRepN'
p2119
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2120
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2121
sg30
I0
sg59
g46
(g587
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2122
sS'trials.thisTrialN'
p2123
I153
sg32
I1
sg39
g40
sg43
g44
sg33
F2.7456221580505371
sS'trials.thisN'
p2124
I153
sa(dp2125
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_05_orig.jpg'
p2126
sS'trials.thisIndex'
p2127
g46
(g587
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2128
sS'trials.thisRepN'
p2129
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2130
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2131
sg30
I0
sg59
g46
(g587
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2132
sS'trials.thisTrialN'
p2133
I154
sg32
I1
sg39
g40
sg43
g44
sg33
F3.5688300132751465
sS'trials.thisN'
p2134
I154
sa(dp2135
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_03_orig.jpg'
p2136
sS'trials.thisIndex'
p2137
g46
(g587
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2138
sS'trials.thisRepN'
p2139
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2140
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2141
sg30
I0
sg59
g46
(g587
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2142
sS'trials.thisTrialN'
p2143
I155
sg32
I1
sg39
g40
sg43
g44
sg33
F3.0654230117797852
sS'trials.thisN'
p2144
I155
sa(dp2145
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_09_orig.jpg'
p2146
sS'trials.thisIndex'
p2147
g46
(g587
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2148
sS'trials.thisRepN'
p2149
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2150
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2151
sg30
I1
sg59
g46
(g587
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2152
sS'trials.thisTrialN'
p2153
I156
sg32
I0
sg39
g40
sg43
g44
sg33
F2.395456075668335
sS'trials.thisN'
p2154
I156
sa(dp2155
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_03_orig.jpg'
p2156
sS'trials.thisIndex'
p2157
g46
(g587
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2158
sS'trials.thisRepN'
p2159
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00R\x17@'
tRp2160
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2161
sg30
I1
sg59
g46
(g587
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2162
sS'trials.thisTrialN'
p2163
I157
sg32
I0
sg39
g40
sg43
g44
sg33
F3.3509421348571777
sS'trials.thisN'
p2164
I157
sa(dp2165
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_08_orig.jpg'
p2166
sS'trials.thisIndex'
p2167
g46
(g587
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2168
sS'trials.thisRepN'
p2169
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2170
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2171
sg30
I1
sg59
g46
(g587
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2172
sS'trials.thisTrialN'
p2173
I158
sg32
I0
sg39
g40
sg43
g44
sg33
F4.641308069229126
sS'trials.thisN'
p2174
I158
sa(dp2175
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_08_orig.jpg'
p2176
sS'trials.thisIndex'
p2177
g46
(g587
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2178
sS'trials.thisRepN'
p2179
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2180
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2181
sg30
I1
sg59
g46
(g587
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2182
sS'trials.thisTrialN'
p2183
I159
sg32
I0
sg39
g40
sg43
g44
sg33
F1.1551508903503418
sS'trials.thisN'
p2184
I159
sa(dp2185
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_04_orig.jpg'
p2186
sS'trials.thisIndex'
p2187
g46
(g587
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2188
sS'trials.thisRepN'
p2189
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2190
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2191
sg30
I0
sg59
g46
(g587
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2192
sS'trials.thisTrialN'
p2193
I160
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8247718811035156
sS'trials.thisN'
p2194
I160
sa(dp2195
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM10_08_orig.jpg'
p2196
sS'trials.thisIndex'
p2197
g46
(g587
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2198
sS'trials.thisRepN'
p2199
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2200
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2201
sg30
I1
sg59
g46
(g587
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2202
sS'trials.thisTrialN'
p2203
I161
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4907851219177246
sS'trials.thisN'
p2204
I161
sa(dp2205
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_04_orig.jpg'
p2206
sS'trials.thisIndex'
p2207
g46
(g587
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2208
sS'trials.thisRepN'
p2209
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2210
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2211
sg30
I0
sg59
g46
(g587
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2212
sS'trials.thisTrialN'
p2213
I162
sg32
I1
sg39
g40
sg43
g44
sg33
F2.4109890460968018
sS'trials.thisN'
p2214
I162
sa(dp2215
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_06_orig.jpg'
p2216
sS'trials.thisIndex'
p2217
g46
(g587
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2218
sS'trials.thisRepN'
p2219
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2220
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2221
sg30
I1
sg59
g46
(g587
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2222
sS'trials.thisTrialN'
p2223
I163
sg32
I0
sg39
g40
sg43
g44
sg33
F4.5405368804931641
sS'trials.thisN'
p2224
I163
sa(dp2225
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_01_orig.jpg'
p2226
sS'trials.thisIndex'
p2227
g46
(g587
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2228
sS'trials.thisRepN'
p2229
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\x17@'
tRp2230
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2231
sg30
I0
sg59
g46
(g587
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2232
sS'trials.thisTrialN'
p2233
I164
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8764760494232178
sS'trials.thisN'
p2234
I164
sa(dp2235
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_02_orig.jpg'
p2236
sS'trials.thisIndex'
p2237
g46
(g587
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2238
sS'trials.thisRepN'
p2239
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp2240
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2241
sg30
I0
sg59
g46
(g587
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2242
sS'trials.thisTrialN'
p2243
I165
sg32
I1
sg39
g40
sg43
g44
sg33
F6.5839169025421143
sS'trials.thisN'
p2244
I165
sa(dp2245
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_00_orig.jpg'
p2246
sS'trials.thisIndex'
p2247
g46
(g587
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2248
sS'trials.thisRepN'
p2249
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp2250
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2251
sg30
I0
sg59
g46
(g587
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2252
sS'trials.thisTrialN'
p2253
I166
sg32
I1
sg39
g40
sg43
g44
sg33
F1.072066068649292
sS'trials.thisN'
p2254
I166
sa(dp2255
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_06_orig.jpg'
p2256
sS'trials.thisIndex'
p2257
g46
(g587
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2258
sS'trials.thisRepN'
p2259
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp2260
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2261
sg30
I0
sg59
g46
(g587
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2262
sS'trials.thisTrialN'
p2263
I167
sg32
I1
sg39
g40
sg43
g44
sg33
F7.5402669906616211
sS'trials.thisN'
p2264
I167
sa(dp2265
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_02_orig.jpg'
p2266
sS'trials.thisIndex'
p2267
g46
(g587
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2268
sS'trials.thisRepN'
p2269
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp2270
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2271
sg30
I0
sg59
g46
(g587
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2272
sS'trials.thisTrialN'
p2273
I168
sg32
I1
sg39
g40
sg43
g44
sg33
F4.9263432025909424
sS'trials.thisN'
p2274
I168
sa(dp2275
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_00_orig.jpg'
p2276
sS'trials.thisIndex'
p2277
g46
(g587
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2278
sS'trials.thisRepN'
p2279
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp2280
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2281
sg30
I0
sg59
g46
(g587
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2282
sS'trials.thisTrialN'
p2283
I169
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2032830715179443
sS'trials.thisN'
p2284
I169
sa(dp2285
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_05_orig.jpg'
p2286
sS'trials.thisIndex'
p2287
g46
(g587
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2288
sS'trials.thisRepN'
p2289
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp2290
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2291
sg30
I1
sg59
g46
(g587
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2292
sS'trials.thisTrialN'
p2293
I170
sg32
I0
sg39
g40
sg43
g44
sg33
F2.3105859756469727
sS'trials.thisN'
p2294
I170
sa(dp2295
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_07_orig.jpg'
p2296
sS'trials.thisIndex'
p2297
g46
(g587
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2298
sS'trials.thisRepN'
p2299
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp2300
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2301
sg30
I1
sg59
g46
(g587
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2302
sS'trials.thisTrialN'
p2303
I171
sg32
I0
sg39
g40
sg43
g44
sg33
F3.0654878616333008
sS'trials.thisN'
p2304
I171
sa(dp2305
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_02_orig.jpg'
p2306
sS'trials.thisIndex'
p2307
g46
(g587
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2308
sS'trials.thisRepN'
p2309
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xca\x17@'
tRp2310
sg29
g46
(g48
S'\x00\x00\x00\x00\x00x\x1e@'
tRp2311
sg30
I0
sg59
g46
(g587
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2312
sS'trials.thisTrialN'
p2313
I172
sg32
I1
sg39
g40
sg43
g44
sg33
F7.9089250564575195
sS'trials.thisN'
p2314
I172
sa(dp2315
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_04_orig.jpg'
p2316
sS'trials.thisIndex'
p2317
g46
(g587
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2318
sS'trials.thisRepN'
p2319
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xca\x17@'
tRp2320
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x1e\x1e@'
tRp2321
sg30
I0
sg59
g46
(g587
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2322
sS'trials.thisTrialN'
p2323
I173
sg32
I1
sg39
g40
sg43
g44
sg33
F14.445178031921387
sS'trials.thisN'
p2324
I173
sa(dp2325
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_04_orig.jpg'
p2326
sS'trials.thisIndex'
p2327
g46
(g587
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2328
sS'trials.thisRepN'
p2329
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xca\x17@'
tRp2330
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x1e\x1e@'
tRp2331
sg30
I0
sg59
g46
(g587
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2332
sS'trials.thisTrialN'
p2333
I174
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2033360004425049
sS'trials.thisN'
p2334
I174
sa(dp2335
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_06_orig.jpg'
p2336
sS'trials.thisIndex'
p2337
g46
(g587
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2338
sS'trials.thisRepN'
p2339
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp2340
sg29
g46
(g48
S'\x00\x00\x00\x00\x00<\x1e@'
tRp2341
sg30
I0
sg59
g46
(g587
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2342
sS'trials.thisTrialN'
p2343
I175
sg32
I1
sg39
g40
sg43
g44
sg33
F2.2278628349304199
sS'trials.thisN'
p2344
I175
sa(dp2345
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_00_orig.jpg'
p2346
sS'trials.thisIndex'
p2347
g46
(g587
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2348
sS'trials.thisRepN'
p2349
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp2350
sg29
g46
(g48
S'\x00\x00\x00\x00\x00<\x1e@'
tRp2351
sg30
I0
sg59
g46
(g587
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2352
sS'trials.thisTrialN'
p2353
I176
sg32
I1
sg39
g40
sg43
g44
sg33
F5.5274598598480225
sS'trials.thisN'
p2354
I176
sa(dp2355
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_02_orig.jpg'
p2356
sS'trials.thisIndex'
p2357
g46
(g587
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2358
sS'trials.thisRepN'
p2359
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2360
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\x03@'
tRp2361
sg30
I1
sg59
g46
(g587
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2362
sS'trials.thisTrialN'
p2363
I177
sg32
I0
sg39
g40
sg43
g44
sg33
F39.366948127746582
sS'trials.thisN'
p2364
I177
sa(dp2365
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_06_orig.jpg'
p2366
sS'trials.thisIndex'
p2367
g46
(g587
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2368
sS'trials.thisRepN'
p2369
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp2370
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x84\x02@'
tRp2371
sg30
I1
sg59
g46
(g587
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2372
sS'trials.thisTrialN'
p2373
I178
sg32
I0
sg39
g40
sg43
g44
sg33
F2.3111441135406494
sS'trials.thisN'
p2374
I178
sa(dp2375
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_10_orig.jpg'
p2376
sS'trials.thisIndex'
p2377
g46
(g587
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2378
sS'trials.thisRepN'
p2379
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8?'
tRp2380
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc?'
tRp2381
sg30
I1
sg59
g46
(g587
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2382
sS'trials.thisTrialN'
p2383
I179
sg32
I0
sg39
g40
sg43
g44
sg33
F9.1139068603515625
sS'trials.thisN'
p2384
I179
sa(dp2385
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_03_orig.jpg'
p2386
sS'trials.thisIndex'
p2387
g46
(g587
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2388
sS'trials.thisRepN'
p2389
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0?'
tRp2390
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xd4?'
tRp2391
sg30
I0
sg59
g46
(g587
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2392
sS'trials.thisTrialN'
p2393
I180
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7923991680145264
sS'trials.thisN'
p2394
I180
sa(dp2395
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM8_08_orig.jpg'
p2396
sS'trials.thisIndex'
p2397
g46
(g587
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2398
sS'trials.thisRepN'
p2399
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1?'
tRp2400
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2401
sg30
I0
sg59
g46
(g587
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2402
sS'trials.thisTrialN'
p2403
I181
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7914681434631348
sS'trials.thisN'
p2404
I181
sa(dp2405
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_09_orig.jpg'
p2406
sS'trials.thisIndex'
p2407
g46
(g587
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2408
sS'trials.thisRepN'
p2409
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1?'
tRp2410
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2411
sg30
I1
sg59
g46
(g587
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2412
sS'trials.thisTrialN'
p2413
I182
sg32
I0
sg39
g40
sg43
g44
sg33
F3.9700620174407959
sS'trials.thisN'
p2414
I182
sa(dp2415
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_08_orig.jpg'
p2416
sS'trials.thisIndex'
p2417
g46
(g587
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2418
sS'trials.thisRepN'
p2419
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2420
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2421
sg30
I1
sg59
g46
(g587
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2422
sS'trials.thisTrialN'
p2423
I183
sg32
I0
sg39
g40
sg43
g44
sg33
F4.1376349925994873
sS'trials.thisN'
p2424
I183
sa(dp2425
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_03_orig.jpg'
p2426
sS'trials.thisIndex'
p2427
g46
(g587
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2428
sS'trials.thisRepN'
p2429
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2430
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2431
sg30
I0
sg59
g46
(g587
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2432
sS'trials.thisTrialN'
p2433
I184
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2375071048736572
sS'trials.thisN'
p2434
I184
sa(dp2435
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_09_orig.jpg'
p2436
sS'trials.thisIndex'
p2437
g46
(g587
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2438
sS'trials.thisRepN'
p2439
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2440
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xce?'
tRp2441
sg30
I1
sg59
g46
(g587
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2442
sS'trials.thisTrialN'
p2443
I185
sg32
I0
sg39
g40
sg43
g44
sg33
F4.6904079914093018
sS'trials.thisN'
p2444
I185
sa(dp2445
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_00_orig.jpg'
p2446
sS'trials.thisIndex'
p2447
g46
(g587
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2448
sS'trials.thisRepN'
p2449
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2450
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xce?'
tRp2451
sg30
I0
sg59
g46
(g587
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2452
sS'trials.thisTrialN'
p2453
I186
sg32
I1
sg39
g40
sg43
g44
sg33
F3.1326799392700195
sS'trials.thisN'
p2454
I186
sa(dp2455
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF10_08_orig.jpg'
p2456
sS'trials.thisIndex'
p2457
g46
(g587
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2458
sS'trials.thisRepN'
p2459
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2460
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xce?'
tRp2461
sg30
I1
sg59
g46
(g587
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2462
sS'trials.thisTrialN'
p2463
I187
sg32
I0
sg39
g40
sg43
g44
sg33
F1.105194091796875
sS'trials.thisN'
p2464
I187
sa(dp2465
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM4_04_orig.jpg'
p2466
sS'trials.thisIndex'
p2467
g46
(g587
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2468
sS'trials.thisRepN'
p2469
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2470
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xca?'
tRp2471
sg30
I1
sg59
g46
(g587
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2472
sS'trials.thisTrialN'
p2473
I188
sg32
I0
sg39
g40
sg43
g44
sg33
F5.110605001449585
sS'trials.thisN'
p2474
I188
sa(dp2475
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_00_orig.jpg'
p2476
sS'trials.thisIndex'
p2477
g46
(g587
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2478
sS'trials.thisRepN'
p2479
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3?'
tRp2480
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xc6?'
tRp2481
sg30
I0
sg59
g46
(g587
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2482
sS'trials.thisTrialN'
p2483
I189
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4902710914611816
sS'trials.thisN'
p2484
I189
sa(dp2485
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF6_07_orig.jpg'
p2486
sS'trials.thisIndex'
p2487
g46
(g587
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2488
sS'trials.thisRepN'
p2489
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4?'
tRp2490
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xc2?'
tRp2491
sg30
I0
sg59
g46
(g587
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2492
sS'trials.thisTrialN'
p2493
I190
sg32
I1
sg39
g40
sg43
g44
sg33
F2.6616148948669434
sS'trials.thisN'
p2494
I190
sa(dp2495
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_06_orig.jpg'
p2496
sS'trials.thisIndex'
p2497
g46
(g587
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2498
sS'trials.thisRepN'
p2499
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4?'
tRp2500
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xc2?'
tRp2501
sg30
I0
sg59
g46
(g587
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2502
sS'trials.thisTrialN'
p2503
I191
sg32
I1
sg39
g40
sg43
g44
sg33
F3.099323034286499
sS'trials.thisN'
p2504
I191
sa(dp2505
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF7_02_orig.jpg'
p2506
sS'trials.thisIndex'
p2507
g46
(g587
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2508
sS'trials.thisRepN'
p2509
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4?'
tRp2510
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xc2?'
tRp2511
sg30
I0
sg59
g46
(g587
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2512
sS'trials.thisTrialN'
p2513
I192
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0545058250427246
sS'trials.thisN'
p2514
I192
sa(dp2515
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_08_orig.jpg'
p2516
sS'trials.thisIndex'
p2517
g46
(g587
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2518
sS'trials.thisRepN'
p2519
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4?'
tRp2520
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xc2?'
tRp2521
sg30
I1
sg59
g46
(g587
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2522
sS'trials.thisTrialN'
p2523
I193
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3228909969329834
sS'trials.thisN'
p2524
I193
sa(dp2525
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_08_orig.jpg'
p2526
sS'trials.thisIndex'
p2527
g46
(g587
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2528
sS'trials.thisRepN'
p2529
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp2530
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xbe?'
tRp2531
sg30
I1
sg59
g46
(g587
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2532
sS'trials.thisTrialN'
p2533
I194
sg32
I0
sg39
g40
sg43
g44
sg33
F2.4121630191802979
sS'trials.thisN'
p2534
I194
sa(dp2535
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_01_orig.jpg'
p2536
sS'trials.thisIndex'
p2537
g46
(g587
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2538
sS'trials.thisRepN'
p2539
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp2540
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xc6?'
tRp2541
sg30
I0
sg59
g46
(g587
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2542
sS'trials.thisTrialN'
p2543
I195
sg32
I1
sg39
g40
sg43
g44
sg33
F2.1771430969238281
sS'trials.thisN'
p2544
I195
sa(dp2545
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_01_orig.jpg'
p2546
sS'trials.thisIndex'
p2547
g46
(g587
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2548
sS'trials.thisRepN'
p2549
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp2550
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xc6?'
tRp2551
sg30
I0
sg59
g46
(g587
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2552
sS'trials.thisTrialN'
p2553
I196
sg32
I1
sg39
g40
sg43
g44
sg33
F11.22870397567749
sS'trials.thisN'
p2554
I196
sa(dp2555
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_10_orig.jpg'
p2556
sS'trials.thisIndex'
p2557
g46
(g587
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2558
sS'trials.thisRepN'
p2559
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2560
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2561
sg30
I1
sg59
g46
(g587
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2562
sS'trials.thisTrialN'
p2563
I197
sg32
I0
sg39
g40
sg43
g44
sg33
F6.918597936630249
sS'trials.thisN'
p2564
I197
sa(dp2565
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_00_orig.jpg'
p2566
sS'trials.thisIndex'
p2567
g46
(g587
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2568
sS'trials.thisRepN'
p2569
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2570
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2571
sg30
I0
sg59
g46
(g587
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2572
sS'trials.thisTrialN'
p2573
I198
sg32
I1
sg39
g40
sg43
g44
sg33
F5.9463491439819336
sS'trials.thisN'
p2574
I198
sa(dp2575
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF4_01_orig.jpg'
p2576
sS'trials.thisIndex'
p2577
g46
(g587
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2578
sS'trials.thisRepN'
p2579
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2580
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2581
sg30
I0
sg59
g46
(g587
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2582
sS'trials.thisTrialN'
p2583
I199
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0044751167297363
sS'trials.thisN'
p2584
I199
sa(dp2585
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM7_09_orig.jpg'
p2586
sS'trials.thisIndex'
p2587
g46
(g587
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2588
sS'trials.thisRepN'
p2589
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2590
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2591
sg30
I0
sg59
g46
(g587
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2592
sS'trials.thisTrialN'
p2593
I200
sg32
I1
sg39
g40
sg43
g44
sg33
F1.153325080871582
sS'trials.thisN'
p2594
I200
sa(dp2595
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_03_orig.jpg'
p2596
sS'trials.thisIndex'
p2597
g46
(g587
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2598
sS'trials.thisRepN'
p2599
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2600
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2601
sg30
I0
sg59
g46
(g587
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2602
sS'trials.thisTrialN'
p2603
I201
sg32
I1
sg39
g40
sg43
g44
sg33
F3.0139729976654053
sS'trials.thisN'
p2604
I201
sa(dp2605
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_09_orig.jpg'
p2606
sS'trials.thisIndex'
p2607
g46
(g587
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2608
sS'trials.thisRepN'
p2609
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2610
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2611
sg30
I1
sg59
g46
(g587
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2612
sS'trials.thisTrialN'
p2613
I202
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5240018367767334
sS'trials.thisN'
p2614
I202
sa(dp2615
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF8_00_orig.jpg'
p2616
sS'trials.thisIndex'
p2617
g46
(g587
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2618
sS'trials.thisRepN'
p2619
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xea?'
tRp2620
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xd4?'
tRp2621
sg30
I0
sg59
g46
(g587
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2622
sS'trials.thisTrialN'
p2623
I203
sg32
I1
sg39
g40
sg43
g44
sg33
F7.573944091796875
sS'trials.thisN'
p2624
I203
sa(dp2625
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_09_orig.jpg'
p2626
sS'trials.thisIndex'
p2627
g46
(g587
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2628
sS'trials.thisRepN'
p2629
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2630
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2631
sg30
I1
sg59
g46
(g587
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2632
sS'trials.thisTrialN'
p2633
I204
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6410820484161377
sS'trials.thisN'
p2634
I204
sa(dp2635
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM6_07_orig.jpg'
p2636
sS'trials.thisIndex'
p2637
g46
(g587
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2638
sS'trials.thisRepN'
p2639
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2640
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2641
sg30
I0
sg59
g46
(g587
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2642
sS'trials.thisTrialN'
p2643
I205
sg32
I1
sg39
g40
sg43
g44
sg33
F2.9655909538269043
sS'trials.thisN'
p2644
I205
sa(dp2645
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_07_orig.jpg'
p2646
sS'trials.thisIndex'
p2647
g46
(g587
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2648
sS'trials.thisRepN'
p2649
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp2650
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2651
sg30
I1
sg59
g46
(g587
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2652
sS'trials.thisTrialN'
p2653
I206
sg32
I0
sg39
g40
sg43
g44
sg33
F6.9852759838104248
sS'trials.thisN'
p2654
I206
sa(dp2655
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_06_orig.jpg'
p2656
sS'trials.thisIndex'
p2657
g46
(g587
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2658
sS'trials.thisRepN'
p2659
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp2660
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6?'
tRp2661
sg30
I1
sg59
g46
(g587
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2662
sS'trials.thisTrialN'
p2663
I207
sg32
I0
sg39
g40
sg43
g44
sg33
F2.6636929512023926
sS'trials.thisN'
p2664
I207
sa(dp2665
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_04_orig.jpg'
p2666
sS'trials.thisIndex'
p2667
g46
(g587
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2668
sS'trials.thisRepN'
p2669
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2670
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2671
sg30
I1
sg59
g46
(g587
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2672
sS'trials.thisTrialN'
p2673
I208
sg32
I0
sg39
g40
sg43
g44
sg33
F10.036303997039795
sS'trials.thisN'
p2674
I208
sa(dp2675
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_00_orig.jpg'
p2676
sS'trials.thisIndex'
p2677
g46
(g587
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2678
sS'trials.thisRepN'
p2679
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2680
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2681
sg30
I0
sg59
g46
(g587
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2682
sS'trials.thisTrialN'
p2683
I209
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5237419605255127
sS'trials.thisN'
p2684
I209
sa(dp2685
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM9_06_orig.jpg'
p2686
sS'trials.thisIndex'
p2687
g46
(g587
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2688
sS'trials.thisRepN'
p2689
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2690
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2691
sg30
I1
sg59
g46
(g587
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2692
sS'trials.thisTrialN'
p2693
I210
sg32
I0
sg39
g40
sg43
g44
sg33
F4.7565770149230957
sS'trials.thisN'
p2694
I210
sa(dp2695
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM2_02_orig.jpg'
p2696
sS'trials.thisIndex'
p2697
g46
(g587
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2698
sS'trials.thisRepN'
p2699
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2700
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2701
sg30
I0
sg59
g46
(g587
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2702
sS'trials.thisTrialN'
p2703
I211
sg32
I1
sg39
g40
sg43
g44
sg33
F3.2817568778991699
sS'trials.thisN'
p2704
I211
sa(dp2705
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM5_05_orig.jpg'
p2706
sS'trials.thisIndex'
p2707
g46
(g587
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2708
sS'trials.thisRepN'
p2709
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2710
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2711
sg30
I1
sg59
g46
(g587
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2712
sS'trials.thisTrialN'
p2713
I212
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4403238296508789
sS'trials.thisN'
p2714
I212
sa(dp2715
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF3_07_orig.jpg'
p2716
sS'trials.thisIndex'
p2717
g46
(g587
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2718
sS'trials.thisRepN'
p2719
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2720
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2721
sg30
I1
sg59
g46
(g587
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2722
sS'trials.thisTrialN'
p2723
I213
sg32
I0
sg39
g40
sg43
g44
sg33
F2.7805240154266357
sS'trials.thisN'
p2724
I213
sa(dp2725
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM1_05_orig.jpg'
p2726
sS'trials.thisIndex'
p2727
g46
(g587
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2728
sS'trials.thisRepN'
p2729
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2730
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2731
sg30
I0
sg59
g46
(g587
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2732
sS'trials.thisTrialN'
p2733
I214
sg32
I1
sg39
g40
sg43
g44
sg33
F4.5730910301208496
sS'trials.thisN'
p2734
I214
sa(dp2735
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF9_07_orig.jpg'
p2736
sS'trials.thisIndex'
p2737
g46
(g587
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2738
sS'trials.thisRepN'
p2739
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2740
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xd0?'
tRp2741
sg30
I1
sg59
g46
(g587
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2742
sS'trials.thisTrialN'
p2743
I215
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7740449905395508
sS'trials.thisN'
p2744
I215
sa(dp2745
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphM3_02_orig.jpg'
p2746
sS'trials.thisIndex'
p2747
g46
(g587
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2748
sS'trials.thisRepN'
p2749
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2750
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2751
sg30
I1
sg59
g46
(g587
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2752
sS'trials.thisTrialN'
p2753
I216
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5395450592041016
sS'trials.thisN'
p2754
I216
sa(dp2755
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF2_01_orig.jpg'
p2756
sS'trials.thisIndex'
p2757
g46
(g587
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2758
sS'trials.thisRepN'
p2759
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6?'
tRp2760
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp2761
sg30
I0
sg59
g46
(g587
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2762
sS'trials.thisTrialN'
p2763
I217
sg32
I1
sg39
g40
sg43
g44
sg33
F2.0266950130462646
sS'trials.thisN'
p2764
I217
sa(dp2765
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF1_03_orig.jpg'
p2766
sS'trials.thisIndex'
p2767
g46
(g587
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2768
sS'trials.thisRepN'
p2769
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2770
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xd4?'
tRp2771
sg30
I0
sg59
g46
(g587
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2772
sS'trials.thisTrialN'
p2773
I218
sg32
I1
sg39
g40
sg43
g44
sg33
F3.9877378940582275
sS'trials.thisN'
p2774
I218
sa(dp2775
g31
I0
sg42
g11
sg41
VG
sg584
S'./stim/MorphF5_03_orig.jpg'
p2776
sS'trials.thisIndex'
p2777
g46
(g587
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2778
sS'trials.thisRepN'
p2779
I0
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2780
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xd4?'
tRp2781
sg30
I0
sg59
g46
(g587
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2782
sS'trials.thisTrialN'
p2783
I219
sg32
I1
sg39
g40
sg43
g44
sg33
F5.7807669639587402
sS'trials.thisN'
p2784
I219
sa(dp2785
g42
g11
sg34
S'return'
p2786
sg41
VG
sg39
g40
sg43
g44
sg45
g49
sg35
F14.748285055160522
sa(dp2787
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2788
g46
(g587
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2789
sS'trials2.thisRepN'
p2790
I0
sS'trials2.thisTrialN'
p2791
I0
sS'img'
p2792
S'./stim/MorphM9_04_orig.jpg'
p2793
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp2794
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp2795
sg30
I0
sS'num'
p2796
g46
(g587
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2797
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3775489330291748
sS'trials2.thisN'
p2798
I0
sa(dp2799
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2800
g46
(g587
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2801
sS'trials2.thisRepN'
p2802
I0
sS'trials2.thisTrialN'
p2803
I1
sg2792
S'./stim/MorphF2_00_orig.jpg'
p2804
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3?'
tRp2805
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp2806
sg30
I0
sg2796
g46
(g587
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2807
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4228711128234863
sS'trials2.thisN'
p2808
I1
sa(dp2809
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2810
g46
(g587
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2811
sS'trials2.thisRepN'
p2812
I0
sS'trials2.thisTrialN'
p2813
I2
sg2792
S'./stim/MorphM3_00_orig.jpg'
p2814
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4?'
tRp2815
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp2816
sg30
I0
sg2796
g46
(g587
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2817
sg32
I1
sg39
g40
sg43
g44
sg33
F2.1269230842590332
sS'trials2.thisN'
p2818
I2
sa(dp2819
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2820
g46
(g587
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2821
sS'trials2.thisRepN'
p2822
I0
sS'trials2.thisTrialN'
p2823
I3
sg2792
S'./stim/MorphM6_08_orig.jpg'
p2824
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5?'
tRp2825
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp2826
sg30
I1
sg2796
g46
(g587
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2827
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2056639194488525
sS'trials2.thisN'
p2828
I3
sa(dp2829
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2830
g46
(g587
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2831
sS'trials2.thisRepN'
p2832
I0
sS'trials2.thisTrialN'
p2833
I4
sg2792
S'./stim/MorphF2_06_orig.jpg'
p2834
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7?'
tRp2835
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4\xbf'
tRp2836
sg30
I1
sg2796
g46
(g587
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2837
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2369480133056641
sS'trials2.thisN'
p2838
I4
sa(dp2839
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2840
g46
(g587
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2841
sS'trials2.thisRepN'
p2842
I0
sS'trials2.thisTrialN'
p2843
I5
sg2792
S'./stim/MorphM6_03_orig.jpg'
p2844
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2845
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp2846
sg30
I0
sg2796
g46
(g587
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2847
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8401970863342285
sS'trials2.thisN'
p2848
I5
sa(dp2849
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2850
g46
(g587
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2851
sS'trials2.thisRepN'
p2852
I0
sS'trials2.thisTrialN'
p2853
I6
sg2792
S'./stim/MorphF2_01_orig.jpg'
p2854
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xeb?'
tRp2855
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp2856
sg30
I0
sg2796
g46
(g587
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2857
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6059720516204834
sS'trials2.thisN'
p2858
I6
sa(dp2859
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2860
g46
(g587
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2861
sS'trials2.thisRepN'
p2862
I0
sS'trials2.thisTrialN'
p2863
I7
sg2792
S'./stim/MorphM4_06_orig.jpg'
p2864
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp2865
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp2866
sg30
I1
sg2796
g46
(g587
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2867
sg32
I0
sg39
g40
sg43
g44
sg33
F2.4792170524597168
sS'trials2.thisN'
p2868
I7
sa(dp2869
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2870
g46
(g587
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2871
sS'trials2.thisRepN'
p2872
I0
sS'trials2.thisTrialN'
p2873
I8
sg2792
S'./stim/MorphF5_00_orig.jpg'
p2874
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp2875
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp2876
sg30
I0
sg2796
g46
(g587
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2877
sg32
I1
sg39
g40
sg43
g44
sg33
F5.8308939933776855
sS'trials2.thisN'
p2878
I8
sa(dp2879
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2880
g46
(g587
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2881
sS'trials2.thisRepN'
p2882
I0
sS'trials2.thisTrialN'
p2883
I9
sg2792
S'./stim/MorphM8_00_orig.jpg'
p2884
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00`\xf8?'
tRp2885
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp2886
sg30
I0
sg2796
g46
(g587
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2887
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3389360904693604
sS'trials2.thisN'
p2888
I9
sa(dp2889
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2890
g46
(g587
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2891
sS'trials2.thisRepN'
p2892
I0
sS'trials2.thisTrialN'
p2893
I10
sg2792
S'./stim/MorphF2_09_orig.jpg'
p2894
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00`\xf8?'
tRp2895
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp2896
sg30
I1
sg2796
g46
(g587
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2897
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2236330509185791
sS'trials2.thisN'
p2898
I10
sa(dp2899
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2900
g46
(g587
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2901
sS'trials2.thisRepN'
p2902
I0
sS'trials2.thisTrialN'
p2903
I11
sg2792
S'./stim/MorphF5_01_orig.jpg'
p2904
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp2905
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp2906
sg30
I0
sg2796
g46
(g587
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2907
sg32
I1
sg39
g40
sg43
g44
sg33
F2.8636538982391357
sS'trials2.thisN'
p2908
I11
sa(dp2909
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2910
g46
(g587
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2911
sS'trials2.thisRepN'
p2912
I0
sS'trials2.thisTrialN'
p2913
I12
sg2792
S'./stim/MorphF1_07_orig.jpg'
p2914
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2915
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp2916
sg30
I1
sg2796
g46
(g587
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2917
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5224239826202393
sS'trials2.thisN'
p2918
I12
sa(dp2919
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2920
g46
(g587
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2921
sS'trials2.thisRepN'
p2922
I0
sS'trials2.thisTrialN'
p2923
I13
sg2792
S'./stim/MorphM8_02_orig.jpg'
p2924
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2925
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp2926
sg30
I0
sg2796
g46
(g587
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2927
sg32
I1
sg39
g40
sg43
g44
sg33
F1.89261794090271
sS'trials2.thisN'
p2928
I13
sa(dp2929
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2930
g46
(g587
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2931
sS'trials2.thisRepN'
p2932
I0
sS'trials2.thisTrialN'
p2933
I14
sg2792
S'./stim/MorphF6_08_orig.jpg'
p2934
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2935
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp2936
sg30
I1
sg2796
g46
(g587
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2937
sg32
I0
sg39
g40
sg43
g44
sg33
F1.1716089248657227
sS'trials2.thisN'
p2938
I14
sa(dp2939
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2940
g46
(g587
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2941
sS'trials2.thisRepN'
p2942
I0
sS'trials2.thisTrialN'
p2943
I15
sg2792
S'./stim/MorphF5_06_orig.jpg'
p2944
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2945
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp2946
sg30
I0
sg2796
g46
(g587
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2947
sg32
I1
sg39
g40
sg43
g44
sg33
F6.7523660659790039
sS'trials2.thisN'
p2948
I15
sa(dp2949
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2950
g46
(g587
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2951
sS'trials2.thisRepN'
p2952
I0
sS'trials2.thisTrialN'
p2953
I16
sg2792
S'./stim/MorphF4_08_orig.jpg'
p2954
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2955
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp2956
sg30
I1
sg2796
g46
(g587
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2957
sg32
I0
sg39
g40
sg43
g44
sg33
F4.5573101043701172
sS'trials2.thisN'
p2958
I16
sa(dp2959
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2960
g46
(g587
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2961
sS'trials2.thisRepN'
p2962
I0
sS'trials2.thisTrialN'
p2963
I17
sg2792
S'./stim/MorphM5_04_orig.jpg'
p2964
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2965
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp2966
sg30
I1
sg2796
g46
(g587
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2967
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4736230373382568
sS'trials2.thisN'
p2968
I17
sa(dp2969
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2970
g46
(g587
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2971
sS'trials2.thisRepN'
p2972
I0
sS'trials2.thisTrialN'
p2973
I18
sg2792
S'./stim/MorphM10_02_orig.jpg'
p2974
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp2975
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp2976
sg30
I0
sg2796
g46
(g587
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2977
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3212189674377441
sS'trials2.thisN'
p2978
I18
sa(dp2979
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2980
g46
(g587
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2981
sS'trials2.thisRepN'
p2982
I0
sS'trials2.thisTrialN'
p2983
I19
sg2792
S'./stim/MorphM5_00_orig.jpg'
p2984
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp2985
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp2986
sg30
I0
sg2796
g46
(g587
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2987
sg32
I1
sg39
g40
sg43
g44
sg33
F1.624143123626709
sS'trials2.thisN'
p2988
I19
sa(dp2989
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2990
g46
(g587
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2991
sS'trials2.thisRepN'
p2992
I0
sS'trials2.thisTrialN'
p2993
I20
sg2792
S'./stim/MorphF6_05_orig.jpg'
p2994
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp2995
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp2996
sg30
I0
sg2796
g46
(g587
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2997
sg32
I1
sg39
g40
sg43
g44
sg33
F2.998305082321167
sS'trials2.thisN'
p2998
I20
sa(dp2999
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3000
g46
(g587
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3001
sS'trials2.thisRepN'
p3002
I0
sS'trials2.thisTrialN'
p3003
I21
sg2792
S'./stim/MorphF9_09_orig.jpg'
p3004
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3005
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp3006
sg30
I1
sg2796
g46
(g587
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3007
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4735119342803955
sS'trials2.thisN'
p3008
I21
sa(dp3009
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3010
g46
(g587
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3011
sS'trials2.thisRepN'
p3012
I0
sS'trials2.thisTrialN'
p3013
I22
sg2792
S'./stim/MorphF4_02_orig.jpg'
p3014
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3015
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp3016
sg30
I0
sg2796
g46
(g587
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3017
sg32
I1
sg39
g40
sg43
g44
sg33
F2.9987599849700928
sS'trials2.thisN'
p3018
I22
sa(dp3019
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3020
g46
(g587
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3021
sS'trials2.thisRepN'
p3022
I0
sS'trials2.thisTrialN'
p3023
I23
sg2792
S'./stim/MorphF2_02_orig.jpg'
p3024
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3025
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp3026
sg30
I0
sg2796
g46
(g587
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3027
sg32
I1
sg39
g40
sg43
g44
sg33
F3.2646989822387695
sS'trials2.thisN'
p3028
I23
sa(dp3029
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3030
g46
(g587
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3031
sS'trials2.thisRepN'
p3032
I0
sS'trials2.thisTrialN'
p3033
I24
sg2792
S'./stim/MorphM2_02_orig.jpg'
p3034
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3035
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp3036
sg30
I0
sg2796
g46
(g587
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3037
sg32
I1
sg39
g40
sg43
g44
sg33
F5.2090458869934082
sS'trials2.thisN'
p3038
I24
sa(dp3039
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3040
g46
(g587
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3041
sS'trials2.thisRepN'
p3042
I0
sS'trials2.thisTrialN'
p3043
I25
sg2792
S'./stim/MorphF4_06_orig.jpg'
p3044
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3045
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3046
sg30
I1
sg2796
g46
(g587
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3047
sg32
I0
sg39
g40
sg43
g44
sg33
F1.8234131336212158
sS'trials2.thisN'
p3048
I25
sa(dp3049
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3050
g46
(g587
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3051
sS'trials2.thisRepN'
p3052
I0
sS'trials2.thisTrialN'
p3053
I26
sg2792
S'./stim/MorphF2_07_orig.jpg'
p3054
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3055
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3056
sg30
I1
sg2796
g46
(g587
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3057
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5062320232391357
sS'trials2.thisN'
p3058
I26
sa(dp3059
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3060
g46
(g587
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3061
sS'trials2.thisRepN'
p3062
I0
sS'trials2.thisTrialN'
p3063
I27
sg2792
S'./stim/MorphF6_10_orig.jpg'
p3064
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3065
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3066
sg30
I1
sg2796
g46
(g587
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3067
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0548088550567627
sS'trials2.thisN'
p3068
I27
sa(dp3069
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3070
g46
(g587
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3071
sS'trials2.thisRepN'
p3072
I0
sS'trials2.thisTrialN'
p3073
I28
sg2792
S'./stim/MorphM7_10_orig.jpg'
p3074
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3075
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3076
sg30
I1
sg2796
g46
(g587
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3077
sg32
I0
sg39
g40
sg43
g44
sg33
F2.0430221557617188
sS'trials2.thisN'
p3078
I28
sa(dp3079
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3080
g46
(g587
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3081
sS'trials2.thisRepN'
p3082
I0
sS'trials2.thisTrialN'
p3083
I29
sg2792
S'./stim/MorphF2_05_orig.jpg'
p3084
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3085
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp3086
sg30
I0
sg2796
g46
(g587
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3087
sg32
I1
sg39
g40
sg43
g44
sg33
F3.1815540790557861
sS'trials2.thisN'
p3088
I29
sa(dp3089
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3090
g46
(g587
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3091
sS'trials2.thisRepN'
p3092
I0
sS'trials2.thisTrialN'
p3093
I30
sg2792
S'./stim/MorphF7_04_orig.jpg'
p3094
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3095
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp3096
sg30
I0
sg2796
g46
(g587
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3097
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0209150314331055
sS'trials2.thisN'
p3098
I30
sa(dp3099
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3100
g46
(g587
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3101
sS'trials2.thisRepN'
p3102
I0
sS'trials2.thisTrialN'
p3103
I31
sg2792
S'./stim/MorphM2_08_orig.jpg'
p3104
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3105
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp3106
sg30
I1
sg2796
g46
(g587
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3107
sg32
I0
sg39
g40
sg43
g44
sg33
F2.3787779808044434
sS'trials2.thisN'
p3108
I31
sa(dp3109
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3110
g46
(g587
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3111
sS'trials2.thisRepN'
p3112
I0
sS'trials2.thisTrialN'
p3113
I32
sg2792
S'./stim/MorphF2_04_orig.jpg'
p3114
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3115
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp3116
sg30
I0
sg2796
g46
(g587
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3117
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5069551467895508
sS'trials2.thisN'
p3118
I32
sa(dp3119
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3120
g46
(g587
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3121
sS'trials2.thisRepN'
p3122
I0
sS'trials2.thisTrialN'
p3123
I33
sg2792
S'./stim/MorphM2_09_orig.jpg'
p3124
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3125
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp3126
sg30
I1
sg2796
g46
(g587
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3127
sg32
I0
sg39
g40
sg43
g44
sg33
F4.0876491069793701
sS'trials2.thisN'
p3128
I33
sa(dp3129
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3130
g46
(g587
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3131
sS'trials2.thisRepN'
p3132
I0
sS'trials2.thisTrialN'
p3133
I34
sg2792
S'./stim/MorphF1_05_orig.jpg'
p3134
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3135
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3136
sg30
I0
sg2796
g46
(g587
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3137
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2876529693603516
sS'trials2.thisN'
p3138
I34
sa(dp3139
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3140
g46
(g587
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3141
sS'trials2.thisRepN'
p3142
I0
sS'trials2.thisTrialN'
p3143
I35
sg2792
S'./stim/MorphF5_10_orig.jpg'
p3144
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3145
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3146
sg30
I1
sg2796
g46
(g587
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3147
sg32
I0
sg39
g40
sg43
g44
sg33
F2.2778711318969727
sS'trials2.thisN'
p3148
I35
sa(dp3149
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3150
g46
(g587
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3151
sS'trials2.thisRepN'
p3152
I0
sS'trials2.thisTrialN'
p3153
I36
sg2792
S'./stim/MorphM6_02_orig.jpg'
p3154
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3155
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3156
sg30
I0
sg2796
g46
(g587
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3157
sg32
I1
sg39
g40
sg43
g44
sg33
F3.6189918518066406
sS'trials2.thisN'
p3158
I36
sa(dp3159
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3160
g46
(g587
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3161
sS'trials2.thisRepN'
p3162
I0
sS'trials2.thisTrialN'
p3163
I37
sg2792
S'./stim/MorphF8_07_orig.jpg'
p3164
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3165
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3166
sg30
I0
sg2796
g46
(g587
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3167
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3059771060943604
sS'trials2.thisN'
p3168
I37
sa(dp3169
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3170
g46
(g587
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3171
sS'trials2.thisRepN'
p3172
I0
sS'trials2.thisTrialN'
p3173
I38
sg2792
S'./stim/MorphM8_03_orig.jpg'
p3174
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3175
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp3176
sg30
I0
sg2796
g46
(g587
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3177
sg32
I1
sg39
g40
sg43
g44
sg33
F3.6022241115570068
sS'trials2.thisN'
p3178
I38
sa(dp3179
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3180
g46
(g587
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3181
sS'trials2.thisRepN'
p3182
I0
sS'trials2.thisTrialN'
p3183
I39
sg2792
S'./stim/MorphM4_07_orig.jpg'
p3184
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3185
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp3186
sg30
I1
sg2796
g46
(g587
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3187
sg32
I0
sg39
g40
sg43
g44
sg33
F3.8031010627746582
sS'trials2.thisN'
p3188
I39
sa(dp3189
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3190
g46
(g587
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3191
sS'trials2.thisRepN'
p3192
I0
sS'trials2.thisTrialN'
p3193
I40
sg2792
S'./stim/MorphF10_03_orig.jpg'
p3194
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3195
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp3196
sg30
I0
sg2796
g46
(g587
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3197
sg32
I1
sg39
g40
sg43
g44
sg33
F3.2665250301361084
sS'trials2.thisN'
p3198
I40
sa(dp3199
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3200
g46
(g587
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3201
sS'trials2.thisRepN'
p3202
I0
sS'trials2.thisTrialN'
p3203
I41
sg2792
S'./stim/MorphF2_08_orig.jpg'
p3204
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xfb?'
tRp3205
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3206
sg30
I1
sg2796
g46
(g587
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3207
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7420711517333984
sS'trials2.thisN'
p3208
I41
sa(dp3209
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3210
g46
(g587
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3211
sS'trials2.thisRepN'
p3212
I0
sS'trials2.thisTrialN'
p3213
I42
sg2792
S'./stim/MorphM3_08_orig.jpg'
p3214
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xfb?'
tRp3215
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3216
sg30
I1
sg2796
g46
(g587
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3217
sg32
I0
sg39
g40
sg43
g44
sg33
F4.974301815032959
sS'trials2.thisN'
p3218
I42
sa(dp3219
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3220
g46
(g587
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3221
sS'trials2.thisRepN'
p3222
I0
sS'trials2.thisTrialN'
p3223
I43
sg2792
S'./stim/MorphF3_02_orig.jpg'
p3224
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xfb?'
tRp3225
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3226
sg30
I0
sg2796
g46
(g587
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3227
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5573520660400391
sS'trials2.thisN'
p3228
I43
sa(dp3229
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3230
g46
(g587
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3231
sS'trials2.thisRepN'
p3232
I0
sS'trials2.thisTrialN'
p3233
I44
sg2792
S'./stim/MorphM9_06_orig.jpg'
p3234
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xfb?'
tRp3235
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3236
sg30
I1
sg2796
g46
(g587
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3237
sg32
I0
sg39
g40
sg43
g44
sg33
F1.8257510662078857
sS'trials2.thisN'
p3238
I44
sa(dp3239
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3240
g46
(g587
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3241
sS'trials2.thisRepN'
p3242
I0
sS'trials2.thisTrialN'
p3243
I45
sg2792
S'./stim/MorphF5_03_orig.jpg'
p3244
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3245
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xd4\xbf'
tRp3246
sg30
I0
sg2796
g46
(g587
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3247
sg32
I1
sg39
g40
sg43
g44
sg33
F2.6282179355621338
sS'trials2.thisN'
p3248
I45
sa(dp3249
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3250
g46
(g587
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3251
sS'trials2.thisRepN'
p3252
I0
sS'trials2.thisTrialN'
p3253
I46
sg2792
S'./stim/MorphF1_02_orig.jpg'
p3254
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3255
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp3256
sg30
I0
sg2796
g46
(g587
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3257
sg32
I1
sg39
g40
sg43
g44
sg33
F10.439617872238159
sS'trials2.thisN'
p3258
I46
sa(dp3259
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3260
g46
(g587
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3261
sS'trials2.thisRepN'
p3262
I0
sS'trials2.thisTrialN'
p3263
I47
sg2792
S'./stim/MorphF8_06_orig.jpg'
p3264
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp3265
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xd6\xbf'
tRp3266
sg30
I1
sg2796
g46
(g587
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3267
sg32
I0
sg39
g40
sg43
g44
sg33
F3.8688349723815918
sS'trials2.thisN'
p3268
I47
sa(dp3269
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3270
g46
(g587
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3271
sS'trials2.thisRepN'
p3272
I0
sS'trials2.thisTrialN'
p3273
I48
sg2792
S'./stim/MorphM3_01_orig.jpg'
p3274
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xfb?'
tRp3275
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xd4\xbf'
tRp3276
sg30
I1
sg2796
g46
(g587
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3277
sg32
I0
sg39
g40
sg43
g44
sg33
F0.88533592224121094
sS'trials2.thisN'
p3278
I48
sa(dp3279
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3280
g46
(g587
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3281
sS'trials2.thisRepN'
p3282
I0
sS'trials2.thisTrialN'
p3283
I49
sg2792
S'./stim/MorphF10_00_orig.jpg'
p3284
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp3285
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp3286
sg30
I0
sg2796
g46
(g587
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3287
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6749320030212402
sS'trials2.thisN'
p3288
I49
sa(dp3289
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3290
g46
(g587
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3291
sS'trials2.thisRepN'
p3292
I0
sS'trials2.thisTrialN'
p3293
I50
sg2792
S'./stim/MorphM6_01_orig.jpg'
p3294
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3295
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp3296
sg30
I0
sg2796
g46
(g587
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3297
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1871519088745117
sS'trials2.thisN'
p3298
I50
sa(dp3299
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3300
g46
(g587
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3301
sS'trials2.thisRepN'
p3302
I0
sS'trials2.thisTrialN'
p3303
I51
sg2792
S'./stim/MorphM8_04_orig.jpg'
p3304
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp3305
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp3306
sg30
I0
sg2796
g46
(g587
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3307
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3115429878234863
sS'trials2.thisN'
p3308
I51
sa(dp3309
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3310
g46
(g587
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3311
sS'trials2.thisRepN'
p3312
I0
sS'trials2.thisTrialN'
p3313
I52
sg2792
S'./stim/MorphM9_07_orig.jpg'
p3314
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3315
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp3316
sg30
I1
sg2796
g46
(g587
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3317
sg32
I0
sg39
g40
sg43
g44
sg33
F5.4794421195983887
sS'trials2.thisN'
p3318
I52
sa(dp3319
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3320
g46
(g587
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3321
sS'trials2.thisRepN'
p3322
I0
sS'trials2.thisTrialN'
p3323
I53
sg2792
S'./stim/MorphF8_05_orig.jpg'
p3324
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3325
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3326
sg30
I0
sg2796
g46
(g587
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3327
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3051650524139404
sS'trials2.thisN'
p3328
I53
sa(dp3329
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3330
g46
(g587
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3331
sS'trials2.thisRepN'
p3332
I0
sS'trials2.thisTrialN'
p3333
I54
sg2792
S'./stim/MorphM4_08_orig.jpg'
p3334
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3335
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xde\xbf'
tRp3336
sg30
I1
sg2796
g46
(g587
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3337
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4232540130615234
sS'trials2.thisN'
p3338
I54
sa(dp3339
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3340
g46
(g587
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3341
sS'trials2.thisRepN'
p3342
I0
sS'trials2.thisTrialN'
p3343
I55
sg2792
S'./stim/MorphF7_09_orig.jpg'
p3344
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00`\xf8?'
tRp3345
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp3346
sg30
I1
sg2796
g46
(g587
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3347
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5398890972137451
sS'trials2.thisN'
p3348
I55
sa(dp3349
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3350
g46
(g587
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3351
sS'trials2.thisRepN'
p3352
I0
sS'trials2.thisTrialN'
p3353
I56
sg2792
S'./stim/MorphM3_02_orig.jpg'
p3354
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3355
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3356
sg30
I0
sg2796
g46
(g587
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3357
sg32
I1
sg39
g40
sg43
g44
sg33
F2.6641910076141357
sS'trials2.thisN'
p3358
I56
sa(dp3359
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3360
g46
(g587
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3361
sS'trials2.thisRepN'
p3362
I0
sS'trials2.thisTrialN'
p3363
I57
sg2792
S'./stim/MorphM4_10_orig.jpg'
p3364
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3365
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3366
sg30
I1
sg2796
g46
(g587
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3367
sg32
I0
sg39
g40
sg43
g44
sg33
F2.3280420303344727
sS'trials2.thisN'
p3368
I57
sa(dp3369
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3370
g46
(g587
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3371
sS'trials2.thisRepN'
p3372
I0
sS'trials2.thisTrialN'
p3373
I58
sg2792
S'./stim/MorphF6_07_orig.jpg'
p3374
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3375
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3376
sg30
I1
sg2796
g46
(g587
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3377
sg32
I0
sg39
g40
sg43
g44
sg33
F1.12099289894104
sS'trials2.thisN'
p3378
I58
sa(dp3379
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3380
g46
(g587
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3381
sS'trials2.thisRepN'
p3382
I0
sS'trials2.thisTrialN'
p3383
I59
sg2792
S'./stim/MorphM10_00_orig.jpg'
p3384
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3385
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3386
sg30
I0
sg2796
g46
(g587
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3387
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2890160083770752
sS'trials2.thisN'
p3388
I59
sa(dp3389
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3390
g46
(g587
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3391
sS'trials2.thisRepN'
p3392
I0
sS'trials2.thisTrialN'
p3393
I60
sg2792
S'./stim/MorphF6_06_orig.jpg'
p3394
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3395
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3396
sg30
I0
sg2796
g46
(g587
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3397
sg32
I1
sg39
g40
sg43
g44
sg33
F5.2423279285430908
sS'trials2.thisN'
p3398
I60
sa(dp3399
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3400
g46
(g587
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3401
sS'trials2.thisRepN'
p3402
I0
sS'trials2.thisTrialN'
p3403
I61
sg2792
S'./stim/MorphM9_03_orig.jpg'
p3404
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3405
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3406
sg30
I0
sg2796
g46
(g587
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3407
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3897309303283691
sS'trials2.thisN'
p3408
I61
sa(dp3409
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3410
g46
(g587
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3411
sS'trials2.thisRepN'
p3412
I0
sS'trials2.thisTrialN'
p3413
I62
sg2792
S'./stim/MorphM1_05_orig.jpg'
p3414
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp3415
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3416
sg30
I0
sg2796
g46
(g587
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3417
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2721869945526123
sS'trials2.thisN'
p3418
I62
sa(dp3419
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3420
g46
(g587
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3421
sS'trials2.thisRepN'
p3422
I0
sS'trials2.thisTrialN'
p3423
I63
sg2792
S'./stim/MorphF4_01_orig.jpg'
p3424
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00`\xf8?'
tRp3425
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3426
sg30
I0
sg2796
g46
(g587
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3427
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2392458915710449
sS'trials2.thisN'
p3428
I63
sa(dp3429
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3430
g46
(g587
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3431
sS'trials2.thisRepN'
p3432
I0
sS'trials2.thisTrialN'
p3433
I64
sg2792
S'./stim/MorphF2_10_orig.jpg'
p3434
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3435
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3436
sg30
I1
sg2796
g46
(g587
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3437
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5734689235687256
sS'trials2.thisN'
p3438
I64
sa(dp3439
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3440
g46
(g587
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3441
sS'trials2.thisRepN'
p3442
I0
sS'trials2.thisTrialN'
p3443
I65
sg2792
S'./stim/MorphF1_09_orig.jpg'
p3444
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3445
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3446
sg30
I1
sg2796
g46
(g587
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3447
sg32
I0
sg39
g40
sg43
g44
sg33
F4.3563690185546875
sS'trials2.thisN'
p3448
I65
sa(dp3449
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3450
g46
(g587
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3451
sS'trials2.thisRepN'
p3452
I0
sS'trials2.thisTrialN'
p3453
I66
sg2792
S'./stim/MorphF9_07_orig.jpg'
p3454
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp3455
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3456
sg30
I1
sg2796
g46
(g587
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3457
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4718708992004395
sS'trials2.thisN'
p3458
I66
sa(dp3459
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3460
g46
(g587
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3461
sS'trials2.thisRepN'
p3462
I0
sS'trials2.thisTrialN'
p3463
I67
sg2792
S'./stim/MorphM1_00_orig.jpg'
p3464
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp3465
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3466
sg30
I0
sg2796
g46
(g587
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3467
sg32
I1
sg39
g40
sg43
g44
sg33
F2.5958120822906494
sS'trials2.thisN'
p3468
I67
sa(dp3469
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3470
g46
(g587
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3471
sS'trials2.thisRepN'
p3472
I0
sS'trials2.thisTrialN'
p3473
I68
sg2792
S'./stim/MorphF3_01_orig.jpg'
p3474
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3475
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3476
sg30
I0
sg2796
g46
(g587
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3477
sg32
I1
sg39
g40
sg43
g44
sg33
F2.1781809329986572
sS'trials2.thisN'
p3478
I68
sa(dp3479
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3480
g46
(g587
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3481
sS'trials2.thisRepN'
p3482
I0
sS'trials2.thisTrialN'
p3483
I69
sg2792
S'./stim/MorphF1_03_orig.jpg'
p3484
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x08\xf6?'
tRp3485
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3486
sg30
I1
sg2796
g46
(g587
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3487
sg32
I0
sg39
g40
sg43
g44
sg33
F2.0251710414886475
sS'trials2.thisN'
p3488
I69
sa(dp3489
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3490
g46
(g587
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3491
sS'trials2.thisRepN'
p3492
I0
sS'trials2.thisTrialN'
p3493
I70
sg2792
S'./stim/MorphM2_03_orig.jpg'
p3494
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x08\xf6?'
tRp3495
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3496
sg30
I0
sg2796
g46
(g587
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3497
sg32
I1
sg39
g40
sg43
g44
sg33
F2.4615230560302734
sS'trials2.thisN'
p3498
I70
sa(dp3499
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3500
g46
(g587
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3501
sS'trials2.thisRepN'
p3502
I0
sS'trials2.thisTrialN'
p3503
I71
sg2792
S'./stim/MorphM10_09_orig.jpg'
p3504
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3505
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3506
sg30
I1
sg2796
g46
(g587
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3507
sg32
I0
sg39
g40
sg43
g44
sg33
F4.3551590442657471
sS'trials2.thisN'
p3508
I71
sa(dp3509
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3510
g46
(g587
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3511
sS'trials2.thisRepN'
p3512
I0
sS'trials2.thisTrialN'
p3513
I72
sg2792
S'./stim/MorphM9_08_orig.jpg'
p3514
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3515
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3516
sg30
I1
sg2796
g46
(g587
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3517
sg32
I0
sg39
g40
sg43
g44
sg33
F1.239534854888916
sS'trials2.thisN'
p3518
I72
sa(dp3519
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3520
g46
(g587
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3521
sS'trials2.thisRepN'
p3522
I0
sS'trials2.thisTrialN'
p3523
I73
sg2792
S'./stim/MorphM6_04_orig.jpg'
p3524
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3525
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3526
sg30
I0
sg2796
g46
(g587
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3527
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4732398986816406
sS'trials2.thisN'
p3528
I73
sa(dp3529
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3530
g46
(g587
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3531
sS'trials2.thisRepN'
p3532
I0
sS'trials2.thisTrialN'
p3533
I74
sg2792
S'./stim/MorphF5_04_orig.jpg'
p3534
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3535
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3536
sg30
I0
sg2796
g46
(g587
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3537
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3269140720367432
sS'trials2.thisN'
p3538
I74
sa(dp3539
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3540
g46
(g587
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3541
sS'trials2.thisRepN'
p3542
I0
sS'trials2.thisTrialN'
p3543
I75
sg2792
S'./stim/MorphM7_06_orig.jpg'
p3544
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3545
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3546
sg30
I0
sg2796
g46
(g587
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3547
sg32
I1
sg39
g40
sg43
g44
sg33
F5.6966891288757324
sS'trials2.thisN'
p3548
I75
sa(dp3549
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3550
g46
(g587
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3551
sS'trials2.thisRepN'
p3552
I0
sS'trials2.thisTrialN'
p3553
I76
sg2792
S'./stim/MorphM1_07_orig.jpg'
p3554
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3555
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3556
sg30
I0
sg2796
g46
(g587
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3557
sg32
I1
sg39
g40
sg43
g44
sg33
F4.0028960704803467
sS'trials2.thisN'
p3558
I76
sa(dp3559
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3560
g46
(g587
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3561
sS'trials2.thisRepN'
p3562
I0
sS'trials2.thisTrialN'
p3563
I77
sg2792
S'./stim/MorphM4_03_orig.jpg'
p3564
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3565
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3566
sg30
I1
sg2796
g46
(g587
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3567
sg32
I0
sg39
g40
sg43
g44
sg33
F2.7307791709899902
sS'trials2.thisN'
p3568
I77
sa(dp3569
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3570
g46
(g587
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3571
sS'trials2.thisRepN'
p3572
I0
sS'trials2.thisTrialN'
p3573
I78
sg2792
S'./stim/MorphF10_10_orig.jpg'
p3574
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3575
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3576
sg30
I1
sg2796
g46
(g587
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3577
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6755390167236328
sS'trials2.thisN'
p3578
I78
sa(dp3579
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3580
g46
(g587
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3581
sS'trials2.thisRepN'
p3582
I0
sS'trials2.thisTrialN'
p3583
I79
sg2792
S'./stim/MorphM10_07_orig.jpg'
p3584
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3585
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3586
sg30
I1
sg2796
g46
(g587
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3587
sg32
I0
sg39
g40
sg43
g44
sg33
F1.070580005645752
sS'trials2.thisN'
p3588
I79
sa(dp3589
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3590
g46
(g587
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3591
sS'trials2.thisRepN'
p3592
I0
sS'trials2.thisTrialN'
p3593
I80
sg2792
S'./stim/MorphM2_04_orig.jpg'
p3594
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6?'
tRp3595
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3596
sg30
I0
sg2796
g46
(g587
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3597
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2051479816436768
sS'trials2.thisN'
p3598
I80
sa(dp3599
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3600
g46
(g587
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3601
sS'trials2.thisRepN'
p3602
I0
sS'trials2.thisTrialN'
p3603
I81
sg2792
S'./stim/MorphF5_08_orig.jpg'
p3604
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x08\xf6?'
tRp3605
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3606
sg30
I1
sg2796
g46
(g587
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3607
sg32
I0
sg39
g40
sg43
g44
sg33
F2.0242478847503662
sS'trials2.thisN'
p3608
I81
sa(dp3609
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3610
g46
(g587
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3611
sS'trials2.thisRepN'
p3612
I0
sS'trials2.thisTrialN'
p3613
I82
sg2792
S'./stim/MorphM4_05_orig.jpg'
p3614
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp3615
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3616
sg30
I1
sg2796
g46
(g587
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3617
sg32
I0
sg39
g40
sg43
g44
sg33
F10.120219945907593
sS'trials2.thisN'
p3618
I82
sa(dp3619
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3620
g46
(g587
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3621
sS'trials2.thisRepN'
p3622
I0
sS'trials2.thisTrialN'
p3623
I83
sg2792
S'./stim/MorphF9_05_orig.jpg'
p3624
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp3625
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp3626
sg30
I0
sg2796
g46
(g587
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3627
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0867831707000732
sS'trials2.thisN'
p3628
I83
sa(dp3629
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3630
g46
(g587
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3631
sS'trials2.thisRepN'
p3632
I0
sS'trials2.thisTrialN'
p3633
I84
sg2792
S'./stim/MorphF10_02_orig.jpg'
p3634
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp3635
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp3636
sg30
I0
sg2796
g46
(g587
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3637
sg32
I1
sg39
g40
sg43
g44
sg33
F1.021442174911499
sS'trials2.thisN'
p3638
I84
sa(dp3639
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3640
g46
(g587
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3641
sS'trials2.thisRepN'
p3642
I0
sS'trials2.thisTrialN'
p3643
I85
sg2792
S'./stim/MorphF3_05_orig.jpg'
p3644
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp3645
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3646
sg30
I0
sg2796
g46
(g587
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3647
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3445999622344971
sS'trials2.thisN'
p3648
I85
sa(dp3649
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3650
g46
(g587
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3651
sS'trials2.thisRepN'
p3652
I0
sS'trials2.thisTrialN'
p3653
I86
sg2792
S'./stim/MorphF10_04_orig.jpg'
p3654
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3655
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3656
sg30
I0
sg2796
g46
(g587
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3657
sg32
I1
sg39
g40
sg43
g44
sg33
F2.1942801475524902
sS'trials2.thisN'
p3658
I86
sa(dp3659
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3660
g46
(g587
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3661
sS'trials2.thisRepN'
p3662
I0
sS'trials2.thisTrialN'
p3663
I87
sg2792
S'./stim/MorphM5_09_orig.jpg'
p3664
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3665
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3666
sg30
I1
sg2796
g46
(g587
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3667
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4397909641265869
sS'trials2.thisN'
p3668
I87
sa(dp3669
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3670
g46
(g587
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3671
sS'trials2.thisRepN'
p3672
I0
sS'trials2.thisTrialN'
p3673
I88
sg2792
S'./stim/MorphM7_05_orig.jpg'
p3674
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp3675
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3676
sg30
I0
sg2796
g46
(g587
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3677
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6918721199035645
sS'trials2.thisN'
p3678
I88
sa(dp3679
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3680
g46
(g587
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3681
sS'trials2.thisRepN'
p3682
I0
sS'trials2.thisTrialN'
p3683
I89
sg2792
S'./stim/MorphF8_09_orig.jpg'
p3684
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp3685
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3686
sg30
I1
sg2796
g46
(g587
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3687
sg32
I0
sg39
g40
sg43
g44
sg33
F4.5071699619293213
sS'trials2.thisN'
p3688
I89
sa(dp3689
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3690
g46
(g587
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3691
sS'trials2.thisRepN'
p3692
I0
sS'trials2.thisTrialN'
p3693
I90
sg2792
S'./stim/MorphM6_07_orig.jpg'
p3694
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp3695
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp3696
sg30
I1
sg2796
g46
(g587
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3697
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4391310214996338
sS'trials2.thisN'
p3698
I90
sa(dp3699
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3700
g46
(g587
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3701
sS'trials2.thisRepN'
p3702
I0
sS'trials2.thisTrialN'
p3703
I91
sg2792
S'./stim/MorphM1_02_orig.jpg'
p3704
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp3705
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp3706
sg30
I0
sg2796
g46
(g587
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3707
sg32
I1
sg39
g40
sg43
g44
sg33
F2.0267961025238037
sS'trials2.thisN'
p3708
I91
sa(dp3709
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3710
g46
(g587
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3711
sS'trials2.thisRepN'
p3712
I0
sS'trials2.thisTrialN'
p3713
I92
sg2792
S'./stim/MorphM6_09_orig.jpg'
p3714
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp3715
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3716
sg30
I1
sg2796
g46
(g587
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3717
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4901750087738037
sS'trials2.thisN'
p3718
I92
sa(dp3719
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3720
g46
(g587
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3721
sS'trials2.thisRepN'
p3722
I0
sS'trials2.thisTrialN'
p3723
I93
sg2792
S'./stim/MorphF9_04_orig.jpg'
p3724
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp3725
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp3726
sg30
I0
sg2796
g46
(g587
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3727
sg32
I1
sg39
g40
sg43
g44
sg33
F3.7684028148651123
sS'trials2.thisN'
p3728
I93
sa(dp3729
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3730
g46
(g587
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3731
sS'trials2.thisRepN'
p3732
I0
sS'trials2.thisTrialN'
p3733
I94
sg2792
S'./stim/MorphF3_09_orig.jpg'
p3734
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp3735
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3736
sg30
I1
sg2796
g46
(g587
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3737
sg32
I0
sg39
g40
sg43
g44
sg33
F1.557157039642334
sS'trials2.thisN'
p3738
I94
sa(dp3739
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3740
g46
(g587
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3741
sS'trials2.thisRepN'
p3742
I0
sS'trials2.thisTrialN'
p3743
I95
sg2792
S'./stim/MorphF7_03_orig.jpg'
p3744
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp3745
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp3746
sg30
I0
sg2796
g46
(g587
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3747
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4739141464233398
sS'trials2.thisN'
p3748
I95
sa(dp3749
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3750
g46
(g587
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3751
sS'trials2.thisRepN'
p3752
I0
sS'trials2.thisTrialN'
p3753
I96
sg2792
S'./stim/MorphM8_08_orig.jpg'
p3754
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp3755
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp3756
sg30
I1
sg2796
g46
(g587
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3757
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4737339019775391
sS'trials2.thisN'
p3758
I96
sa(dp3759
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3760
g46
(g587
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3761
sS'trials2.thisRepN'
p3762
I0
sS'trials2.thisTrialN'
p3763
I97
sg2792
S'./stim/MorphM9_00_orig.jpg'
p3764
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3765
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3766
sg30
I0
sg2796
g46
(g587
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3767
sg32
I1
sg39
g40
sg43
g44
sg33
F3.0648009777069092
sS'trials2.thisN'
p3768
I97
sa(dp3769
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3770
g46
(g587
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3771
sS'trials2.thisRepN'
p3772
I0
sS'trials2.thisTrialN'
p3773
I98
sg2792
S'./stim/MorphF4_05_orig.jpg'
p3774
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3775
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3776
sg30
I0
sg2796
g46
(g587
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3777
sg32
I1
sg39
g40
sg43
g44
sg33
F4.0543549060821533
sS'trials2.thisN'
p3778
I98
sa(dp3779
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3780
g46
(g587
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3781
sS'trials2.thisRepN'
p3782
I0
sS'trials2.thisTrialN'
p3783
I99
sg2792
S'./stim/MorphM6_00_orig.jpg'
p3784
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3785
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3786
sg30
I0
sg2796
g46
(g587
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3787
sg32
I1
sg39
g40
sg43
g44
sg33
F5.1105389595031738
sS'trials2.thisN'
p3788
I99
sa(dp3789
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3790
g46
(g587
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3791
sS'trials2.thisRepN'
p3792
I0
sS'trials2.thisTrialN'
p3793
I100
sg2792
S'./stim/MorphM9_05_orig.jpg'
p3794
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3795
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3796
sg30
I1
sg2796
g46
(g587
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3797
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5745170116424561
sS'trials2.thisN'
p3798
I100
sa(dp3799
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3800
g46
(g587
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3801
sS'trials2.thisRepN'
p3802
I0
sS'trials2.thisTrialN'
p3803
I101
sg2792
S'./stim/MorphM10_03_orig.jpg'
p3804
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3805
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3806
sg30
I0
sg2796
g46
(g587
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3807
sg32
I1
sg39
g40
sg43
g44
sg33
F3.1998698711395264
sS'trials2.thisN'
p3808
I101
sa(dp3809
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3810
g46
(g587
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3811
sS'trials2.thisRepN'
p3812
I0
sS'trials2.thisTrialN'
p3813
I102
sg2792
S'./stim/MorphM9_02_orig.jpg'
p3814
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3815
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3816
sg30
I0
sg2796
g46
(g587
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3817
sg32
I1
sg39
g40
sg43
g44
sg33
F2.5128757953643799
sS'trials2.thisN'
p3818
I102
sa(dp3819
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3820
g46
(g587
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3821
sS'trials2.thisRepN'
p3822
I0
sS'trials2.thisTrialN'
p3823
I103
sg2792
S'./stim/MorphF3_10_orig.jpg'
p3824
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3825
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3826
sg30
I1
sg2796
g46
(g587
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3827
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5734341144561768
sS'trials2.thisN'
p3828
I103
sa(dp3829
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3830
g46
(g587
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3831
sS'trials2.thisRepN'
p3832
I0
sS'trials2.thisTrialN'
p3833
I104
sg2792
S'./stim/MorphF7_06_orig.jpg'
p3834
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp3835
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp3836
sg30
I0
sg2796
g46
(g587
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3837
sg32
I1
sg39
g40
sg43
g44
sg33
F6.1482329368591309
sS'trials2.thisN'
p3838
I104
sa(dp3839
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3840
g46
(g587
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3841
sS'trials2.thisRepN'
p3842
I0
sS'trials2.thisTrialN'
p3843
I105
sg2792
S'./stim/MorphM10_08_orig.jpg'
p3844
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3845
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp3846
sg30
I1
sg2796
g46
(g587
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3847
sg32
I0
sg39
g40
sg43
g44
sg33
F3.686549186706543
sS'trials2.thisN'
p3848
I105
sa(dp3849
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3850
g46
(g587
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3851
sS'trials2.thisRepN'
p3852
I0
sS'trials2.thisTrialN'
p3853
I106
sg2792
S'./stim/MorphM5_02_orig.jpg'
p3854
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3855
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp3856
sg30
I1
sg2796
g46
(g587
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3857
sg32
I0
sg39
g40
sg43
g44
sg33
F1.473289966583252
sS'trials2.thisN'
p3858
I106
sa(dp3859
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3860
g46
(g587
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3861
sS'trials2.thisRepN'
p3862
I0
sS'trials2.thisTrialN'
p3863
I107
sg2792
S'./stim/MorphF8_01_orig.jpg'
p3864
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3865
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp3866
sg30
I0
sg2796
g46
(g587
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3867
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7250089645385742
sS'trials2.thisN'
p3868
I107
sa(dp3869
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3870
g46
(g587
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3871
sS'trials2.thisRepN'
p3872
I0
sS'trials2.thisTrialN'
p3873
I108
sg2792
S'./stim/MorphM10_01_orig.jpg'
p3874
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3875
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp3876
sg30
I0
sg2796
g46
(g587
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3877
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3444569110870361
sS'trials2.thisN'
p3878
I108
sa(dp3879
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3880
g46
(g587
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3881
sS'trials2.thisRepN'
p3882
I0
sS'trials2.thisTrialN'
p3883
I109
sg2792
S'./stim/MorphF1_00_orig.jpg'
p3884
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3885
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp3886
sg30
I0
sg2796
g46
(g587
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3887
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6922941207885742
sS'trials2.thisN'
p3888
I109
sa(dp3889
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3890
g46
(g587
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3891
sS'trials2.thisRepN'
p3892
I0
sS'trials2.thisTrialN'
p3893
I110
sg2792
S'./stim/MorphF4_00_orig.jpg'
p3894
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3895
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp3896
sg30
I0
sg2796
g46
(g587
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3897
sg32
I1
sg39
g40
sg43
g44
sg33
F3.2170860767364502
sS'trials2.thisN'
p3898
I110
sa(dp3899
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3900
g46
(g587
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3901
sS'trials2.thisRepN'
p3902
I0
sS'trials2.thisTrialN'
p3903
I111
sg2792
S'./stim/MorphF9_06_orig.jpg'
p3904
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3905
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp3906
sg30
I1
sg2796
g46
(g587
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3907
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2381300926208496
sS'trials2.thisN'
p3908
I111
sa(dp3909
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3910
g46
(g587
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3911
sS'trials2.thisRepN'
p3912
I0
sS'trials2.thisTrialN'
p3913
I112
sg2792
S'./stim/MorphM2_07_orig.jpg'
p3914
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp3915
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp3916
sg30
I1
sg2796
g46
(g587
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3917
sg32
I0
sg39
g40
sg43
g44
sg33
F4.3717989921569824
sS'trials2.thisN'
p3918
I112
sa(dp3919
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3920
g46
(g587
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3921
sS'trials2.thisRepN'
p3922
I0
sS'trials2.thisTrialN'
p3923
I113
sg2792
S'./stim/MorphF1_10_orig.jpg'
p3924
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp3925
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp3926
sg30
I1
sg2796
g46
(g587
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3927
sg32
I0
sg39
g40
sg43
g44
sg33
F2.8982188701629639
sS'trials2.thisN'
p3928
I113
sa(dp3929
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3930
g46
(g587
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3931
sS'trials2.thisRepN'
p3932
I0
sS'trials2.thisTrialN'
p3933
I114
sg2792
S'./stim/MorphM6_05_orig.jpg'
p3934
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp3935
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp3936
sg30
I1
sg2796
g46
(g587
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3937
sg32
I0
sg39
g40
sg43
g44
sg33
F2.3618559837341309
sS'trials2.thisN'
p3938
I114
sa(dp3939
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3940
g46
(g587
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3941
sS'trials2.thisRepN'
p3942
I0
sS'trials2.thisTrialN'
p3943
I115
sg2792
S'./stim/MorphF1_04_orig.jpg'
p3944
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp3945
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp3946
sg30
I0
sg2796
g46
(g587
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3947
sg32
I1
sg39
g40
sg43
g44
sg33
F4.188715934753418
sS'trials2.thisN'
p3948
I115
sa(dp3949
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3950
g46
(g587
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3951
sS'trials2.thisRepN'
p3952
I0
sS'trials2.thisTrialN'
p3953
I116
sg2792
S'./stim/MorphF5_02_orig.jpg'
p3954
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp3955
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp3956
sg30
I0
sg2796
g46
(g587
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3957
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6913721561431885
sS'trials2.thisN'
p3958
I116
sa(dp3959
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3960
g46
(g587
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3961
sS'trials2.thisRepN'
p3962
I0
sS'trials2.thisTrialN'
p3963
I117
sg2792
S'./stim/MorphM8_09_orig.jpg'
p3964
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3965
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp3966
sg30
I1
sg2796
g46
(g587
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3967
sg32
I0
sg39
g40
sg43
g44
sg33
F2.8133940696716309
sS'trials2.thisN'
p3968
I117
sa(dp3969
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3970
g46
(g587
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3971
sS'trials2.thisRepN'
p3972
I0
sS'trials2.thisTrialN'
p3973
I118
sg2792
S'./stim/MorphF3_07_orig.jpg'
p3974
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp3975
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp3976
sg30
I1
sg2796
g46
(g587
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3977
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0031750202178955
sS'trials2.thisN'
p3978
I118
sa(dp3979
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3980
g46
(g587
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3981
sS'trials2.thisRepN'
p3982
I0
sS'trials2.thisTrialN'
p3983
I119
sg2792
S'./stim/MorphM5_01_orig.jpg'
p3984
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp3985
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp3986
sg30
I0
sg2796
g46
(g587
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3987
sg32
I1
sg39
g40
sg43
g44
sg33
F2.3111917972564697
sS'trials2.thisN'
p3988
I119
sa(dp3989
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3990
g46
(g587
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3991
sS'trials2.thisRepN'
p3992
I0
sS'trials2.thisTrialN'
p3993
I120
sg2792
S'./stim/MorphF9_02_orig.jpg'
p3994
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp3995
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp3996
sg30
I0
sg2796
g46
(g587
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3997
sg32
I1
sg39
g40
sg43
g44
sg33
F4.6577820777893066
sS'trials2.thisN'
p3998
I120
sa(dp3999
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4000
g46
(g587
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4001
sS'trials2.thisRepN'
p4002
I0
sS'trials2.thisTrialN'
p4003
I121
sg2792
S'./stim/MorphM1_01_orig.jpg'
p4004
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4005
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4006
sg30
I0
sg2796
g46
(g587
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4007
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3735339641571045
sS'trials2.thisN'
p4008
I121
sa(dp4009
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4010
g46
(g587
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4011
sS'trials2.thisRepN'
p4012
I0
sS'trials2.thisTrialN'
p4013
I122
sg2792
S'./stim/MorphF5_09_orig.jpg'
p4014
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4015
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp4016
sg30
I1
sg2796
g46
(g587
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4017
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2215650081634521
sS'trials2.thisN'
p4018
I122
sa(dp4019
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4020
g46
(g587
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4021
sS'trials2.thisRepN'
p4022
I0
sS'trials2.thisTrialN'
p4023
I123
sg2792
S'./stim/MorphF3_03_orig.jpg'
p4024
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp4025
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4026
sg30
I0
sg2796
g46
(g587
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4027
sg32
I1
sg39
g40
sg43
g44
sg33
F2.8982939720153809
sS'trials2.thisN'
p4028
I123
sa(dp4029
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4030
g46
(g587
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4031
sS'trials2.thisRepN'
p4032
I0
sS'trials2.thisTrialN'
p4033
I124
sg2792
S'./stim/MorphF4_04_orig.jpg'
p4034
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xf5?'
tRp4035
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp4036
sg30
I1
sg2796
g46
(g587
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4037
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3222370147705078
sS'trials2.thisN'
p4038
I124
sa(dp4039
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4040
g46
(g587
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4041
sS'trials2.thisRepN'
p4042
I0
sS'trials2.thisTrialN'
p4043
I125
sg2792
S'./stim/MorphF7_05_orig.jpg'
p4044
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp4045
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4046
sg30
I0
sg2796
g46
(g587
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4047
sg32
I1
sg39
g40
sg43
g44
sg33
F1.858738899230957
sS'trials2.thisN'
p4048
I125
sa(dp4049
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4050
g46
(g587
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4051
sS'trials2.thisRepN'
p4052
I0
sS'trials2.thisTrialN'
p4053
I126
sg2792
S'./stim/MorphM1_06_orig.jpg'
p4054
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp4055
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4056
sg30
I0
sg2796
g46
(g587
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4057
sg32
I1
sg39
g40
sg43
g44
sg33
F11.026793003082275
sS'trials2.thisN'
p4058
I126
sa(dp4059
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4060
g46
(g587
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4061
sS'trials2.thisRepN'
p4062
I0
sS'trials2.thisTrialN'
p4063
I127
sg2792
S'./stim/MorphM2_06_orig.jpg'
p4064
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4065
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp4066
sg30
I1
sg2796
g46
(g587
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4067
sg32
I0
sg39
g40
sg43
g44
sg33
F1.2055850028991699
sS'trials2.thisN'
p4068
I127
sa(dp4069
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4070
g46
(g587
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4071
sS'trials2.thisRepN'
p4072
I0
sS'trials2.thisTrialN'
p4073
I128
sg2792
S'./stim/MorphM4_01_orig.jpg'
p4074
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4075
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4076
sg30
I0
sg2796
g46
(g587
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4077
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7420289516448975
sS'trials2.thisN'
p4078
I128
sa(dp4079
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4080
g46
(g587
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4081
sS'trials2.thisRepN'
p4082
I0
sS'trials2.thisTrialN'
p4083
I129
sg2792
S'./stim/MorphM1_03_orig.jpg'
p4084
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4085
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4086
sg30
I0
sg2796
g46
(g587
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4087
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6223409175872803
sS'trials2.thisN'
p4088
I129
sa(dp4089
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4090
g46
(g587
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4091
sS'trials2.thisRepN'
p4092
I0
sS'trials2.thisTrialN'
p4093
I130
sg2792
S'./stim/MorphF7_00_orig.jpg'
p4094
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4095
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4096
sg30
I0
sg2796
g46
(g587
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4097
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1219170093536377
sS'trials2.thisN'
p4098
I130
sa(dp4099
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4100
g46
(g587
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4101
sS'trials2.thisRepN'
p4102
I0
sS'trials2.thisTrialN'
p4103
I131
sg2792
S'./stim/MorphF4_07_orig.jpg'
p4104
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4105
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4106
sg30
I1
sg2796
g46
(g587
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4107
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5070528984069824
sS'trials2.thisN'
p4108
I131
sa(dp4109
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4110
g46
(g587
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4111
sS'trials2.thisRepN'
p4112
I0
sS'trials2.thisTrialN'
p4113
I132
sg2792
S'./stim/MorphM5_06_orig.jpg'
p4114
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4115
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4116
sg30
I1
sg2796
g46
(g587
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4117
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6246199607849121
sS'trials2.thisN'
p4118
I132
sa(dp4119
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4120
g46
(g587
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4121
sS'trials2.thisRepN'
p4122
I0
sS'trials2.thisTrialN'
p4123
I133
sg2792
S'./stim/MorphF3_06_orig.jpg'
p4124
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4125
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4126
sg30
I0
sg2796
g46
(g587
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4127
sg32
I1
sg39
g40
sg43
g44
sg33
F4.5400741100311279
sS'trials2.thisN'
p4128
I133
sa(dp4129
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4130
g46
(g587
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4131
sS'trials2.thisRepN'
p4132
I0
sS'trials2.thisTrialN'
p4133
I134
sg2792
S'./stim/MorphF8_08_orig.jpg'
p4134
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp4135
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4136
sg30
I1
sg2796
g46
(g587
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4137
sg32
I0
sg39
g40
sg43
g44
sg33
F3.7173058986663818
sS'trials2.thisN'
p4138
I134
sa(dp4139
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4140
g46
(g587
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4141
sS'trials2.thisRepN'
p4142
I0
sS'trials2.thisTrialN'
p4143
I135
sg2792
S'./stim/MorphM2_00_orig.jpg'
p4144
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4145
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4146
sg30
I0
sg2796
g46
(g587
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4147
sg32
I1
sg39
g40
sg43
g44
sg33
F1.22245192527771
sS'trials2.thisN'
p4148
I135
sa(dp4149
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4150
g46
(g587
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4151
sS'trials2.thisRepN'
p4152
I0
sS'trials2.thisTrialN'
p4153
I136
sg2792
S'./stim/MorphM6_10_orig.jpg'
p4154
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4155
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4156
sg30
I1
sg2796
g46
(g587
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4157
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0359699726104736
sS'trials2.thisN'
p4158
I136
sa(dp4159
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4160
g46
(g587
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4161
sS'trials2.thisRepN'
p4162
I0
sS'trials2.thisTrialN'
p4163
I137
sg2792
S'./stim/MorphF10_05_orig.jpg'
p4164
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4165
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4166
sg30
I1
sg2796
g46
(g587
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4167
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6067719459533691
sS'trials2.thisN'
p4168
I137
sa(dp4169
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4170
g46
(g587
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4171
sS'trials2.thisRepN'
p4172
I0
sS'trials2.thisTrialN'
p4173
I138
sg2792
S'./stim/MorphM5_07_orig.jpg'
p4174
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4175
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4176
sg30
I1
sg2796
g46
(g587
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4177
sg32
I0
sg39
g40
sg43
g44
sg33
F4.8087291717529297
sS'trials2.thisN'
p4178
I138
sa(dp4179
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4180
g46
(g587
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4181
sS'trials2.thisRepN'
p4182
I0
sS'trials2.thisTrialN'
p4183
I139
sg2792
S'./stim/MorphF10_09_orig.jpg'
p4184
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4185
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4186
sg30
I1
sg2796
g46
(g587
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4187
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4738900661468506
sS'trials2.thisN'
p4188
I139
sa(dp4189
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4190
g46
(g587
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4191
sS'trials2.thisRepN'
p4192
I0
sS'trials2.thisTrialN'
p4193
I140
sg2792
S'./stim/MorphM3_10_orig.jpg'
p4194
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4195
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4196
sg30
I1
sg2796
g46
(g587
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4197
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6578540802001953
sS'trials2.thisN'
p4198
I140
sa(dp4199
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4200
g46
(g587
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4201
sS'trials2.thisRepN'
p4202
I0
sS'trials2.thisTrialN'
p4203
I141
sg2792
S'./stim/MorphF6_03_orig.jpg'
p4204
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4205
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4206
sg30
I0
sg2796
g46
(g587
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4207
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3729469776153564
sS'trials2.thisN'
p4208
I141
sa(dp4209
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4210
g46
(g587
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4211
sS'trials2.thisRepN'
p4212
I0
sS'trials2.thisTrialN'
p4213
I142
sg2792
S'./stim/MorphF3_04_orig.jpg'
p4214
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp4215
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4216
sg30
I0
sg2796
g46
(g587
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4217
sg32
I1
sg39
g40
sg43
g44
sg33
F1.8923130035400391
sS'trials2.thisN'
p4218
I142
sa(dp4219
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4220
g46
(g587
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4221
sS'trials2.thisRepN'
p4222
I0
sS'trials2.thisTrialN'
p4223
I143
sg2792
S'./stim/MorphM2_01_orig.jpg'
p4224
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp4225
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp4226
sg30
I0
sg2796
g46
(g587
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4227
sg32
I1
sg39
g40
sg43
g44
sg33
F2.9649369716644287
sS'trials2.thisN'
p4228
I143
sa(dp4229
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4230
g46
(g587
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4231
sS'trials2.thisRepN'
p4232
I0
sS'trials2.thisTrialN'
p4233
I144
sg2792
S'./stim/MorphF4_09_orig.jpg'
p4234
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp4235
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xea\xbf'
tRp4236
sg30
I1
sg2796
g46
(g587
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4237
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0877230167388916
sS'trials2.thisN'
p4238
I144
sa(dp4239
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4240
g46
(g587
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4241
sS'trials2.thisRepN'
p4242
I0
sS'trials2.thisTrialN'
p4243
I145
sg2792
S'./stim/MorphM7_08_orig.jpg'
p4244
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp4245
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4246
sg30
I1
sg2796
g46
(g587
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4247
sg32
I0
sg39
g40
sg43
g44
sg33
F1.9430551528930664
sS'trials2.thisN'
p4248
I145
sa(dp4249
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4250
g46
(g587
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4251
sS'trials2.thisRepN'
p4252
I0
sS'trials2.thisTrialN'
p4253
I146
sg2792
S'./stim/MorphF7_08_orig.jpg'
p4254
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2?'
tRp4255
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4256
sg30
I1
sg2796
g46
(g587
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4257
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5582890510559082
sS'trials2.thisN'
p4258
I146
sa(dp4259
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4260
g46
(g587
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4261
sS'trials2.thisRepN'
p4262
I0
sS'trials2.thisTrialN'
p4263
I147
sg2792
S'./stim/MorphF3_08_orig.jpg'
p4264
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4265
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4266
sg30
I1
sg2796
g46
(g587
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4267
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6216459274291992
sS'trials2.thisN'
p4268
I147
sa(dp4269
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4270
g46
(g587
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4271
sS'trials2.thisRepN'
p4272
I0
sS'trials2.thisTrialN'
p4273
I148
sg2792
S'./stim/MorphM9_10_orig.jpg'
p4274
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4275
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4276
sg30
I1
sg2796
g46
(g587
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4277
sg32
I0
sg39
g40
sg43
g44
sg33
F2.9147999286651611
sS'trials2.thisN'
p4278
I148
sa(dp4279
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4280
g46
(g587
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4281
sS'trials2.thisRepN'
p4282
I0
sS'trials2.thisTrialN'
p4283
I149
sg2792
S'./stim/MorphF10_06_orig.jpg'
p4284
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4285
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4286
sg30
I1
sg2796
g46
(g587
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4287
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4740428924560547
sS'trials2.thisN'
p4288
I149
sa(dp4289
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4290
g46
(g587
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4291
sS'trials2.thisRepN'
p4292
I0
sS'trials2.thisTrialN'
p4293
I150
sg2792
S'./stim/MorphF9_08_orig.jpg'
p4294
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4295
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4296
sg30
I1
sg2796
g46
(g587
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4297
sg32
I0
sg39
g40
sg43
g44
sg33
F2.9803950786590576
sS'trials2.thisN'
p4298
I150
sa(dp4299
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4300
g46
(g587
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4301
sS'trials2.thisRepN'
p4302
I0
sS'trials2.thisTrialN'
p4303
I151
sg2792
S'./stim/MorphM3_06_orig.jpg'
p4304
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4305
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4306
sg30
I0
sg2796
g46
(g587
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4307
sg32
I1
sg39
g40
sg43
g44
sg33
F2.8459579944610596
sS'trials2.thisN'
p4308
I151
sa(dp4309
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4310
g46
(g587
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4311
sS'trials2.thisRepN'
p4312
I0
sS'trials2.thisTrialN'
p4313
I152
sg2792
S'./stim/MorphM1_04_orig.jpg'
p4314
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4315
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4316
sg30
I0
sg2796
g46
(g587
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4317
sg32
I1
sg39
g40
sg43
g44
sg33
F2.4099109172821045
sS'trials2.thisN'
p4318
I152
sa(dp4319
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4320
g46
(g587
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4321
sS'trials2.thisRepN'
p4322
I0
sS'trials2.thisTrialN'
p4323
I153
sg2792
S'./stim/MorphF6_00_orig.jpg'
p4324
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4325
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4326
sg30
I0
sg2796
g46
(g587
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4327
sg32
I1
sg39
g40
sg43
g44
sg33
F0.92077803611755371
sS'trials2.thisN'
p4328
I153
sa(dp4329
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4330
g46
(g587
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4331
sS'trials2.thisRepN'
p4332
I0
sS'trials2.thisTrialN'
p4333
I154
sg2792
S'./stim/MorphM3_07_orig.jpg'
p4334
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc0\xf2?'
tRp4335
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4336
sg30
I1
sg2796
g46
(g587
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4337
sg32
I0
sg39
g40
sg43
g44
sg33
F3.3154470920562744
sS'trials2.thisN'
p4338
I154
sa(dp4339
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4340
g46
(g587
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4341
sS'trials2.thisRepN'
p4342
I0
sS'trials2.thisTrialN'
p4343
I155
sg2792
S'./stim/MorphM8_10_orig.jpg'
p4344
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4345
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4346
sg30
I1
sg2796
g46
(g587
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4347
sg32
I0
sg39
g40
sg43
g44
sg33
F5.1600010395050049
sS'trials2.thisN'
p4348
I155
sa(dp4349
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4350
g46
(g587
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4351
sS'trials2.thisRepN'
p4352
I0
sS'trials2.thisTrialN'
p4353
I156
sg2792
S'./stim/MorphM10_05_orig.jpg'
p4354
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4355
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4356
sg30
I0
sg2796
g46
(g587
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4357
sg32
I1
sg39
g40
sg43
g44
sg33
F2.0091249942779541
sS'trials2.thisN'
p4358
I156
sa(dp4359
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4360
g46
(g587
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4361
sS'trials2.thisRepN'
p4362
I0
sS'trials2.thisTrialN'
p4363
I157
sg2792
S'./stim/MorphM7_09_orig.jpg'
p4364
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4365
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4366
sg30
I1
sg2796
g46
(g587
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4367
sg32
I0
sg39
g40
sg43
g44
sg33
F2.2445549964904785
sS'trials2.thisN'
p4368
I157
sa(dp4369
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4370
g46
(g587
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4371
sS'trials2.thisRepN'
p4372
I0
sS'trials2.thisTrialN'
p4373
I158
sg2792
S'./stim/MorphF10_08_orig.jpg'
p4374
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4375
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4376
sg30
I1
sg2796
g46
(g587
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4377
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3054499626159668
sS'trials2.thisN'
p4378
I158
sa(dp4379
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4380
g46
(g587
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4381
sS'trials2.thisRepN'
p4382
I0
sS'trials2.thisTrialN'
p4383
I159
sg2792
S'./stim/MorphM5_03_orig.jpg'
p4384
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x18\xf5?'
tRp4385
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4386
sg30
I1
sg2796
g46
(g587
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4387
sg32
I0
sg39
g40
sg43
g44
sg33
F4.7235488891601562
sS'trials2.thisN'
p4388
I159
sa(dp4389
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4390
g46
(g587
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4391
sS'trials2.thisRepN'
p4392
I0
sS'trials2.thisTrialN'
p4393
I160
sg2792
S'./stim/MorphM4_04_orig.jpg'
p4394
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4395
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4396
sg30
I0
sg2796
g46
(g587
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4397
sg32
I1
sg39
g40
sg43
g44
sg33
F3.9370310306549072
sS'trials2.thisN'
p4398
I160
sa(dp4399
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4400
g46
(g587
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4401
sS'trials2.thisRepN'
p4402
I0
sS'trials2.thisTrialN'
p4403
I161
sg2792
S'./stim/MorphM2_10_orig.jpg'
p4404
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4405
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4406
sg30
I1
sg2796
g46
(g587
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4407
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6578559875488281
sS'trials2.thisN'
p4408
I161
sa(dp4409
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4410
g46
(g587
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4411
sS'trials2.thisRepN'
p4412
I0
sS'trials2.thisTrialN'
p4413
I162
sg2792
S'./stim/MorphF5_07_orig.jpg'
p4414
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4415
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4416
sg30
I1
sg2796
g46
(g587
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4417
sg32
I0
sg39
g40
sg43
g44
sg33
F1.5057299137115479
sS'trials2.thisN'
p4418
I162
sa(dp4419
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4420
g46
(g587
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4421
sS'trials2.thisRepN'
p4422
I0
sS'trials2.thisTrialN'
p4423
I163
sg2792
S'./stim/MorphM7_02_orig.jpg'
p4424
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4425
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4426
sg30
I0
sg2796
g46
(g587
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4427
sg32
I1
sg39
g40
sg43
g44
sg33
F1.741441011428833
sS'trials2.thisN'
p4428
I163
sa(dp4429
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4430
g46
(g587
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4431
sS'trials2.thisRepN'
p4432
I0
sS'trials2.thisTrialN'
p4433
I164
sg2792
S'./stim/MorphF3_00_orig.jpg'
p4434
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4435
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4436
sg30
I0
sg2796
g46
(g587
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4437
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0545899868011475
sS'trials2.thisN'
p4438
I164
sa(dp4439
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4440
g46
(g587
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4441
sS'trials2.thisRepN'
p4442
I0
sS'trials2.thisTrialN'
p4443
I165
sg2792
S'./stim/MorphM7_00_orig.jpg'
p4444
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4445
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4446
sg30
I0
sg2796
g46
(g587
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4447
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3550519943237305
sS'trials2.thisN'
p4448
I165
sa(dp4449
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4450
g46
(g587
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4451
sS'trials2.thisRepN'
p4452
I0
sS'trials2.thisTrialN'
p4453
I166
sg2792
S'./stim/MorphM1_09_orig.jpg'
p4454
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00(\xf4?'
tRp4455
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4456
sg30
I1
sg2796
g46
(g587
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4457
sg32
I0
sg39
g40
sg43
g44
sg33
F2.4957630634307861
sS'trials2.thisN'
p4458
I166
sa(dp4459
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4460
g46
(g587
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4461
sS'trials2.thisRepN'
p4462
I0
sS'trials2.thisTrialN'
p4463
I167
sg2792
S'./stim/MorphF8_10_orig.jpg'
p4464
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\xf3?'
tRp4465
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4466
sg30
I1
sg2796
g46
(g587
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4467
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7584481239318848
sS'trials2.thisN'
p4468
I167
sa(dp4469
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4470
g46
(g587
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4471
sS'trials2.thisRepN'
p4472
I0
sS'trials2.thisTrialN'
p4473
I168
sg2792
S'./stim/MorphM3_04_orig.jpg'
p4474
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4?'
tRp4475
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4476
sg30
I0
sg2796
g46
(g587
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4477
sg32
I1
sg39
g40
sg43
g44
sg33
F2.9650468826293945
sS'trials2.thisN'
p4478
I168
sa(dp4479
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4480
g46
(g587
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4481
sS'trials2.thisRepN'
p4482
I0
sS'trials2.thisTrialN'
p4483
I169
sg2792
S'./stim/MorphM8_01_orig.jpg'
p4484
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4485
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4486
sg30
I0
sg2796
g46
(g587
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4487
sg32
I1
sg39
g40
sg43
g44
sg33
F4.941093921661377
sS'trials2.thisN'
p4488
I169
sa(dp4489
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4490
g46
(g587
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4491
sS'trials2.thisRepN'
p4492
I0
sS'trials2.thisTrialN'
p4493
I170
sg2792
S'./stim/MorphF8_00_orig.jpg'
p4494
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4495
sg29
g46
(g48
S'\x00\x00\x00\x00\x00P\xe9\xbf'
tRp4496
sg30
I0
sg2796
g46
(g587
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4497
sg32
I1
sg39
g40
sg43
g44
sg33
F1.004518985748291
sS'trials2.thisN'
p4498
I170
sa(dp4499
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4500
g46
(g587
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4501
sS'trials2.thisRepN'
p4502
I0
sS'trials2.thisTrialN'
p4503
I171
sg2792
S'./stim/MorphF1_08_orig.jpg'
p4504
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xf7?'
tRp4505
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4506
sg30
I1
sg2796
g46
(g587
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4507
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7415850162506104
sS'trials2.thisN'
p4508
I171
sa(dp4509
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4510
g46
(g587
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4511
sS'trials2.thisRepN'
p4512
I0
sS'trials2.thisTrialN'
p4513
I172
sg2792
S'./stim/MorphF7_01_orig.jpg'
p4514
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp4515
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4516
sg30
I0
sg2796
g46
(g587
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4517
sg32
I1
sg39
g40
sg43
g44
sg33
F1.7080941200256348
sS'trials2.thisN'
p4518
I172
sa(dp4519
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4520
g46
(g587
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4521
sS'trials2.thisRepN'
p4522
I0
sS'trials2.thisTrialN'
p4523
I173
sg2792
S'./stim/MorphM7_04_orig.jpg'
p4524
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp4525
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4526
sg30
I0
sg2796
g46
(g587
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4527
sg32
I1
sg39
g40
sg43
g44
sg33
F4.4393110275268555
sS'trials2.thisN'
p4528
I173
sa(dp4529
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4530
g46
(g587
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4531
sS'trials2.thisRepN'
p4532
I0
sS'trials2.thisTrialN'
p4533
I174
sg2792
S'./stim/MorphF4_10_orig.jpg'
p4534
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00@\xfa?'
tRp4535
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4\xbf'
tRp4536
sg30
I1
sg2796
g46
(g587
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4537
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3386259078979492
sS'trials2.thisN'
p4538
I174
sa(dp4539
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4540
g46
(g587
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4541
sS'trials2.thisRepN'
p4542
I0
sS'trials2.thisTrialN'
p4543
I175
sg2792
S'./stim/MorphF7_07_orig.jpg'
p4544
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp4545
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4546
sg30
I0
sg2796
g46
(g587
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4547
sg32
I1
sg39
g40
sg43
g44
sg33
F2.5800719261169434
sS'trials2.thisN'
p4548
I175
sa(dp4549
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4550
g46
(g587
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4551
sS'trials2.thisRepN'
p4552
I0
sS'trials2.thisTrialN'
p4553
I176
sg2792
S'./stim/MorphF10_01_orig.jpg'
p4554
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00P\xf9?'
tRp4555
sg29
g46
(g48
S'\x00\x00\x00\x00\x00p\xe7\xbf'
tRp4556
sg30
I0
sg2796
g46
(g587
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4557
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0884501934051514
sS'trials2.thisN'
p4558
I176
sa(dp4559
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4560
g46
(g587
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4561
sS'trials2.thisRepN'
p4562
I0
sS'trials2.thisTrialN'
p4563
I177
sg2792
S'./stim/MorphF6_09_orig.jpg'
p4564
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xd8\xf8?'
tRp4565
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4566
sg30
I1
sg2796
g46
(g587
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4567
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0022599697113037
sS'trials2.thisN'
p4568
I177
sa(dp4569
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4570
g46
(g587
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4571
sS'trials2.thisRepN'
p4572
I0
sS'trials2.thisTrialN'
p4573
I178
sg2792
S'./stim/MorphM3_05_orig.jpg'
p4574
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x08\xf6?'
tRp4575
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp4576
sg30
I1
sg2796
g46
(g587
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4577
sg32
I0
sg39
g40
sg43
g44
sg33
F2.1269369125366211
sS'trials2.thisN'
p4578
I178
sa(dp4579
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4580
g46
(g587
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4581
sS'trials2.thisRepN'
p4582
I0
sS'trials2.thisTrialN'
p4583
I179
sg2792
S'./stim/MorphM4_02_orig.jpg'
p4584
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf8\xf6?'
tRp4585
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp4586
sg30
I0
sg2796
g46
(g587
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4587
sg32
I1
sg39
g40
sg43
g44
sg33
F3.3174049854278564
sS'trials2.thisN'
p4588
I179
sa(dp4589
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4590
g46
(g587
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4591
sS'trials2.thisRepN'
p4592
I0
sS'trials2.thisTrialN'
p4593
I180
sg2792
S'./stim/MorphM8_07_orig.jpg'
p4594
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00p\xf7?'
tRp4595
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4\xbf'
tRp4596
sg30
I0
sg2796
g46
(g587
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4597
sg32
I1
sg39
g40
sg43
g44
sg33
F4.5901072025299072
sS'trials2.thisN'
p4598
I180
sa(dp4599
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4600
g46
(g587
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4601
sS'trials2.thisRepN'
p4602
I0
sS'trials2.thisTrialN'
p4603
I181
sg2792
S'./stim/MorphM9_09_orig.jpg'
p4604
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x000\xfb?'
tRp4605
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp4606
sg30
I1
sg2796
g46
(g587
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4607
sg32
I0
sg39
g40
sg43
g44
sg33
F7.1040358543395996
sS'trials2.thisN'
p4608
I181
sa(dp4609
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4610
g46
(g587
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4611
sS'trials2.thisRepN'
p4612
I0
sS'trials2.thisTrialN'
p4613
I182
sg2792
S'./stim/MorphM7_01_orig.jpg'
p4614
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00 \xfc?'
tRp4615
sg29
g46
(g48
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp4616
sg30
I0
sg2796
g46
(g587
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4617
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3059611320495605
sS'trials2.thisN'
p4618
I182
sa(dp4619
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4620
g46
(g587
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4621
sS'trials2.thisRepN'
p4622
I0
sS'trials2.thisTrialN'
p4623
I183
sg2792
S'./stim/MorphF1_01_orig.jpg'
p4624
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00 \xfc?'
tRp4625
sg29
g46
(g48
S'\x00\x00\x00\x00\x00@\xda\xbf'
tRp4626
sg30
I0
sg2796
g46
(g587
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4627
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1716420650482178
sS'trials2.thisN'
p4628
I183
sa(dp4629
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4630
g46
(g587
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4631
sS'trials2.thisRepN'
p4632
I0
sS'trials2.thisTrialN'
p4633
I184
sg2792
S'./stim/MorphM8_06_orig.jpg'
p4634
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xb8\xfa?'
tRp4635
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp4636
sg30
I1
sg2796
g46
(g587
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4637
sg32
I0
sg39
g40
sg43
g44
sg33
F2.2953109741210938
sS'trials2.thisN'
p4638
I184
sa(dp4639
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4640
g46
(g587
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4641
sS'trials2.thisRepN'
p4642
I0
sS'trials2.thisTrialN'
p4643
I185
sg2792
S'./stim/MorphF9_01_orig.jpg'
p4644
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa8\xfb?'
tRp4645
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4646
sg30
I0
sg2796
g46
(g587
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4647
sg32
I1
sg39
g40
sg43
g44
sg33
F3.6689929962158203
sS'trials2.thisN'
p4648
I185
sa(dp4649
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4650
g46
(g587
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4651
sS'trials2.thisRepN'
p4652
I0
sS'trials2.thisTrialN'
p4653
I186
sg2792
S'./stim/MorphF2_03_orig.jpg'
p4654
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00 \xfc?'
tRp4655
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xe6\xbf'
tRp4656
sg30
I1
sg2796
g46
(g587
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4657
sg32
I0
sg39
g40
sg43
g44
sg33
F5.5629100799560547
sS'trials2.thisN'
p4658
I186
sa(dp4659
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4660
g46
(g587
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4661
sS'trials2.thisRepN'
p4662
I0
sS'trials2.thisTrialN'
p4663
I187
sg2792
S'./stim/MorphM7_07_orig.jpg'
p4664
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x98\xfc?'
tRp4665
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp4666
sg30
I1
sg2796
g46
(g587
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4667
sg32
I0
sg39
g40
sg43
g44
sg33
F1.6747488975524902
sS'trials2.thisN'
p4668
I187
sa(dp4669
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4670
g46
(g587
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4671
sS'trials2.thisRepN'
p4672
I0
sS'trials2.thisTrialN'
p4673
I188
sg2792
S'./stim/MorphF8_03_orig.jpg'
p4674
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00 \xfc?'
tRp4675
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xe4\xbf'
tRp4676
sg30
I0
sg2796
g46
(g587
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4677
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6241500377655029
sS'trials2.thisN'
p4678
I188
sa(dp4679
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4680
g46
(g587
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4681
sS'trials2.thisRepN'
p4682
I0
sS'trials2.thisTrialN'
p4683
I189
sg2792
S'./stim/MorphF6_01_orig.jpg'
p4684
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa8\xfb?'
tRp4685
sg29
g46
(g48
S'\x00\x00\x00\x00\x00`\xe8\xbf'
tRp4686
sg30
I0
sg2796
g46
(g587
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4687
sg32
I1
sg39
g40
sg43
g44
sg33
F0.95434999465942383
sS'trials2.thisN'
p4688
I189
sa(dp4689
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4690
g46
(g587
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4691
sS'trials2.thisRepN'
p4692
I0
sS'trials2.thisTrialN'
p4693
I190
sg2792
S'./stim/MorphF9_00_orig.jpg'
p4694
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x98\xfc?'
tRp4695
sg29
g46
(g48
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4696
sg30
I0
sg2796
g46
(g587
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4697
sg32
I1
sg39
g40
sg43
g44
sg33
F1.0712711811065674
sS'trials2.thisN'
p4698
I190
sa(dp4699
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4700
g46
(g587
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4701
sS'trials2.thisRepN'
p4702
I0
sS'trials2.thisTrialN'
p4703
I191
sg2792
S'./stim/MorphM5_05_orig.jpg'
p4704
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x88\xfd?'
tRp4705
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp4706
sg30
I1
sg2796
g46
(g587
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4707
sg32
I0
sg39
g40
sg43
g44
sg33
F2.7135739326477051
sS'trials2.thisN'
p4708
I191
sa(dp4709
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4710
g46
(g587
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4711
sS'trials2.thisRepN'
p4712
I0
sS'trials2.thisTrialN'
p4713
I192
sg2792
S'./stim/MorphM4_09_orig.jpg'
p4714
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x10\xfd?'
tRp4715
sg29
g46
(g48
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp4716
sg30
I1
sg2796
g46
(g587
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4717
sg32
I0
sg39
g40
sg43
g44
sg33
F2.7810409069061279
sS'trials2.thisN'
p4718
I192
sa(dp4719
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4720
g46
(g587
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4721
sS'trials2.thisRepN'
p4722
I0
sS'trials2.thisTrialN'
p4723
I193
sg2792
S'./stim/MorphM5_08_orig.jpg'
p4724
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\x10\xfd?'
tRp4725
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xf1\xbf'
tRp4726
sg30
I1
sg2796
g46
(g587
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4727
sg32
I0
sg39
g40
sg43
g44
sg33
F1.3051929473876953
sS'trials2.thisN'
p4728
I193
sa(dp4729
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4730
g46
(g587
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4731
sS'trials2.thisRepN'
p4732
I0
sS'trials2.thisTrialN'
p4733
I194
sg2792
S'./stim/MorphM10_10_orig.jpg'
p4734
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\xfe?'
tRp4735
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp4736
sg30
I1
sg2796
g46
(g587
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4737
sg32
I0
sg39
g40
sg43
g44
sg33
F2.1610000133514404
sS'trials2.thisN'
p4738
I194
sa(dp4739
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4740
g46
(g587
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4741
sS'trials2.thisRepN'
p4742
I0
sS'trials2.thisTrialN'
p4743
I195
sg2792
S'./stim/MorphF7_02_orig.jpg'
p4744
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\xfe?'
tRp4745
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp4746
sg30
I0
sg2796
g46
(g587
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4747
sg32
I1
sg39
g40
sg43
g44
sg33
F1.087630033493042
sS'trials2.thisN'
p4748
I195
sa(dp4749
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4750
g46
(g587
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4751
sS'trials2.thisRepN'
p4752
I0
sS'trials2.thisTrialN'
p4753
I196
sg2792
S'./stim/MorphF9_10_orig.jpg'
p4754
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\xff?'
tRp4755
sg29
g46
(g48
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp4756
sg30
I1
sg2796
g46
(g587
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4757
sg32
I0
sg39
g40
sg43
g44
sg33
F1.7919061183929443
sS'trials2.thisN'
p4758
I196
sa(dp4759
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4760
g46
(g587
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4761
sS'trials2.thisRepN'
p4762
I0
sS'trials2.thisTrialN'
p4763
I197
sg2792
S'./stim/MorphF5_05_orig.jpg'
p4764
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\xfe?'
tRp4765
sg29
g46
(g48
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp4766
sg30
I0
sg2796
g46
(g587
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4767
sg32
I1
sg39
g40
sg43
g44
sg33
F1.3055648803710938
sS'trials2.thisN'
p4768
I197
sa(dp4769
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4770
g46
(g587
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4771
sS'trials2.thisRepN'
p4772
I0
sS'trials2.thisTrialN'
p4773
I198
sg2792
S'./stim/MorphF7_10_orig.jpg'
p4774
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xff?'
tRp4775
sg29
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2\xbf'
tRp4776
sg30
I1
sg2796
g46
(g587
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4777
sg32
I0
sg39
g40
sg43
g44
sg33
F1.8592419624328613
sS'trials2.thisN'
p4778
I198
sa(dp4779
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4780
g46
(g587
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4781
sS'trials2.thisRepN'
p4782
I0
sS'trials2.thisTrialN'
p4783
I199
sg2792
S'./stim/MorphF6_04_orig.jpg'
p4784
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\x00@'
tRp4785
sg29
g46
(g48
S'\x00\x00\x00\x00\x00H\xf2\xbf'
tRp4786
sg30
I0
sg2796
g46
(g587
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4787
sg32
I1
sg39
g40
sg43
g44
sg33
F2.5283331871032715
sS'trials2.thisN'
p4788
I199
sa(dp4789
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4790
g46
(g587
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4791
sS'trials2.thisRepN'
p4792
I0
sS'trials2.thisTrialN'
p4793
I200
sg2792
S'./stim/MorphM4_00_orig.jpg'
p4794
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\x00@'
tRp4795
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp4796
sg30
I0
sg2796
g46
(g587
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4797
sg32
I1
sg39
g40
sg43
g44
sg33
F3.4849169254302979
sS'trials2.thisN'
p4798
I200
sa(dp4799
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4800
g46
(g587
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4801
sS'trials2.thisRepN'
p4802
I0
sS'trials2.thisTrialN'
p4803
I201
sg2792
S'./stim/MorphF9_03_orig.jpg'
p4804
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00,\x00@'
tRp4805
sg29
g46
(g48
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp4806
sg30
I0
sg2796
g46
(g587
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4807
sg32
I1
sg39
g40
sg43
g44
sg33
F1.1369209289550781
sS'trials2.thisN'
p4808
I201
sa(dp4809
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4810
g46
(g587
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4811
sS'trials2.thisRepN'
p4812
I0
sS'trials2.thisTrialN'
p4813
I202
sg2792
S'./stim/MorphF4_03_orig.jpg'
p4814
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xff?'
tRp4815
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp4816
sg30
I0
sg2796
g46
(g587
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4817
sg32
I1
sg39
g40
sg43
g44
sg33
F1.5053420066833496
sS'trials2.thisN'
p4818
I202
sa(dp4819
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4820
g46
(g587
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4821
sS'trials2.thisRepN'
p4822
I0
sS'trials2.thisTrialN'
p4823
I203
sg2792
S'./stim/MorphM8_05_orig.jpg'
p4824
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\x00@'
tRp4825
sg29
g46
(g48
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp4826
sg30
I0
sg2796
g46
(g587
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4827
sg32
I1
sg39
g40
sg43
g44
sg33
F2.2603120803833008
sS'trials2.thisN'
p4828
I203
sa(dp4829
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4830
g46
(g587
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4831
sS'trials2.thisRepN'
p4832
I0
sS'trials2.thisTrialN'
p4833
I204
sg2792
S'./stim/MorphM9_01_orig.jpg'
p4834
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\x00@'
tRp4835
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4836
sg30
I0
sg2796
g46
(g587
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4837
sg32
I1
sg39
g40
sg43
g44
sg33
F6.1161079406738281
sS'trials2.thisN'
p4838
I204
sa(dp4839
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4840
g46
(g587
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4841
sS'trials2.thisRepN'
p4842
I0
sS'trials2.thisTrialN'
p4843
I205
sg2792
S'./stim/MorphF8_04_orig.jpg'
p4844
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa4\x00@'
tRp4845
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4846
sg30
I0
sg2796
g46
(g587
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4847
sg32
I1
sg39
g40
sg43
g44
sg33
F1.2708148956298828
sS'trials2.thisN'
p4848
I205
sa(dp4849
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4850
g46
(g587
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4851
sS'trials2.thisRepN'
p4852
I0
sS'trials2.thisTrialN'
p4853
I206
sg2792
S'./stim/MorphM10_04_orig.jpg'
p4854
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\x00@'
tRp4855
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4856
sg30
I0
sg2796
g46
(g587
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4857
sg32
I1
sg39
g40
sg43
g44
sg33
F0.81996703147888184
sS'trials2.thisN'
p4858
I206
sa(dp4859
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4860
g46
(g587
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4861
sS'trials2.thisRepN'
p4862
I0
sS'trials2.thisTrialN'
p4863
I207
sg2792
S'./stim/MorphM1_10_orig.jpg'
p4864
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\xff?'
tRp4865
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4866
sg30
I1
sg2796
g46
(g587
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4867
sg32
I0
sg39
g40
sg43
g44
sg33
F1.540693998336792
sS'trials2.thisN'
p4868
I207
sa(dp4869
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4870
g46
(g587
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4871
sS'trials2.thisRepN'
p4872
I0
sS'trials2.thisTrialN'
p4873
I208
sg2792
S'./stim/MorphF1_06_orig.jpg'
p4874
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\xff?'
tRp4875
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4876
sg30
I0
sg2796
g46
(g587
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4877
sg32
I1
sg39
g40
sg43
g44
sg33
F4.8926119804382324
sS'trials2.thisN'
p4878
I208
sa(dp4879
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4880
g46
(g587
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4881
sS'trials2.thisRepN'
p4882
I0
sS'trials2.thisTrialN'
p4883
I209
sg2792
S'./stim/MorphM5_10_orig.jpg'
p4884
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xff?'
tRp4885
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xf0\xbf'
tRp4886
sg30
I1
sg2796
g46
(g587
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4887
sg32
I0
sg39
g40
sg43
g44
sg33
F1.4738070964813232
sS'trials2.thisN'
p4888
I209
sa(dp4889
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4890
g46
(g587
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4891
sS'trials2.thisRepN'
p4892
I0
sS'trials2.thisTrialN'
p4893
I210
sg2792
S'./stim/MorphM7_03_orig.jpg'
p4894
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\xff?'
tRp4895
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4896
sg30
I0
sg2796
g46
(g587
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4897
sg32
I1
sg39
g40
sg43
g44
sg33
F1.4898929595947266
sS'trials2.thisN'
p4898
I210
sa(dp4899
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4900
g46
(g587
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4901
sS'trials2.thisRepN'
p4902
I0
sS'trials2.thisTrialN'
p4903
I211
sg2792
S'./stim/MorphF10_07_orig.jpg'
p4904
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00,\x00@'
tRp4905
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xd0\xf1\xbf'
tRp4906
sg30
I1
sg2796
g46
(g587
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4907
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0713129043579102
sS'trials2.thisN'
p4908
I211
sa(dp4909
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4910
g46
(g587
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4911
sS'trials2.thisRepN'
p4912
I0
sS'trials2.thisTrialN'
p4913
I212
sg2792
S'./stim/MorphF8_02_orig.jpg'
p4914
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00h\x00@'
tRp4915
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp4916
sg30
I0
sg2796
g46
(g587
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4917
sg32
I1
sg39
g40
sg43
g44
sg33
F3.7530598640441895
sS'trials2.thisN'
p4918
I212
sa(dp4919
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4920
g46
(g587
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4921
sS'trials2.thisRepN'
p4922
I0
sS'trials2.thisTrialN'
p4923
I213
sg2792
S'./stim/MorphM3_03_orig.jpg'
p4924
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xa4\x00@'
tRp4925
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x80\xf6\xbf'
tRp4926
sg30
I0
sg2796
g46
(g587
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4927
sg32
I1
sg39
g40
sg43
g44
sg33
F1.6228611469268799
sS'trials2.thisN'
p4928
I213
sa(dp4929
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4930
g46
(g587
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4931
sS'trials2.thisRepN'
p4932
I0
sS'trials2.thisTrialN'
p4933
I214
sg2792
S'./stim/MorphF6_02_orig.jpg'
p4934
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00X\x01@'
tRp4935
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp4936
sg30
I0
sg2796
g46
(g587
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4937
sg32
I1
sg39
g40
sg43
g44
sg33
F0.93685388565063477
sS'trials2.thisN'
p4938
I214
sa(dp4939
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4940
g46
(g587
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4941
sS'trials2.thisRepN'
p4942
I0
sS'trials2.thisTrialN'
p4943
I215
sg2792
S'./stim/MorphM6_06_orig.jpg'
p4944
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00H\x02@'
tRp4945
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xa0\xf4\xbf'
tRp4946
sg30
I1
sg2796
g46
(g587
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4947
sg32
I0
sg39
g40
sg43
g44
sg33
F3.6837089061737061
sS'trials2.thisN'
p4948
I215
sa(dp4949
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4950
g46
(g587
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4951
sS'trials2.thisRepN'
p4952
I0
sS'trials2.thisTrialN'
p4953
I216
sg2792
S'./stim/MorphM3_09_orig.jpg'
p4954
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x008\x03@'
tRp4955
sg29
g46
(g48
S'\x00\x00\x00\x00\x008\xf3\xbf'
tRp4956
sg30
I1
sg2796
g46
(g587
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4957
sg32
I0
sg39
g40
sg43
g44
sg33
F1.1716110706329346
sS'trials2.thisN'
p4958
I216
sa(dp4959
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4960
g46
(g587
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4961
sS'trials2.thisRepN'
p4962
I0
sS'trials2.thisTrialN'
p4963
I217
sg2792
S'./stim/MorphM10_06_orig.jpg'
p4964
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00t\x03@'
tRp4965
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\xb0\xf3\xbf'
tRp4966
sg30
I1
sg2796
g46
(g587
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4967
sg32
I0
sg39
g40
sg43
g44
sg33
F1.0875799655914307
sS'trials2.thisN'
p4968
I217
sa(dp4969
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4970
g46
(g587
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4971
sS'trials2.thisRepN'
p4972
I0
sS'trials2.thisTrialN'
p4973
I218
sg2792
S'./stim/MorphM2_05_orig.jpg'
p4974
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xec\x03@'
tRp4975
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x08\xf6\xbf'
tRp4976
sg30
I0
sg2796
g46
(g587
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4977
sg32
I1
sg39
g40
sg43
g44
sg33
F2.4446549415588379
sS'trials2.thisN'
p4978
I218
sa(dp4979
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4980
g46
(g587
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4981
sS'trials2.thisRepN'
p4982
I0
sS'trials2.thisTrialN'
p4983
I219
sg2792
S'./stim/MorphM1_08_orig.jpg'
p4984
sg45
g49
sg28
g46
(g48
S'\x00\x00\x00\x00\x00\xec\x03@'
tRp4985
sg29
g46
(g48
S'\x00\x00\x00\x00\x00\x90\xf5\xbf'
tRp4986
sg30
I0
sg2796
g46
(g587
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4987
sg32
I1
sg39
g40
sg43
g44
sg33
F3.4512240886688232
sS'trials2.thisN'
p4988
I219
sasS'loops'
p4989
(lp4990
g1
(cpsychopy.data
TrialHandler
p4991
g3
NtRp4992
(dp4993
S'origin'
p4994
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p4995
sS'thisTrial'
p4996
(lp4997
sS'_exp'
p4998
I139722226210128
sg10
S'basicLoop'
p4999
sg6
S'/home/labor/faces/emoFaces.py'
p5000
sS'thisRepN'
p5001
I1
sg36
I01
sg37
g38
sS'data'
p5002
g1
(cpsychopy.data
DataHandler
p5003
c__builtin__
dict
p5004
(dp5005
g16
cnumpy.core.multiarray
_reconstruct
p5006
(cnumpy
ndarray
p5007
(I0
tS'b'
tRp5008
(I1
(I84
I1
tg47
(S'O8'
I0
I1
tRp5009
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5010
NaNaNag72
ag130
aNaNaNaNaNag72
ag130
aNaNaNaNaNag72
ag130
ag72
aNaNaNaNag72
aNaNaNaNaNaNag72
ag130
aNaNaNaNaNag72
aNaNaNaNaNaNag72
aNaNag130
aNaNag130
ag72
aNaNaNaNaNag130
ag72
ag130
aNaNaNaNaNag72
ag130
aNaNaNaNaNag72
ag130
aNaNaNaNaNag72
ag130
aNaNatbsg18
g5006
(g5007
(I0
tS'b'
tRp5011
(I1
(I84
I1
tg5009
I00
(lp5012
g92
aNag239
aNaNaNaNag92
aNaNaNaNaNaNag92
aNaNaNaNaNaNag92
aNag239
aNag92
aNaNag92
aNaNaNaNaNaNag92
aNaNaNag92
aNaNag92
aNag239
aNaNaNaNag92
aNaNaNaNaNaNag92
aNaNaNaNaNaNag239
aNaNaNaNaNaNag92
ag92
aNaNaNaNaNag92
aNag239
aNaNaNaNatbsg21
g5006
(g5007
(I0
tS'b'
tRp5013
(I1
(I84
I1
tg5009
I00
(lp5014
NaF2.2309999999999999
aNaNaNaF1.9650000000000001
aNaNaF6.6689999999999996
aF1.095
aNaNaF1.21
aNaNaF2.2149999999999999
aF4.141
aNaNaNaNaNaF2.6659999999999999
aNaNaNaF3.9940000000000002
aNaNaF5.2960000000000003
aF1.5589999999999999
aNaNaF4.6790000000000003
aNaNaF1.913
aF2.2170000000000001
aNaNaS'4.'
p5015
aNaNaF2.3479999999999999
aNaNaF4.2549999999999999
aF4.3070000000000004
aNaNaF3.5640000000000001
aNaNaF2.6669999999999998
aF1.3779999999999999
aNaNaF6.0209999999999999
aNaNaNaF2.4590000000000001
aNaNaF1.9239999999999999
aF3.8359999999999999
aNaNaF1.7130000000000001
aNaNaNaF2.5030000000000001
aNaNaF1.968
aNaNaF4.7270000000000003
aNaNaNaF1.6759999999999999
aNatbsS'ran'
p5016
cnumpy.ma.core
_mareconstruct
p5017
(cnumpy.ma.core
MaskedArray
p5018
g5007
(I0
tp5019
S'b'
tRp5020
(I1
(I84
I1
tg47
(S'f4'
I0
I1
tRp5021
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5006
(g5007
(I0
tS'b'
tRp5022
(I1
(I84
I1
tg5009
I00
(lp5023
NaNaNaF3.2749999999999999
aF2.8530000000000002
aNaNaNaNaNaF3.8279999999999998
aF0.93000000000000005
aNaNaNaNaNaF2.5369999999999999
aF2.956
aF1.5649999999999999
aNaNaNaNaF2.0169999999999999
aNaNaNaNaNaNaF1.4139999999999999
aF1.2769999999999999
aNaNaNaNaNaF0.91700000000000004
aNaNaNaNaNaNaF3.5550000000000002
aNaNaF13.128
aNaNaF4.5460000000000003
aF0.85899999999999999
aNaNaNaNaNaF4.415
aF1.8300000000000001
aF3.415
aNaNaNaNaNaF1.361
aF3.7919999999999998
aNaNaNaNaNaF3.3069999999999999
aF1.3320000000000001
aNaNaNaNaNaF2.1030000000000002
aF1.9670000000000001
aNaNatbsg23
g5006
(g5007
(I0
tS'b'
tRp5024
(I1
(I84
I1
tg5009
I00
(lp5025
NaNaNaNaNaNaF1.5469999999999999
aNaNaNaNaNaNaF2.8690000000000002
aNaNaNaNaNaNaF1.593
aNaNaNaNaNaNaF2.4950000000000001
aNaNaNaNaNaNaF2.6850000000000001
aNaNaNaNaNaNaF3.1669999999999998
aNaNaNaNaNaNaNaNaNaNaNaNaNaF2.048
aNaNaNaNaNaNaF2.2799999999999998
aNaNaNaNaNaNaF3.419
aNaNaNaNaNaNaF1.1479999999999999
aNaNaNaNaNaNaF1.222
atbsg22
g5006
(g5007
(I0
tS'b'
tRp5026
(I1
(I84
I1
tg5009
I00
(lp5027
NaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNaNaNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
aNaNaNaNaNaNag112
atbsg19
g5006
(g5007
(I0
tS'b'
tRp5028
(I1
(I84
I1
tg5009
I00
(lp5029
F1.3779999999999999
aNaF7.7960000000000003
aNaNaNaNaF1.3959999999999999
aNaNaNaNaNaNaF3.085
aNaNaNaNaNaNaF2.6040000000000001
aNaF1.681
aNaF5.0549999999999997
aNaNaF2.214
aNaNaNaNaNaNaF0.70999999999999996
aNaNaNaF1.2749999999999999
aNaNaF2.4580000000000002
aNaF2.6960000000000002
aNaNaNaNaF5.7480000000000002
aNaNaNaNaNaNaF1.218
aNaNaNaNaNaNaF6.3449999999999998
aNaNaNaNaNaNaF0.94399999999999995
aF3.9119999999999999
aNaNaNaNaNaF2.2829999999999999
aNaF4.032
aNaNaNaNatbsg20
g5006
(g5007
(I0
tS'b'
tRp5030
(I1
(I84
I1
tg5009
I00
(lp5031
Nag82
aNaNaNag68
aNaNag82
ag82
aNaNag68
aNaNag82
ag68
aNaNaNaNaNag82
aNaNaNag68
aNaNag82
ag82
aNaNag68
aNaNag82
ag82
aNaNag68
aNaNag82
aNaNag82
ag68
aNaNag82
aNaNag82
ag68
aNaNag82
aNaNaNag68
aNaNag82
ag82
aNaNag68
aNaNaNag68
aNaNag68
aNaNag82
aNaNaNag68
aNatbsS'order'
p5032
g5017
(g5018
g5007
g5019
S'b'
tRp5033
(I1
(I84
I1
tg5021
I00
S'\x00\x00dB\x00\x00|B\x00\x00DB\x00\x000A\x00\x00\xd8A\x00\x00\x0cB\x00\x00\x00A\x00\x00\x8aB\x00\x00\x88A\x00\x004B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\x88B\x00\x00\xe8A\x00\x00\x80@\x00\x00\x9aB\x00\x00\xb0A\x00\x00TB\x00\x00\x10B\x00\x00\x18B\x00\x00\xf0A\x00\x00@B\x00\x00\x10A\x00\x00<B\x00\x00\xb8A\x00\x00\x98A\x00\x00@A\x00\x00\x98B\x00\x00\xa2B\x00\x00`A\x00\x00\x80B\x00\x00\x90A\x00\x00\x9eB\x00\x00\x1cB\x00\x00\x08B\x00\x00\x8eB\x00\x00HB\x00\x00\x00@\x00\x00\xc0A\x00\x00\xa0A\x00\x00\x00\x00\x00\x00XB\x00\x00\x00B\x00\x008B\x00\x00 B\x00\x00\x80?\x00\x000B\x00\x00\x86B\x00\x00\x80A\x00\x00\x92B\x00\x00$B\x00\x00\x96B\x00\x00tB\x00\x00LB\x00\x00\x84B\x00\x00\x82B\x00\x00(B\x00\x00@@\x00\x00`B\x00\x00,B\x00\x00\x14B\x00\x00lB\x00\x00\xe0@\x00\x00PB\x00\x00\x94B\x00\x00\xf8A\x00\x00\xc8A\x00\x00 A\x00\x00\xa0B\x00\x00hB\x00\x00\x8cB\x00\x00\xa0@\x00\x00\xc0@\x00\x00\x9cB\x00\x00pA\x00\x00PA\x00\x00xB\x00\x00\xa8A\x00\x00\x04B\x00\x00\xe0A\x00\x00pB\x00\x00\x90B\x00\x00\\B\x00\x00\xd0A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5034
(dp5035
S'isNumeric'
p5036
(dp5037
g16
I00
sg18
I00
sg21
I00
sg5016
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5032
I01
ssS'trials'
p5038
g4992
sS'dataTypes'
p5039
(lp5040
g5016
ag5032
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5041
(lp5042
I84
aI1
asbsS'method'
p5043
S'fullRandom'
p5044
sS'sequenceIndices'
p5045
g5006
(g5007
(I0
tS'b'
tRp5046
(I1
(I84
I1
tg5009
I00
(lp5047
I40
aI45
aI37
aI57
aI14
aI71
aI72
aI62
aI6
aI22
aI67
aI3
aI26
aI75
aI29
aI74
aI48
aI8
aI31
aI25
aI39
aI77
aI16
aI24
aI38
aI66
aI83
aI4
aI79
aI13
aI20
aI65
aI42
aI78
aI34
aI5
aI18
aI60
aI19
aI33
aI44
aI50
aI56
aI59
aI46
aI9
aI43
aI23
aI21
aI2
aI36
aI53
aI63
aI17
aI41
aI82
aI58
aI0
aI69
aI61
aI80
aI52
aI76
aI1
aI30
aI55
aI54
aI47
aI12
aI7
aI70
aI35
aI81
aI49
aI64
aI51
aI27
aI15
aI73
aI32
aI68
aI28
aI10
aI11
atbsS'finished'
p5048
I01
sS'nReps'
p5049
I1
sS'nRemaining'
p5050
I-1
sS'trialList'
p5051
(lp5052
g1
(cpsychopy.data
TrialType
p5053
g5004
(dp5054
g58
g414
stRp5055
ag1
(g5053
g5004
(dp5056
g58
g450
stRp5057
ag1
(g5053
g5004
(dp5058
g58
g366
stRp5059
ag1
(g5053
g5004
(dp5060
g58
g137
stRp5061
ag1
(g5053
g5004
(dp5062
g58
g233
stRp5063
ag1
(g5053
g5004
(dp5064
g58
g282
stRp5065
ag1
(g5053
g5004
(dp5066
g58
g118
stRp5067
ag1
(g5053
g5004
(dp5068
g58
g486
stRp5069
ag1
(g5053
g5004
(dp5070
g58
g173
stRp5071
ag1
(g5053
g5004
(dp5072
g58
g342
stRp5073
ag1
(g5053
g5004
(dp5074
g58
g564
stRp5075
ag1
(g5053
g5004
(dp5076
g58
g570
stRp5077
ag1
(g5053
g5004
(dp5078
g58
g480
stRp5079
ag1
(g5053
g5004
(dp5080
g58
g246
stRp5081
ag1
(g5053
g5004
(dp5082
g58
g93
stRp5083
ag1
(g5053
g5004
(dp5084
g58
g534
stRp5085
ag1
(g5053
g5004
(dp5086
g58
g203
stRp5087
ag1
(g5053
g5004
(dp5088
g58
g390
stRp5089
ag1
(g5053
g5004
(dp5090
g58
g288
stRp5091
ag1
(g5053
g5004
(dp5092
g58
g300
stRp5093
ag1
(g5053
g5004
(dp5094
g58
g252
stRp5095
ag1
(g5053
g5004
(dp5096
g58
g360
stRp5097
ag1
(g5053
g5004
(dp5098
g58
g124
stRp5099
ag1
(g5053
g5004
(dp5100
g58
g354
stRp5101
ag1
(g5053
g5004
(dp5102
g58
g209
stRp5103
ag1
(g5053
g5004
(dp5104
g58
g185
stRp5105
ag1
(g5053
g5004
(dp5106
g58
g143
stRp5107
ag1
(g5053
g5004
(dp5108
g58
g528
stRp5109
ag1
(g5053
g5004
(dp5110
g58
g558
stRp5111
ag1
(g5053
g5004
(dp5112
g58
g155
stRp5113
ag1
(g5053
g5004
(dp5114
g58
g456
stRp5115
ag1
(g5053
g5004
(dp5116
g58
g179
stRp5117
ag1
(g5053
g5004
(dp5118
g58
g546
stRp5119
ag1
(g5053
g5004
(dp5120
g58
g306
stRp5121
ag1
(g5053
g5004
(dp5122
g58
g276
stRp5123
ag1
(g5053
g5004
(dp5124
g58
g498
stRp5125
ag1
(g5053
g5004
(dp5126
g58
g372
stRp5127
ag1
(g5053
g5004
(dp5128
g58
g79
stRp5129
ag1
(g5053
g5004
(dp5130
g58
g215
stRp5131
ag1
(g5053
g5004
(dp5132
g58
g191
stRp5133
ag1
(g5053
g5004
(dp5134
g58
g65
stRp5135
ag1
(g5053
g5004
(dp5136
g58
g396
stRp5137
ag1
(g5053
g5004
(dp5138
g58
g264
stRp5139
ag1
(g5053
g5004
(dp5140
g58
g348
stRp5141
ag1
(g5053
g5004
(dp5142
g58
g312
stRp5143
ag1
(g5053
g5004
(dp5144
g58
g73
stRp5145
ag1
(g5053
g5004
(dp5146
g58
g336
stRp5147
ag1
(g5053
g5004
(dp5148
g58
g474
stRp5149
ag1
(g5053
g5004
(dp5150
g58
g167
stRp5151
ag1
(g5053
g5004
(dp5152
g58
g510
stRp5153
ag1
(g5053
g5004
(dp5154
g58
g318
stRp5155
ag1
(g5053
g5004
(dp5156
g58
g522
stRp5157
ag1
(g5053
g5004
(dp5158
g58
g438
stRp5159
ag1
(g5053
g5004
(dp5160
g58
g378
stRp5161
ag1
(g5053
g5004
(dp5162
g58
g468
stRp5163
ag1
(g5053
g5004
(dp5164
g58
g462
stRp5165
ag1
(g5053
g5004
(dp5166
g58
g324
stRp5167
ag1
(g5053
g5004
(dp5168
g58
g86
stRp5169
ag1
(g5053
g5004
(dp5170
g58
g408
stRp5171
ag1
(g5053
g5004
(dp5172
g58
g330
stRp5173
ag1
(g5053
g5004
(dp5174
g58
g294
stRp5175
ag1
(g5053
g5004
(dp5176
g58
g426
stRp5177
ag1
(g5053
g5004
(dp5178
g58
g111
stRp5179
ag1
(g5053
g5004
(dp5180
g58
g384
stRp5181
ag1
(g5053
g5004
(dp5182
g58
g516
stRp5183
ag1
(g5053
g5004
(dp5184
g58
g258
stRp5185
ag1
(g5053
g5004
(dp5186
g58
g221
stRp5187
ag1
(g5053
g5004
(dp5188
g58
g131
stRp5189
ag1
(g5053
g5004
(dp5190
g58
g552
stRp5191
ag1
(g5053
g5004
(dp5192
g58
g420
stRp5193
ag1
(g5053
g5004
(dp5194
g58
g492
stRp5195
ag1
(g5053
g5004
(dp5196
g58
g99
stRp5197
ag1
(g5053
g5004
(dp5198
g58
g105
stRp5199
ag1
(g5053
g5004
(dp5200
g58
g540
stRp5201
ag1
(g5053
g5004
(dp5202
g58
g161
stRp5203
ag1
(g5053
g5004
(dp5204
g58
g149
stRp5205
ag1
(g5053
g5004
(dp5206
g58
g444
stRp5207
ag1
(g5053
g5004
(dp5208
g58
g197
stRp5209
ag1
(g5053
g5004
(dp5210
g58
g270
stRp5211
ag1
(g5053
g5004
(dp5212
g58
g240
stRp5213
ag1
(g5053
g5004
(dp5214
g58
g432
stRp5215
ag1
(g5053
g5004
(dp5216
g58
g504
stRp5217
ag1
(g5053
g5004
(dp5218
g58
g402
stRp5219
ag1
(g5053
g5004
(dp5220
g58
g227
stRp5221
asS'seed'
p5222
NsS'thisIndex'
p5223
I11
sS'thisN'
p5224
I84
sS'thisTrialN'
p5225
I0
sS'nTotal'
p5226
I84
sS'_warnUseOfNext'
p5227
I01
sbag1
(g4991
g3
NtRp5228
(dp5229
g4994
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5230
sg4996
(lp5231
sg4998
I139722226210128
sg10
g5038
sg6
g5000
sg5001
I1
sg36
I01
sg37
g38
sg5002
g1
(g5003
g5004
(dp5232
g30
g5017
(g5018
g5007
g5019
S'b'
tRp5233
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5016
g5017
(g5018
g5007
g5019
S'b'
tRp5234
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5006
(g5007
(I0
tS'b'
tRp5235
(I1
(I220
I1
tg5009
I00
(lp5236
g590
ag600
ag610
ag620
ag630
ag640
ag650
ag660
ag670
ag680
ag690
ag700
ag710
ag720
ag730
ag740
ag750
ag760
ag770
ag780
ag790
ag800
ag810
ag820
ag830
ag840
ag850
ag860
ag870
ag880
ag890
ag900
ag910
ag920
ag930
ag940
ag950
ag960
ag970
ag980
ag990
ag1000
ag1010
ag1020
ag1030
ag1040
ag1050
ag1060
ag1070
ag1080
ag1090
ag1100
ag1110
ag1120
ag1130
ag1140
ag1150
ag1160
ag1170
ag1180
ag1190
ag1200
ag1210
ag1220
ag1230
ag1240
ag1250
ag1260
ag1270
ag1280
ag1290
ag1300
ag1310
ag1320
ag1330
ag1340
ag1350
ag1360
ag1370
ag1380
ag1390
ag1400
ag1410
ag1420
ag1430
ag1440
ag1450
ag1460
ag1470
ag1480
ag1490
ag1500
ag1510
ag1520
ag1530
ag1540
ag1550
ag1560
ag1570
ag1580
ag1590
ag1600
ag1610
ag1620
ag1630
ag1640
ag1650
ag1660
ag1670
ag1680
ag1690
ag1700
ag1710
ag1720
ag1730
ag1740
ag1750
ag1760
ag1770
ag1780
ag1790
ag1800
ag1810
ag1820
ag1830
ag1840
ag1850
ag1860
ag1870
ag1880
ag1890
ag1900
ag1910
ag1920
ag1930
ag1940
ag1950
ag1960
ag1970
ag1980
ag1990
ag2000
ag2010
ag2020
ag2030
ag2040
ag2050
ag2060
ag2070
ag2080
ag2090
ag2100
ag2110
ag2120
ag2130
ag2140
ag2150
ag2160
ag2170
ag2180
ag2190
ag2200
ag2210
ag2220
ag2230
ag2240
ag2250
ag2260
ag2270
ag2280
ag2290
ag2300
ag2310
ag2320
ag2330
ag2340
ag2350
ag2360
ag2370
ag2380
ag2390
ag2400
ag2410
ag2420
ag2430
ag2440
ag2450
ag2460
ag2470
ag2480
ag2490
ag2500
ag2510
ag2520
ag2530
ag2540
ag2550
ag2560
ag2570
ag2580
ag2590
ag2600
ag2610
ag2620
ag2630
ag2640
ag2650
ag2660
ag2670
ag2680
ag2690
ag2700
ag2710
ag2720
ag2730
ag2740
ag2750
ag2760
ag2770
ag2780
atbsg29
g5006
(g5007
(I0
tS'b'
tRp5237
(I1
(I220
I1
tg5009
I00
(lp5238
g591
ag601
ag611
ag621
ag631
ag641
ag651
ag661
ag671
ag681
ag691
ag701
ag711
ag721
ag731
ag741
ag751
ag761
ag771
ag781
ag791
ag801
ag811
ag821
ag831
ag841
ag851
ag861
ag871
ag881
ag891
ag901
ag911
ag921
ag931
ag941
ag951
ag961
ag971
ag981
ag991
ag1001
ag1011
ag1021
ag1031
ag1041
ag1051
ag1061
ag1071
ag1081
ag1091
ag1101
ag1111
ag1121
ag1131
ag1141
ag1151
ag1161
ag1171
ag1181
ag1191
ag1201
ag1211
ag1221
ag1231
ag1241
ag1251
ag1261
ag1271
ag1281
ag1291
ag1301
ag1311
ag1321
ag1331
ag1341
ag1351
ag1361
ag1371
ag1381
ag1391
ag1401
ag1411
ag1421
ag1431
ag1441
ag1451
ag1461
ag1471
ag1481
ag1491
ag1501
ag1511
ag1521
ag1531
ag1541
ag1551
ag1561
ag1571
ag1581
ag1591
ag1601
ag1611
ag1621
ag1631
ag1641
ag1651
ag1661
ag1671
ag1681
ag1691
ag1701
ag1711
ag1721
ag1731
ag1741
ag1751
ag1761
ag1771
ag1781
ag1791
ag1801
ag1811
ag1821
ag1831
ag1841
ag1851
ag1861
ag1871
ag1881
ag1891
ag1901
ag1911
ag1921
ag1931
ag1941
ag1951
ag1961
ag1971
ag1981
ag1991
ag2001
ag2011
ag2021
ag2031
ag2041
ag2051
ag2061
ag2071
ag2081
ag2091
ag2101
ag2111
ag2121
ag2131
ag2141
ag2151
ag2161
ag2171
ag2181
ag2191
ag2201
ag2211
ag2221
ag2231
ag2241
ag2251
ag2261
ag2271
ag2281
ag2291
ag2301
ag2311
ag2321
ag2331
ag2341
ag2351
ag2361
ag2371
ag2381
ag2391
ag2401
ag2411
ag2421
ag2431
ag2441
ag2451
ag2461
ag2471
ag2481
ag2491
ag2501
ag2511
ag2521
ag2531
ag2541
ag2551
ag2561
ag2571
ag2581
ag2591
ag2601
ag2611
ag2621
ag2631
ag2641
ag2651
ag2661
ag2671
ag2681
ag2691
ag2701
ag2711
ag2721
ag2731
ag2741
ag2751
ag2761
ag2771
ag2781
atbsg31
g5017
(g5018
g5007
g5019
S'b'
tRp5239
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5017
(g5018
g5007
g5019
S'b'
tRp5240
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5017
(g5018
g5007
g5019
S'b'
tRp5241
(I1
(I220
I1
tg5021
I00
S'YKE@~\x92\xd1?\xfe\xb8\x91?2\xe6\xde?T\x8a\x00@\x18\xee\xc4?\xaee\xf4?\xac\xe7\xc4?6=\xd4?\x97\x1c%@j\xcf\x98@>\x04\xc1?\xe2\xe5\x9a@\x863\xc5?\xe5(\x17@\xc3\xb6L@__\x0b@p_\xe7?D\xbb\xf8?,]\xc7?\x91\xb9\x03@\x99\x12\xc9@\x89B\x89@\xff\xa2\x87@ \xd6\x91@\xc5Z*@\x89m\x9a@.w\xda?\xa2*a@fl)@h\xb1\xa0?\x94\xc2\xbe?\xc4\xeb\xde?\xfd0\n@\x9a\x0b}@\xb6\x12\x07@*\x99\xa4@\xa0z\x9c?L\x1b\x9d@\xea\x97\x9e?*\x8c\xcb?\x80b\x1a@l4\xa6@\xb0-\x9e@\xbc0\xd2@N\x98\xf8?O\x96v@@\xa5\xda?\x94\xbc\xc0?\x9c\xfa\xc4?8\xa2\x80@`|\xe5?\x85\x9aY@\xb8\xd0H?\x01O\x99@\x9a\xe3\xc0?I\xd4>@D\xd5|?\x92\x1d\xff?X\x9dQ?|\n\xd2?\xa0\xe4\xfc?\xd4\x98\xf6?\xf6(\x19@v\xc5\x90@\x08\xc6\x91?\xec\xbb\xfa?\xb3(R@|IF@\xea"\xbc@\xcc\xd1\xcd?\xae\x7f\xe9?j\xfa\xde?\xa2F\x82@1}H@DR\xe7?\xe8ME@\x00k\x8d?G\x02a@\x1cg\x8f?\x12\xdc\x84?\xd0$\xc5?_\n}@\x08\xc9\x84?\xa6K\xc7?\xbaO\x91@\xdb\x86\x1c@Z\xb1\x91?\x06\xca\xaf?6\xc5\xcf?\x18"\xff?\xa0I\xf1@ \xd7\xa2?\xf9\xa5K@t~\x1c@\xa6\xb8\xa0?\x0cT\x9c?\xfeS\x06A2<\x98@\x96\xce/@d\xdbU?p+\xc5?\xbaN\x8b?X\xf6\xde?\xb2\xda\x84?\xb09(@=\x9d\x00@\xdc\xefN@{\xde@@\xa5\xdc\x8a@4\x0cQ@N\x9c\x9e?\n\x9fJ@?G\x82@"\xc1\xa0?`\xe7\xfa?\x10\x07D@~\xc8\x9f@\xb0\xf7\xa4?\xa0R\x8f?\xe0\xf4\xa9@\x0c\xad\xbe?y\x03\x16@Y\xe2!@\xda\xaf\x93?j\xa2-@\x02\xa2\xfa?\x08\xcd\xfa?\xca\x1b\xf0?\x10\x92\xcb?%\xcd\x11@\xda/\x04A\x0c>6@\x9a\xef\xde?L\x8f\x80?\xc6\xf8"@\xfc-\x88@\x80ZM?\x17\x9c-@\xae\x10_@t\x80\x9c?\x86!\x9a?\x1ek\x9c?m\xca\x02@\xf0\xa0\xe9?\xf3qV@\x11Tc@\xbc\x8c\xd8?Q\xa2\x80@\\k\xab?\x0e\xcd\x98@\xf8EI?\xe2\xeb\xcf?F\xb8/@\xb6gd@\xe4/D@\'O\x19@\xd6uV@\x98\x85\x94@\xfc\xdb\x93? \x92\xe9?\x0c\xd2\xbe?\xa5M\x1a@\x14L\x91@^0\xf0?r\xaf\xd2@v9\x89?\xdeI\xf1@\x9a\xa4\x9d@.\x05\x9a?\xa4\xe0\x13@\xf40D@\xea\x15\xfd@s\x1fgA\xea\x06\x9a?N\x95\x0e@\xf4\xe0\xb0@\xc1w\x1dB\xc9\xe9\x13@\x90\xd2\x11AVm\xe5?\xd4N\xe5?\x7f\x15~@\x82g\x84@\xa2f\x9e?\xd2\x17\x96@\xd4}H@\x00w\x8d?\x14\x8a\xa3@4\xc1\xbe?\xe6W*@O[F@\x0c\xfa\x86?~T\xa9?\xe1`\x1a@PV\x0b@\xc6\xa83A(e\xdd@~H\xbe@\xa4\x92\x80?(\xa0\x93?\xef\xe4@@~\x12\xc3?\xc0]\xf2@\xfa\x0e\xd2?>\xcc=@b\x87\xdf@\xf2y*@\xb4\x94 A\xfa\t\xc3?\xe15\x98@N\x08R@\x88\\\xb8?\x1b\xf41@\xc3V\x92@\xe8\x13\xe3?\xd0\x0f\xc5?_\xb5\x01@\x197\x7f@\x0b\xfc\xb8@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5032
g5017
(g5018
g5007
g5019
S'b'
tRp5242
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5243
(dp5244
g5036
(dp5245
g31
I01
sg5016
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5032
I01
ssg5038
g5228
sg5039
(lp5246
g5016
ag5032
ag28
ag29
ag30
ag31
ag32
ag33
asg5041
(lp5247
I220
aI1
asbsg5043
S'sequential'
p5248
sg5045
g5006
(g5007
(I0
tS'b'
tRp5249
(I1
(I220
I1
tg587
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5048
I01
sg5049
I1
sg5050
I-1
sg5051
(lp5250
g1
(g5053
g5004
(dp5251
g59
g592
sg584
g585
stRp5252
ag1
(g5053
g5004
(dp5253
g59
g602
sg584
g596
stRp5254
ag1
(g5053
g5004
(dp5255
g59
g612
sg584
g606
stRp5256
ag1
(g5053
g5004
(dp5257
g59
g622
sg584
g616
stRp5258
ag1
(g5053
g5004
(dp5259
g59
g632
sg584
g626
stRp5260
ag1
(g5053
g5004
(dp5261
g59
g642
sg584
g636
stRp5262
ag1
(g5053
g5004
(dp5263
g59
g652
sg584
g646
stRp5264
ag1
(g5053
g5004
(dp5265
g59
g662
sg584
g656
stRp5266
ag1
(g5053
g5004
(dp5267
g59
g672
sg584
g666
stRp5268
ag1
(g5053
g5004
(dp5269
g59
g682
sg584
g676
stRp5270
ag1
(g5053
g5004
(dp5271
g59
g692
sg584
g686
stRp5272
ag1
(g5053
g5004
(dp5273
g59
g702
sg584
g696
stRp5274
ag1
(g5053
g5004
(dp5275
g59
g712
sg584
g706
stRp5276
ag1
(g5053
g5004
(dp5277
g59
g722
sg584
g716
stRp5278
ag1
(g5053
g5004
(dp5279
g59
g732
sg584
g726
stRp5280
ag1
(g5053
g5004
(dp5281
g59
g742
sg584
g736
stRp5282
ag1
(g5053
g5004
(dp5283
g59
g752
sg584
g746
stRp5284
ag1
(g5053
g5004
(dp5285
g59
g762
sg584
g756
stRp5286
ag1
(g5053
g5004
(dp5287
g59
g772
sg584
g766
stRp5288
ag1
(g5053
g5004
(dp5289
g59
g782
sg584
g776
stRp5290
ag1
(g5053
g5004
(dp5291
g59
g792
sg584
g786
stRp5292
ag1
(g5053
g5004
(dp5293
g59
g802
sg584
g796
stRp5294
ag1
(g5053
g5004
(dp5295
g59
g812
sg584
g806
stRp5296
ag1
(g5053
g5004
(dp5297
g59
g822
sg584
g816
stRp5298
ag1
(g5053
g5004
(dp5299
g59
g832
sg584
g826
stRp5300
ag1
(g5053
g5004
(dp5301
g59
g842
sg584
g836
stRp5302
ag1
(g5053
g5004
(dp5303
g59
g852
sg584
g846
stRp5304
ag1
(g5053
g5004
(dp5305
g59
g862
sg584
g856
stRp5306
ag1
(g5053
g5004
(dp5307
g59
g872
sg584
g866
stRp5308
ag1
(g5053
g5004
(dp5309
g59
g882
sg584
g876
stRp5310
ag1
(g5053
g5004
(dp5311
g59
g892
sg584
g886
stRp5312
ag1
(g5053
g5004
(dp5313
g59
g902
sg584
g896
stRp5314
ag1
(g5053
g5004
(dp5315
g59
g912
sg584
g906
stRp5316
ag1
(g5053
g5004
(dp5317
g59
g922
sg584
g916
stRp5318
ag1
(g5053
g5004
(dp5319
g59
g932
sg584
g926
stRp5320
ag1
(g5053
g5004
(dp5321
g59
g942
sg584
g936
stRp5322
ag1
(g5053
g5004
(dp5323
g59
g952
sg584
g946
stRp5324
ag1
(g5053
g5004
(dp5325
g59
g962
sg584
g956
stRp5326
ag1
(g5053
g5004
(dp5327
g59
g972
sg584
g966
stRp5328
ag1
(g5053
g5004
(dp5329
g59
g982
sg584
g976
stRp5330
ag1
(g5053
g5004
(dp5331
g59
g992
sg584
g986
stRp5332
ag1
(g5053
g5004
(dp5333
g59
g1002
sg584
g996
stRp5334
ag1
(g5053
g5004
(dp5335
g59
g1012
sg584
g1006
stRp5336
ag1
(g5053
g5004
(dp5337
g59
g1022
sg584
g1016
stRp5338
ag1
(g5053
g5004
(dp5339
g59
g1032
sg584
g1026
stRp5340
ag1
(g5053
g5004
(dp5341
g59
g1042
sg584
g1036
stRp5342
ag1
(g5053
g5004
(dp5343
g59
g1052
sg584
g1046
stRp5344
ag1
(g5053
g5004
(dp5345
g59
g1062
sg584
g1056
stRp5346
ag1
(g5053
g5004
(dp5347
g59
g1072
sg584
g1066
stRp5348
ag1
(g5053
g5004
(dp5349
g59
g1082
sg584
g1076
stRp5350
ag1
(g5053
g5004
(dp5351
g59
g1092
sg584
g1086
stRp5352
ag1
(g5053
g5004
(dp5353
g59
g1102
sg584
g1096
stRp5354
ag1
(g5053
g5004
(dp5355
g59
g1112
sg584
g1106
stRp5356
ag1
(g5053
g5004
(dp5357
g59
g1122
sg584
g1116
stRp5358
ag1
(g5053
g5004
(dp5359
g59
g1132
sg584
g1126
stRp5360
ag1
(g5053
g5004
(dp5361
g59
g1142
sg584
g1136
stRp5362
ag1
(g5053
g5004
(dp5363
g59
g1152
sg584
g1146
stRp5364
ag1
(g5053
g5004
(dp5365
g59
g1162
sg584
g1156
stRp5366
ag1
(g5053
g5004
(dp5367
g59
g1172
sg584
g1166
stRp5368
ag1
(g5053
g5004
(dp5369
g59
g1182
sg584
g1176
stRp5370
ag1
(g5053
g5004
(dp5371
g59
g1192
sg584
g1186
stRp5372
ag1
(g5053
g5004
(dp5373
g59
g1202
sg584
g1196
stRp5374
ag1
(g5053
g5004
(dp5375
g59
g1212
sg584
g1206
stRp5376
ag1
(g5053
g5004
(dp5377
g59
g1222
sg584
g1216
stRp5378
ag1
(g5053
g5004
(dp5379
g59
g1232
sg584
g1226
stRp5380
ag1
(g5053
g5004
(dp5381
g59
g1242
sg584
g1236
stRp5382
ag1
(g5053
g5004
(dp5383
g59
g1252
sg584
g1246
stRp5384
ag1
(g5053
g5004
(dp5385
g59
g1262
sg584
g1256
stRp5386
ag1
(g5053
g5004
(dp5387
g59
g1272
sg584
g1266
stRp5388
ag1
(g5053
g5004
(dp5389
g59
g1282
sg584
g1276
stRp5390
ag1
(g5053
g5004
(dp5391
g59
g1292
sg584
g1286
stRp5392
ag1
(g5053
g5004
(dp5393
g59
g1302
sg584
g1296
stRp5394
ag1
(g5053
g5004
(dp5395
g59
g1312
sg584
g1306
stRp5396
ag1
(g5053
g5004
(dp5397
g59
g1322
sg584
g1316
stRp5398
ag1
(g5053
g5004
(dp5399
g59
g1332
sg584
g1326
stRp5400
ag1
(g5053
g5004
(dp5401
g59
g1342
sg584
g1336
stRp5402
ag1
(g5053
g5004
(dp5403
g59
g1352
sg584
g1346
stRp5404
ag1
(g5053
g5004
(dp5405
g59
g1362
sg584
g1356
stRp5406
ag1
(g5053
g5004
(dp5407
g59
g1372
sg584
g1366
stRp5408
ag1
(g5053
g5004
(dp5409
g59
g1382
sg584
g1376
stRp5410
ag1
(g5053
g5004
(dp5411
g59
g1392
sg584
g1386
stRp5412
ag1
(g5053
g5004
(dp5413
g59
g1402
sg584
g1396
stRp5414
ag1
(g5053
g5004
(dp5415
g59
g1412
sg584
g1406
stRp5416
ag1
(g5053
g5004
(dp5417
g59
g1422
sg584
g1416
stRp5418
ag1
(g5053
g5004
(dp5419
g59
g1432
sg584
g1426
stRp5420
ag1
(g5053
g5004
(dp5421
g59
g1442
sg584
g1436
stRp5422
ag1
(g5053
g5004
(dp5423
g59
g1452
sg584
g1446
stRp5424
ag1
(g5053
g5004
(dp5425
g59
g1462
sg584
g1456
stRp5426
ag1
(g5053
g5004
(dp5427
g59
g1472
sg584
g1466
stRp5428
ag1
(g5053
g5004
(dp5429
g59
g1482
sg584
g1476
stRp5430
ag1
(g5053
g5004
(dp5431
g59
g1492
sg584
g1486
stRp5432
ag1
(g5053
g5004
(dp5433
g59
g1502
sg584
g1496
stRp5434
ag1
(g5053
g5004
(dp5435
g59
g1512
sg584
g1506
stRp5436
ag1
(g5053
g5004
(dp5437
g59
g1522
sg584
g1516
stRp5438
ag1
(g5053
g5004
(dp5439
g59
g1532
sg584
g1526
stRp5440
ag1
(g5053
g5004
(dp5441
g59
g1542
sg584
g1536
stRp5442
ag1
(g5053
g5004
(dp5443
g59
g1552
sg584
g1546
stRp5444
ag1
(g5053
g5004
(dp5445
g59
g1562
sg584
g1556
stRp5446
ag1
(g5053
g5004
(dp5447
g59
g1572
sg584
g1566
stRp5448
ag1
(g5053
g5004
(dp5449
g59
g1582
sg584
g1576
stRp5450
ag1
(g5053
g5004
(dp5451
g59
g1592
sg584
g1586
stRp5452
ag1
(g5053
g5004
(dp5453
g59
g1602
sg584
g1596
stRp5454
ag1
(g5053
g5004
(dp5455
g59
g1612
sg584
g1606
stRp5456
ag1
(g5053
g5004
(dp5457
g59
g1622
sg584
g1616
stRp5458
ag1
(g5053
g5004
(dp5459
g59
g1632
sg584
g1626
stRp5460
ag1
(g5053
g5004
(dp5461
g59
g1642
sg584
g1636
stRp5462
ag1
(g5053
g5004
(dp5463
g59
g1652
sg584
g1646
stRp5464
ag1
(g5053
g5004
(dp5465
g59
g1662
sg584
g1656
stRp5466
ag1
(g5053
g5004
(dp5467
g59
g1672
sg584
g1666
stRp5468
ag1
(g5053
g5004
(dp5469
g59
g1682
sg584
g1676
stRp5470
ag1
(g5053
g5004
(dp5471
g59
g1692
sg584
g1686
stRp5472
ag1
(g5053
g5004
(dp5473
g59
g1702
sg584
g1696
stRp5474
ag1
(g5053
g5004
(dp5475
g59
g1712
sg584
g1706
stRp5476
ag1
(g5053
g5004
(dp5477
g59
g1722
sg584
g1716
stRp5478
ag1
(g5053
g5004
(dp5479
g59
g1732
sg584
g1726
stRp5480
ag1
(g5053
g5004
(dp5481
g59
g1742
sg584
g1736
stRp5482
ag1
(g5053
g5004
(dp5483
g59
g1752
sg584
g1746
stRp5484
ag1
(g5053
g5004
(dp5485
g59
g1762
sg584
g1756
stRp5486
ag1
(g5053
g5004
(dp5487
g59
g1772
sg584
g1766
stRp5488
ag1
(g5053
g5004
(dp5489
g59
g1782
sg584
g1776
stRp5490
ag1
(g5053
g5004
(dp5491
g59
g1792
sg584
g1786
stRp5492
ag1
(g5053
g5004
(dp5493
g59
g1802
sg584
g1796
stRp5494
ag1
(g5053
g5004
(dp5495
g59
g1812
sg584
g1806
stRp5496
ag1
(g5053
g5004
(dp5497
g59
g1822
sg584
g1816
stRp5498
ag1
(g5053
g5004
(dp5499
g59
g1832
sg584
g1826
stRp5500
ag1
(g5053
g5004
(dp5501
g59
g1842
sg584
g1836
stRp5502
ag1
(g5053
g5004
(dp5503
g59
g1852
sg584
g1846
stRp5504
ag1
(g5053
g5004
(dp5505
g59
g1862
sg584
g1856
stRp5506
ag1
(g5053
g5004
(dp5507
g59
g1872
sg584
g1866
stRp5508
ag1
(g5053
g5004
(dp5509
g59
g1882
sg584
g1876
stRp5510
ag1
(g5053
g5004
(dp5511
g59
g1892
sg584
g1886
stRp5512
ag1
(g5053
g5004
(dp5513
g59
g1902
sg584
g1896
stRp5514
ag1
(g5053
g5004
(dp5515
g59
g1912
sg584
g1906
stRp5516
ag1
(g5053
g5004
(dp5517
g59
g1922
sg584
g1916
stRp5518
ag1
(g5053
g5004
(dp5519
g59
g1932
sg584
g1926
stRp5520
ag1
(g5053
g5004
(dp5521
g59
g1942
sg584
g1936
stRp5522
ag1
(g5053
g5004
(dp5523
g59
g1952
sg584
g1946
stRp5524
ag1
(g5053
g5004
(dp5525
g59
g1962
sg584
g1956
stRp5526
ag1
(g5053
g5004
(dp5527
g59
g1972
sg584
g1966
stRp5528
ag1
(g5053
g5004
(dp5529
g59
g1982
sg584
g1976
stRp5530
ag1
(g5053
g5004
(dp5531
g59
g1992
sg584
g1986
stRp5532
ag1
(g5053
g5004
(dp5533
g59
g2002
sg584
g1996
stRp5534
ag1
(g5053
g5004
(dp5535
g59
g2012
sg584
g2006
stRp5536
ag1
(g5053
g5004
(dp5537
g59
g2022
sg584
g2016
stRp5538
ag1
(g5053
g5004
(dp5539
g59
g2032
sg584
g2026
stRp5540
ag1
(g5053
g5004
(dp5541
g59
g2042
sg584
g2036
stRp5542
ag1
(g5053
g5004
(dp5543
g59
g2052
sg584
g2046
stRp5544
ag1
(g5053
g5004
(dp5545
g59
g2062
sg584
g2056
stRp5546
ag1
(g5053
g5004
(dp5547
g59
g2072
sg584
g2066
stRp5548
ag1
(g5053
g5004
(dp5549
g59
g2082
sg584
g2076
stRp5550
ag1
(g5053
g5004
(dp5551
g59
g2092
sg584
g2086
stRp5552
ag1
(g5053
g5004
(dp5553
g59
g2102
sg584
g2096
stRp5554
ag1
(g5053
g5004
(dp5555
g59
g2112
sg584
g2106
stRp5556
ag1
(g5053
g5004
(dp5557
g59
g2122
sg584
g2116
stRp5558
ag1
(g5053
g5004
(dp5559
g59
g2132
sg584
g2126
stRp5560
ag1
(g5053
g5004
(dp5561
g59
g2142
sg584
g2136
stRp5562
ag1
(g5053
g5004
(dp5563
g59
g2152
sg584
g2146
stRp5564
ag1
(g5053
g5004
(dp5565
g59
g2162
sg584
g2156
stRp5566
ag1
(g5053
g5004
(dp5567
g59
g2172
sg584
g2166
stRp5568
ag1
(g5053
g5004
(dp5569
g59
g2182
sg584
g2176
stRp5570
ag1
(g5053
g5004
(dp5571
g59
g2192
sg584
g2186
stRp5572
ag1
(g5053
g5004
(dp5573
g59
g2202
sg584
g2196
stRp5574
ag1
(g5053
g5004
(dp5575
g59
g2212
sg584
g2206
stRp5576
ag1
(g5053
g5004
(dp5577
g59
g2222
sg584
g2216
stRp5578
ag1
(g5053
g5004
(dp5579
g59
g2232
sg584
g2226
stRp5580
ag1
(g5053
g5004
(dp5581
g59
g2242
sg584
g2236
stRp5582
ag1
(g5053
g5004
(dp5583
g59
g2252
sg584
g2246
stRp5584
ag1
(g5053
g5004
(dp5585
g59
g2262
sg584
g2256
stRp5586
ag1
(g5053
g5004
(dp5587
g59
g2272
sg584
g2266
stRp5588
ag1
(g5053
g5004
(dp5589
g59
g2282
sg584
g2276
stRp5590
ag1
(g5053
g5004
(dp5591
g59
g2292
sg584
g2286
stRp5592
ag1
(g5053
g5004
(dp5593
g59
g2302
sg584
g2296
stRp5594
ag1
(g5053
g5004
(dp5595
g59
g2312
sg584
g2306
stRp5596
ag1
(g5053
g5004
(dp5597
g59
g2322
sg584
g2316
stRp5598
ag1
(g5053
g5004
(dp5599
g59
g2332
sg584
g2326
stRp5600
ag1
(g5053
g5004
(dp5601
g59
g2342
sg584
g2336
stRp5602
ag1
(g5053
g5004
(dp5603
g59
g2352
sg584
g2346
stRp5604
ag1
(g5053
g5004
(dp5605
g59
g2362
sg584
g2356
stRp5606
ag1
(g5053
g5004
(dp5607
g59
g2372
sg584
g2366
stRp5608
ag1
(g5053
g5004
(dp5609
g59
g2382
sg584
g2376
stRp5610
ag1
(g5053
g5004
(dp5611
g59
g2392
sg584
g2386
stRp5612
ag1
(g5053
g5004
(dp5613
g59
g2402
sg584
g2396
stRp5614
ag1
(g5053
g5004
(dp5615
g59
g2412
sg584
g2406
stRp5616
ag1
(g5053
g5004
(dp5617
g59
g2422
sg584
g2416
stRp5618
ag1
(g5053
g5004
(dp5619
g59
g2432
sg584
g2426
stRp5620
ag1
(g5053
g5004
(dp5621
g59
g2442
sg584
g2436
stRp5622
ag1
(g5053
g5004
(dp5623
g59
g2452
sg584
g2446
stRp5624
ag1
(g5053
g5004
(dp5625
g59
g2462
sg584
g2456
stRp5626
ag1
(g5053
g5004
(dp5627
g59
g2472
sg584
g2466
stRp5628
ag1
(g5053
g5004
(dp5629
g59
g2482
sg584
g2476
stRp5630
ag1
(g5053
g5004
(dp5631
g59
g2492
sg584
g2486
stRp5632
ag1
(g5053
g5004
(dp5633
g59
g2502
sg584
g2496
stRp5634
ag1
(g5053
g5004
(dp5635
g59
g2512
sg584
g2506
stRp5636
ag1
(g5053
g5004
(dp5637
g59
g2522
sg584
g2516
stRp5638
ag1
(g5053
g5004
(dp5639
g59
g2532
sg584
g2526
stRp5640
ag1
(g5053
g5004
(dp5641
g59
g2542
sg584
g2536
stRp5642
ag1
(g5053
g5004
(dp5643
g59
g2552
sg584
g2546
stRp5644
ag1
(g5053
g5004
(dp5645
g59
g2562
sg584
g2556
stRp5646
ag1
(g5053
g5004
(dp5647
g59
g2572
sg584
g2566
stRp5648
ag1
(g5053
g5004
(dp5649
g59
g2582
sg584
g2576
stRp5650
ag1
(g5053
g5004
(dp5651
g59
g2592
sg584
g2586
stRp5652
ag1
(g5053
g5004
(dp5653
g59
g2602
sg584
g2596
stRp5654
ag1
(g5053
g5004
(dp5655
g59
g2612
sg584
g2606
stRp5656
ag1
(g5053
g5004
(dp5657
g59
g2622
sg584
g2616
stRp5658
ag1
(g5053
g5004
(dp5659
g59
g2632
sg584
g2626
stRp5660
ag1
(g5053
g5004
(dp5661
g59
g2642
sg584
g2636
stRp5662
ag1
(g5053
g5004
(dp5663
g59
g2652
sg584
g2646
stRp5664
ag1
(g5053
g5004
(dp5665
g59
g2662
sg584
g2656
stRp5666
ag1
(g5053
g5004
(dp5667
g59
g2672
sg584
g2666
stRp5668
ag1
(g5053
g5004
(dp5669
g59
g2682
sg584
g2676
stRp5670
ag1
(g5053
g5004
(dp5671
g59
g2692
sg584
g2686
stRp5672
ag1
(g5053
g5004
(dp5673
g59
g2702
sg584
g2696
stRp5674
ag1
(g5053
g5004
(dp5675
g59
g2712
sg584
g2706
stRp5676
ag1
(g5053
g5004
(dp5677
g59
g2722
sg584
g2716
stRp5678
ag1
(g5053
g5004
(dp5679
g59
g2732
sg584
g2726
stRp5680
ag1
(g5053
g5004
(dp5681
g59
g2742
sg584
g2736
stRp5682
ag1
(g5053
g5004
(dp5683
g59
g2752
sg584
g2746
stRp5684
ag1
(g5053
g5004
(dp5685
g59
g2762
sg584
g2756
stRp5686
ag1
(g5053
g5004
(dp5687
g59
g2772
sg584
g2766
stRp5688
ag1
(g5053
g5004
(dp5689
g59
g2782
sg584
g2776
stRp5690
asg5222
Nsg5223
g2778
sg5224
I220
sg5225
I0
sg5226
I220
sg5227
I01
sbag1
(g4991
g3
NtRp5691
(dp5692
g4994
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5693
sg4996
(lp5694
sg4998
I139722226210128
sg10
S'trials2'
p5695
sg6
g5000
sg5001
I1
sg36
I01
sg37
g38
sg5002
g1
(g5003
g5004
(dp5696
g30
g5017
(g5018
g5007
g5019
S'b'
tRp5697
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5016
g5017
(g5018
g5007
g5019
S'b'
tRp5698
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5006
(g5007
(I0
tS'b'
tRp5699
(I1
(I220
I1
tg5009
I00
(lp5700
g2794
ag2805
ag2815
ag2825
ag2835
ag2845
ag2855
ag2865
ag2875
ag2885
ag2895
ag2905
ag2915
ag2925
ag2935
ag2945
ag2955
ag2965
ag2975
ag2985
ag2995
ag3005
ag3015
ag3025
ag3035
ag3045
ag3055
ag3065
ag3075
ag3085
ag3095
ag3105
ag3115
ag3125
ag3135
ag3145
ag3155
ag3165
ag3175
ag3185
ag3195
ag3205
ag3215
ag3225
ag3235
ag3245
ag3255
ag3265
ag3275
ag3285
ag3295
ag3305
ag3315
ag3325
ag3335
ag3345
ag3355
ag3365
ag3375
ag3385
ag3395
ag3405
ag3415
ag3425
ag3435
ag3445
ag3455
ag3465
ag3475
ag3485
ag3495
ag3505
ag3515
ag3525
ag3535
ag3545
ag3555
ag3565
ag3575
ag3585
ag3595
ag3605
ag3615
ag3625
ag3635
ag3645
ag3655
ag3665
ag3675
ag3685
ag3695
ag3705
ag3715
ag3725
ag3735
ag3745
ag3755
ag3765
ag3775
ag3785
ag3795
ag3805
ag3815
ag3825
ag3835
ag3845
ag3855
ag3865
ag3875
ag3885
ag3895
ag3905
ag3915
ag3925
ag3935
ag3945
ag3955
ag3965
ag3975
ag3985
ag3995
ag4005
ag4015
ag4025
ag4035
ag4045
ag4055
ag4065
ag4075
ag4085
ag4095
ag4105
ag4115
ag4125
ag4135
ag4145
ag4155
ag4165
ag4175
ag4185
ag4195
ag4205
ag4215
ag4225
ag4235
ag4245
ag4255
ag4265
ag4275
ag4285
ag4295
ag4305
ag4315
ag4325
ag4335
ag4345
ag4355
ag4365
ag4375
ag4385
ag4395
ag4405
ag4415
ag4425
ag4435
ag4445
ag4455
ag4465
ag4475
ag4485
ag4495
ag4505
ag4515
ag4525
ag4535
ag4545
ag4555
ag4565
ag4575
ag4585
ag4595
ag4605
ag4615
ag4625
ag4635
ag4645
ag4655
ag4665
ag4675
ag4685
ag4695
ag4705
ag4715
ag4725
ag4735
ag4745
ag4755
ag4765
ag4775
ag4785
ag4795
ag4805
ag4815
ag4825
ag4835
ag4845
ag4855
ag4865
ag4875
ag4885
ag4895
ag4905
ag4915
ag4925
ag4935
ag4945
ag4955
ag4965
ag4975
ag4985
atbsg29
g5006
(g5007
(I0
tS'b'
tRp5701
(I1
(I220
I1
tg5009
I00
(lp5702
g2795
ag2806
ag2816
ag2826
ag2836
ag2846
ag2856
ag2866
ag2876
ag2886
ag2896
ag2906
ag2916
ag2926
ag2936
ag2946
ag2956
ag2966
ag2976
ag2986
ag2996
ag3006
ag3016
ag3026
ag3036
ag3046
ag3056
ag3066
ag3076
ag3086
ag3096
ag3106
ag3116
ag3126
ag3136
ag3146
ag3156
ag3166
ag3176
ag3186
ag3196
ag3206
ag3216
ag3226
ag3236
ag3246
ag3256
ag3266
ag3276
ag3286
ag3296
ag3306
ag3316
ag3326
ag3336
ag3346
ag3356
ag3366
ag3376
ag3386
ag3396
ag3406
ag3416
ag3426
ag3436
ag3446
ag3456
ag3466
ag3476
ag3486
ag3496
ag3506
ag3516
ag3526
ag3536
ag3546
ag3556
ag3566
ag3576
ag3586
ag3596
ag3606
ag3616
ag3626
ag3636
ag3646
ag3656
ag3666
ag3676
ag3686
ag3696
ag3706
ag3716
ag3726
ag3736
ag3746
ag3756
ag3766
ag3776
ag3786
ag3796
ag3806
ag3816
ag3826
ag3836
ag3846
ag3856
ag3866
ag3876
ag3886
ag3896
ag3906
ag3916
ag3926
ag3936
ag3946
ag3956
ag3966
ag3976
ag3986
ag3996
ag4006
ag4016
ag4026
ag4036
ag4046
ag4056
ag4066
ag4076
ag4086
ag4096
ag4106
ag4116
ag4126
ag4136
ag4146
ag4156
ag4166
ag4176
ag4186
ag4196
ag4206
ag4216
ag4226
ag4236
ag4246
ag4256
ag4266
ag4276
ag4286
ag4296
ag4306
ag4316
ag4326
ag4336
ag4346
ag4356
ag4366
ag4376
ag4386
ag4396
ag4406
ag4416
ag4426
ag4436
ag4446
ag4456
ag4466
ag4476
ag4486
ag4496
ag4506
ag4516
ag4526
ag4536
ag4546
ag4556
ag4566
ag4576
ag4586
ag4596
ag4606
ag4616
ag4626
ag4636
ag4646
ag4656
ag4666
ag4676
ag4686
ag4696
ag4706
ag4716
ag4726
ag4736
ag4746
ag4756
ag4766
ag4776
ag4786
ag4796
ag4806
ag4816
ag4826
ag4836
ag4846
ag4856
ag4866
ag4876
ag4886
ag4896
ag4906
ag4916
ag4926
ag4936
ag4946
ag4956
ag4966
ag4976
ag4986
atbsg31
g5017
(g5018
g5007
g5019
S'b'
tRp5703
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5017
(g5018
g5007
g5019
S'b'
tRp5704
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5017
(g5018
g5007
g5019
S'b'
tRp5705
(I1
(I220
I1
tg5021
I00
S'\x86S\xb0?\xa4 \xb6?\x82\x1f\x08@2S\x9a?PT\x9e?\x94\x8b\xeb?~\x90\xcd?~\xab\x1e@\xaf\x96\xba@Bb\xab?\x02\xa0\x9c?\x1bF7@\xca\xde\xc2?NA\xf2?H\xf7\x95?b\x13\xd8@|\xd5\x91@\xae\x9f\xbc?\xb4\x1d\xa9?\xec\xe3\xcf?;\xe4?@\n\x9c\xbc?\xaf\xeb?@\xd4\xf0P@\x81\xb0\xa6@\x9ae\xe9?6\xcc\xc0?\xfa\x03\x87?\xe0\xc0\x02@\x95\x9eK@X\xad\x82?\xe6=\x18@\xe8\xe3\xc0?\x06\xce\x82@\xd0\xd1\xa4?\xa4\xc8\x11@\x90\x9dg@B*\xa7?\xd7\x8af@\x02fs@\xbf\x0eQ@0\xfc\xde?{-\x9f@PW\xc7?6\xb2\xe9?\xb94(@\xad\x08\'A\xfe\x9aw@`\xa5b?,d\xd6?\x98\xf4\x97?R\xf0\x13@\x97W\xaf@\xa6\x0f\xa7?0-\xb6?\x16\x1b\xc5?\x1b\x82*@\xa4\xfe\x14@\xb2|\x8f?z\xfe\xa4?&\xc1\xa7@\xb4\xe2\xb1?\x06\xd7\xa2?\x9c\x9f\x9e?ng\xc9?`g\x8b@Df\xbc?\xc9!&@Qg\x0b@g\x9c\x01@\x98\x89\x1d@v]\x8b@\x14\xa9\x9e? \x93\xbc?)\xec\x14@GK\xb6@\xba\x17\x80@\x16\xc5.@\x10x\xd6?\xc4\x08\x89?JB\x9a?G\x8d\x01@l\xec!A\xb6\x1b\x8b?\x9e\xbe\x82?\xed\r\x16@\x16o\x0c@\x12K\xb8?D\x8f\xd8?\xbc:\x90@r5\xb8?\x07\xb7\x01@\x0e\xbe\xbe?\x83-q@\xecP\xc7?8\xa9\xbc?P\xa3\xbc?\xb3%D@F\xbd\x81@\x89\x89\xa3@\xc6\x89\xc9?\xab\xcaL@\xf5\xd2 @Jf\xc9?S\xbe\xc4@l\xf0k@\xc4\x94\xbc?\x18\xcd\xdc?\x95\x0b\x16@\x18\x9d\xd8?\xbd\xe4M@\x0c{\x9e?\xc7\xe5\x8b@k|9@\xa6(\x17@\xf6\t\x86@\xe2~\xd8?\xa6\x0e4@\nh\x80?\x91\xea\x13@\x8d\x0c\x95@\xf6\xcf\xaf?>\\\x9c?\xa6}9@\x10?\xa9?(\xeb\xed?\xbem0A\x9cP\x9a?\xce\xfa\xde?\xde\xa8\xcf?\xfa\x9a\x8f?\x1c\xe7\xc0?\x8c\xf3\xcf?JH\x91@W\xe8m@Ny\x9c?\xaa\x9a\x84?\xb4\xaa\xcd?\x1c\xe1\x99@n\xa8\xbc?\x904\xd4?\xba\xbc\xaf?P7\xf2?\x87\xc1=@\x82:\x8b?\x08\xb6\xf8?\x04v\xc7?\x18\x92\xcf?\x15\x8c:@p\xad\xbc?\xcb\xbe>@-$6@\xfb;\x1a@\x1c\xb8k?I0T@\xba\x1e\xa5@\x81\x95\x00@\xca\xa6\x0f@\xfc\x18\xa7?P\'\x97@Q\xf8{@\xa04\xd4?\xc2\xbb\xc0?\x8a\xe7\xde?\xce\xfc\x86?Xr\xad?\x95\xba\x1f@\xd4\x14\xe1?T\xc3=@q\x1d\x9e@\x14\x94\x80?B\xec\xde?\xd4\xa2\xda?\xd6\x0e\x8e@\x18X\xab?\xe6\x1f%@VR\x8b?\x0eJ\x80?\xbc\x1f\x08@]PT@(\xe2\x92@CT\xe3@\xbc)\xa7?^\xf8\x95?`\xe6\x12@\xc8\xd0j@\\\x03\xb2@,^\xd6?&\xe4\xcf?HPt?j\x1f\x89?2\xab-@\x93\xfc1@\x90\x10\xa7?\xd3M\n@v7\x8b?.]\xe5?\xc0\x1c\xa7?\xa4\xfb\xed?6\xd0!@\xe1\x08_@\xa0\x86\x91?\x0c\xaf\xc0?\xf4\xa8\x10@(\xb7\xc3@\x10\xaa\xa2?\\\xe9Q?v5\xc5?G\x90\x9c@\xb6\xa5\xbc?\xd0\xb4\xbe?\xc8 \x89?"2p@\xea\xb9\xcf?\xa8\xd5o?\xe3\xc1k@Z\xf7\x95?\xd25\x8b?:u\x1c@\xdb\xe0\\@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5032
g5017
(g5018
g5007
g5019
S'b'
tRp5706
(I1
(I220
I1
tg5021
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5707
(dp5708
g5036
(dp5709
g31
I01
sg5016
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5032
I01
ssg5038
g5691
sg5039
(lp5710
g5016
ag5032
ag28
ag29
ag30
ag31
ag32
ag33
asg5041
(lp5711
I220
aI1
asbsg5043
g5248
sg5045
g5006
(g5007
(I0
tS'b'
tRp5712
(I1
(I220
I1
tg587
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5048
I01
sg5049
I1
sg5050
I-1
sg5051
(lp5713
g1
(g5053
g5004
(dp5714
g2796
g2797
sg2792
g2793
stRp5715
ag1
(g5053
g5004
(dp5716
g2796
g2807
sg2792
g2804
stRp5717
ag1
(g5053
g5004
(dp5718
g2796
g2817
sg2792
g2814
stRp5719
ag1
(g5053
g5004
(dp5720
g2796
g2827
sg2792
g2824
stRp5721
ag1
(g5053
g5004
(dp5722
g2796
g2837
sg2792
g2834
stRp5723
ag1
(g5053
g5004
(dp5724
g2796
g2847
sg2792
g2844
stRp5725
ag1
(g5053
g5004
(dp5726
g2796
g2857
sg2792
g2854
stRp5727
ag1
(g5053
g5004
(dp5728
g2796
g2867
sg2792
g2864
stRp5729
ag1
(g5053
g5004
(dp5730
g2796
g2877
sg2792
g2874
stRp5731
ag1
(g5053
g5004
(dp5732
g2796
g2887
sg2792
g2884
stRp5733
ag1
(g5053
g5004
(dp5734
g2796
g2897
sg2792
g2894
stRp5735
ag1
(g5053
g5004
(dp5736
g2796
g2907
sg2792
g2904
stRp5737
ag1
(g5053
g5004
(dp5738
g2796
g2917
sg2792
g2914
stRp5739
ag1
(g5053
g5004
(dp5740
g2796
g2927
sg2792
g2924
stRp5741
ag1
(g5053
g5004
(dp5742
g2796
g2937
sg2792
g2934
stRp5743
ag1
(g5053
g5004
(dp5744
g2796
g2947
sg2792
g2944
stRp5745
ag1
(g5053
g5004
(dp5746
g2796
g2957
sg2792
g2954
stRp5747
ag1
(g5053
g5004
(dp5748
g2796
g2967
sg2792
g2964
stRp5749
ag1
(g5053
g5004
(dp5750
g2796
g2977
sg2792
g2974
stRp5751
ag1
(g5053
g5004
(dp5752
g2796
g2987
sg2792
g2984
stRp5753
ag1
(g5053
g5004
(dp5754
g2796
g2997
sg2792
g2994
stRp5755
ag1
(g5053
g5004
(dp5756
g2796
g3007
sg2792
g3004
stRp5757
ag1
(g5053
g5004
(dp5758
g2796
g3017
sg2792
g3014
stRp5759
ag1
(g5053
g5004
(dp5760
g2796
g3027
sg2792
g3024
stRp5761
ag1
(g5053
g5004
(dp5762
g2796
g3037
sg2792
g3034
stRp5763
ag1
(g5053
g5004
(dp5764
g2796
g3047
sg2792
g3044
stRp5765
ag1
(g5053
g5004
(dp5766
g2796
g3057
sg2792
g3054
stRp5767
ag1
(g5053
g5004
(dp5768
g2796
g3067
sg2792
g3064
stRp5769
ag1
(g5053
g5004
(dp5770
g2796
g3077
sg2792
g3074
stRp5771
ag1
(g5053
g5004
(dp5772
g2796
g3087
sg2792
g3084
stRp5773
ag1
(g5053
g5004
(dp5774
g2796
g3097
sg2792
g3094
stRp5775
ag1
(g5053
g5004
(dp5776
g2796
g3107
sg2792
g3104
stRp5777
ag1
(g5053
g5004
(dp5778
g2796
g3117
sg2792
g3114
stRp5779
ag1
(g5053
g5004
(dp5780
g2796
g3127
sg2792
g3124
stRp5781
ag1
(g5053
g5004
(dp5782
g2796
g3137
sg2792
g3134
stRp5783
ag1
(g5053
g5004
(dp5784
g2796
g3147
sg2792
g3144
stRp5785
ag1
(g5053
g5004
(dp5786
g2796
g3157
sg2792
g3154
stRp5787
ag1
(g5053
g5004
(dp5788
g2796
g3167
sg2792
g3164
stRp5789
ag1
(g5053
g5004
(dp5790
g2796
g3177
sg2792
g3174
stRp5791
ag1
(g5053
g5004
(dp5792
g2796
g3187
sg2792
g3184
stRp5793
ag1
(g5053
g5004
(dp5794
g2796
g3197
sg2792
g3194
stRp5795
ag1
(g5053
g5004
(dp5796
g2796
g3207
sg2792
g3204
stRp5797
ag1
(g5053
g5004
(dp5798
g2796
g3217
sg2792
g3214
stRp5799
ag1
(g5053
g5004
(dp5800
g2796
g3227
sg2792
g3224
stRp5801
ag1
(g5053
g5004
(dp5802
g2796
g3237
sg2792
g3234
stRp5803
ag1
(g5053
g5004
(dp5804
g2796
g3247
sg2792
g3244
stRp5805
ag1
(g5053
g5004
(dp5806
g2796
g3257
sg2792
g3254
stRp5807
ag1
(g5053
g5004
(dp5808
g2796
g3267
sg2792
g3264
stRp5809
ag1
(g5053
g5004
(dp5810
g2796
g3277
sg2792
g3274
stRp5811
ag1
(g5053
g5004
(dp5812
g2796
g3287
sg2792
g3284
stRp5813
ag1
(g5053
g5004
(dp5814
g2796
g3297
sg2792
g3294
stRp5815
ag1
(g5053
g5004
(dp5816
g2796
g3307
sg2792
g3304
stRp5817
ag1
(g5053
g5004
(dp5818
g2796
g3317
sg2792
g3314
stRp5819
ag1
(g5053
g5004
(dp5820
g2796
g3327
sg2792
g3324
stRp5821
ag1
(g5053
g5004
(dp5822
g2796
g3337
sg2792
g3334
stRp5823
ag1
(g5053
g5004
(dp5824
g2796
g3347
sg2792
g3344
stRp5825
ag1
(g5053
g5004
(dp5826
g2796
g3357
sg2792
g3354
stRp5827
ag1
(g5053
g5004
(dp5828
g2796
g3367
sg2792
g3364
stRp5829
ag1
(g5053
g5004
(dp5830
g2796
g3377
sg2792
g3374
stRp5831
ag1
(g5053
g5004
(dp5832
g2796
g3387
sg2792
g3384
stRp5833
ag1
(g5053
g5004
(dp5834
g2796
g3397
sg2792
g3394
stRp5835
ag1
(g5053
g5004
(dp5836
g2796
g3407
sg2792
g3404
stRp5837
ag1
(g5053
g5004
(dp5838
g2796
g3417
sg2792
g3414
stRp5839
ag1
(g5053
g5004
(dp5840
g2796
g3427
sg2792
g3424
stRp5841
ag1
(g5053
g5004
(dp5842
g2796
g3437
sg2792
g3434
stRp5843
ag1
(g5053
g5004
(dp5844
g2796
g3447
sg2792
g3444
stRp5845
ag1
(g5053
g5004
(dp5846
g2796
g3457
sg2792
g3454
stRp5847
ag1
(g5053
g5004
(dp5848
g2796
g3467
sg2792
g3464
stRp5849
ag1
(g5053
g5004
(dp5850
g2796
g3477
sg2792
g3474
stRp5851
ag1
(g5053
g5004
(dp5852
g2796
g3487
sg2792
g3484
stRp5853
ag1
(g5053
g5004
(dp5854
g2796
g3497
sg2792
g3494
stRp5855
ag1
(g5053
g5004
(dp5856
g2796
g3507
sg2792
g3504
stRp5857
ag1
(g5053
g5004
(dp5858
g2796
g3517
sg2792
g3514
stRp5859
ag1
(g5053
g5004
(dp5860
g2796
g3527
sg2792
g3524
stRp5861
ag1
(g5053
g5004
(dp5862
g2796
g3537
sg2792
g3534
stRp5863
ag1
(g5053
g5004
(dp5864
g2796
g3547
sg2792
g3544
stRp5865
ag1
(g5053
g5004
(dp5866
g2796
g3557
sg2792
g3554
stRp5867
ag1
(g5053
g5004
(dp5868
g2796
g3567
sg2792
g3564
stRp5869
ag1
(g5053
g5004
(dp5870
g2796
g3577
sg2792
g3574
stRp5871
ag1
(g5053
g5004
(dp5872
g2796
g3587
sg2792
g3584
stRp5873
ag1
(g5053
g5004
(dp5874
g2796
g3597
sg2792
g3594
stRp5875
ag1
(g5053
g5004
(dp5876
g2796
g3607
sg2792
g3604
stRp5877
ag1
(g5053
g5004
(dp5878
g2796
g3617
sg2792
g3614
stRp5879
ag1
(g5053
g5004
(dp5880
g2796
g3627
sg2792
g3624
stRp5881
ag1
(g5053
g5004
(dp5882
g2796
g3637
sg2792
g3634
stRp5883
ag1
(g5053
g5004
(dp5884
g2796
g3647
sg2792
g3644
stRp5885
ag1
(g5053
g5004
(dp5886
g2796
g3657
sg2792
g3654
stRp5887
ag1
(g5053
g5004
(dp5888
g2796
g3667
sg2792
g3664
stRp5889
ag1
(g5053
g5004
(dp5890
g2796
g3677
sg2792
g3674
stRp5891
ag1
(g5053
g5004
(dp5892
g2796
g3687
sg2792
g3684
stRp5893
ag1
(g5053
g5004
(dp5894
g2796
g3697
sg2792
g3694
stRp5895
ag1
(g5053
g5004
(dp5896
g2796
g3707
sg2792
g3704
stRp5897
ag1
(g5053
g5004
(dp5898
g2796
g3717
sg2792
g3714
stRp5899
ag1
(g5053
g5004
(dp5900
g2796
g3727
sg2792
g3724
stRp5901
ag1
(g5053
g5004
(dp5902
g2796
g3737
sg2792
g3734
stRp5903
ag1
(g5053
g5004
(dp5904
g2796
g3747
sg2792
g3744
stRp5905
ag1
(g5053
g5004
(dp5906
g2796
g3757
sg2792
g3754
stRp5907
ag1
(g5053
g5004
(dp5908
g2796
g3767
sg2792
g3764
stRp5909
ag1
(g5053
g5004
(dp5910
g2796
g3777
sg2792
g3774
stRp5911
ag1
(g5053
g5004
(dp5912
g2796
g3787
sg2792
g3784
stRp5913
ag1
(g5053
g5004
(dp5914
g2796
g3797
sg2792
g3794
stRp5915
ag1
(g5053
g5004
(dp5916
g2796
g3807
sg2792
g3804
stRp5917
ag1
(g5053
g5004
(dp5918
g2796
g3817
sg2792
g3814
stRp5919
ag1
(g5053
g5004
(dp5920
g2796
g3827
sg2792
g3824
stRp5921
ag1
(g5053
g5004
(dp5922
g2796
g3837
sg2792
g3834
stRp5923
ag1
(g5053
g5004
(dp5924
g2796
g3847
sg2792
g3844
stRp5925
ag1
(g5053
g5004
(dp5926
g2796
g3857
sg2792
g3854
stRp5927
ag1
(g5053
g5004
(dp5928
g2796
g3867
sg2792
g3864
stRp5929
ag1
(g5053
g5004
(dp5930
g2796
g3877
sg2792
g3874
stRp5931
ag1
(g5053
g5004
(dp5932
g2796
g3887
sg2792
g3884
stRp5933
ag1
(g5053
g5004
(dp5934
g2796
g3897
sg2792
g3894
stRp5935
ag1
(g5053
g5004
(dp5936
g2796
g3907
sg2792
g3904
stRp5937
ag1
(g5053
g5004
(dp5938
g2796
g3917
sg2792
g3914
stRp5939
ag1
(g5053
g5004
(dp5940
g2796
g3927
sg2792
g3924
stRp5941
ag1
(g5053
g5004
(dp5942
g2796
g3937
sg2792
g3934
stRp5943
ag1
(g5053
g5004
(dp5944
g2796
g3947
sg2792
g3944
stRp5945
ag1
(g5053
g5004
(dp5946
g2796
g3957
sg2792
g3954
stRp5947
ag1
(g5053
g5004
(dp5948
g2796
g3967
sg2792
g3964
stRp5949
ag1
(g5053
g5004
(dp5950
g2796
g3977
sg2792
g3974
stRp5951
ag1
(g5053
g5004
(dp5952
g2796
g3987
sg2792
g3984
stRp5953
ag1
(g5053
g5004
(dp5954
g2796
g3997
sg2792
g3994
stRp5955
ag1
(g5053
g5004
(dp5956
g2796
g4007
sg2792
g4004
stRp5957
ag1
(g5053
g5004
(dp5958
g2796
g4017
sg2792
g4014
stRp5959
ag1
(g5053
g5004
(dp5960
g2796
g4027
sg2792
g4024
stRp5961
ag1
(g5053
g5004
(dp5962
g2796
g4037
sg2792
g4034
stRp5963
ag1
(g5053
g5004
(dp5964
g2796
g4047
sg2792
g4044
stRp5965
ag1
(g5053
g5004
(dp5966
g2796
g4057
sg2792
g4054
stRp5967
ag1
(g5053
g5004
(dp5968
g2796
g4067
sg2792
g4064
stRp5969
ag1
(g5053
g5004
(dp5970
g2796
g4077
sg2792
g4074
stRp5971
ag1
(g5053
g5004
(dp5972
g2796
g4087
sg2792
g4084
stRp5973
ag1
(g5053
g5004
(dp5974
g2796
g4097
sg2792
g4094
stRp5975
ag1
(g5053
g5004
(dp5976
g2796
g4107
sg2792
g4104
stRp5977
ag1
(g5053
g5004
(dp5978
g2796
g4117
sg2792
g4114
stRp5979
ag1
(g5053
g5004
(dp5980
g2796
g4127
sg2792
g4124
stRp5981
ag1
(g5053
g5004
(dp5982
g2796
g4137
sg2792
g4134
stRp5983
ag1
(g5053
g5004
(dp5984
g2796
g4147
sg2792
g4144
stRp5985
ag1
(g5053
g5004
(dp5986
g2796
g4157
sg2792
g4154
stRp5987
ag1
(g5053
g5004
(dp5988
g2796
g4167
sg2792
g4164
stRp5989
ag1
(g5053
g5004
(dp5990
g2796
g4177
sg2792
g4174
stRp5991
ag1
(g5053
g5004
(dp5992
g2796
g4187
sg2792
g4184
stRp5993
ag1
(g5053
g5004
(dp5994
g2796
g4197
sg2792
g4194
stRp5995
ag1
(g5053
g5004
(dp5996
g2796
g4207
sg2792
g4204
stRp5997
ag1
(g5053
g5004
(dp5998
g2796
g4217
sg2792
g4214
stRp5999
ag1
(g5053
g5004
(dp6000
g2796
g4227
sg2792
g4224
stRp6001
ag1
(g5053
g5004
(dp6002
g2796
g4237
sg2792
g4234
stRp6003
ag1
(g5053
g5004
(dp6004
g2796
g4247
sg2792
g4244
stRp6005
ag1
(g5053
g5004
(dp6006
g2796
g4257
sg2792
g4254
stRp6007
ag1
(g5053
g5004
(dp6008
g2796
g4267
sg2792
g4264
stRp6009
ag1
(g5053
g5004
(dp6010
g2796
g4277
sg2792
g4274
stRp6011
ag1
(g5053
g5004
(dp6012
g2796
g4287
sg2792
g4284
stRp6013
ag1
(g5053
g5004
(dp6014
g2796
g4297
sg2792
g4294
stRp6015
ag1
(g5053
g5004
(dp6016
g2796
g4307
sg2792
g4304
stRp6017
ag1
(g5053
g5004
(dp6018
g2796
g4317
sg2792
g4314
stRp6019
ag1
(g5053
g5004
(dp6020
g2796
g4327
sg2792
g4324
stRp6021
ag1
(g5053
g5004
(dp6022
g2796
g4337
sg2792
g4334
stRp6023
ag1
(g5053
g5004
(dp6024
g2796
g4347
sg2792
g4344
stRp6025
ag1
(g5053
g5004
(dp6026
g2796
g4357
sg2792
g4354
stRp6027
ag1
(g5053
g5004
(dp6028
g2796
g4367
sg2792
g4364
stRp6029
ag1
(g5053
g5004
(dp6030
g2796
g4377
sg2792
g4374
stRp6031
ag1
(g5053
g5004
(dp6032
g2796
g4387
sg2792
g4384
stRp6033
ag1
(g5053
g5004
(dp6034
g2796
g4397
sg2792
g4394
stRp6035
ag1
(g5053
g5004
(dp6036
g2796
g4407
sg2792
g4404
stRp6037
ag1
(g5053
g5004
(dp6038
g2796
g4417
sg2792
g4414
stRp6039
ag1
(g5053
g5004
(dp6040
g2796
g4427
sg2792
g4424
stRp6041
ag1
(g5053
g5004
(dp6042
g2796
g4437
sg2792
g4434
stRp6043
ag1
(g5053
g5004
(dp6044
g2796
g4447
sg2792
g4444
stRp6045
ag1
(g5053
g5004
(dp6046
g2796
g4457
sg2792
g4454
stRp6047
ag1
(g5053
g5004
(dp6048
g2796
g4467
sg2792
g4464
stRp6049
ag1
(g5053
g5004
(dp6050
g2796
g4477
sg2792
g4474
stRp6051
ag1
(g5053
g5004
(dp6052
g2796
g4487
sg2792
g4484
stRp6053
ag1
(g5053
g5004
(dp6054
g2796
g4497
sg2792
g4494
stRp6055
ag1
(g5053
g5004
(dp6056
g2796
g4507
sg2792
g4504
stRp6057
ag1
(g5053
g5004
(dp6058
g2796
g4517
sg2792
g4514
stRp6059
ag1
(g5053
g5004
(dp6060
g2796
g4527
sg2792
g4524
stRp6061
ag1
(g5053
g5004
(dp6062
g2796
g4537
sg2792
g4534
stRp6063
ag1
(g5053
g5004
(dp6064
g2796
g4547
sg2792
g4544
stRp6065
ag1
(g5053
g5004
(dp6066
g2796
g4557
sg2792
g4554
stRp6067
ag1
(g5053
g5004
(dp6068
g2796
g4567
sg2792
g4564
stRp6069
ag1
(g5053
g5004
(dp6070
g2796
g4577
sg2792
g4574
stRp6071
ag1
(g5053
g5004
(dp6072
g2796
g4587
sg2792
g4584
stRp6073
ag1
(g5053
g5004
(dp6074
g2796
g4597
sg2792
g4594
stRp6075
ag1
(g5053
g5004
(dp6076
g2796
g4607
sg2792
g4604
stRp6077
ag1
(g5053
g5004
(dp6078
g2796
g4617
sg2792
g4614
stRp6079
ag1
(g5053
g5004
(dp6080
g2796
g4627
sg2792
g4624
stRp6081
ag1
(g5053
g5004
(dp6082
g2796
g4637
sg2792
g4634
stRp6083
ag1
(g5053
g5004
(dp6084
g2796
g4647
sg2792
g4644
stRp6085
ag1
(g5053
g5004
(dp6086
g2796
g4657
sg2792
g4654
stRp6087
ag1
(g5053
g5004
(dp6088
g2796
g4667
sg2792
g4664
stRp6089
ag1
(g5053
g5004
(dp6090
g2796
g4677
sg2792
g4674
stRp6091
ag1
(g5053
g5004
(dp6092
g2796
g4687
sg2792
g4684
stRp6093
ag1
(g5053
g5004
(dp6094
g2796
g4697
sg2792
g4694
stRp6095
ag1
(g5053
g5004
(dp6096
g2796
g4707
sg2792
g4704
stRp6097
ag1
(g5053
g5004
(dp6098
g2796
g4717
sg2792
g4714
stRp6099
ag1
(g5053
g5004
(dp6100
g2796
g4727
sg2792
g4724
stRp6101
ag1
(g5053
g5004
(dp6102
g2796
g4737
sg2792
g4734
stRp6103
ag1
(g5053
g5004
(dp6104
g2796
g4747
sg2792
g4744
stRp6105
ag1
(g5053
g5004
(dp6106
g2796
g4757
sg2792
g4754
stRp6107
ag1
(g5053
g5004
(dp6108
g2796
g4767
sg2792
g4764
stRp6109
ag1
(g5053
g5004
(dp6110
g2796
g4777
sg2792
g4774
stRp6111
ag1
(g5053
g5004
(dp6112
g2796
g4787
sg2792
g4784
stRp6113
ag1
(g5053
g5004
(dp6114
g2796
g4797
sg2792
g4794
stRp6115
ag1
(g5053
g5004
(dp6116
g2796
g4807
sg2792
g4804
stRp6117
ag1
(g5053
g5004
(dp6118
g2796
g4817
sg2792
g4814
stRp6119
ag1
(g5053
g5004
(dp6120
g2796
g4827
sg2792
g4824
stRp6121
ag1
(g5053
g5004
(dp6122
g2796
g4837
sg2792
g4834
stRp6123
ag1
(g5053
g5004
(dp6124
g2796
g4847
sg2792
g4844
stRp6125
ag1
(g5053
g5004
(dp6126
g2796
g4857
sg2792
g4854
stRp6127
ag1
(g5053
g5004
(dp6128
g2796
g4867
sg2792
g4864
stRp6129
ag1
(g5053
g5004
(dp6130
g2796
g4877
sg2792
g4874
stRp6131
ag1
(g5053
g5004
(dp6132
g2796
g4887
sg2792
g4884
stRp6133
ag1
(g5053
g5004
(dp6134
g2796
g4897
sg2792
g4894
stRp6135
ag1
(g5053
g5004
(dp6136
g2796
g4907
sg2792
g4904
stRp6137
ag1
(g5053
g5004
(dp6138
g2796
g4917
sg2792
g4914
stRp6139
ag1
(g5053
g5004
(dp6140
g2796
g4927
sg2792
g4924
stRp6141
ag1
(g5053
g5004
(dp6142
g2796
g4937
sg2792
g4934
stRp6143
ag1
(g5053
g5004
(dp6144
g2796
g4947
sg2792
g4944
stRp6145
ag1
(g5053
g5004
(dp6146
g2796
g4957
sg2792
g4954
stRp6147
ag1
(g5053
g5004
(dp6148
g2796
g4967
sg2792
g4964
stRp6149
ag1
(g5053
g5004
(dp6150
g2796
g4977
sg2792
g4974
stRp6151
ag1
(g5053
g5004
(dp6152
g2796
g4987
sg2792
g4984
stRp6153
asg5222
Nsg5223
g4981
sg5224
I220
sg5225
I0
sg5226
I220
sg5227
I01
sbasS'savePickle'
p6154
I00
sb.