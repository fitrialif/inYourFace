ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/G_3_facesParametric_2015_Sep_10_0937
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
asS'autoLog'
p36
I01
sS'extraInfo'
p37
(dp38
S'date'
p39
V2015_Sep_10_0937
p40
sVgroup
p41
VG
sS'expName'
p42
g11
sVparticipant
p43
V3
sS'frameRate'
p44
cnumpy.core.multiarray
scalar
p45
(cnumpy
dtype
p46
(S'f8'
I0
I1
tRp47
(I3
S'<'
NNNI-1
I-1
I0
tbS'.r\x06\xba\x98\xe7M@'
tRp48
ssS'loopsUnfinished'
p49
(lp50
sS'saveWideText'
p51
I01
sS'thisEntry'
p52
(dp53
sS'version'
p54
S''
sS'_paramNamesSoFar'
p55
(lp56
S'img'
p57
aS'num'
p58
asS'entries'
p59
(lp60
(dp61
g15
F80.77660608291626
sg42
g11
sg41
VG
sg39
g40
sg43
V3
sg44
g48
sg14
S'return'
p62
sa(dp63
g16
Nsg18
Nsg57
S'./basicStim/09F_SP_O.jpg'
p64
sg21
F9.1449999999999996
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p65
I0
sg42
g11
sS'basicLoop.thisRepN'
p66
I0
sg20
S'SUP'
p67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p68
I0
sS'basicLoop.thisIndex'
p69
I40
sa(dp70
g16
S'SAD'
p71
sg18
Nsg57
S'./basicStim/03F_SA_C.jpg'
p72
sg21
Nsg19
Nsg17
F1.75
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p73
I1
sg42
g11
sS'basicLoop.thisRepN'
p74
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p75
I1
sS'basicLoop.thisIndex'
p76
I18
sa(dp77
g16
Nsg18
Nsg57
S'./basicStim/02F_NE_C.jpg'
p78
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F14.379
sg22
S'NTR'
p79
sS'basicLoop.thisTrialN'
p80
I2
sg42
g11
sS'basicLoop.thisRepN'
p81
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p82
I2
sS'basicLoop.thisIndex'
p83
I13
sa(dp84
g16
Nsg18
S'FEA'
p85
sg57
S'./basicStim/34M_FE_O.jpg'
p86
sg21
Nsg19
F4.681
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p87
I3
sg42
g11
sS'basicLoop.thisRepN'
p88
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p89
I3
sS'basicLoop.thisIndex'
p90
I72
sa(dp91
g16
Nsg18
Nsg57
S'./basicStim/34M_NE_C.jpg'
p92
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F5.1139999999999999
sg22
g79
sS'basicLoop.thisTrialN'
p93
I4
sg42
g11
sS'basicLoop.thisRepN'
p94
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p95
I4
sS'basicLoop.thisIndex'
p96
I76
sa(dp97
g16
Nsg18
S'ANG'
p98
sg57
S'./basicStim/21M_AN_O.jpg'
p99
sg21
Nsg19
F2.1640000000000001
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p100
I5
sg42
g11
sS'basicLoop.thisRepN'
p101
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p102
I5
sS'basicLoop.thisIndex'
p103
I42
sa(dp104
g16
Nsg18
Nsg57
S'./basicStim/21M_FE_O.jpg'
p105
sg21
F1.3600000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p106
I6
sg42
g11
sS'basicLoop.thisRepN'
p107
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p108
I6
sS'basicLoop.thisIndex'
p109
I44
sa(dp110
g16
S'HAP'
p111
sg18
Nsg57
S'./basicStim/36M_HA_O.jpg'
p112
sg21
Nsg19
Nsg17
F2.5600000000000001
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p113
I7
sg42
g11
sS'basicLoop.thisRepN'
p114
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p115
I7
sS'basicLoop.thisIndex'
p116
I80
sa(dp117
g16
g71
sg18
Nsg57
S'./basicStim/07F_NE_C.jpg'
p118
sg21
Nsg19
Nsg17
F2.9740000000000002
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p119
I8
sg42
g11
sS'basicLoop.thisRepN'
p120
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p121
I8
sS'basicLoop.thisIndex'
p122
I34
sa(dp123
g16
Nsg18
Nsg57
S'./basicStim/24M_FE_O.jpg'
p124
sg21
F8.7859999999999996
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p125
I9
sg42
g11
sS'basicLoop.thisRepN'
p126
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p127
I9
sS'basicLoop.thisIndex'
p128
I58
sa(dp129
g16
g71
sg18
Nsg57
S'./basicStim/01F_SA_C.jpg'
p130
sg21
Nsg19
Nsg17
F4.8849999999999998
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p131
I10
sg42
g11
sS'basicLoop.thisRepN'
p132
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p133
I10
sS'basicLoop.thisIndex'
p134
I4
sa(dp135
g16
g71
sg18
Nsg57
S'./basicStim/02F_SA_C.jpg'
p136
sg21
Nsg19
Nsg17
F1.379
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p137
I11
sg42
g11
sS'basicLoop.thisRepN'
p138
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p139
I11
sS'basicLoop.thisIndex'
p140
I11
sa(dp141
g16
Nsg18
Nsg57
S'./basicStim/36M_NE_C.jpg'
p142
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F5.3499999999999996
sg22
g79
sS'basicLoop.thisTrialN'
p143
I12
sg42
g11
sS'basicLoop.thisRepN'
p144
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p145
I12
sS'basicLoop.thisIndex'
p146
I83
sa(dp147
g16
Nsg18
Nsg57
S'./basicStim/09F_FE_O.jpg'
p148
sg21
F6.9710000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p149
I13
sg42
g11
sS'basicLoop.thisRepN'
p150
I0
sg20
S'DIS'
p151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p152
I13
sS'basicLoop.thisIndex'
p153
I37
sa(dp154
g16
Nsg18
g85
sg57
S'./basicStim/06F_AN_O.jpg'
p155
sg21
Nsg19
F17.289000000000001
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p156
I14
sg42
g11
sS'basicLoop.thisRepN'
p157
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p158
I14
sS'basicLoop.thisIndex'
p159
I21
sa(dp160
g16
Nsg18
g85
sg57
S'./basicStim/01F_FE_O.jpg'
p161
sg21
Nsg19
F3.488
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p162
I15
sg42
g11
sS'basicLoop.thisRepN'
p163
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p164
I15
sS'basicLoop.thisIndex'
p165
I2
sa(dp166
g16
g111
sg18
Nsg57
S'./basicStim/24M_HA_O.jpg'
p167
sg21
Nsg19
Nsg17
F1.113
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p168
I16
sg42
g11
sS'basicLoop.thisRepN'
p169
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p170
I16
sS'basicLoop.thisIndex'
p171
I59
sa(dp172
g16
Nsg18
Nsg57
S'./basicStim/03F_DI_O.jpg'
p173
sg21
F1.2929999999999999
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p174
I17
sg42
g11
sS'basicLoop.thisRepN'
p175
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p176
I17
sS'basicLoop.thisIndex'
p177
I15
sa(dp178
g16
Nsg18
Nsg57
S'./basicStim/09F_NE_C.jpg'
p179
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F1.861
sg22
g79
sS'basicLoop.thisTrialN'
p180
I18
sg42
g11
sS'basicLoop.thisRepN'
p181
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p182
I18
sS'basicLoop.thisIndex'
p183
I41
sa(dp184
g16
Nsg18
g98
sg57
S'./basicStim/24M_AN_O.jpg'
p185
sg21
Nsg19
F3.4260000000000002
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p186
I19
sg42
g11
sS'basicLoop.thisRepN'
p187
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p188
I19
sS'basicLoop.thisIndex'
p189
I56
sa(dp190
g16
Nsg18
Nsg57
S'./basicStim/09F_DI_O.jpg'
p191
sg21
F15.552
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p192
I20
sg42
g11
sS'basicLoop.thisRepN'
p193
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p194
I20
sS'basicLoop.thisIndex'
p195
I36
sa(dp196
g16
g111
sg18
Nsg57
S'./basicStim/23M_HA_O.jpg'
p197
sg21
Nsg19
Nsg17
F1.7649999999999999
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p198
I21
sg42
g11
sS'basicLoop.thisRepN'
p199
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p200
I21
sS'basicLoop.thisIndex'
p201
I52
sa(dp202
g16
g71
sg18
Nsg57
S'./basicStim/07F_SA_C.jpg'
p203
sg21
Nsg19
Nsg17
F24.422000000000001
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p204
I22
sg42
g11
sS'basicLoop.thisRepN'
p205
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p206
I22
sS'basicLoop.thisIndex'
p207
I32
sa(dp208
g16
Nsg18
Nsg57
S'./basicStim/02F_FE_O.jpg'
p209
sg21
F1.962
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p210
I23
sg42
g11
sS'basicLoop.thisRepN'
p211
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p212
I23
sS'basicLoop.thisIndex'
p213
I9
sa(dp214
g16
Nsg18
g98
sg57
S'./basicStim/02F_AN_O.jpg'
p215
sg21
Nsg19
F1.7969999999999999
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p216
I24
sg42
g11
sS'basicLoop.thisRepN'
p217
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p218
I24
sS'basicLoop.thisIndex'
p219
I7
sa(dp220
g16
Nsg18
Nsg57
S'./basicStim/23M_SP_O.jpg'
p221
sg21
F2.9529999999999998
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p222
I25
sg42
g11
sS'basicLoop.thisRepN'
p223
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p224
I25
sS'basicLoop.thisIndex'
p225
I54
sa(dp226
g16
Nsg18
Nsg57
S'./basicStim/06F_DI_O.jpg'
p227
sg21
F4.7119999999999997
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p228
I26
sg42
g11
sS'basicLoop.thisRepN'
p229
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p230
I26
sS'basicLoop.thisIndex'
p231
I22
sa(dp232
g16
Nsg18
g85
sg57
S'./basicStim/23M_FE_O.jpg'
p233
sg21
Nsg19
F5.258
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p234
I27
sg42
g11
sS'basicLoop.thisRepN'
p235
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p236
I27
sS'basicLoop.thisIndex'
p237
I51
sa(dp238
g16
Nsg18
Nsg57
S'./basicStim/06F_NE_C.jpg'
p239
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F1.1899999999999999
sg22
g79
sS'basicLoop.thisTrialN'
p240
I28
sg42
g11
sS'basicLoop.thisRepN'
p241
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p242
I28
sS'basicLoop.thisIndex'
p243
I27
sa(dp244
g16
Nsg18
g98
sg57
S'./basicStim/28M_AN_O.jpg'
p245
sg21
Nsg19
F2.282
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p246
I29
sg42
g11
sS'basicLoop.thisRepN'
p247
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p248
I29
sS'basicLoop.thisIndex'
p249
I63
sa(dp250
g16
Nsg18
Nsg57
S'./basicStim/24M_SP_O.jpg'
p251
sg21
F19.108000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p252
I30
sg42
g11
sS'basicLoop.thisRepN'
p253
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p254
I30
sS'basicLoop.thisIndex'
p255
I61
sa(dp256
g16
Nsg18
Nsg57
S'./basicStim/03F_NE_C.jpg'
p257
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F4.5449999999999999
sg22
g79
sS'basicLoop.thisTrialN'
p258
I31
sg42
g11
sS'basicLoop.thisRepN'
p259
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p260
I31
sS'basicLoop.thisIndex'
p261
I20
sa(dp262
g16
g111
sg18
Nsg57
S'./basicStim/34M_HA_O.jpg'
p263
sg21
Nsg19
Nsg17
F1.1639999999999999
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p264
I32
sg42
g11
sS'basicLoop.thisRepN'
p265
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p266
I32
sS'basicLoop.thisIndex'
p267
I73
sa(dp268
g16
Nsg18
Nsg57
S'./basicStim/21M_DI_O.jpg'
p269
sg21
F1.6759999999999999
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p270
I33
sg42
g11
sS'basicLoop.thisRepN'
p271
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p272
I33
sS'basicLoop.thisIndex'
p273
I43
sa(dp274
g16
Nsg18
Nsg57
S'./basicStim/23M_SA_C.jpg'
p275
sg21
F11.584
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p276
I34
sg42
g11
sS'basicLoop.thisRepN'
p277
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p278
I34
sS'basicLoop.thisIndex'
p279
I53
sa(dp280
g16
Nsg18
Nsg57
S'./basicStim/34M_DI_O.jpg'
p281
sg21
F1.282
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p282
I35
sg42
g11
sS'basicLoop.thisRepN'
p283
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p284
I35
sS'basicLoop.thisIndex'
p285
I71
sa(dp286
g16
Nsg18
g98
sg57
S'./basicStim/34M_SA_C.jpg'
p287
sg21
Nsg19
F10.045
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p288
I36
sg42
g11
sS'basicLoop.thisRepN'
p289
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p290
I36
sS'basicLoop.thisIndex'
p291
I74
sa(dp292
g16
g111
sg18
Nsg57
S'./basicStim/01F_HA_O.jpg'
p293
sg21
Nsg19
Nsg17
F1.681
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p294
I37
sg42
g11
sS'basicLoop.thisRepN'
p295
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p296
I37
sS'basicLoop.thisIndex'
p297
I3
sa(dp298
g16
Nsg18
Nsg57
S'./basicStim/02F_DI_O.jpg'
p299
sg21
F4.2430000000000003
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p300
I38
sg42
g11
sS'basicLoop.thisRepN'
p301
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p302
I38
sS'basicLoop.thisIndex'
p303
I8
sa(dp304
g16
Nsg18
Nsg57
S'./basicStim/01F_DI_O.jpg'
p305
sg21
F0.59199999999999997
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p306
I39
sg42
g11
sS'basicLoop.thisRepN'
p307
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p308
I39
sS'basicLoop.thisIndex'
p309
I1
sa(dp310
g16
Nsg18
g85
sg57
S'./basicStim/36M_FE_O.jpg'
p311
sg21
Nsg19
F2.5369999999999999
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p312
I40
sg42
g11
sS'basicLoop.thisRepN'
p313
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p314
I40
sS'basicLoop.thisIndex'
p315
I79
sa(dp316
g16
Nsg18
g85
sg57
S'./basicStim/06F_FE_O.jpg'
p317
sg21
Nsg19
F0.60899999999999999
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p318
I41
sg42
g11
sS'basicLoop.thisRepN'
p319
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p320
I41
sS'basicLoop.thisIndex'
p321
I23
sa(dp322
g16
Nsg18
Nsg57
S'./basicStim/01F_NE_C.jpg'
p323
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F3.0219999999999998
sg22
g79
sS'basicLoop.thisTrialN'
p324
I42
sg42
g11
sS'basicLoop.thisRepN'
p325
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p326
I42
sS'basicLoop.thisIndex'
p327
I6
sa(dp328
g16
g111
sg18
Nsg57
S'./basicStim/07F_HA_O.jpg'
p329
sg21
Nsg19
Nsg17
F1.5800000000000001
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p330
I43
sg42
g11
sS'basicLoop.thisRepN'
p331
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p332
I43
sS'basicLoop.thisIndex'
p333
I31
sa(dp334
g16
Nsg18
g98
sg57
S'./basicStim/07F_AN_O.jpg'
p335
sg21
Nsg19
F1.8999999999999999
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p336
I44
sg42
g11
sS'basicLoop.thisRepN'
p337
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p338
I44
sS'basicLoop.thisIndex'
p339
I28
sa(dp340
g16
Nsg18
Nsg57
S'./basicStim/28M_SP_O.jpg'
p341
sg21
F1.276
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p342
I45
sg42
g11
sS'basicLoop.thisRepN'
p343
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p344
I45
sS'basicLoop.thisIndex'
p345
I68
sa(dp346
g16
Nsg18
g98
sg57
S'./basicStim/34M_AN_O.jpg'
p347
sg21
Nsg19
F0.97799999999999998
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p348
I46
sg42
g11
sS'basicLoop.thisRepN'
p349
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p350
I46
sS'basicLoop.thisIndex'
p351
I70
sa(dp352
g16
Nsg18
Nsg57
S'./basicStim/34M_SP_O.jpg'
p353
sg21
F1.107
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p354
I47
sg42
g11
sS'basicLoop.thisRepN'
p355
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p356
I47
sS'basicLoop.thisIndex'
p357
I75
sa(dp358
g16
Nsg18
g85
sg57
S'./basicStim/28M_SA_C.jpg'
p359
sg21
Nsg19
F3.7410000000000001
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p360
I48
sg42
g11
sS'basicLoop.thisRepN'
p361
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p362
I48
sS'basicLoop.thisIndex'
p363
I67
sa(dp364
g16
g111
sg18
Nsg57
S'./basicStim/06F_HA_O.jpg'
p365
sg21
Nsg19
Nsg17
F1.595
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p366
I49
sg42
g11
sS'basicLoop.thisRepN'
p367
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p368
I49
sS'basicLoop.thisIndex'
p369
I24
sa(dp370
g16
Nsg18
g98
sg57
S'./basicStim/03F_AN_O.jpg'
p371
sg21
Nsg19
F0.97799999999999998
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p372
I50
sg42
g11
sS'basicLoop.thisRepN'
p373
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p374
I50
sS'basicLoop.thisIndex'
p375
I14
sa(dp376
g16
g71
sg18
Nsg57
S'./basicStim/24M_SA_C.jpg'
p377
sg21
Nsg19
Nsg17
F2.403
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p378
I51
sg42
g11
sS'basicLoop.thisRepN'
p379
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p380
I51
sS'basicLoop.thisIndex'
p381
I60
sa(dp382
g16
Nsg18
Nsg57
S'./basicStim/24M_NE_C.jpg'
p383
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F2.0499999999999998
sg22
g79
sS'basicLoop.thisTrialN'
p384
I52
sg42
g11
sS'basicLoop.thisRepN'
p385
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p386
I52
sS'basicLoop.thisIndex'
p387
I62
sa(dp388
g16
g111
sg18
Nsg57
S'./basicStim/21M_HA_O.jpg'
p389
sg21
Nsg19
Nsg17
F0.99399999999999999
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p390
I53
sg42
g11
sS'basicLoop.thisRepN'
p391
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p392
I53
sS'basicLoop.thisIndex'
p393
I45
sa(dp394
g16
Nsg18
Nsg57
S'./basicStim/03F_FE_O.jpg'
p395
sg21
F1.5129999999999999
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p396
I54
sg42
g11
sS'basicLoop.thisRepN'
p397
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p398
I54
sS'basicLoop.thisIndex'
p399
I16
sa(dp400
g16
Nsg18
Nsg57
S'./basicStim/23M_DI_O.jpg'
p401
sg21
F10.904
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p402
I55
sg42
g11
sS'basicLoop.thisRepN'
p403
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p404
I55
sS'basicLoop.thisIndex'
p405
I50
sa(dp406
g16
Nsg18
Nsg57
S'./basicStim/23M_NE_C.jpg'
p407
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F1.964
sg22
g79
sS'basicLoop.thisTrialN'
p408
I56
sg42
g11
sS'basicLoop.thisRepN'
p409
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p410
I56
sS'basicLoop.thisIndex'
p411
I55
sa(dp412
g16
Nsg18
Nsg57
S'./basicStim/36M_DI_O.jpg'
p413
sg21
F2.8530000000000002
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p414
I57
sg42
g11
sS'basicLoop.thisRepN'
p415
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p416
I57
sS'basicLoop.thisIndex'
p417
I78
sa(dp418
g16
Nsg18
Nsg57
S'./basicStim/21M_NE_C.jpg'
p419
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F1.0249999999999999
sg22
g79
sS'basicLoop.thisTrialN'
p420
I58
sg42
g11
sS'basicLoop.thisRepN'
p421
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p422
I58
sS'basicLoop.thisIndex'
p423
I48
sa(dp424
g16
g111
sg18
Nsg57
S'./basicStim/03F_HA_O.jpg'
p425
sg21
Nsg19
Nsg17
F1.21
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p426
I59
sg42
g11
sS'basicLoop.thisRepN'
p427
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p428
I59
sS'basicLoop.thisIndex'
p429
I17
sa(dp430
g16
Nsg18
Nsg57
S'./basicStim/07F_SP_O.jpg'
p431
sg21
F1.6160000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p432
I60
sg42
g11
sS'basicLoop.thisRepN'
p433
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p434
I60
sS'basicLoop.thisIndex'
p435
I33
sa(dp436
g16
Nsg18
Nsg57
S'./basicStim/02F_SP_O.jpg'
p437
sg21
F0.57699999999999996
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p438
I61
sg42
g11
sS'basicLoop.thisRepN'
p439
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p440
I61
sS'basicLoop.thisIndex'
p441
I12
sa(dp442
g16
Nsg18
g98
sg57
S'./basicStim/01F_AN_O.jpg'
p443
sg21
Nsg19
F1.262
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p444
I62
sg42
g11
sS'basicLoop.thisRepN'
p445
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p446
I62
sS'basicLoop.thisIndex'
p447
I0
sa(dp448
g16
Nsg18
Nsg57
S'./basicStim/28M_DI_O.jpg'
p449
sg21
F1.8120000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p450
I63
sg42
g11
sS'basicLoop.thisRepN'
p451
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p452
I63
sS'basicLoop.thisIndex'
p453
I64
sa(dp454
g16
Nsg18
Nsg57
S'./basicStim/06F_SP_O.jpg'
p455
sg21
F3.6589999999999998
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p456
I64
sg42
g11
sS'basicLoop.thisRepN'
p457
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p458
I64
sS'basicLoop.thisIndex'
p459
I26
sa(dp460
g16
Nsg18
Nsg57
S'./basicStim/28M_FE_O.jpg'
p461
sg21
F3.9119999999999999
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p462
I65
sg42
g11
sS'basicLoop.thisRepN'
p463
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p464
I65
sS'basicLoop.thisIndex'
p465
I65
sa(dp466
g16
Nsg18
g85
sg57
S'./basicStim/07F_FE_O.jpg'
p467
sg21
Nsg19
F5.8550000000000004
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p468
I66
sg42
g11
sS'basicLoop.thisRepN'
p469
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p470
I66
sS'basicLoop.thisIndex'
p471
I30
sa(dp472
g16
Nsg18
Nsg57
S'./basicStim/21M_SA_C.jpg'
p473
sg21
F6.9269999999999996
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p474
I67
sg42
g11
sS'basicLoop.thisRepN'
p475
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p476
I67
sS'basicLoop.thisIndex'
p477
I46
sa(dp478
g16
Nsg18
g98
sg57
S'./basicStim/23M_AN_O.jpg'
p479
sg21
Nsg19
F1.381
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p480
I68
sg42
g11
sS'basicLoop.thisRepN'
p481
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p482
I68
sS'basicLoop.thisIndex'
p483
I49
sa(dp484
g16
Nsg18
g98
sg57
S'./basicStim/06F_SA_C.jpg'
p485
sg21
Nsg19
F1.8320000000000001
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p486
I69
sg42
g11
sS'basicLoop.thisRepN'
p487
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p488
I69
sS'basicLoop.thisIndex'
p489
I25
sa(dp490
g16
Nsg18
Nsg57
S'./basicStim/07F_DI_O.jpg'
p491
sg21
F1.5760000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p492
I70
sg42
g11
sS'basicLoop.thisRepN'
p493
I0
sg20
g151
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p494
I70
sS'basicLoop.thisIndex'
p495
I29
sa(dp496
g16
Nsg18
g98
sg57
S'./basicStim/36M_AN_O.jpg'
p497
sg21
Nsg19
F1.159
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p498
I71
sg42
g11
sS'basicLoop.thisRepN'
p499
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p500
I71
sS'basicLoop.thisIndex'
p501
I77
sa(dp502
g16
g71
sg18
Nsg57
S'./basicStim/09F_SA_C.jpg'
p503
sg21
Nsg19
Nsg17
F2.351
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p504
I72
sg42
g11
sS'basicLoop.thisRepN'
p505
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p506
I72
sS'basicLoop.thisIndex'
p507
I39
sa(dp508
g16
Nsg18
Nsg57
S'./basicStim/36M_SP_O.jpg'
p509
sg21
F1.2410000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p510
I73
sg42
g11
sS'basicLoop.thisRepN'
p511
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p512
I73
sS'basicLoop.thisIndex'
p513
I82
sa(dp514
g16
Nsg18
g85
sg57
S'./basicStim/24M_DI_O.jpg'
p515
sg21
Nsg19
F3.9580000000000002
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p516
I74
sg42
g11
sS'basicLoop.thisRepN'
p517
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p518
I74
sS'basicLoop.thisIndex'
p519
I57
sa(dp520
g16
g111
sg18
Nsg57
S'./basicStim/02F_HA_O.jpg'
p521
sg21
Nsg19
Nsg17
F1.296
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p522
I75
sg42
g11
sS'basicLoop.thisRepN'
p523
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p524
I75
sS'basicLoop.thisIndex'
p525
I10
sa(dp526
g16
g111
sg18
Nsg57
S'./basicStim/28M_HA_O.jpg'
p527
sg21
Nsg19
Nsg17
F0.82699999999999996
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p528
I76
sg42
g11
sS'basicLoop.thisRepN'
p529
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p530
I76
sS'basicLoop.thisIndex'
p531
I66
sa(dp532
g16
g71
sg18
Nsg57
S'./basicStim/36M_SA_C.jpg'
p533
sg21
Nsg19
Nsg17
F1.302
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p534
I77
sg42
g11
sS'basicLoop.thisRepN'
p535
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p536
I77
sS'basicLoop.thisIndex'
p537
I81
sa(dp538
g16
Nsg18
Nsg57
S'./basicStim/01F_SP_O.jpg'
p539
sg21
F3.351
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p540
I78
sg42
g11
sS'basicLoop.thisRepN'
p541
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p542
I78
sS'basicLoop.thisIndex'
p543
I5
sa(dp544
g16
Nsg18
Nsg57
S'./basicStim/28M_NE_C.jpg'
p545
sg21
Nsg19
Nsg17
Nsg43
V3
sg44
g48
sg23
F0.97499999999999998
sg22
g79
sS'basicLoop.thisTrialN'
p546
I79
sg42
g11
sS'basicLoop.thisRepN'
p547
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p548
I79
sS'basicLoop.thisIndex'
p549
I69
sa(dp550
g16
Nsg18
Nsg57
S'./basicStim/21M_SP_O.jpg'
p551
sg21
F1.1759999999999999
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p552
I80
sg42
g11
sS'basicLoop.thisRepN'
p553
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p554
I80
sS'basicLoop.thisIndex'
p555
I47
sa(dp556
g16
Nsg18
g98
sg57
S'./basicStim/09F_AN_O.jpg'
p557
sg21
Nsg19
F0.876
sg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p558
I81
sg42
g11
sS'basicLoop.thisRepN'
p559
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p560
I81
sS'basicLoop.thisIndex'
p561
I35
sa(dp562
g16
g111
sg18
Nsg57
S'./basicStim/09F_HA_O.jpg'
p563
sg21
Nsg19
Nsg17
F2.2679999999999998
sg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p564
I82
sg42
g11
sS'basicLoop.thisRepN'
p565
I0
sg20
Nsg39
g40
sg41
VG
sS'basicLoop.thisN'
p566
I82
sS'basicLoop.thisIndex'
p567
I38
sa(dp568
g16
Nsg18
Nsg57
S'./basicStim/03F_SP_O.jpg'
p569
sg21
F4.3940000000000001
sg19
Nsg17
Nsg43
V3
sg44
g48
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p570
I83
sg42
g11
sS'basicLoop.thisRepN'
p571
I0
sg20
g67
sg39
g40
sg41
VG
sS'basicLoop.thisN'
p572
I83
sS'basicLoop.thisIndex'
p573
I19
sa(dp574
g42
g11
sg41
VG
sg39
g40
sg24
S'return'
p575
sg43
V3
sg44
g48
sg25
F9.4875550270080566
sa(dp576
g15
F68.010628938674927
sg42
g11
sg41
VG
sg39
g40
sg43
V3
sg44
g48
sg14
S'return'
p577
sa(dp578
g42
g11
sg41
VG
sg39
g40
sg24
S'return'
p579
sg43
V3
sg44
g48
sg25
F12.720482110977173
sa(dp580
g39
g40
sg42
g11
sg27
F4.9942159652709961
sg26
S'return'
p581
sg41
VG
sg43
V3
sg44
g48
sa(dp582
g31
I0
sg42
g11
sg41
VG
sS'img'
p583
S'./stim/MorphM6_10_orig.jpg'
p584
sS'trials.thisIndex'
p585
g45
(g46
(S'i8'
I0
I1
tRp586
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp587
sS'trials.thisRepN'
p588
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3\xc0'
tRp589
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P)\xc0'
tRp590
sg30
I0
sg58
g45
(g586
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp591
sS'trials.thisTrialN'
p592
I0
sg32
I1
sg39
g40
sg43
V3
sg33
F3.1520390510559082
sS'trials.thisN'
p593
I0
sa(dp594
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_04_orig.jpg'
p595
sS'trials.thisIndex'
p596
g45
(g586
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp597
sS'trials.thisRepN'
p598
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00e3\xc0'
tRp599
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp600
sg30
I1
sg58
g45
(g586
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp601
sS'trials.thisTrialN'
p602
I1
sg32
I0
sg39
g40
sg43
V3
sg33
F1.7563068866729736
sS'trials.thisN'
p603
I1
sa(dp604
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_03_orig.jpg'
p605
sS'trials.thisIndex'
p606
g45
(g586
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp607
sS'trials.thisRepN'
p608
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp609
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp610
sg30
I1
sg58
g45
(g586
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp611
sS'trials.thisTrialN'
p612
I2
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1033339500427246
sS'trials.thisN'
p613
I2
sa(dp614
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_00_orig.jpg'
p615
sS'trials.thisIndex'
p616
g45
(g586
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp617
sS'trials.thisRepN'
p618
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp619
sg29
g45
(g47
S'\x00\x00\x00\x00\x00_)\xc0'
tRp620
sg30
I1
sg58
g45
(g586
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp621
sS'trials.thisTrialN'
p622
I3
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0714011192321777
sS'trials.thisN'
p623
I3
sa(dp624
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_09_orig.jpg'
p625
sS'trials.thisIndex'
p626
g45
(g586
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp627
sS'trials.thisRepN'
p628
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp629
sg29
g45
(g47
S'\x00\x00\x00\x00\x00n)\xc0'
tRp630
sg30
I0
sg58
g45
(g586
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp631
sS'trials.thisTrialN'
p632
I4
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2616519927978516
sS'trials.thisN'
p633
I4
sa(dp634
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_02_orig.jpg'
p635
sS'trials.thisIndex'
p636
g45
(g586
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp637
sS'trials.thisRepN'
p638
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp639
sg29
g45
(g47
S'\x00\x00\x00\x00\x00})\xc0'
tRp640
sg30
I1
sg58
g45
(g586
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp641
sS'trials.thisTrialN'
p642
I5
sg32
I0
sg39
g40
sg43
V3
sg33
F2.2613232135772705
sS'trials.thisN'
p643
I5
sa(dp644
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_06_orig.jpg'
p645
sS'trials.thisIndex'
p646
g45
(g586
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp647
sS'trials.thisRepN'
p648
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80k4\xc0'
tRp649
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xaa)\xc0'
tRp650
sg30
I0
sg58
g45
(g586
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp651
sS'trials.thisTrialN'
p652
I6
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4559450149536133
sS'trials.thisN'
p653
I6
sa(dp654
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_08_orig.jpg'
p655
sS'trials.thisIndex'
p656
g45
(g586
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp657
sS'trials.thisRepN'
p658
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80k4\xc0'
tRp659
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xaa)\xc0'
tRp660
sg30
I0
sg58
g45
(g586
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp661
sS'trials.thisTrialN'
p662
I7
sg32
I1
sg39
g40
sg43
V3
sg33
F0.97120499610900879
sS'trials.thisN'
p663
I7
sa(dp664
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_04_orig.jpg'
p665
sS'trials.thisIndex'
p666
g45
(g586
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp667
sS'trials.thisRepN'
p668
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80k4\xc0'
tRp669
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xaa)\xc0'
tRp670
sg30
I1
sg58
g45
(g586
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp671
sS'trials.thisTrialN'
p672
I8
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3727231025695801
sS'trials.thisN'
p673
I8
sa(dp674
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_05_orig.jpg'
p675
sS'trials.thisIndex'
p676
g45
(g586
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp677
sS'trials.thisRepN'
p678
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x824\xc0'
tRp679
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp680
sg30
I1
sg58
g45
(g586
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp681
sS'trials.thisTrialN'
p682
I9
sg32
I0
sg39
g40
sg43
V3
sg33
F5.9298398494720459
sS'trials.thisN'
p683
I9
sa(dp684
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_01_orig.jpg'
p685
sS'trials.thisIndex'
p686
g45
(g586
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp687
sS'trials.thisRepN'
p688
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x824\xc0'
tRp689
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp690
sg30
I1
sg58
g45
(g586
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp691
sS'trials.thisTrialN'
p692
I10
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6079120635986328
sS'trials.thisN'
p693
I10
sa(dp694
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_03_orig.jpg'
p695
sS'trials.thisIndex'
p696
g45
(g586
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp697
sS'trials.thisRepN'
p698
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x824\xc0'
tRp699
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp700
sg30
I1
sg58
g45
(g586
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp701
sS'trials.thisTrialN'
p702
I11
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3564798831939697
sS'trials.thisN'
p703
I11
sa(dp704
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_09_orig.jpg'
p705
sS'trials.thisIndex'
p706
g45
(g586
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp707
sS'trials.thisRepN'
p708
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x914\xc0'
tRp709
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc8)\xc0'
tRp710
sg30
I0
sg58
g45
(g586
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp711
sS'trials.thisTrialN'
p712
I12
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1882028579711914
sS'trials.thisN'
p713
I12
sa(dp714
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_01_orig.jpg'
p715
sS'trials.thisIndex'
p716
g45
(g586
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp717
sS'trials.thisRepN'
p718
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa04\xc0'
tRp719
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb9)\xc0'
tRp720
sg30
I1
sg58
g45
(g586
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp721
sS'trials.thisTrialN'
p722
I13
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3396260738372803
sS'trials.thisN'
p723
I13
sa(dp724
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_03_orig.jpg'
p725
sS'trials.thisIndex'
p726
g45
(g586
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp727
sS'trials.thisRepN'
p728
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xa74\xc0'
tRp729
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb9)\xc0'
tRp730
sg30
I1
sg58
g45
(g586
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp731
sS'trials.thisTrialN'
p732
I14
sg32
I0
sg39
g40
sg43
V3
sg33
F4.4230668544769287
sS'trials.thisN'
p733
I14
sa(dp734
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_05_orig.jpg'
p735
sS'trials.thisIndex'
p736
g45
(g586
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp737
sS'trials.thisRepN'
p738
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xa74\xc0'
tRp739
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb9)\xc0'
tRp740
sg30
I1
sg58
g45
(g586
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp741
sS'trials.thisTrialN'
p742
I15
sg32
I0
sg39
g40
sg43
V3
sg33
F3.0660238265991211
sS'trials.thisN'
p743
I15
sa(dp744
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_08_orig.jpg'
p745
sS'trials.thisIndex'
p746
g45
(g586
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp747
sS'trials.thisRepN'
p748
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf4\xc0'
tRp749
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb9)\xc0'
tRp750
sg30
I0
sg58
g45
(g586
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp751
sS'trials.thisTrialN'
p752
I16
sg32
I1
sg39
g40
sg43
V3
sg33
F3.0153429508209229
sS'trials.thisN'
p753
I16
sa(dp754
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_01_orig.jpg'
p755
sS'trials.thisIndex'
p756
g45
(g586
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp757
sS'trials.thisRepN'
p758
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd6*\xc0'
tRp759
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xab(\xc0'
tRp760
sg30
I1
sg58
g45
(g586
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp761
sS'trials.thisTrialN'
p762
I17
sg32
I0
sg39
g40
sg43
V3
sg33
F21.283713817596436
sS'trials.thisN'
p763
I17
sa(dp764
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_10_orig.jpg'
p765
sS'trials.thisIndex'
p766
g45
(g586
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp767
sS'trials.thisRepN'
p768
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd6*\xc0'
tRp769
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xab(\xc0'
tRp770
sg30
I0
sg58
g45
(g586
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp771
sS'trials.thisTrialN'
p772
I18
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3717989921569824
sS'trials.thisN'
p773
I18
sa(dp774
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_06_orig.jpg'
p775
sS'trials.thisIndex'
p776
g45
(g586
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp777
sS'trials.thisRepN'
p778
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc7*\xc0'
tRp779
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`(\xc0'
tRp780
sg30
I0
sg58
g45
(g586
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp781
sS'trials.thisTrialN'
p782
I19
sg32
I1
sg39
g40
sg43
V3
sg33
F2.8146581649780273
sS'trials.thisN'
p783
I19
sa(dp784
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_00_orig.jpg'
p785
sS'trials.thisIndex'
p786
g45
(g586
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp787
sS'trials.thisRepN'
p788
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8b*\xc0'
tRp789
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(\xc0'
tRp790
sg30
I1
sg58
g45
(g586
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp791
sS'trials.thisTrialN'
p792
I20
sg32
I0
sg39
g40
sg43
V3
sg33
F2.9149301052093506
sS'trials.thisN'
p793
I20
sa(dp794
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_08_orig.jpg'
p795
sS'trials.thisIndex'
p796
g45
(g586
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp797
sS'trials.thisRepN'
p798
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8b*\xc0'
tRp799
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$(\xc0'
tRp800
sg30
I0
sg58
g45
(g586
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp801
sS'trials.thisTrialN'
p802
I21
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1218161582946777
sS'trials.thisN'
p803
I21
sa(dp804
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_07_orig.jpg'
p805
sS'trials.thisIndex'
p806
g45
(g586
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp807
sS'trials.thisRepN'
p808
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88\r\xc0'
tRp809
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x81%\xc0'
tRp810
sg30
I1
sg58
g45
(g586
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp811
sS'trials.thisTrialN'
p812
I22
sg32
I0
sg39
g40
sg43
V3
sg33
F18.800910949707031
sS'trials.thisN'
p813
I22
sa(dp814
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_02_orig.jpg'
p815
sS'trials.thisIndex'
p816
g45
(g586
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp817
sS'trials.thisRepN'
p818
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88\r\xc0'
tRp819
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x81%\xc0'
tRp820
sg30
I1
sg58
g45
(g586
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp821
sS'trials.thisTrialN'
p822
I23
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1889140605926514
sS'trials.thisN'
p823
I23
sa(dp824
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_08_orig.jpg'
p825
sS'trials.thisIndex'
p826
g45
(g586
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp827
sS'trials.thisRepN'
p828
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe4\x0b\xc0'
tRp829
sg29
g45
(g47
S'\x00\x00\x00\x00\x00U$\xc0'
tRp830
sg30
I0
sg58
g45
(g586
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp831
sS'trials.thisTrialN'
p832
I24
sg32
I1
sg39
g40
sg43
V3
sg33
F1.607759952545166
sS'trials.thisN'
p833
I24
sa(dp834
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_05_orig.jpg'
p835
sS'trials.thisIndex'
p836
g45
(g586
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp837
sS'trials.thisRepN'
p838
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc2\x10\xc0'
tRp839
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x91$\xc0'
tRp840
sg30
I1
sg58
g45
(g586
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp841
sS'trials.thisTrialN'
p842
I25
sg32
I0
sg39
g40
sg43
V3
sg33
F13.958298921585083
sS'trials.thisN'
p843
I25
sa(dp844
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_08_orig.jpg'
p845
sS'trials.thisIndex'
p846
g45
(g586
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp847
sS'trials.thisRepN'
p848
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00L\r\xc0'
tRp849
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfc"\xc0'
tRp850
sg30
I0
sg58
g45
(g586
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp851
sS'trials.thisTrialN'
p852
I26
sg32
I1
sg39
g40
sg43
V3
sg33
F9.1142690181732178
sS'trials.thisN'
p853
I26
sa(dp854
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_09_orig.jpg'
p855
sS'trials.thisIndex'
p856
g45
(g586
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp857
sS'trials.thisRepN'
p858
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00L\r\xc0'
tRp859
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfc"\xc0'
tRp860
sg30
I0
sg58
g45
(g586
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp861
sS'trials.thisTrialN'
p862
I27
sg32
I1
sg39
g40
sg43
V3
sg33
F0.93736100196838379
sS'trials.thisN'
p863
I27
sa(dp864
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_09_orig.jpg'
p865
sS'trials.thisIndex'
p866
g45
(g586
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp867
sS'trials.thisRepN'
p868
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x0c\xc0'
tRp869
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcf"\xc0'
tRp870
sg30
I0
sg58
g45
(g586
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp871
sS'trials.thisTrialN'
p872
I28
sg32
I1
sg39
g40
sg43
V3
sg33
F0.90277218818664551
sS'trials.thisN'
p873
I28
sa(dp874
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_04_orig.jpg'
p875
sS'trials.thisIndex'
p876
g45
(g586
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp877
sS'trials.thisRepN'
p878
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\x08\xc0'
tRp879
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp880
sg30
I1
sg58
g45
(g586
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp881
sS'trials.thisTrialN'
p882
I29
sg32
I0
sg39
g40
sg43
V3
sg33
F2.1936948299407959
sS'trials.thisN'
p883
I29
sa(dp884
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_06_orig.jpg'
p885
sS'trials.thisIndex'
p886
g45
(g586
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp887
sS'trials.thisRepN'
p888
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbc\x06\xc0'
tRp889
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x85!\xc0'
tRp890
sg30
I0
sg58
g45
(g586
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp891
sS'trials.thisTrialN'
p892
I30
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2730350494384766
sS'trials.thisN'
p893
I30
sa(dp894
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_04_orig.jpg'
p895
sS'trials.thisIndex'
p896
g45
(g586
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp897
sS'trials.thisRepN'
p898
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbc\x06\xc0'
tRp899
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x85!\xc0'
tRp900
sg30
I1
sg58
g45
(g586
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp901
sS'trials.thisTrialN'
p902
I31
sg32
I0
sg39
g40
sg43
V3
sg33
F1.7076079845428467
sS'trials.thisN'
p903
I31
sa(dp904
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_02_orig.jpg'
p905
sS'trials.thisIndex'
p906
g45
(g586
S' \x00\x00\x00\x00\x00\x00\x00'
tRp907
sS'trials.thisRepN'
p908
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\x01\xc0'
tRp909
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x95 \xc0'
tRp910
sg30
I1
sg58
g45
(g586
S' \x00\x00\x00\x00\x00\x00\x00'
tRp911
sS'trials.thisTrialN'
p912
I32
sg32
I0
sg39
g40
sg43
V3
sg33
F4.1876890659332275
sS'trials.thisN'
p913
I32
sa(dp914
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_05_orig.jpg'
p915
sS'trials.thisIndex'
p916
g45
(g586
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp917
sS'trials.thisRepN'
p918
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp919
sg29
g45
(g47
S"\x00\x00\x00\x00\x00'%\xc0"
tRp920
sg30
I1
sg58
g45
(g586
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp921
sS'trials.thisTrialN'
p922
I33
sg32
I0
sg39
g40
sg43
V3
sg33
F8.311290979385376
sS'trials.thisN'
p923
I33
sa(dp924
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_01_orig.jpg'
p925
sS'trials.thisIndex'
p926
g45
(g586
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp927
sS'trials.thisRepN'
p928
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xc2\xbf'
tRp929
sg29
g45
(g47
S'\x00\x00\x00\x00\x00d$\xc0'
tRp930
sg30
I1
sg58
g45
(g586
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp931
sS'trials.thisTrialN'
p932
I34
sg32
I0
sg39
g40
sg43
V3
sg33
F3.786700963973999
sS'trials.thisN'
p933
I34
sa(dp934
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_06_orig.jpg'
p935
sS'trials.thisIndex'
p936
g45
(g586
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp937
sS'trials.thisRepN'
p938
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp939
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\n$\xc0'
tRp940
sg30
I1
sg58
g45
(g586
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp941
sS'trials.thisTrialN'
p942
I35
sg32
I0
sg39
g40
sg43
V3
sg33
F15.953902006149292
sS'trials.thisN'
p943
I35
sa(dp944
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_02_orig.jpg'
p945
sS'trials.thisIndex'
p946
g45
(g586
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp947
sS'trials.thisRepN'
p948
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp949
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x19$\xc0'
tRp950
sg30
I1
sg58
g45
(g586
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp951
sS'trials.thisTrialN'
p952
I36
sg32
I0
sg39
g40
sg43
V3
sg33
F3.4345848560333252
sS'trials.thisN'
p953
I36
sa(dp954
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_03_orig.jpg'
p955
sS'trials.thisIndex'
p956
g45
(g586
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp957
sS'trials.thisRepN'
p958
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f@'
tRp959
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x19$\xc0'
tRp960
sg30
I1
sg58
g45
(g586
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp961
sS'trials.thisTrialN'
p962
I37
sg32
I0
sg39
g40
sg43
V3
sg33
F1.390064001083374
sS'trials.thisN'
p963
I37
sa(dp964
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_01_orig.jpg'
p965
sS'trials.thisIndex'
p966
g45
(g586
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp967
sS'trials.thisRepN'
p968
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x0c@'
tRp969
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa1#\xc0'
tRp970
sg30
I1
sg58
g45
(g586
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp971
sS'trials.thisTrialN'
p972
I38
sg32
I0
sg39
g40
sg43
V3
sg33
F3.8028800487518311
sS'trials.thisN'
p973
I38
sa(dp974
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_05_orig.jpg'
p975
sS'trials.thisIndex'
p976
g45
(g586
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp977
sS'trials.thisRepN'
p978
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp979
sg29
g45
(g47
S'\x00\x00\x00\x00\x009"\xc0'
tRp980
sg30
I1
sg58
g45
(g586
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp981
sS'trials.thisTrialN'
p982
I39
sg32
I0
sg39
g40
sg43
V3
sg33
F12.534735202789307
sS'trials.thisN'
p983
I39
sa(dp984
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_02_orig.jpg'
p985
sS'trials.thisIndex'
p986
g45
(g586
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp987
sS'trials.thisRepN'
p988
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp989
sg29
g45
(g47
S'\x00\x00\x00\x00\x009"\xc0'
tRp990
sg30
I1
sg58
g45
(g586
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp991
sS'trials.thisTrialN'
p992
I40
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0378260612487793
sS'trials.thisN'
p993
I40
sa(dp994
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_03_orig.jpg'
p995
sS'trials.thisIndex'
p996
g45
(g586
S')\x00\x00\x00\x00\x00\x00\x00'
tRp997
sS'trials.thisRepN'
p998
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp999
sg29
g45
(g47
S'\x00\x00\x00\x00\x009"\xc0'
tRp1000
sg30
I1
sg58
g45
(g586
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1001
sS'trials.thisTrialN'
p1002
I41
sg32
I0
sg39
g40
sg43
V3
sg33
F0.86869311332702637
sS'trials.thisN'
p1003
I41
sa(dp1004
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_06_orig.jpg'
p1005
sS'trials.thisIndex'
p1006
g45
(g586
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1007
sS'trials.thisRepN'
p1008
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp1009
sg29
g45
(g47
S'\x00\x00\x00\x00\x009"\xc0'
tRp1010
sg30
I1
sg58
g45
(g586
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1011
sS'trials.thisTrialN'
p1012
I42
sg32
I0
sg39
g40
sg43
V3
sg33
F4.0033631324768066
sS'trials.thisN'
p1013
I42
sa(dp1014
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_00_orig.jpg'
p1015
sS'trials.thisIndex'
p1016
g45
(g586
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1017
sS'trials.thisRepN'
p1018
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc\x04@'
tRp1019
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfc"\xc0'
tRp1020
sg30
I0
sg58
g45
(g586
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1021
sS'trials.thisTrialN'
p1022
I43
sg32
I1
sg39
g40
sg43
V3
sg33
F24.803245067596436
sS'trials.thisN'
p1023
I43
sa(dp1024
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_04_orig.jpg'
p1025
sS'trials.thisIndex'
p1026
g45
(g586
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1027
sS'trials.thisRepN'
p1028
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x008\x03@'
tRp1029
sg29
g45
(g47
S'\x00\x00\x00\x00\x00u"\xc0'
tRp1030
sg30
I0
sg58
g45
(g586
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1031
sS'trials.thisTrialN'
p1032
I44
sg32
I1
sg39
g40
sg43
V3
sg33
F1.6077718734741211
sS'trials.thisN'
p1033
I44
sa(dp1034
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_07_orig.jpg'
p1035
sS'trials.thisIndex'
p1036
g45
(g586
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1037
sS'trials.thisRepN'
p1038
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x008\x03@'
tRp1039
sg29
g45
(g47
S'\x00\x00\x00\x00\x00u"\xc0'
tRp1040
sg30
I0
sg58
g45
(g586
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1041
sS'trials.thisTrialN'
p1042
I45
sg32
I1
sg39
g40
sg43
V3
sg33
F3.1159670352935791
sS'trials.thisN'
p1043
I45
sa(dp1044
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_02_orig.jpg'
p1045
sS'trials.thisIndex'
p1046
g45
(g586
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1047
sS'trials.thisRepN'
p1048
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x008\x03@'
tRp1049
sg29
g45
(g47
S'\x00\x00\x00\x00\x00W"\xc0'
tRp1050
sg30
I1
sg58
g45
(g586
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1051
sS'trials.thisTrialN'
p1052
I46
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3725268840789795
sS'trials.thisN'
p1053
I46
sa(dp1054
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_08_orig.jpg'
p1055
sS'trials.thisIndex'
p1056
g45
(g586
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1057
sS'trials.thisRepN'
p1058
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfc\x02@'
tRp1059
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp1060
sg30
I1
sg58
g45
(g586
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1061
sS'trials.thisTrialN'
p1062
I47
sg32
I0
sg39
g40
sg43
V3
sg33
F4.0215451717376709
sS'trials.thisN'
p1063
I47
sa(dp1064
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_03_orig.jpg'
p1065
sS'trials.thisIndex'
p1066
g45
(g586
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1067
sS'trials.thisRepN'
p1068
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00d\x04@'
tRp1069
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp1070
sg30
I0
sg58
g45
(g586
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1071
sS'trials.thisTrialN'
p1072
I48
sg32
I1
sg39
g40
sg43
V3
sg33
F1.80873703956604
sS'trials.thisN'
p1073
I48
sa(dp1074
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_05_orig.jpg'
p1075
sS'trials.thisIndex'
p1076
g45
(g586
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1077
sS'trials.thisRepN'
p1078
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\x06@'
tRp1079
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb2!\xc0'
tRp1080
sg30
I0
sg58
g45
(g586
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1081
sS'trials.thisTrialN'
p1082
I49
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4571359157562256
sS'trials.thisN'
p1083
I49
sa(dp1084
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_08_orig.jpg'
p1085
sS'trials.thisIndex'
p1086
g45
(g586
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1087
sS'trials.thisRepN'
p1088
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\x06@'
tRp1089
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb2!\xc0'
tRp1090
sg30
I0
sg58
g45
(g586
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1091
sS'trials.thisTrialN'
p1092
I50
sg32
I1
sg39
g40
sg43
V3
sg33
F0.80121803283691406
sS'trials.thisN'
p1093
I50
sa(dp1094
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_03_orig.jpg'
p1095
sS'trials.thisIndex'
p1096
g45
(g586
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1097
sS'trials.thisRepN'
p1098
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\x07@'
tRp1099
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x85!\xc0'
tRp1100
sg30
I1
sg58
g45
(g586
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1101
sS'trials.thisTrialN'
p1102
I51
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2724330425262451
sS'trials.thisN'
p1103
I51
sa(dp1104
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_10_orig.jpg'
p1105
sS'trials.thisIndex'
p1106
g45
(g586
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1107
sS'trials.thisRepN'
p1108
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\x08@'
tRp1109
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x85!\xc0'
tRp1110
sg30
I0
sg58
g45
(g586
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1111
sS'trials.thisTrialN'
p1112
I52
sg32
I1
sg39
g40
sg43
V3
sg33
F2.9654719829559326
sS'trials.thisN'
p1113
I52
sa(dp1114
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_08_orig.jpg'
p1115
sS'trials.thisIndex'
p1116
g45
(g586
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1117
sS'trials.thisRepN'
p1118
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\x08@'
tRp1119
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x85!\xc0'
tRp1120
sg30
I0
sg58
g45
(g586
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1121
sS'trials.thisTrialN'
p1122
I53
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5574190616607666
sS'trials.thisN'
p1123
I53
sa(dp1124
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_10_orig.jpg'
p1125
sS'trials.thisIndex'
p1126
g45
(g586
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1127
sS'trials.thisRepN'
p1128
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd8\x08@'
tRp1129
sg29
g45
(g47
S'\x00\x00\x00\x00\x00v!\xc0'
tRp1130
sg30
I0
sg58
g45
(g586
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1131
sS'trials.thisTrialN'
p1132
I54
sg32
I1
sg39
g40
sg43
V3
sg33
F0.91841483116149902
sS'trials.thisN'
p1133
I54
sa(dp1134
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_03_orig.jpg'
p1135
sS'trials.thisIndex'
p1136
g45
(g586
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1137
sS'trials.thisRepN'
p1138
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa8\x0b@'
tRp1139
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0 \xc0'
tRp1140
sg30
I1
sg58
g45
(g586
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1141
sS'trials.thisTrialN'
p1142
I55
sg32
I0
sg39
g40
sg43
V3
sg33
F4.1220541000366211
sS'trials.thisN'
p1143
I55
sa(dp1144
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_03_orig.jpg'
p1145
sS'trials.thisIndex'
p1146
g45
(g586
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1147
sS'trials.thisRepN'
p1148
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x0f@'
tRp1149
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe \xc0'
tRp1150
sg30
I1
sg58
g45
(g586
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1151
sS'trials.thisTrialN'
p1152
I56
sg32
I0
sg39
g40
sg43
V3
sg33
F5.8961770534515381
sS'trials.thisN'
p1153
I56
sa(dp1154
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_10_orig.jpg'
p1155
sS'trials.thisIndex'
p1156
g45
(g586
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1157
sS'trials.thisRepN'
p1158
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x10@'
tRp1159
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp1160
sg30
I0
sg58
g45
(g586
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1161
sS'trials.thisTrialN'
p1162
I57
sg32
I1
sg39
g40
sg43
V3
sg33
F2.1928110122680664
sS'trials.thisN'
p1163
I57
sa(dp1164
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_00_orig.jpg'
p1165
sS'trials.thisIndex'
p1166
g45
(g586
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1167
sS'trials.thisRepN'
p1168
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x10@'
tRp1169
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp1170
sg30
I1
sg58
g45
(g586
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1171
sS'trials.thisTrialN'
p1172
I58
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6229219436645508
sS'trials.thisN'
p1173
I58
sa(dp1174
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_07_orig.jpg'
p1175
sS'trials.thisIndex'
p1176
g45
(g586
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1177
sS'trials.thisRepN'
p1178
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa2\x12@'
tRp1179
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe \xc0'
tRp1180
sg30
I0
sg58
g45
(g586
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1181
sS'trials.thisTrialN'
p1182
I59
sg32
I1
sg39
g40
sg43
V3
sg33
F3.4846580028533936
sS'trials.thisN'
p1183
I59
sa(dp1184
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_09_orig.jpg'
p1185
sS'trials.thisIndex'
p1186
g45
(g586
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1187
sS'trials.thisRepN'
p1188
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa2\x12@'
tRp1189
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp1190
sg30
I0
sg58
g45
(g586
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1191
sS'trials.thisTrialN'
p1192
I60
sg32
I1
sg39
g40
sg43
V3
sg33
F0.92052412033081055
sS'trials.thisN'
p1193
I60
sa(dp1194
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_08_orig.jpg'
p1195
sS'trials.thisIndex'
p1196
g45
(g586
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1197
sS'trials.thisRepN'
p1198
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xde\x12@'
tRp1199
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd1 \xc0'
tRp1200
sg30
I0
sg58
g45
(g586
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1201
sS'trials.thisTrialN'
p1202
I61
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0045018196105957
sS'trials.thisN'
p1203
I61
sa(dp1204
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_00_orig.jpg'
p1205
sS'trials.thisIndex'
p1206
g45
(g586
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1207
sS'trials.thisRepN'
p1208
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1a\x13@'
tRp1209
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp1210
sg30
I0
sg58
g45
(g586
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1211
sS'trials.thisTrialN'
p1212
I62
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5238430500030518
sS'trials.thisN'
p1213
I62
sa(dp1214
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_04_orig.jpg'
p1215
sS'trials.thisIndex'
p1216
g45
(g586
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1217
sS'trials.thisRepN'
p1218
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1a\x13@'
tRp1219
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp1220
sg30
I1
sg58
g45
(g586
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1221
sS'trials.thisTrialN'
p1222
I63
sg32
I0
sg39
g40
sg43
V3
sg33
F4.5231020450592041
sS'trials.thisN'
p1223
I63
sa(dp1224
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_05_orig.jpg'
p1225
sS'trials.thisIndex'
p1226
g45
(g586
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1227
sS'trials.thisRepN'
p1228
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1a\x13@'
tRp1229
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp1230
sg30
I0
sg58
g45
(g586
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1231
sS'trials.thisTrialN'
p1232
I64
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1887140274047852
sS'trials.thisN'
p1233
I64
sa(dp1234
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_09_orig.jpg'
p1235
sS'trials.thisIndex'
p1236
g45
(g586
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1237
sS'trials.thisRepN'
p1238
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1a\x13@'
tRp1239
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp1240
sg30
I0
sg58
g45
(g586
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1241
sS'trials.thisTrialN'
p1242
I65
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0047941207885742
sS'trials.thisN'
p1243
I65
sa(dp1244
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_04_orig.jpg'
p1245
sS'trials.thisIndex'
p1246
g45
(g586
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1247
sS'trials.thisRepN'
p1248
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1a\x13@'
tRp1249
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp1250
sg30
I1
sg58
g45
(g586
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1251
sS'trials.thisTrialN'
p1252
I66
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4042019844055176
sS'trials.thisN'
p1253
I66
sa(dp1254
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_07_orig.jpg'
p1255
sS'trials.thisIndex'
p1256
g45
(g586
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1257
sS'trials.thisRepN'
p1258
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x008\x13@'
tRp1259
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb3 \xc0'
tRp1260
sg30
I0
sg58
g45
(g586
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1261
sS'trials.thisTrialN'
p1262
I67
sg32
I1
sg39
g40
sg43
V3
sg33
F0.95241212844848633
sS'trials.thisN'
p1263
I67
sa(dp1264
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_05_orig.jpg'
p1265
sS'trials.thisIndex'
p1266
g45
(g586
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1267
sS'trials.thisRepN'
p1268
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00(\x14@'
tRp1269
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h \xc0'
tRp1270
sg30
I1
sg58
g45
(g586
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1271
sS'trials.thisTrialN'
p1272
I68
sg32
I0
sg39
g40
sg43
V3
sg33
F4.7582740783691406
sS'trials.thisN'
p1273
I68
sa(dp1274
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_02_orig.jpg'
p1275
sS'trials.thisIndex'
p1276
g45
(g586
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1277
sS'trials.thisRepN'
p1278
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1279
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1280
sg30
I0
sg58
g45
(g586
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1281
sS'trials.thisTrialN'
p1282
I69
sg32
I1
sg39
g40
sg43
V3
sg33
F14.11011815071106
sS'trials.thisN'
p1283
I69
sa(dp1284
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_08_orig.jpg'
p1285
sS'trials.thisIndex'
p1286
g45
(g586
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1287
sS'trials.thisRepN'
p1288
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1289
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1290
sg30
I0
sg58
g45
(g586
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1291
sS'trials.thisTrialN'
p1292
I70
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3225069046020508
sS'trials.thisN'
p1293
I70
sa(dp1294
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_00_orig.jpg'
p1295
sS'trials.thisIndex'
p1296
g45
(g586
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1297
sS'trials.thisRepN'
p1298
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1299
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1300
sg30
I1
sg58
g45
(g586
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1301
sS'trials.thisTrialN'
p1302
I71
sg32
I0
sg39
g40
sg43
V3
sg33
F1.423137903213501
sS'trials.thisN'
p1303
I71
sa(dp1304
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_07_orig.jpg'
p1305
sS'trials.thisIndex'
p1306
g45
(g586
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1307
sS'trials.thisRepN'
p1308
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1309
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1310
sg30
I0
sg58
g45
(g586
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1311
sS'trials.thisTrialN'
p1312
I72
sg32
I1
sg39
g40
sg43
V3
sg33
F2.8637049198150635
sS'trials.thisN'
p1313
I72
sa(dp1314
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_07_orig.jpg'
p1315
sS'trials.thisIndex'
p1316
g45
(g586
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1317
sS'trials.thisRepN'
p1318
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1319
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1320
sg30
I0
sg58
g45
(g586
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1321
sS'trials.thisTrialN'
p1322
I73
sg32
I1
sg39
g40
sg43
V3
sg33
F0.72006797790527344
sS'trials.thisN'
p1323
I73
sa(dp1324
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_05_orig.jpg'
p1325
sS'trials.thisIndex'
p1326
g45
(g586
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1327
sS'trials.thisRepN'
p1328
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1329
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1330
sg30
I0
sg58
g45
(g586
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1331
sS'trials.thisTrialN'
p1332
I74
sg32
I1
sg39
g40
sg43
V3
sg33
F6.6689038276672363
sS'trials.thisN'
p1333
I74
sa(dp1334
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_02_orig.jpg'
p1335
sS'trials.thisIndex'
p1336
g45
(g586
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1337
sS'trials.thisRepN'
p1338
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp1339
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp1340
sg30
I1
sg58
g45
(g586
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1341
sS'trials.thisTrialN'
p1342
I75
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6896440982818604
sS'trials.thisN'
p1343
I75
sa(dp1344
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_03_orig.jpg'
p1345
sS'trials.thisIndex'
p1346
g45
(g586
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1347
sS'trials.thisRepN'
p1348
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00r\x15@'
tRp1349
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp1350
sg30
I1
sg58
g45
(g586
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1351
sS'trials.thisTrialN'
p1352
I76
sg32
I0
sg39
g40
sg43
V3
sg33
F2.8814709186553955
sS'trials.thisN'
p1353
I76
sa(dp1354
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_01_orig.jpg'
p1355
sS'trials.thisIndex'
p1356
g45
(g586
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1357
sS'trials.thisRepN'
p1358
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00r\x15@'
tRp1359
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp1360
sg30
I1
sg58
g45
(g586
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1361
sS'trials.thisTrialN'
p1362
I77
sg32
I0
sg39
g40
sg43
V3
sg33
F3.1816751956939697
sS'trials.thisN'
p1363
I77
sa(dp1364
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_05_orig.jpg'
p1365
sS'trials.thisIndex'
p1366
g45
(g586
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1367
sS'trials.thisRepN'
p1368
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xea\x15@'
tRp1369
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1370
sg30
I1
sg58
g45
(g586
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1371
sS'trials.thisTrialN'
p1372
I78
sg32
I0
sg39
g40
sg43
V3
sg33
F2.494359016418457
sS'trials.thisN'
p1373
I78
sa(dp1374
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_10_orig.jpg'
p1375
sS'trials.thisIndex'
p1376
g45
(g586
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1377
sS'trials.thisRepN'
p1378
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00b\x16@'
tRp1379
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x0e \xc0'
tRp1380
sg30
I0
sg58
g45
(g586
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1381
sS'trials.thisTrialN'
p1382
I79
sg32
I1
sg39
g40
sg43
V3
sg33
F0.9543459415435791
sS'trials.thisN'
p1383
I79
sa(dp1384
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_03_orig.jpg'
p1385
sS'trials.thisIndex'
p1386
g45
(g586
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1387
sS'trials.thisRepN'
p1388
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\x16@'
tRp1389
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x0e \xc0'
tRp1390
sg30
I1
sg58
g45
(g586
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1391
sS'trials.thisTrialN'
p1392
I80
sg32
I0
sg39
g40
sg43
V3
sg33
F5.2786259651184082
sS'trials.thisN'
p1393
I80
sa(dp1394
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_04_orig.jpg'
p1395
sS'trials.thisIndex'
p1396
g45
(g586
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1397
sS'trials.thisRepN'
p1398
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaa\x19@'
tRp1399
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x1f\xc0'
tRp1400
sg30
I0
sg58
g45
(g586
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1401
sS'trials.thisTrialN'
p1402
I81
sg32
I1
sg39
g40
sg43
V3
sg33
F9.4990460872650146
sS'trials.thisN'
p1403
I81
sa(dp1404
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_04_orig.jpg'
p1405
sS'trials.thisIndex'
p1406
g45
(g586
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1407
sS'trials.thisRepN'
p1408
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp1409
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb3 \xc0'
tRp1410
sg30
I0
sg58
g45
(g586
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1411
sS'trials.thisTrialN'
p1412
I82
sg32
I1
sg39
g40
sg43
V3
sg33
F15.032046794891357
sS'trials.thisN'
p1413
I82
sa(dp1414
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_01_orig.jpg'
p1415
sS'trials.thisIndex'
p1416
g45
(g586
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1417
sS'trials.thisRepN'
p1418
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe4\x1b@'
tRp1419
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp1420
sg30
I1
sg58
g45
(g586
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1421
sS'trials.thisTrialN'
p1422
I83
sg32
I0
sg39
g40
sg43
V3
sg33
F6.8695080280303955
sS'trials.thisN'
p1423
I83
sa(dp1424
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_10_orig.jpg'
p1425
sS'trials.thisIndex'
p1426
g45
(g586
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1427
sS'trials.thisRepN'
p1428
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe4\x1b@'
tRp1429
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1430
sg30
I0
sg58
g45
(g586
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1431
sS'trials.thisTrialN'
p1432
I84
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3534510135650635
sS'trials.thisN'
p1433
I84
sa(dp1434
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_00_orig.jpg'
p1435
sS'trials.thisIndex'
p1436
g45
(g586
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1437
sS'trials.thisRepN'
p1438
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1439
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1440
sg30
I1
sg58
g45
(g586
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1441
sS'trials.thisTrialN'
p1442
I85
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0213549137115479
sS'trials.thisN'
p1443
I85
sa(dp1444
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_04_orig.jpg'
p1445
sS'trials.thisIndex'
p1446
g45
(g586
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1447
sS'trials.thisRepN'
p1448
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1449
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1450
sg30
I0
sg58
g45
(g586
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1451
sS'trials.thisTrialN'
p1452
I86
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0026772022247314
sS'trials.thisN'
p1453
I86
sa(dp1454
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_07_orig.jpg'
p1455
sS'trials.thisIndex'
p1456
g45
(g586
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1457
sS'trials.thisRepN'
p1458
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1459
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1460
sg30
I0
sg58
g45
(g586
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1461
sS'trials.thisTrialN'
p1462
I87
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3903460502624512
sS'trials.thisN'
p1463
I87
sa(dp1464
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_07_orig.jpg'
p1465
sS'trials.thisIndex'
p1466
g45
(g586
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1467
sS'trials.thisRepN'
p1468
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1469
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1470
sg30
I0
sg58
g45
(g586
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1471
sS'trials.thisTrialN'
p1472
I88
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1197640895843506
sS'trials.thisN'
p1473
I88
sa(dp1474
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_02_orig.jpg'
p1475
sS'trials.thisIndex'
p1476
g45
(g586
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1477
sS'trials.thisRepN'
p1478
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1479
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1480
sg30
I1
sg58
g45
(g586
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1481
sS'trials.thisTrialN'
p1482
I89
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2048749923706055
sS'trials.thisN'
p1483
I89
sa(dp1484
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_06_orig.jpg'
p1485
sS'trials.thisIndex'
p1486
g45
(g586
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1487
sS'trials.thisRepN'
p1488
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1489
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1490
sg30
I0
sg58
g45
(g586
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1491
sS'trials.thisTrialN'
p1492
I90
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1892552375793457
sS'trials.thisN'
p1493
I90
sa(dp1494
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_06_orig.jpg'
p1495
sS'trials.thisIndex'
p1496
g45
(g586
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1497
sS'trials.thisRepN'
p1498
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1499
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1500
sg30
I0
sg58
g45
(g586
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1501
sS'trials.thisTrialN'
p1502
I91
sg32
I1
sg39
g40
sg43
V3
sg33
F2.0076780319213867
sS'trials.thisN'
p1503
I91
sa(dp1504
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_07_orig.jpg'
p1505
sS'trials.thisIndex'
p1506
g45
(g586
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1507
sS'trials.thisRepN'
p1508
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1509
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1510
sg30
I0
sg58
g45
(g586
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1511
sS'trials.thisTrialN'
p1512
I92
sg32
I1
sg39
g40
sg43
V3
sg33
F0.88682699203491211
sS'trials.thisN'
p1513
I92
sa(dp1514
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_04_orig.jpg'
p1515
sS'trials.thisIndex'
p1516
g45
(g586
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1517
sS'trials.thisRepN'
p1518
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1519
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1520
sg30
I1
sg58
g45
(g586
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1521
sS'trials.thisTrialN'
p1522
I93
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0380411148071289
sS'trials.thisN'
p1523
I93
sa(dp1524
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_10_orig.jpg'
p1525
sS'trials.thisIndex'
p1526
g45
(g586
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1527
sS'trials.thisRepN'
p1528
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1529
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1530
sg30
I0
sg58
g45
(g586
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1531
sS'trials.thisTrialN'
p1532
I94
sg32
I1
sg39
g40
sg43
V3
sg33
F1.6245100498199463
sS'trials.thisN'
p1533
I94
sa(dp1534
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_06_orig.jpg'
p1535
sS'trials.thisIndex'
p1536
g45
(g586
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1537
sS'trials.thisRepN'
p1538
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x02\x1c@'
tRp1539
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1540
sg30
I1
sg58
g45
(g586
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1541
sS'trials.thisTrialN'
p1542
I95
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6901578903198242
sS'trials.thisN'
p1543
I95
sa(dp1544
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_06_orig.jpg'
p1545
sS'trials.thisIndex'
p1546
g45
(g586
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1547
sS'trials.thisRepN'
p1548
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00z\x1c@'
tRp1549
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1550
sg30
I0
sg58
g45
(g586
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1551
sS'trials.thisTrialN'
p1552
I96
sg32
I1
sg39
g40
sg43
V3
sg33
F7.7754249572753906
sS'trials.thisN'
p1553
I96
sa(dp1554
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_02_orig.jpg'
p1555
sS'trials.thisIndex'
p1556
g45
(g586
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1557
sS'trials.thisRepN'
p1558
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00z\x1c@'
tRp1559
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1560
sg30
I0
sg58
g45
(g586
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1561
sS'trials.thisTrialN'
p1562
I97
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2888200283050537
sS'trials.thisN'
p1563
I97
sa(dp1564
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_08_orig.jpg'
p1565
sS'trials.thisIndex'
p1566
g45
(g586
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1567
sS'trials.thisRepN'
p1568
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00z\x1c@'
tRp1569
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1570
sg30
I0
sg58
g45
(g586
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1571
sS'trials.thisTrialN'
p1572
I98
sg32
I1
sg39
g40
sg43
V3
sg33
F0.97081804275512695
sS'trials.thisN'
p1573
I98
sa(dp1574
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_07_orig.jpg'
p1575
sS'trials.thisIndex'
p1576
g45
(g586
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1577
sS'trials.thisRepN'
p1578
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00z\x1c@'
tRp1579
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1580
sg30
I1
sg58
g45
(g586
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1581
sS'trials.thisTrialN'
p1582
I99
sg32
I0
sg39
g40
sg43
V3
sg33
F0.95234990119934082
sS'trials.thisN'
p1583
I99
sa(dp1584
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_09_orig.jpg'
p1585
sS'trials.thisIndex'
p1586
g45
(g586
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1587
sS'trials.thisRepN'
p1588
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x1c@'
tRp1589
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1590
sg30
I0
sg58
g45
(g586
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1591
sS'trials.thisTrialN'
p1592
I100
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0377438068389893
sS'trials.thisN'
p1593
I100
sa(dp1594
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_04_orig.jpg'
p1595
sS'trials.thisIndex'
p1596
g45
(g586
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1597
sS'trials.thisRepN'
p1598
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x1c@'
tRp1599
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp1600
sg30
I1
sg58
g45
(g586
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1601
sS'trials.thisTrialN'
p1602
I101
sg32
I0
sg39
g40
sg43
V3
sg33
F4.8420028686523438
sS'trials.thisN'
p1603
I101
sa(dp1604
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_07_orig.jpg'
p1605
sS'trials.thisIndex'
p1606
g45
(g586
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1607
sS'trials.thisRepN'
p1608
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x94!@'
tRp1609
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\r!\xc0'
tRp1610
sg30
I1
sg58
g45
(g586
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1611
sS'trials.thisTrialN'
p1612
I102
sg32
I0
sg39
g40
sg43
V3
sg33
F9.9373888969421387
sS'trials.thisN'
p1613
I102
sa(dp1614
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_01_orig.jpg'
p1615
sS'trials.thisIndex'
p1616
g45
(g586
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1617
sS'trials.thisRepN'
p1618
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb2!@'
tRp1619
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp1620
sg30
I1
sg58
g45
(g586
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1621
sS'trials.thisTrialN'
p1622
I103
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1028509140014648
sS'trials.thisN'
p1623
I103
sa(dp1624
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_06_orig.jpg'
p1625
sS'trials.thisIndex'
p1626
g45
(g586
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1627
sS'trials.thisRepN'
p1628
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x92#@'
tRp1629
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h \xc0'
tRp1630
sg30
I0
sg58
g45
(g586
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1631
sS'trials.thisTrialN'
p1632
I104
sg32
I1
sg39
g40
sg43
V3
sg33
F2.0935359001159668
sS'trials.thisN'
p1633
I104
sa(dp1634
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_00_orig.jpg'
p1635
sS'trials.thisIndex'
p1636
g45
(g586
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1637
sS'trials.thisRepN'
p1638
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x007$@'
tRp1639
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x0e \xc0'
tRp1640
sg30
I1
sg58
g45
(g586
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1641
sS'trials.thisTrialN'
p1642
I105
sg32
I0
sg39
g40
sg43
V3
sg33
F5.1607799530029297
sS'trials.thisN'
p1643
I105
sa(dp1644
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_08_orig.jpg'
p1645
sS'trials.thisIndex'
p1646
g45
(g586
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1647
sS'trials.thisRepN'
p1648
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp1649
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp1650
sg30
I0
sg58
g45
(g586
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1651
sS'trials.thisTrialN'
p1652
I106
sg32
I1
sg39
g40
sg43
V3
sg33
F1.7753369808197021
sS'trials.thisN'
p1653
I106
sa(dp1654
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_06_orig.jpg'
p1655
sS'trials.thisIndex'
p1656
g45
(g586
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1657
sS'trials.thisRepN'
p1658
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp1659
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp1660
sg30
I0
sg58
g45
(g586
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1661
sS'trials.thisTrialN'
p1662
I107
sg32
I1
sg39
g40
sg43
V3
sg33
F1.9752650260925293
sS'trials.thisN'
p1663
I107
sa(dp1664
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_02_orig.jpg'
p1665
sS'trials.thisIndex'
p1666
g45
(g586
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1667
sS'trials.thisRepN'
p1668
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp1669
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp1670
sg30
I0
sg58
g45
(g586
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1671
sS'trials.thisTrialN'
p1672
I108
sg32
I1
sg39
g40
sg43
V3
sg33
F1.18880295753479
sS'trials.thisN'
p1673
I108
sa(dp1674
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_02_orig.jpg'
p1675
sS'trials.thisIndex'
p1676
g45
(g586
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1677
sS'trials.thisRepN'
p1678
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp1679
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2\x1f\xc0'
tRp1680
sg30
I0
sg58
g45
(g586
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1681
sS'trials.thisTrialN'
p1682
I109
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2607970237731934
sS'trials.thisN'
p1683
I109
sa(dp1684
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_08_orig.jpg'
p1685
sS'trials.thisIndex'
p1686
g45
(g586
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1687
sS'trials.thisRepN'
p1688
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp1689
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x1f\xc0'
tRp1690
sg30
I0
sg58
g45
(g586
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1691
sS'trials.thisTrialN'
p1692
I110
sg32
I1
sg39
g40
sg43
V3
sg33
F4.0877881050109863
sS'trials.thisN'
p1693
I110
sa(dp1694
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_01_orig.jpg'
p1695
sS'trials.thisIndex'
p1696
g45
(g586
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1697
sS'trials.thisRepN'
p1698
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp1699
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x1f\xc0'
tRp1700
sg30
I1
sg58
g45
(g586
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1701
sS'trials.thisTrialN'
p1702
I111
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1883728504180908
sS'trials.thisN'
p1703
I111
sa(dp1704
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_08_orig.jpg'
p1705
sS'trials.thisIndex'
p1706
g45
(g586
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1707
sS'trials.thisRepN'
p1708
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp1709
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp1710
sg30
I0
sg58
g45
(g586
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1711
sS'trials.thisTrialN'
p1712
I112
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1721880435943604
sS'trials.thisN'
p1713
I112
sa(dp1714
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_06_orig.jpg'
p1715
sS'trials.thisIndex'
p1716
g45
(g586
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1717
sS'trials.thisRepN'
p1718
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp1719
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp1720
sg30
I0
sg58
g45
(g586
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1721
sS'trials.thisTrialN'
p1722
I113
sg32
I1
sg39
g40
sg43
V3
sg33
F3.6019628047943115
sS'trials.thisN'
p1723
I113
sa(dp1724
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_05_orig.jpg'
p1725
sS'trials.thisIndex'
p1726
g45
(g586
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1727
sS'trials.thisRepN'
p1728
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfa$@'
tRp1729
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2\x1f\xc0'
tRp1730
sg30
I1
sg58
g45
(g586
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1731
sS'trials.thisTrialN'
p1732
I114
sg32
I0
sg39
g40
sg43
V3
sg33
F2.0604519844055176
sS'trials.thisN'
p1733
I114
sa(dp1734
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_06_orig.jpg'
p1735
sS'trials.thisIndex'
p1736
g45
(g586
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1737
sS'trials.thisRepN'
p1738
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x006%@'
tRp1739
sg29
g45
(g47
S'\x00\x00\x00\x00\x00+!\xc0'
tRp1740
sg30
I0
sg58
g45
(g586
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1741
sS'trials.thisTrialN'
p1742
I115
sg32
I1
sg39
g40
sg43
V3
sg33
F4.9755251407623291
sS'trials.thisN'
p1743
I115
sa(dp1744
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_00_orig.jpg'
p1745
sS'trials.thisIndex'
p1746
g45
(g586
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1747
sS'trials.thisRepN'
p1748
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1749
sg29
g45
(g47
S'\x00\x00\x00\x00\x00, \xc0'
tRp1750
sg30
I1
sg58
g45
(g586
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1751
sS'trials.thisTrialN'
p1752
I116
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6579821109771729
sS'trials.thisN'
p1753
I116
sa(dp1754
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_00_orig.jpg'
p1755
sS'trials.thisIndex'
p1756
g45
(g586
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1757
sS'trials.thisRepN'
p1758
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1759
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x1f\xc0'
tRp1760
sg30
I1
sg58
g45
(g586
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1761
sS'trials.thisTrialN'
p1762
I117
sg32
I0
sg39
g40
sg43
V3
sg33
F14.779062032699585
sS'trials.thisN'
p1763
I117
sa(dp1764
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_02_orig.jpg'
p1765
sS'trials.thisIndex'
p1766
g45
(g586
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1767
sS'trials.thisRepN'
p1768
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1769
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x1f\xc0'
tRp1770
sg30
I1
sg58
g45
(g586
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1771
sS'trials.thisTrialN'
p1772
I118
sg32
I0
sg39
g40
sg43
V3
sg33
F1.7587709426879883
sS'trials.thisN'
p1773
I118
sa(dp1774
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_04_orig.jpg'
p1775
sS'trials.thisIndex'
p1776
g45
(g586
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1777
sS'trials.thisRepN'
p1778
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1779
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x1f\xc0'
tRp1780
sg30
I1
sg58
g45
(g586
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1781
sS'trials.thisTrialN'
p1782
I119
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3059539794921875
sS'trials.thisN'
p1783
I119
sa(dp1784
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_00_orig.jpg'
p1785
sS'trials.thisIndex'
p1786
g45
(g586
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1787
sS'trials.thisRepN'
p1788
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1789
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x1f\xc0'
tRp1790
sg30
I1
sg58
g45
(g586
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1791
sS'trials.thisTrialN'
p1792
I120
sg32
I0
sg39
g40
sg43
V3
sg33
F0.80323100090026855
sS'trials.thisN'
p1793
I120
sa(dp1794
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_07_orig.jpg'
p1795
sS'trials.thisIndex'
p1796
g45
(g586
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1797
sS'trials.thisRepN'
p1798
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1799
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp1800
sg30
I0
sg58
g45
(g586
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1801
sS'trials.thisTrialN'
p1802
I121
sg32
I1
sg39
g40
sg43
V3
sg33
F1.9090290069580078
sS'trials.thisN'
p1803
I121
sa(dp1804
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_05_orig.jpg'
p1805
sS'trials.thisIndex'
p1806
g45
(g586
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1807
sS'trials.thisRepN'
p1808
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1809
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp1810
sg30
I1
sg58
g45
(g586
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1811
sS'trials.thisTrialN'
p1812
I122
sg32
I0
sg39
g40
sg43
V3
sg33
F2.0919480323791504
sS'trials.thisN'
p1813
I122
sa(dp1814
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_10_orig.jpg'
p1815
sS'trials.thisIndex'
p1816
g45
(g586
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1817
sS'trials.thisRepN'
p1818
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x81%@'
tRp1819
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x1f\xc0'
tRp1820
sg30
I0
sg58
g45
(g586
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1821
sS'trials.thisTrialN'
p1822
I123
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3233580589294434
sS'trials.thisN'
p1823
I123
sa(dp1824
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_06_orig.jpg'
p1825
sS'trials.thisIndex'
p1826
g45
(g586
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1827
sS'trials.thisRepN'
p1828
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T%@'
tRp1829
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x1f\xc0'
tRp1830
sg30
I1
sg58
g45
(g586
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1831
sS'trials.thisTrialN'
p1832
I124
sg32
I0
sg39
g40
sg43
V3
sg33
F17.126259803771973
sS'trials.thisN'
p1833
I124
sa(dp1834
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_00_orig.jpg'
p1835
sS'trials.thisIndex'
p1836
g45
(g586
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1837
sS'trials.thisRepN'
p1838
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00T%@'
tRp1839
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x1f\xc0'
tRp1840
sg30
I1
sg58
g45
(g586
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1841
sS'trials.thisTrialN'
p1842
I125
sg32
I0
sg39
g40
sg43
V3
sg33
F0.93677115440368652
sS'trials.thisN'
p1843
I125
sa(dp1844
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_07_orig.jpg'
p1845
sS'trials.thisIndex'
p1846
g45
(g586
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1847
sS'trials.thisRepN'
p1848
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00c%@'
tRp1849
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1850
sg30
I1
sg58
g45
(g586
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1851
sS'trials.thisTrialN'
p1852
I126
sg32
I0
sg39
g40
sg43
V3
sg33
F0.87051296234130859
sS'trials.thisN'
p1853
I126
sa(dp1854
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_06_orig.jpg'
p1855
sS'trials.thisIndex'
p1856
g45
(g586
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1857
sS'trials.thisRepN'
p1858
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00c%@'
tRp1859
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1860
sg30
I1
sg58
g45
(g586
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1861
sS'trials.thisTrialN'
p1862
I127
sg32
I0
sg39
g40
sg43
V3
sg33
F4.0206279754638672
sS'trials.thisN'
p1863
I127
sa(dp1864
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_00_orig.jpg'
p1865
sS'trials.thisIndex'
p1866
g45
(g586
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1867
sS'trials.thisRepN'
p1868
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00c%@'
tRp1869
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1870
sg30
I1
sg58
g45
(g586
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1871
sS'trials.thisTrialN'
p1872
I128
sg32
I0
sg39
g40
sg43
V3
sg33
F1.070512056350708
sS'trials.thisN'
p1873
I128
sa(dp1874
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_03_orig.jpg'
p1875
sS'trials.thisIndex'
p1876
g45
(g586
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1877
sS'trials.thisRepN'
p1878
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00c%@'
tRp1879
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1880
sg30
I1
sg58
g45
(g586
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1881
sS'trials.thisTrialN'
p1882
I129
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0211880207061768
sS'trials.thisN'
p1883
I129
sa(dp1884
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_04_orig.jpg'
p1885
sS'trials.thisIndex'
p1886
g45
(g586
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1887
sS'trials.thisRepN'
p1888
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00c%@'
tRp1889
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1890
sg30
I0
sg58
g45
(g586
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1891
sS'trials.thisTrialN'
p1892
I130
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2557318210601807
sS'trials.thisN'
p1893
I130
sa(dp1894
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_01_orig.jpg'
p1895
sS'trials.thisIndex'
p1896
g45
(g586
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1897
sS'trials.thisRepN'
p1898
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00c%@'
tRp1899
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1900
sg30
I0
sg58
g45
(g586
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1901
sS'trials.thisTrialN'
p1902
I131
sg32
I1
sg39
g40
sg43
V3
sg33
F0.71936917304992676
sS'trials.thisN'
p1903
I131
sa(dp1904
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_06_orig.jpg'
p1905
sS'trials.thisIndex'
p1906
g45
(g586
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1907
sS'trials.thisRepN'
p1908
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00r%@'
tRp1909
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp1910
sg30
I1
sg58
g45
(g586
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1911
sS'trials.thisTrialN'
p1912
I132
sg32
I0
sg39
g40
sg43
V3
sg33
F4.2369661331176758
sS'trials.thisN'
p1913
I132
sa(dp1914
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_09_orig.jpg'
p1915
sS'trials.thisIndex'
p1916
g45
(g586
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1917
sS'trials.thisRepN'
p1918
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp1919
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp1920
sg30
I0
sg58
g45
(g586
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1921
sS'trials.thisTrialN'
p1922
I133
sg32
I1
sg39
g40
sg43
V3
sg33
F5.8479418754577637
sS'trials.thisN'
p1923
I133
sa(dp1924
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_01_orig.jpg'
p1925
sS'trials.thisIndex'
p1926
g45
(g586
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1927
sS'trials.thisRepN'
p1928
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x91$@'
tRp1929
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x88\x1d\xc0'
tRp1930
sg30
I1
sg58
g45
(g586
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1931
sS'trials.thisTrialN'
p1932
I134
sg32
I0
sg39
g40
sg43
V3
sg33
F3.7697889804840088
sS'trials.thisN'
p1933
I134
sa(dp1934
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_01_orig.jpg'
p1935
sS'trials.thisIndex'
p1936
g45
(g586
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1937
sS'trials.thisRepN'
p1938
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x91$@'
tRp1939
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x88\x1d\xc0'
tRp1940
sg30
I1
sg58
g45
(g586
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1941
sS'trials.thisTrialN'
p1942
I135
sg32
I0
sg39
g40
sg43
V3
sg33
F1.7414288520812988
sS'trials.thisN'
p1943
I135
sa(dp1944
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_03_orig.jpg'
p1945
sS'trials.thisIndex'
p1946
g45
(g586
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1947
sS'trials.thisRepN'
p1948
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x91$@'
tRp1949
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x88\x1d\xc0'
tRp1950
sg30
I1
sg58
g45
(g586
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1951
sS'trials.thisTrialN'
p1952
I136
sg32
I0
sg39
g40
sg43
V3
sg33
F0.95366883277893066
sS'trials.thisN'
p1953
I136
sa(dp1954
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_03_orig.jpg'
p1955
sS'trials.thisIndex'
p1956
g45
(g586
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1957
sS'trials.thisRepN'
p1958
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x91$@'
tRp1959
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x88\x1d\xc0'
tRp1960
sg30
I1
sg58
g45
(g586
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1961
sS'trials.thisTrialN'
p1962
I137
sg32
I0
sg39
g40
sg43
V3
sg33
F1.8757171630859375
sS'trials.thisN'
p1963
I137
sa(dp1964
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_09_orig.jpg'
p1965
sS'trials.thisIndex'
p1966
g45
(g586
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1967
sS'trials.thisRepN'
p1968
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp1969
sg29
g45
(g47
S'\x00\x00\x00\x00\x00.\x1d\xc0'
tRp1970
sg30
I0
sg58
g45
(g586
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1971
sS'trials.thisTrialN'
p1972
I138
sg32
I1
sg39
g40
sg43
V3
sg33
F0.85181689262390137
sS'trials.thisN'
p1973
I138
sa(dp1974
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_00_orig.jpg'
p1975
sS'trials.thisIndex'
p1976
g45
(g586
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1977
sS'trials.thisRepN'
p1978
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp1979
sg29
g45
(g47
S'\x00\x00\x00\x00\x00.\x1d\xc0'
tRp1980
sg30
I1
sg58
g45
(g586
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1981
sS'trials.thisTrialN'
p1982
I139
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1206860542297363
sS'trials.thisN'
p1983
I139
sa(dp1984
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_05_orig.jpg'
p1985
sS'trials.thisIndex'
p1986
g45
(g586
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1987
sS'trials.thisRepN'
p1988
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp1989
sg29
g45
(g47
S'\x00\x00\x00\x00\x00.\x1d\xc0'
tRp1990
sg30
I0
sg58
g45
(g586
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1991
sS'trials.thisTrialN'
p1992
I140
sg32
I1
sg39
g40
sg43
V3
sg33
F0.85330700874328613
sS'trials.thisN'
p1993
I140
sa(dp1994
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_07_orig.jpg'
p1995
sS'trials.thisIndex'
p1996
g45
(g586
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp1997
sS'trials.thisRepN'
p1998
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp1999
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd4\x1c\xc0'
tRp2000
sg30
I0
sg58
g45
(g586
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2001
sS'trials.thisTrialN'
p2002
I141
sg32
I1
sg39
g40
sg43
V3
sg33
F5.7811479568481445
sS'trials.thisN'
p2003
I141
sa(dp2004
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_07_orig.jpg'
p2005
sS'trials.thisIndex'
p2006
g45
(g586
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2007
sS'trials.thisRepN'
p2008
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2009
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x1f\xc0'
tRp2010
sg30
I1
sg58
g45
(g586
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2011
sS'trials.thisTrialN'
p2012
I142
sg32
I0
sg39
g40
sg43
V3
sg33
F9.7691688537597656
sS'trials.thisN'
p2013
I142
sa(dp2014
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_03_orig.jpg'
p2015
sS'trials.thisIndex'
p2016
g45
(g586
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2017
sS'trials.thisRepN'
p2018
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2019
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2020
sg30
I1
sg58
g45
(g586
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2021
sS'trials.thisTrialN'
p2022
I143
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0881431102752686
sS'trials.thisN'
p2023
I143
sa(dp2024
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_07_orig.jpg'
p2025
sS'trials.thisIndex'
p2026
g45
(g586
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2027
sS'trials.thisRepN'
p2028
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2029
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2030
sg30
I0
sg58
g45
(g586
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2031
sS'trials.thisTrialN'
p2032
I144
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0376710891723633
sS'trials.thisN'
p2033
I144
sa(dp2034
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_10_orig.jpg'
p2035
sS'trials.thisIndex'
p2036
g45
(g586
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2037
sS'trials.thisRepN'
p2038
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2039
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2040
sg30
I0
sg58
g45
(g586
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2041
sS'trials.thisTrialN'
p2042
I145
sg32
I1
sg39
g40
sg43
V3
sg33
F0.75332808494567871
sS'trials.thisN'
p2043
I145
sa(dp2044
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_06_orig.jpg'
p2045
sS'trials.thisIndex'
p2046
g45
(g586
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2047
sS'trials.thisRepN'
p2048
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2049
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2050
sg30
I0
sg58
g45
(g586
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2051
sS'trials.thisTrialN'
p2052
I146
sg32
I1
sg39
g40
sg43
V3
sg33
F0.7339940071105957
sS'trials.thisN'
p2053
I146
sa(dp2054
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_02_orig.jpg'
p2055
sS'trials.thisIndex'
p2056
g45
(g586
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2057
sS'trials.thisRepN'
p2058
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2059
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2060
sg30
I0
sg58
g45
(g586
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2061
sS'trials.thisTrialN'
p2062
I147
sg32
I1
sg39
g40
sg43
V3
sg33
F0.78644585609436035
sS'trials.thisN'
p2063
I147
sa(dp2064
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_05_orig.jpg'
p2065
sS'trials.thisIndex'
p2066
g45
(g586
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2067
sS'trials.thisRepN'
p2068
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2069
sg29
g45
(g47
S'\x00\x00\x00\x00\x00<\x1e\xc0'
tRp2070
sg30
I1
sg58
g45
(g586
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2071
sS'trials.thisTrialN'
p2072
I148
sg32
I0
sg39
g40
sg43
V3
sg33
F4.5069279670715332
sS'trials.thisN'
p2073
I148
sa(dp2074
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_04_orig.jpg'
p2075
sS'trials.thisIndex'
p2076
g45
(g586
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2077
sS'trials.thisRepN'
p2078
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2079
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp2080
sg30
I0
sg58
g45
(g586
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2081
sS'trials.thisTrialN'
p2082
I149
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4067349433898926
sS'trials.thisN'
p2083
I149
sa(dp2084
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_10_orig.jpg'
p2085
sS'trials.thisIndex'
p2086
g45
(g586
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2087
sS'trials.thisRepN'
p2088
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2089
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp2090
sg30
I0
sg58
g45
(g586
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2091
sS'trials.thisTrialN'
p2092
I150
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0877749919891357
sS'trials.thisN'
p2093
I150
sa(dp2094
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_08_orig.jpg'
p2095
sS'trials.thisIndex'
p2096
g45
(g586
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2097
sS'trials.thisRepN'
p2098
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2099
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp2100
sg30
I0
sg58
g45
(g586
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2101
sS'trials.thisTrialN'
p2102
I151
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2556779384613037
sS'trials.thisN'
p2103
I151
sa(dp2104
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_02_orig.jpg'
p2105
sS'trials.thisIndex'
p2106
g45
(g586
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2107
sS'trials.thisRepN'
p2108
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2109
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp2110
sg30
I1
sg58
g45
(g586
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2111
sS'trials.thisTrialN'
p2112
I152
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0873820781707764
sS'trials.thisN'
p2113
I152
sa(dp2114
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_05_orig.jpg'
p2115
sS'trials.thisIndex'
p2116
g45
(g586
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2117
sS'trials.thisRepN'
p2118
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2119
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2120
sg30
I1
sg58
g45
(g586
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2121
sS'trials.thisTrialN'
p2122
I153
sg32
I0
sg39
g40
sg43
V3
sg33
F7.3895590305328369
sS'trials.thisN'
p2123
I153
sa(dp2124
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_09_orig.jpg'
p2125
sS'trials.thisIndex'
p2126
g45
(g586
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2127
sS'trials.thisRepN'
p2128
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2129
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2130
sg30
I0
sg58
g45
(g586
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2131
sS'trials.thisTrialN'
p2132
I154
sg32
I1
sg39
g40
sg43
V3
sg33
F2.4604661464691162
sS'trials.thisN'
p2133
I154
sa(dp2134
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_03_orig.jpg'
p2135
sS'trials.thisIndex'
p2136
g45
(g586
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2137
sS'trials.thisRepN'
p2138
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2139
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1d \xc0'
tRp2140
sg30
I1
sg58
g45
(g586
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2141
sS'trials.thisTrialN'
p2142
I155
sg32
I0
sg39
g40
sg43
V3
sg33
F10.086935043334961
sS'trials.thisN'
p2143
I155
sa(dp2144
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_03_orig.jpg'
p2145
sS'trials.thisIndex'
p2146
g45
(g586
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2147
sS'trials.thisRepN'
p2148
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xaf$@'
tRp2149
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x1f\xc0'
tRp2150
sg30
I1
sg58
g45
(g586
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2151
sS'trials.thisTrialN'
p2152
I156
sg32
I0
sg39
g40
sg43
V3
sg33
F4.9094600677490234
sS'trials.thisN'
p2153
I156
sa(dp2154
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_01_orig.jpg'
p2155
sS'trials.thisIndex'
p2156
g45
(g586
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2157
sS'trials.thisRepN'
p2158
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp2159
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Y \xc0'
tRp2160
sg30
I1
sg58
g45
(g586
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2161
sS'trials.thisTrialN'
p2162
I157
sg32
I0
sg39
g40
sg43
V3
sg33
F5.0249180793762207
sS'trials.thisN'
p2163
I157
sa(dp2164
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_01_orig.jpg'
p2165
sS'trials.thisIndex'
p2166
g45
(g586
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2167
sS'trials.thisRepN'
p2168
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp2169
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp2170
sg30
I1
sg58
g45
(g586
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2171
sS'trials.thisTrialN'
p2172
I158
sg32
I0
sg39
g40
sg43
V3
sg33
F5.5946049690246582
sS'trials.thisN'
p2173
I158
sa(dp2174
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_02_orig.jpg'
p2175
sS'trials.thisIndex'
p2176
g45
(g586
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2177
sS'trials.thisRepN'
p2178
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp2179
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp2180
sg30
I1
sg58
g45
(g586
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2181
sS'trials.thisTrialN'
p2182
I159
sg32
I0
sg39
g40
sg43
V3
sg33
F2.1272330284118652
sS'trials.thisN'
p2183
I159
sa(dp2184
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_02_orig.jpg'
p2185
sS'trials.thisIndex'
p2186
g45
(g586
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2187
sS'trials.thisRepN'
p2188
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$@'
tRp2189
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp2190
sg30
I1
sg58
g45
(g586
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2191
sS'trials.thisTrialN'
p2192
I160
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0710849761962891
sS'trials.thisN'
p2193
I160
sa(dp2194
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_10_orig.jpg'
p2195
sS'trials.thisIndex'
p2196
g45
(g586
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2197
sS'trials.thisRepN'
p2198
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2199
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x1f\xc0'
tRp2200
sg30
I0
sg58
g45
(g586
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2201
sS'trials.thisTrialN'
p2202
I161
sg32
I1
sg39
g40
sg43
V3
sg33
F0.82020306587219238
sS'trials.thisN'
p2203
I161
sa(dp2204
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_10_orig.jpg'
p2205
sS'trials.thisIndex'
p2206
g45
(g586
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2207
sS'trials.thisRepN'
p2208
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2209
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x1f\xc0'
tRp2210
sg30
I0
sg58
g45
(g586
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2211
sS'trials.thisTrialN'
p2212
I162
sg32
I1
sg39
g40
sg43
V3
sg33
F1.48946213722229
sS'trials.thisN'
p2213
I162
sa(dp2214
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_04_orig.jpg'
p2215
sS'trials.thisIndex'
p2216
g45
(g586
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2217
sS'trials.thisRepN'
p2218
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2219
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2220
sg30
I1
sg58
g45
(g586
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2221
sS'trials.thisTrialN'
p2222
I163
sg32
I0
sg39
g40
sg43
V3
sg33
F3.7686500549316406
sS'trials.thisN'
p2223
I163
sa(dp2224
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_00_orig.jpg'
p2225
sS'trials.thisIndex'
p2226
g45
(g586
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2227
sS'trials.thisRepN'
p2228
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2229
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2230
sg30
I1
sg58
g45
(g586
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2231
sS'trials.thisTrialN'
p2232
I164
sg32
I0
sg39
g40
sg43
V3
sg33
F1.171734094619751
sS'trials.thisN'
p2233
I164
sa(dp2234
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_07_orig.jpg'
p2235
sS'trials.thisIndex'
p2236
g45
(g586
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2237
sS'trials.thisRepN'
p2238
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2239
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2240
sg30
I0
sg58
g45
(g586
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2241
sS'trials.thisTrialN'
p2242
I165
sg32
I1
sg39
g40
sg43
V3
sg33
F4.8918077945709229
sS'trials.thisN'
p2243
I165
sa(dp2244
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_05_orig.jpg'
p2245
sS'trials.thisIndex'
p2246
g45
(g586
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2247
sS'trials.thisRepN'
p2248
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2249
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp2250
sg30
I0
sg58
g45
(g586
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2251
sS'trials.thisTrialN'
p2252
I166
sg32
I1
sg39
g40
sg43
V3
sg33
F6.4681870937347412
sS'trials.thisN'
p2253
I166
sa(dp2254
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_03_orig.jpg'
p2255
sS'trials.thisIndex'
p2256
g45
(g586
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2257
sS'trials.thisRepN'
p2258
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2259
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp2260
sg30
I1
sg58
g45
(g586
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2261
sS'trials.thisTrialN'
p2262
I167
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4570400714874268
sS'trials.thisN'
p2263
I167
sa(dp2264
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_02_orig.jpg'
p2265
sS'trials.thisIndex'
p2266
g45
(g586
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2267
sS'trials.thisRepN'
p2268
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2269
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp2270
sg30
I1
sg58
g45
(g586
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2271
sS'trials.thisTrialN'
p2272
I168
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0041489601135254
sS'trials.thisN'
p2273
I168
sa(dp2274
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_01_orig.jpg'
p2275
sS'trials.thisIndex'
p2276
g45
(g586
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2277
sS'trials.thisRepN'
p2278
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2279
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2280
sg30
I1
sg58
g45
(g586
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2281
sS'trials.thisTrialN'
p2282
I169
sg32
I0
sg39
g40
sg43
V3
sg33
F0.65240287780761719
sS'trials.thisN'
p2283
I169
sa(dp2284
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_04_orig.jpg'
p2285
sS'trials.thisIndex'
p2286
g45
(g586
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2287
sS'trials.thisRepN'
p2288
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2289
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2290
sg30
I1
sg58
g45
(g586
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2291
sS'trials.thisTrialN'
p2292
I170
sg32
I0
sg39
g40
sg43
V3
sg33
F2.7620489597320557
sS'trials.thisN'
p2293
I170
sa(dp2294
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_09_orig.jpg'
p2295
sS'trials.thisIndex'
p2296
g45
(g586
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2297
sS'trials.thisRepN'
p2298
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2299
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2300
sg30
I0
sg58
g45
(g586
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2301
sS'trials.thisTrialN'
p2302
I171
sg32
I1
sg39
g40
sg43
V3
sg33
F0.9705970287322998
sS'trials.thisN'
p2303
I171
sa(dp2304
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM6_00_orig.jpg'
p2305
sS'trials.thisIndex'
p2306
g45
(g586
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2307
sS'trials.thisRepN'
p2308
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2309
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2310
sg30
I1
sg58
g45
(g586
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2311
sS'trials.thisTrialN'
p2312
I172
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3229479789733887
sS'trials.thisN'
p2313
I172
sa(dp2314
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_09_orig.jpg'
p2315
sS'trials.thisIndex'
p2316
g45
(g586
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2317
sS'trials.thisRepN'
p2318
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcd$@'
tRp2319
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f\xc0'
tRp2320
sg30
I0
sg58
g45
(g586
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2321
sS'trials.thisTrialN'
p2322
I173
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2054948806762695
sS'trials.thisN'
p2323
I173
sa(dp2324
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_06_orig.jpg'
p2325
sS'trials.thisIndex'
p2326
g45
(g586
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2327
sS'trials.thisRepN'
p2328
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbe$@'
tRp2329
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp2330
sg30
I0
sg58
g45
(g586
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2331
sS'trials.thisTrialN'
p2332
I174
sg32
I1
sg39
g40
sg43
V3
sg33
F1.6396400928497314
sS'trials.thisN'
p2333
I174
sa(dp2334
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_01_orig.jpg'
p2335
sS'trials.thisIndex'
p2336
g45
(g586
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2337
sS'trials.thisRepN'
p2338
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0"@'
tRp2339
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4 \xc0'
tRp2340
sg30
I1
sg58
g45
(g586
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2341
sS'trials.thisTrialN'
p2342
I175
sg32
I0
sg39
g40
sg43
V3
sg33
F7.0712661743164062
sS'trials.thisN'
p2343
I175
sa(dp2344
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_07_orig.jpg'
p2345
sS'trials.thisIndex'
p2346
g45
(g586
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2347
sS'trials.thisRepN'
p2348
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x0b#@'
tRp2349
sg29
g45
(g47
S'\x00\x00\x00\x00\x00+!\xc0'
tRp2350
sg30
I0
sg58
g45
(g586
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2351
sS'trials.thisTrialN'
p2352
I176
sg32
I1
sg39
g40
sg43
V3
sg33
F4.9764270782470703
sS'trials.thisN'
p2353
I176
sa(dp2354
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_01_orig.jpg'
p2355
sS'trials.thisIndex'
p2356
g45
(g586
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2357
sS'trials.thisRepN'
p2358
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2359
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2360
sg30
I1
sg58
g45
(g586
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2361
sS'trials.thisTrialN'
p2362
I177
sg32
I0
sg39
g40
sg43
V3
sg33
F6.5181350708007812
sS'trials.thisN'
p2363
I177
sa(dp2364
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_03_orig.jpg'
p2365
sS'trials.thisIndex'
p2366
g45
(g586
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2367
sS'trials.thisRepN'
p2368
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2369
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2370
sg30
I0
sg58
g45
(g586
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2371
sS'trials.thisTrialN'
p2372
I178
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0531721115112305
sS'trials.thisN'
p2373
I178
sa(dp2374
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_09_orig.jpg'
p2375
sS'trials.thisIndex'
p2376
g45
(g586
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2377
sS'trials.thisRepN'
p2378
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2379
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2380
sg30
I0
sg58
g45
(g586
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2381
sS'trials.thisTrialN'
p2382
I179
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0530378818511963
sS'trials.thisN'
p2383
I179
sa(dp2384
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_10_orig.jpg'
p2385
sS'trials.thisIndex'
p2386
g45
(g586
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2387
sS'trials.thisRepN'
p2388
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2389
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2390
sg30
I0
sg58
g45
(g586
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2391
sS'trials.thisTrialN'
p2392
I180
sg32
I1
sg39
g40
sg43
V3
sg33
F2.8296940326690674
sS'trials.thisN'
p2393
I180
sa(dp2394
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_10_orig.jpg'
p2395
sS'trials.thisIndex'
p2396
g45
(g586
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2397
sS'trials.thisRepN'
p2398
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2399
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2400
sg30
I0
sg58
g45
(g586
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2401
sS'trials.thisTrialN'
p2402
I181
sg32
I1
sg39
g40
sg43
V3
sg33
F3.5184540748596191
sS'trials.thisN'
p2403
I181
sa(dp2404
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_10_orig.jpg'
p2405
sS'trials.thisIndex'
p2406
g45
(g586
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2407
sS'trials.thisRepN'
p2408
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2409
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2410
sg30
I0
sg58
g45
(g586
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2411
sS'trials.thisTrialN'
p2412
I182
sg32
I1
sg39
g40
sg43
V3
sg33
F0.73550200462341309
sS'trials.thisN'
p2413
I182
sa(dp2414
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_09_orig.jpg'
p2415
sS'trials.thisIndex'
p2416
g45
(g586
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2417
sS'trials.thisRepN'
p2418
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2419
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2420
sg30
I0
sg58
g45
(g586
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2421
sS'trials.thisTrialN'
p2422
I183
sg32
I1
sg39
g40
sg43
V3
sg33
F0.73537516593933105
sS'trials.thisN'
p2423
I183
sa(dp2424
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_05_orig.jpg'
p2425
sS'trials.thisIndex'
p2426
g45
(g586
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2427
sS'trials.thisRepN'
p2428
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2429
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2430
sg30
I1
sg58
g45
(g586
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2431
sS'trials.thisTrialN'
p2432
I184
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4565780162811279
sS'trials.thisN'
p2433
I184
sa(dp2434
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF6_00_orig.jpg'
p2435
sS'trials.thisIndex'
p2436
g45
(g586
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2437
sS'trials.thisRepN'
p2438
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2439
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2440
sg30
I1
sg58
g45
(g586
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2441
sS'trials.thisTrialN'
p2442
I185
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0377349853515625
sS'trials.thisN'
p2443
I185
sa(dp2444
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_08_orig.jpg'
p2445
sS'trials.thisIndex'
p2446
g45
(g586
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2447
sS'trials.thisRepN'
p2448
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2449
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2450
sg30
I0
sg58
g45
(g586
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2451
sS'trials.thisTrialN'
p2452
I186
sg32
I1
sg39
g40
sg43
V3
sg33
F3.3660180568695068
sS'trials.thisN'
p2453
I186
sa(dp2454
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_10_orig.jpg'
p2455
sS'trials.thisIndex'
p2456
g45
(g586
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2457
sS'trials.thisRepN'
p2458
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2459
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2460
sg30
I0
sg58
g45
(g586
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2461
sS'trials.thisTrialN'
p2462
I187
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3063089847564697
sS'trials.thisN'
p2463
I187
sa(dp2464
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_10_orig.jpg'
p2465
sS'trials.thisIndex'
p2466
g45
(g586
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2467
sS'trials.thisRepN'
p2468
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2469
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2470
sg30
I0
sg58
g45
(g586
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2471
sS'trials.thisTrialN'
p2472
I188
sg32
I1
sg39
g40
sg43
V3
sg33
F0.80109906196594238
sS'trials.thisN'
p2473
I188
sa(dp2474
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_05_orig.jpg'
p2475
sS'trials.thisIndex'
p2476
g45
(g586
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2477
sS'trials.thisRepN'
p2478
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$@'
tRp2479
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\x1e\xc0'
tRp2480
sg30
I0
sg58
g45
(g586
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2481
sS'trials.thisTrialN'
p2482
I189
sg32
I1
sg39
g40
sg43
V3
sg33
F0.71958017349243164
sS'trials.thisN'
p2483
I189
sa(dp2484
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_03_orig.jpg'
p2485
sS'trials.thisIndex'
p2486
g45
(g586
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2487
sS'trials.thisRepN'
p2488
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00r%@'
tRp2489
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd2\x1e\xc0'
tRp2490
sg30
I1
sg58
g45
(g586
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2491
sS'trials.thisTrialN'
p2492
I190
sg32
I0
sg39
g40
sg43
V3
sg33
F5.9481990337371826
sS'trials.thisN'
p2493
I190
sa(dp2494
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_10_orig.jpg'
p2495
sS'trials.thisIndex'
p2496
g45
(g586
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2497
sS'trials.thisRepN'
p2498
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00E%@'
tRp2499
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Z\x1e\xc0'
tRp2500
sg30
I0
sg58
g45
(g586
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2501
sS'trials.thisTrialN'
p2502
I191
sg32
I1
sg39
g40
sg43
V3
sg33
F1.37300705909729
sS'trials.thisN'
p2503
I191
sa(dp2504
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_02_orig.jpg'
p2505
sS'trials.thisIndex'
p2506
g45
(g586
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2507
sS'trials.thisRepN'
p2508
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp2509
sg29
g45
(g47
S'\x00\x00\x00\x00\x00U$\xc0'
tRp2510
sg30
I1
sg58
g45
(g586
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2511
sS'trials.thisTrialN'
p2512
I192
sg32
I0
sg39
g40
sg43
V3
sg33
F6.9041459560394287
sS'trials.thisN'
p2513
I192
sa(dp2514
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM4_09_orig.jpg'
p2515
sS'trials.thisIndex'
p2516
g45
(g586
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2517
sS'trials.thisRepN'
p2518
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp2519
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x92#\xc0'
tRp2520
sg30
I0
sg58
g45
(g586
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2521
sS'trials.thisTrialN'
p2522
I193
sg32
I1
sg39
g40
sg43
V3
sg33
F3.2331869602203369
sS'trials.thisN'
p2523
I193
sa(dp2524
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_07_orig.jpg'
p2525
sS'trials.thisIndex'
p2526
g45
(g586
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2527
sS'trials.thisRepN'
p2528
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp2529
sg29
g45
(g47
S'\x00\x00\x00\x00\x00r%\xc0'
tRp2530
sg30
I0
sg58
g45
(g586
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2531
sS'trials.thisTrialN'
p2532
I194
sg32
I1
sg39
g40
sg43
V3
sg33
F2.9981300830841064
sS'trials.thisN'
p2533
I194
sa(dp2534
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM1_08_orig.jpg'
p2535
sS'trials.thisIndex'
p2536
g45
(g586
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2537
sS'trials.thisRepN'
p2538
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x86\x1f@'
tRp2539
sg29
g45
(g47
S'\x00\x00\x00\x00\x00r%\xc0'
tRp2540
sg30
I0
sg58
g45
(g586
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2541
sS'trials.thisTrialN'
p2542
I195
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4383881092071533
sS'trials.thisN'
p2543
I195
sa(dp2544
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF4_08_orig.jpg'
p2545
sS'trials.thisIndex'
p2546
g45
(g586
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2547
sS'trials.thisRepN'
p2548
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f@'
tRp2549
sg29
g45
(g47
S'\x00\x00\x00\x00\x00c%\xc0'
tRp2550
sg30
I0
sg58
g45
(g586
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2551
sS'trials.thisTrialN'
p2552
I196
sg32
I1
sg39
g40
sg43
V3
sg33
F0.97031688690185547
sS'trials.thisN'
p2553
I196
sa(dp2554
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_04_orig.jpg'
p2555
sS'trials.thisIndex'
p2556
g45
(g586
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2557
sS'trials.thisRepN'
p2558
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f@'
tRp2559
sg29
g45
(g47
S'\x00\x00\x00\x00\x00T%\xc0'
tRp2560
sg30
I1
sg58
g45
(g586
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2561
sS'trials.thisTrialN'
p2562
I197
sg32
I0
sg39
g40
sg43
V3
sg33
F0.98754382133483887
sS'trials.thisN'
p2563
I197
sa(dp2564
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF1_09_orig.jpg'
p2565
sS'trials.thisIndex'
p2566
g45
(g586
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2567
sS'trials.thisRepN'
p2568
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2569
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xdc$\xc0'
tRp2570
sg30
I0
sg58
g45
(g586
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2571
sS'trials.thisTrialN'
p2572
I198
sg32
I1
sg39
g40
sg43
V3
sg33
F5.4292500019073486
sS'trials.thisN'
p2573
I198
sa(dp2574
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_08_orig.jpg'
p2575
sS'trials.thisIndex'
p2576
g45
(g586
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2577
sS'trials.thisRepN'
p2578
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00z\x1c@'
tRp2579
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp2580
sg30
I1
sg58
g45
(g586
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2581
sS'trials.thisTrialN'
p2582
I199
sg32
I0
sg39
g40
sg43
V3
sg33
F15.21720814704895
sS'trials.thisN'
p2583
I199
sa(dp2584
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_01_orig.jpg'
p2585
sS'trials.thisIndex'
p2586
g45
(g586
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2587
sS'trials.thisRepN'
p2588
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00>\x1c@'
tRp2589
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp2590
sg30
I1
sg58
g45
(g586
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2591
sS'trials.thisTrialN'
p2592
I200
sg32
I0
sg39
g40
sg43
V3
sg33
F0.98643994331359863
sS'trials.thisN'
p2593
I200
sa(dp2594
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM10_00_orig.jpg'
p2595
sS'trials.thisIndex'
p2596
g45
(g586
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2597
sS'trials.thisRepN'
p2598
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c@'
tRp2599
sg29
g45
(g47
S'\x00\x00\x00\x00\x00q&\xc0'
tRp2600
sg30
I1
sg58
g45
(g586
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2601
sS'trials.thisTrialN'
p2602
I201
sg32
I0
sg39
g40
sg43
V3
sg33
F0.75111794471740723
sS'trials.thisN'
p2603
I201
sa(dp2604
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_00_orig.jpg'
p2605
sS'trials.thisIndex'
p2606
g45
(g586
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2607
sS'trials.thisRepN'
p2608
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c@'
tRp2609
sg29
g45
(g47
S'\x00\x00\x00\x00\x00b&\xc0'
tRp2610
sg30
I1
sg58
g45
(g586
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2611
sS'trials.thisTrialN'
p2612
I202
sg32
I0
sg39
g40
sg43
V3
sg33
F0.71836400032043457
sS'trials.thisN'
p2613
I202
sa(dp2614
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM9_01_orig.jpg'
p2615
sS'trials.thisIndex'
p2616
g45
(g586
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2617
sS'trials.thisRepN'
p2618
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c@'
tRp2619
sg29
g45
(g47
S'\x00\x00\x00\x00\x00b&\xc0'
tRp2620
sg30
I1
sg58
g45
(g586
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2621
sS'trials.thisTrialN'
p2622
I203
sg32
I0
sg39
g40
sg43
V3
sg33
F0.80348896980285645
sS'trials.thisN'
p2623
I203
sa(dp2624
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF7_09_orig.jpg'
p2625
sS'trials.thisIndex'
p2626
g45
(g586
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2627
sS'trials.thisRepN'
p2628
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c@'
tRp2629
sg29
g45
(g47
S'\x00\x00\x00\x00\x005&\xc0'
tRp2630
sg30
I0
sg58
g45
(g586
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2631
sS'trials.thisTrialN'
p2632
I204
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3733420372009277
sS'trials.thisN'
p2633
I204
sa(dp2634
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF9_00_orig.jpg'
p2635
sS'trials.thisIndex'
p2636
g45
(g586
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2637
sS'trials.thisRepN'
p2638
I0
sg44
g48
sg28
g45
(g47
S"\x00\x00\x00\x00\x00%'@"
tRp2639
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8c)\xc0'
tRp2640
sg30
I1
sg58
g45
(g586
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2641
sS'trials.thisTrialN'
p2642
I205
sg32
I0
sg39
g40
sg43
V3
sg33
F12.29987096786499
sS'trials.thisN'
p2643
I205
sa(dp2644
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_02_orig.jpg'
p2645
sS'trials.thisIndex'
p2646
g45
(g586
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2647
sS'trials.thisRepN'
p2648
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00W"@'
tRp2649
sg29
g45
(g47
S'\x00\x00\x00\x00\x00$\x08@'
tRp2650
sg30
I1
sg58
g45
(g586
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2651
sS'trials.thisTrialN'
p2652
I206
sg32
I0
sg39
g40
sg43
V3
sg33
F14.261443138122559
sS'trials.thisN'
p2653
I206
sa(dp2654
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_05_orig.jpg'
p2655
sS'trials.thisIndex'
p2656
g45
(g586
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2657
sS'trials.thisRepN'
p2658
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdf!@'
tRp2659
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\x01@'
tRp2660
sg30
I1
sg58
g45
(g586
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2661
sS'trials.thisTrialN'
p2662
I207
sg32
I0
sg39
g40
sg43
V3
sg33
F5.1437740325927734
sS'trials.thisN'
p2663
I207
sa(dp2664
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF3_09_orig.jpg'
p2665
sS'trials.thisIndex'
p2666
g45
(g586
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2667
sS'trials.thisRepN'
p2668
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00.\x1d@'
tRp2669
sg29
g45
(g47
S'\x00\x00\x00\x00\x00X\xf1\xbf'
tRp2670
sg30
I1
sg58
g45
(g586
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2671
sS'trials.thisTrialN'
p2672
I208
sg32
I0
sg39
g40
sg43
V3
sg33
F7.5401678085327148
sS'trials.thisN'
p2673
I208
sa(dp2674
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_10_orig.jpg'
p2675
sS'trials.thisIndex'
p2676
g45
(g586
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2677
sS'trials.thisRepN'
p2678
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00:!@'
tRp2679
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xc6\xbf'
tRp2680
sg30
I0
sg58
g45
(g586
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2681
sS'trials.thisTrialN'
p2682
I209
sg32
I1
sg39
g40
sg43
V3
sg33
F3.2675600051879883
sS'trials.thisN'
p2683
I209
sa(dp2684
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM8_08_orig.jpg'
p2685
sS'trials.thisIndex'
p2686
g45
(g586
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2687
sS'trials.thisRepN'
p2688
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x85!@'
tRp2689
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xb6\xbf'
tRp2690
sg30
I0
sg58
g45
(g586
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2691
sS'trials.thisTrialN'
p2692
I210
sg32
I1
sg39
g40
sg43
V3
sg33
F3.1151390075683594
sS'trials.thisN'
p2693
I210
sa(dp2694
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM3_07_orig.jpg'
p2695
sS'trials.thisIndex'
p2696
g45
(g586
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2697
sS'trials.thisRepN'
p2698
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x85!@'
tRp2699
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xb6\xbf'
tRp2700
sg30
I0
sg58
g45
(g586
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2701
sS'trials.thisTrialN'
p2702
I211
sg32
I1
sg39
g40
sg43
V3
sg33
F0.68622684478759766
sS'trials.thisN'
p2703
I211
sa(dp2704
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM5_06_orig.jpg'
p2705
sS'trials.thisIndex'
p2706
g45
(g586
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2707
sS'trials.thisRepN'
p2708
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1b"@'
tRp2709
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xb6?'
tRp2710
sg30
I1
sg58
g45
(g586
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2711
sS'trials.thisTrialN'
p2712
I212
sg32
I0
sg39
g40
sg43
V3
sg33
F1.5239169597625732
sS'trials.thisN'
p2713
I212
sa(dp2714
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_09_orig.jpg'
p2715
sS'trials.thisIndex'
p2716
g45
(g586
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2717
sS'trials.thisRepN'
p2718
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0"@'
tRp2719
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xd4?'
tRp2720
sg30
I0
sg58
g45
(g586
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2721
sS'trials.thisTrialN'
p2722
I213
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3566060066223145
sS'trials.thisN'
p2723
I213
sa(dp2724
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF8_06_orig.jpg'
p2725
sS'trials.thisIndex'
p2726
g45
(g586
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2727
sS'trials.thisRepN'
p2728
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x9e&@'
tRp2729
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x10\xc0'
tRp2730
sg30
I1
sg58
g45
(g586
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2731
sS'trials.thisTrialN'
p2732
I214
sg32
I0
sg39
g40
sg43
V3
sg33
F3.5663728713989258
sS'trials.thisN'
p2733
I214
sa(dp2734
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF5_04_orig.jpg'
p2735
sS'trials.thisIndex'
p2736
g45
(g586
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2737
sS'trials.thisRepN'
p2738
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcb&@'
tRp2739
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x0f\xc0'
tRp2740
sg30
I1
sg58
g45
(g586
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2741
sS'trials.thisTrialN'
p2742
I215
sg32
I0
sg39
g40
sg43
V3
sg33
F6.2838339805603027
sS'trials.thisN'
p2743
I215
sa(dp2744
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM2_04_orig.jpg'
p2745
sS'trials.thisIndex'
p2746
g45
(g586
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2747
sS'trials.thisRepN'
p2748
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcb&@'
tRp2749
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x0f\xc0'
tRp2750
sg30
I1
sg58
g45
(g586
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2751
sS'trials.thisTrialN'
p2752
I216
sg32
I0
sg39
g40
sg43
V3
sg33
F0.81985688209533691
sS'trials.thisN'
p2753
I216
sa(dp2754
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF2_05_orig.jpg'
p2755
sS'trials.thisIndex'
p2756
g45
(g586
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2757
sS'trials.thisRepN'
p2758
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xbc&@'
tRp2759
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x0f\xc0'
tRp2760
sg30
I0
sg58
g45
(g586
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2761
sS'trials.thisTrialN'
p2762
I217
sg32
I1
sg39
g40
sg43
V3
sg33
F2.4112980365753174
sS'trials.thisN'
p2763
I217
sa(dp2764
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphM7_01_orig.jpg'
p2765
sS'trials.thisIndex'
p2766
g45
(g586
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2767
sS'trials.thisRepN'
p2768
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8f&@'
tRp2769
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp2770
sg30
I0
sg58
g45
(g586
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2771
sS'trials.thisTrialN'
p2772
I218
sg32
I1
sg39
g40
sg43
V3
sg33
F0.8026280403137207
sS'trials.thisN'
p2773
I218
sa(dp2774
g31
I0
sg42
g11
sg41
VG
sg583
S'./stim/MorphF10_09_orig.jpg'
p2775
sS'trials.thisIndex'
p2776
g45
(g586
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2777
sS'trials.thisRepN'
p2778
I0
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8f&@'
tRp2779
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4\x0f\xc0'
tRp2780
sg30
I0
sg58
g45
(g586
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2781
sS'trials.thisTrialN'
p2782
I219
sg32
I1
sg39
g40
sg43
V3
sg33
F0.73637580871582031
sS'trials.thisN'
p2783
I219
sa(dp2784
g42
g11
sg34
S'return'
p2785
sg41
VG
sg39
g40
sg43
V3
sg44
g48
sg35
F51.971839904785156
sa(dp2786
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2787
g45
(g586
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2788
sS'trials2.thisRepN'
p2789
I0
sS'trials2.thisTrialN'
p2790
I0
sS'img'
p2791
S'./stim/MorphM6_10_orig.jpg'
p2792
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp2793
sg29
g45
(g47
S"\x00\x00\x00\x00\x00R'\xc0"
tRp2794
sg30
I0
sS'num'
p2795
g45
(g586
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2796
sg32
I1
sg39
g40
sg43
V3
sg33
F9.8615260124206543
sS'trials2.thisN'
p2797
I0
sa(dp2798
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2799
g45
(g586
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2800
sS'trials2.thisRepN'
p2801
I0
sS'trials2.thisTrialN'
p2802
I1
sg2791
S'./stim/MorphF9_04_orig.jpg'
p2803
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp2804
sg29
g45
(g47
S"\x00\x00\x00\x00\x00R'\xc0"
tRp2805
sg30
I1
sg2795
g45
(g586
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2806
sg32
I0
sg39
g40
sg43
V3
sg33
F0.91973090171813965
sS'trials2.thisN'
p2807
I1
sa(dp2808
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2809
g45
(g586
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2810
sS'trials2.thisRepN'
p2811
I0
sS'trials2.thisTrialN'
p2812
I2
sg2791
S'./stim/MorphM3_03_orig.jpg'
p2813
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80{3\xc0'
tRp2814
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp2815
sg30
I1
sg2795
g45
(g586
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2816
sg32
I0
sg39
g40
sg43
V3
sg33
F1.188647985458374
sS'trials2.thisN'
p2817
I2
sa(dp2818
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2819
g45
(g586
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2820
sS'trials2.thisRepN'
p2821
I0
sS'trials2.thisTrialN'
p2822
I3
sg2791
S'./stim/MorphM1_00_orig.jpg'
p2823
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80{3\xc0'
tRp2824
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x16'\xc0"
tRp2825
sg30
I1
sg2795
g45
(g586
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2826
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3059051036834717
sS'trials2.thisN'
p2827
I3
sa(dp2828
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2829
g45
(g586
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2830
sS'trials2.thisRepN'
p2831
I0
sS'trials2.thisTrialN'
p2832
I4
sg2791
S'./stim/MorphM6_09_orig.jpg'
p2833
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t3\xc0'
tRp2834
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf8&\xc0'
tRp2835
sg30
I0
sg2795
g45
(g586
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2836
sg32
I1
sg39
g40
sg43
V3
sg33
F10.959608793258667
sS'trials2.thisN'
p2837
I4
sa(dp2838
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2839
g45
(g586
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2840
sS'trials2.thisRepN'
p2841
I0
sS'trials2.thisTrialN'
p2842
I5
sg2791
S'./stim/MorphM10_02_orig.jpg'
p2843
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80l3\xc0'
tRp2844
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2845
sg30
I0
sg2795
g45
(g586
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2846
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3224670886993408
sS'trials2.thisN'
p2847
I5
sa(dp2848
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2849
g45
(g586
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2850
sS'trials2.thisRepN'
p2851
I0
sS'trials2.thisTrialN'
p2852
I6
sg2791
S'./stim/MorphM3_06_orig.jpg'
p2853
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2854
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2855
sg30
I0
sg2795
g45
(g586
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2856
sg32
I1
sg39
g40
sg43
V3
sg33
F5.6469948291778564
sS'trials2.thisN'
p2857
I6
sa(dp2858
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2859
g45
(g586
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2860
sS'trials2.thisRepN'
p2861
I0
sS'trials2.thisTrialN'
p2862
I7
sg2791
S'./stim/MorphM7_08_orig.jpg'
p2863
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2864
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2865
sg30
I0
sg2795
g45
(g586
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2866
sg32
I1
sg39
g40
sg43
V3
sg33
F0.90384793281555176
sS'trials2.thisN'
p2867
I7
sa(dp2868
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2869
g45
(g586
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2870
sS'trials2.thisRepN'
p2871
I0
sS'trials2.thisTrialN'
p2872
I8
sg2791
S'./stim/MorphM6_04_orig.jpg'
p2873
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2874
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2875
sg30
I1
sg2795
g45
(g586
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2876
sg32
I0
sg39
g40
sg43
V3
sg33
F1.102773904800415
sS'trials2.thisN'
p2877
I8
sa(dp2878
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2879
g45
(g586
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2880
sS'trials2.thisRepN'
p2881
I0
sS'trials2.thisTrialN'
p2882
I9
sg2791
S'./stim/MorphM2_05_orig.jpg'
p2883
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2884
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2885
sg30
I1
sg2795
g45
(g586
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2886
sg32
I0
sg39
g40
sg43
V3
sg33
F0.7692110538482666
sS'trials2.thisN'
p2887
I9
sa(dp2888
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2889
g45
(g586
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2890
sS'trials2.thisRepN'
p2891
I0
sS'trials2.thisTrialN'
p2892
I10
sg2791
S'./stim/MorphM3_01_orig.jpg'
p2893
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2894
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2895
sg30
I1
sg2795
g45
(g586
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2896
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2394399642944336
sS'trials2.thisN'
p2897
I10
sa(dp2898
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2899
g45
(g586
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2900
sS'trials2.thisRepN'
p2901
I0
sS'trials2.thisTrialN'
p2902
I11
sg2791
S'./stim/MorphF1_03_orig.jpg'
p2903
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2904
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2905
sg30
I1
sg2795
g45
(g586
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2906
sg32
I0
sg39
g40
sg43
V3
sg33
F0.75259804725646973
sS'trials2.thisN'
p2907
I11
sa(dp2908
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2909
g45
(g586
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2910
sS'trials2.thisRepN'
p2911
I0
sS'trials2.thisTrialN'
p2912
I12
sg2791
S'./stim/MorphF8_09_orig.jpg'
p2913
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2914
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2915
sg30
I0
sg2795
g45
(g586
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2916
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0708508491516113
sS'trials2.thisN'
p2917
I12
sa(dp2918
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2919
g45
(g586
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2920
sS'trials2.thisRepN'
p2921
I0
sS'trials2.thisTrialN'
p2922
I13
sg2791
S'./stim/MorphF3_01_orig.jpg'
p2923
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2924
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2925
sg30
I1
sg2795
g45
(g586
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2926
sg32
I0
sg39
g40
sg43
V3
sg33
F1.5218040943145752
sS'trials2.thisN'
p2927
I13
sa(dp2928
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2929
g45
(g586
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2930
sS'trials2.thisRepN'
p2931
I0
sS'trials2.thisTrialN'
p2932
I14
sg2791
S'./stim/MorphF7_03_orig.jpg'
p2933
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp2934
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe9&\xc0'
tRp2935
sg30
I1
sg2795
g45
(g586
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2936
sg32
I0
sg39
g40
sg43
V3
sg33
F2.898475170135498
sS'trials2.thisN'
p2937
I14
sa(dp2938
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2939
g45
(g586
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2940
sS'trials2.thisRepN'
p2941
I0
sS'trials2.thisTrialN'
p2942
I15
sg2791
S'./stim/MorphM1_05_orig.jpg'
p2943
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp2944
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcb&\xc0'
tRp2945
sg30
I1
sg2795
g45
(g586
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2946
sg32
I0
sg39
g40
sg43
V3
sg33
F13.121361017227173
sS'trials2.thisN'
p2947
I15
sa(dp2948
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2949
g45
(g586
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2950
sS'trials2.thisRepN'
p2951
I0
sS'trials2.thisTrialN'
p2952
I16
sg2791
S'./stim/MorphM5_08_orig.jpg'
p2953
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp2954
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcb&\xc0'
tRp2955
sg30
I0
sg2795
g45
(g586
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2956
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5405418872833252
sS'trials2.thisN'
p2957
I16
sa(dp2958
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2959
g45
(g586
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2960
sS'trials2.thisRepN'
p2961
I0
sS'trials2.thisTrialN'
p2962
I17
sg2791
S'./stim/MorphF7_01_orig.jpg'
p2963
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp2964
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcb&\xc0'
tRp2965
sg30
I1
sg2795
g45
(g586
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2966
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4235889911651611
sS'trials2.thisN'
p2967
I17
sa(dp2968
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2969
g45
(g586
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2970
sS'trials2.thisRepN'
p2971
I0
sS'trials2.thisTrialN'
p2972
I18
sg2791
S'./stim/MorphF1_10_orig.jpg'
p2973
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00B\x18\xc0'
tRp2974
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xab(\xc0'
tRp2975
sg30
I1
sg2795
g45
(g586
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2976
sg32
I0
sg39
g40
sg43
V3
sg33
F19.707964897155762
sS'trials2.thisN'
p2977
I18
sa(dp2978
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2979
g45
(g586
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2980
sS'trials2.thisRepN'
p2981
I0
sS'trials2.thisTrialN'
p2982
I19
sg2791
S'./stim/MorphF9_06_orig.jpg'
p2983
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00B\x18\xc0'
tRp2984
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9c(\xc0'
tRp2985
sg30
I1
sg2795
g45
(g586
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2986
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3229520320892334
sS'trials2.thisN'
p2987
I19
sa(dp2988
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2989
g45
(g586
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2990
sS'trials2.thisRepN'
p2991
I0
sS'trials2.thisTrialN'
p2992
I20
sg2791
S'./stim/MorphM4_00_orig.jpg'
p2993
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp2994
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp2995
sg30
I1
sg2795
g45
(g586
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2996
sg32
I0
sg39
g40
sg43
V3
sg33
F3.9022119045257568
sS'trials2.thisN'
p2997
I20
sa(dp2998
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p2999
g45
(g586
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3000
sS'trials2.thisRepN'
p3001
I0
sS'trials2.thisTrialN'
p3002
I21
sg2791
S'./stim/MorphM10_08_orig.jpg'
p3003
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp3004
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x15(\xc0'
tRp3005
sg30
I0
sg2795
g45
(g586
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3006
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1705050468444824
sS'trials2.thisN'
p3007
I21
sa(dp3008
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3009
g45
(g586
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3010
sS'trials2.thisRepN'
p3011
I0
sS'trials2.thisTrialN'
p3012
I22
sg2791
S'./stim/MorphF8_07_orig.jpg'
p3013
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3014
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3015
sg30
I1
sg2795
g45
(g586
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3016
sg32
I0
sg39
g40
sg43
V3
sg33
F2.965054988861084
sS'trials2.thisN'
p3017
I22
sa(dp3018
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3019
g45
(g586
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3020
sS'trials2.thisRepN'
p3021
I0
sS'trials2.thisTrialN'
p3022
I23
sg2791
S'./stim/MorphF6_02_orig.jpg'
p3023
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3024
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3025
sg30
I1
sg2795
g45
(g586
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3026
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0529911518096924
sS'trials2.thisN'
p3027
I23
sa(dp3028
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3029
g45
(g586
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3030
sS'trials2.thisRepN'
p3031
I0
sS'trials2.thisTrialN'
p3032
I24
sg2791
S'./stim/MorphM2_08_orig.jpg'
p3033
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3034
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3035
sg30
I1
sg2795
g45
(g586
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3036
sg32
I0
sg39
g40
sg43
V3
sg33
F10.069437980651855
sS'trials2.thisN'
p3037
I24
sa(dp3038
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3039
g45
(g586
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3040
sS'trials2.thisRepN'
p3041
I0
sS'trials2.thisTrialN'
p3042
I25
sg2791
S'./stim/MorphF9_05_orig.jpg'
p3043
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3044
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3045
sg30
I1
sg2795
g45
(g586
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3046
sg32
I0
sg39
g40
sg43
V3
sg33
F2.5631198883056641
sS'trials2.thisN'
p3047
I25
sa(dp3048
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3049
g45
(g586
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3050
sS'trials2.thisRepN'
p3051
I0
sS'trials2.thisTrialN'
p3052
I26
sg2791
S'./stim/MorphF1_08_orig.jpg'
p3053
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3054
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3055
sg30
I1
sg2795
g45
(g586
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3056
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4749679565429688
sS'trials2.thisN'
p3057
I26
sa(dp3058
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3059
g45
(g586
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3060
sS'trials2.thisRepN'
p3061
I0
sS'trials2.thisTrialN'
p3062
I27
sg2791
S'./stim/MorphF6_09_orig.jpg'
p3063
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3064
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3065
sg30
I0
sg2795
g45
(g586
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3066
sg32
I1
sg39
g40
sg43
V3
sg33
F1.119905948638916
sS'trials2.thisN'
p3067
I27
sa(dp3068
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3069
g45
(g586
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3070
sS'trials2.thisRepN'
p3071
I0
sS'trials2.thisTrialN'
p3072
I28
sg2791
S'./stim/MorphF2_09_orig.jpg'
p3073
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3074
sg29
g45
(g47
S'\x00\x00\x00\x00\x00#)\xc0'
tRp3075
sg30
I0
sg2795
g45
(g586
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3076
sg32
I1
sg39
g40
sg43
V3
sg33
F0.9201960563659668
sS'trials2.thisN'
p3077
I28
sa(dp3078
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3079
g45
(g586
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3080
sS'trials2.thisRepN'
p3081
I0
sS'trials2.thisTrialN'
p3082
I29
sg2791
S'./stim/MorphF1_04_orig.jpg'
p3083
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3084
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp3085
sg30
I1
sg2795
g45
(g586
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3086
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1556050777435303
sS'trials2.thisN'
p3087
I29
sa(dp3088
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3089
g45
(g586
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3090
sS'trials2.thisRepN'
p3091
I0
sS'trials2.thisTrialN'
p3092
I30
sg2791
S'./stim/MorphM4_06_orig.jpg'
p3093
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3094
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp3095
sg30
I0
sg2795
g45
(g586
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3096
sg32
I1
sg39
g40
sg43
V3
sg33
F0.92083907127380371
sS'trials2.thisN'
p3097
I30
sa(dp3098
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3099
g45
(g586
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3100
sS'trials2.thisRepN'
p3101
I0
sS'trials2.thisTrialN'
p3102
I31
sg2791
S'./stim/MorphM5_04_orig.jpg'
p3103
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3104
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp3105
sg30
I1
sg2795
g45
(g586
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3106
sg32
I0
sg39
g40
sg43
V3
sg33
F3.4688220024108887
sS'trials2.thisN'
p3107
I31
sa(dp3108
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3109
g45
(g586
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3110
sS'trials2.thisRepN'
p3111
I0
sS'trials2.thisTrialN'
p3112
I32
sg2791
S'./stim/MorphF10_02_orig.jpg'
p3113
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3114
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp3115
sg30
I1
sg2795
g45
(g586
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3116
sg32
I0
sg39
g40
sg43
V3
sg33
F6.3835279941558838
sS'trials2.thisN'
p3117
I32
sa(dp3118
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3119
g45
(g586
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3120
sS'trials2.thisRepN'
p3121
I0
sS'trials2.thisTrialN'
p3122
I33
sg2791
S'./stim/MorphF6_05_orig.jpg'
p3123
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3124
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp3125
sg30
I1
sg2795
g45
(g586
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3126
sg32
I0
sg39
g40
sg43
V3
sg33
F6.619102954864502
sS'trials2.thisN'
p3127
I33
sa(dp3128
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3129
g45
(g586
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3130
sS'trials2.thisRepN'
p3131
I0
sS'trials2.thisTrialN'
p3132
I34
sg2791
S'./stim/MorphF8_01_orig.jpg'
p3133
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x96\x1e\xc0'
tRp3134
sg29
g45
(g47
S'\x00\x00\x00\x00\x002)\xc0'
tRp3135
sg30
I1
sg2795
g45
(g586
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3136
sg32
I0
sg39
g40
sg43
V3
sg33
F2.2613489627838135
sS'trials2.thisN'
p3137
I34
sa(dp3138
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3139
g45
(g586
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3140
sS'trials2.thisRepN'
p3141
I0
sS'trials2.thisTrialN'
p3142
I35
sg2791
S'./stim/MorphM2_06_orig.jpg'
p3143
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp3144
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3145
sg30
I1
sg2795
g45
(g586
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3146
sg32
I0
sg39
g40
sg43
V3
sg33
F19.087080001831055
sS'trials2.thisN'
p3147
I35
sa(dp3148
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3149
g45
(g586
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3150
sS'trials2.thisRepN'
p3151
I0
sS'trials2.thisTrialN'
p3152
I36
sg2791
S'./stim/MorphM9_02_orig.jpg'
p3153
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp3154
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3155
sg30
I1
sg2795
g45
(g586
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3156
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2215378284454346
sS'trials2.thisN'
p3157
I36
sa(dp3158
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3159
g45
(g586
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3160
sS'trials2.thisRepN'
p3161
I0
sS'trials2.thisTrialN'
p3162
I37
sg2791
S'./stim/MorphM5_03_orig.jpg'
p3163
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\x00\xc0'
tRp3164
sg29
g45
(g47
S'\x00\x00\x00\x00\x00@*\xc0'
tRp3165
sg30
I1
sg2795
g45
(g586
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3166
sg32
I0
sg39
g40
sg43
V3
sg33
F0.98617911338806152
sS'trials2.thisN'
p3167
I37
sa(dp3168
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3169
g45
(g586
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3170
sS'trials2.thisRepN'
p3171
I0
sS'trials2.thisTrialN'
p3172
I38
sg2791
S'./stim/MorphM4_01_orig.jpg'
p3173
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00@\xca\xbf'
tRp3174
sg29
g45
(g47
S'\x00\x00\x00\x00\x00c%\xc0'
tRp3175
sg30
I1
sg2795
g45
(g586
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3176
sg32
I0
sg39
g40
sg43
V3
sg33
F4.2733500003814697
sS'trials2.thisN'
p3177
I38
sa(dp3178
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3179
g45
(g586
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3180
sS'trials2.thisRepN'
p3181
I0
sS'trials2.thisTrialN'
p3182
I39
sg2791
S'./stim/MorphM6_05_orig.jpg'
p3183
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x13@'
tRp3184
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa0$\xc0'
tRp3185
sg30
I1
sg2795
g45
(g586
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3186
sg32
I0
sg39
g40
sg43
V3
sg33
F5.2085201740264893
sS'trials2.thisN'
p3187
I39
sa(dp3188
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3189
g45
(g586
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3190
sS'trials2.thisRepN'
p3191
I0
sS'trials2.thisTrialN'
p3192
I40
sg2791
S'./stim/MorphF4_02_orig.jpg'
p3193
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3194
sg29
g45
(g47
S'\x00\x00\x00\x00\x00F$\xc0'
tRp3195
sg30
I1
sg2795
g45
(g586
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3196
sg32
I0
sg39
g40
sg43
V3
sg33
F6.8866779804229736
sS'trials2.thisN'
p3197
I40
sa(dp3198
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3199
g45
(g586
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3200
sS'trials2.thisRepN'
p3201
I0
sS'trials2.thisTrialN'
p3202
I41
sg2791
S'./stim/MorphM9_03_orig.jpg'
p3203
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xf7?'
tRp3204
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3205
sg30
I1
sg2795
g45
(g586
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3206
sg32
I0
sg39
g40
sg43
V3
sg33
F12.953839063644409
sS'trials2.thisN'
p3207
I41
sa(dp3208
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3209
g45
(g586
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3210
sS'trials2.thisRepN'
p3211
I0
sS'trials2.thisTrialN'
p3212
I42
sg2791
S'./stim/MorphF4_06_orig.jpg'
p3213
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3214
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp3215
sg30
I0
sg2795
g45
(g586
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3216
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5574748516082764
sS'trials2.thisN'
p3217
I42
sa(dp3218
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3219
g45
(g586
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3220
sS'trials2.thisRepN'
p3221
I0
sS'trials2.thisTrialN'
p3222
I43
sg2791
S'./stim/MorphF5_00_orig.jpg'
p3223
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe8\xf7?'
tRp3224
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp3225
sg30
I1
sg2795
g45
(g586
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3226
sg32
I0
sg39
g40
sg43
V3
sg33
F0.98787617683410645
sS'trials2.thisN'
p3227
I43
sa(dp3228
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3229
g45
(g586
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3230
sS'trials2.thisRepN'
p3231
I0
sS'trials2.thisTrialN'
p3232
I44
sg2791
S'./stim/MorphM7_04_orig.jpg'
p3233
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\xf9?'
tRp3234
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp3235
sg30
I0
sg2795
g45
(g586
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3236
sg32
I1
sg39
g40
sg43
V3
sg33
F2.3452677726745605
sS'trials2.thisN'
p3237
I44
sa(dp3238
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3239
g45
(g586
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3240
sS'trials2.thisRepN'
p3241
I0
sS'trials2.thisTrialN'
p3242
I45
sg2791
S'./stim/MorphF1_07_orig.jpg'
p3243
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp3244
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x17&\xc0'
tRp3245
sg30
I1
sg2795
g45
(g586
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3246
sg32
I0
sg39
g40
sg43
V3
sg33
F24.585218906402588
sS'trials2.thisN'
p3247
I45
sa(dp3248
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3249
g45
(g586
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3250
sS'trials2.thisRepN'
p3251
I0
sS'trials2.thisTrialN'
p3252
I46
sg2791
S'./stim/MorphF7_02_orig.jpg'
p3253
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\x06@'
tRp3254
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x17&\xc0'
tRp3255
sg30
I1
sg2795
g45
(g586
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3256
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1213860511779785
sS'trials2.thisN'
p3257
I46
sa(dp3258
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3259
g45
(g586
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3260
sS'trials2.thisRepN'
p3261
I0
sS'trials2.thisTrialN'
p3262
I47
sg2791
S'./stim/MorphF3_08_orig.jpg'
p3263
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x9c\x08@'
tRp3264
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x91$\xc0'
tRp3265
sg30
I1
sg2795
g45
(g586
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3266
sg32
I0
sg39
g40
sg43
V3
sg33
F13.306128978729248
sS'trials2.thisN'
p3267
I47
sa(dp3268
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3269
g45
(g586
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3270
sS'trials2.thisRepN'
p3271
I0
sS'trials2.thisTrialN'
p3272
I48
sg2791
S'./stim/MorphM4_03_orig.jpg'
p3273
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x04\n@'
tRp3274
sg29
g45
(g47
S'\x00\x00\x00\x00\x00F$\xc0'
tRp3275
sg30
I1
sg2795
g45
(g586
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3276
sg32
I0
sg39
g40
sg43
V3
sg33
F1.7920699119567871
sS'trials2.thisN'
p3277
I48
sa(dp3278
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3279
g45
(g586
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3280
sS'trials2.thisRepN'
p3281
I0
sS'trials2.thisTrialN'
p3282
I49
sg2791
S'./stim/MorphM7_05_orig.jpg'
p3283
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00,\x10@'
tRp3284
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd0!\xc0'
tRp3285
sg30
I0
sg2795
g45
(g586
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3286
sg32
I1
sg39
g40
sg43
V3
sg33
F3.1157729625701904
sS'trials2.thisN'
p3287
I49
sa(dp3288
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3289
g45
(g586
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3290
sS'trials2.thisRepN'
p3291
I0
sS'trials2.thisTrialN'
p3292
I50
sg2791
S'./stim/MorphM4_08_orig.jpg'
p3293
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\x11@'
tRp3294
sg29
g45
(g47
S'\x00\x00\x00\x00\x00X!\xc0'
tRp3295
sg30
I0
sg2795
g45
(g586
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3296
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2100889682769775
sS'trials2.thisN'
p3297
I50
sa(dp3298
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3299
g45
(g586
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3300
sS'trials2.thisRepN'
p3301
I0
sS'trials2.thisTrialN'
p3302
I51
sg2791
S'./stim/MorphM2_03_orig.jpg'
p3303
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x94\x11@'
tRp3304
sg29
g45
(g47
S'\x00\x00\x00\x00\x00:!\xc0'
tRp3305
sg30
I1
sg2795
g45
(g586
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3306
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0873608589172363
sS'trials2.thisN'
p3307
I51
sa(dp3308
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3309
g45
(g586
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3310
sS'trials2.thisRepN'
p3311
I0
sS'trials2.thisTrialN'
p3312
I52
sg2791
S'./stim/MorphF3_10_orig.jpg'
p3313
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x0047@'
tRp3314
sg29
g45
(g47
S'\x00\x00\x00\x00\x00})\xc0'
tRp3315
sg30
I0
sg2795
g45
(g586
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3316
sg32
I1
sg39
g40
sg43
V3
sg33
F36.60210108757019
sS'trials2.thisN'
p3317
I52
sa(dp3318
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3319
g45
(g586
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3320
sS'trials2.thisRepN'
p3321
I0
sS'trials2.thisTrialN'
p3322
I53
sg2791
S'./stim/MorphF6_08_orig.jpg'
p3323
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3324
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8\x08@'
tRp3325
sg30
I0
sg2795
g45
(g586
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3326
sg32
I1
sg39
g40
sg43
V3
sg33
F22.389860868453979
sS'trials2.thisN'
p3327
I53
sa(dp3328
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3329
g45
(g586
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3330
sS'trials2.thisRepN'
p3331
I0
sS'trials2.thisTrialN'
p3332
I54
sg2791
S'./stim/MorphM3_10_orig.jpg'
p3333
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3334
sg29
g45
(g47
S'\x00\x00\x00\x00\x00P\t@'
tRp3335
sg30
I0
sg2795
g45
(g586
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3336
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0699591636657715
sS'trials2.thisN'
p3337
I54
sa(dp3338
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3339
g45
(g586
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3340
sS'trials2.thisRepN'
p3341
I0
sS'trials2.thisTrialN'
p3342
I55
sg2791
S'./stim/MorphM10_03_orig.jpg'
p3343
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00a7@'
tRp3344
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x13@'
tRp3345
sg30
I1
sg2795
g45
(g586
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3346
sg32
I0
sg39
g40
sg43
V3
sg33
F1.60577392578125
sS'trials2.thisN'
p3347
I55
sa(dp3348
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3349
g45
(g586
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3350
sS'trials2.thisRepN'
p3351
I0
sS'trials2.thisTrialN'
p3352
I56
sg2791
S'./stim/MorphF2_03_orig.jpg'
p3353
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3354
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbe\x14@'
tRp3355
sg30
I1
sg2795
g45
(g586
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3356
sg32
I0
sg39
g40
sg43
V3
sg33
F3.8033280372619629
sS'trials2.thisN'
p3357
I56
sa(dp3358
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3359
g45
(g586
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3360
sS'trials2.thisRepN'
p3361
I0
sS'trials2.thisTrialN'
p3362
I57
sg2791
S'./stim/MorphM7_10_orig.jpg'
p3363
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3364
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xdc\x14@'
tRp3365
sg30
I0
sg2795
g45
(g586
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3366
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1216449737548828
sS'trials2.thisN'
p3367
I57
sa(dp3368
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3369
g45
(g586
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3370
sS'trials2.thisRepN'
p3371
I0
sS'trials2.thisTrialN'
p3372
I58
sg2791
S'./stim/MorphF8_00_orig.jpg'
p3373
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80Y7@'
tRp3374
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfa\x14@'
tRp3375
sg30
I1
sg2795
g45
(g586
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3376
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3055710792541504
sS'trials2.thisN'
p3377
I58
sa(dp3378
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3379
g45
(g586
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3380
sS'trials2.thisRepN'
p3381
I0
sS'trials2.thisTrialN'
p3382
I59
sg2791
S'./stim/MorphF7_07_orig.jpg'
p3383
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00R7@'
tRp3384
sg29
g45
(g47
S'\x00\x00\x00\x00\x00T\x15@'
tRp3385
sg30
I1
sg2795
g45
(g586
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3386
sg32
I0
sg39
g40
sg43
V3
sg33
F4.8255300521850586
sS'trials2.thisN'
p3387
I59
sa(dp3388
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3389
g45
(g586
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3390
sS'trials2.thisRepN'
p3391
I0
sS'trials2.thisTrialN'
p3392
I60
sg2791
S'./stim/MorphM8_09_orig.jpg'
p3393
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00C7@'
tRp3394
sg29
g45
(g47
S'\x00\x00\x00\x00\x00r\x15@'
tRp3395
sg30
I0
sg2795
g45
(g586
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3396
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4233870506286621
sS'trials2.thisN'
p3397
I60
sa(dp3398
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3399
g45
(g586
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3400
sS'trials2.thisRepN'
p3401
I0
sS'trials2.thisTrialN'
p3402
I61
sg2791
S'./stim/MorphF5_08_orig.jpg'
p3403
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00C7@'
tRp3404
sg29
g45
(g47
S'\x00\x00\x00\x00\x00r\x15@'
tRp3405
sg30
I0
sg2795
g45
(g586
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3406
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2556459903717041
sS'trials2.thisN'
p3407
I61
sa(dp3408
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3409
g45
(g586
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3410
sS'trials2.thisRepN'
p3411
I0
sS'trials2.thisTrialN'
p3412
I62
sg2791
S'./stim/MorphM8_00_orig.jpg'
p3413
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80\x1d7@'
tRp3414
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xcc\x15@'
tRp3415
sg30
I1
sg2795
g45
(g586
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3416
sg32
I0
sg39
g40
sg43
V3
sg33
F3.836677074432373
sS'trials2.thisN'
p3417
I62
sa(dp3418
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3419
g45
(g586
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3420
sS'trials2.thisRepN'
p3421
I0
sS'trials2.thisTrialN'
p3422
I63
sg2791
S'./stim/MorphF4_04_orig.jpg'
p3423
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3424
sg29
g45
(g47
S'\x00\x00\x00\x00\x00D\x16@'
tRp3425
sg30
I1
sg2795
g45
(g586
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3426
sg32
I0
sg39
g40
sg43
V3
sg33
F9.0825421810150146
sS'trials2.thisN'
p3427
I63
sa(dp3428
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3429
g45
(g586
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3430
sS'trials2.thisRepN'
p3431
I0
sS'trials2.thisTrialN'
p3432
I64
sg2791
S'./stim/MorphM8_05_orig.jpg'
p3433
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3434
sg29
g45
(g47
S'\x00\x00\x00\x00\x00D\x16@'
tRp3435
sg30
I0
sg2795
g45
(g586
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3436
sg32
I1
sg39
g40
sg43
V3
sg33
F4.8590419292449951
sS'trials2.thisN'
p3437
I64
sa(dp3438
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3439
g45
(g586
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3440
sS'trials2.thisRepN'
p3441
I0
sS'trials2.thisTrialN'
p3442
I65
sg2791
S'./stim/MorphM1_09_orig.jpg'
p3443
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80h7@'
tRp3444
sg29
g45
(g47
S'\x00\x00\x00\x00\x00D\x16@'
tRp3445
sg30
I0
sg2795
g45
(g586
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3446
sg32
I1
sg39
g40
sg43
V3
sg33
F0.93735599517822266
sS'trials2.thisN'
p3447
I65
sa(dp3448
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3449
g45
(g586
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3450
sS'trials2.thisRepN'
p3451
I0
sS'trials2.thisTrialN'
p3452
I66
sg2791
S'./stim/MorphF8_04_orig.jpg'
p3453
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x80;7@'
tRp3454
sg29
g45
(g47
S'\x00\x00\x00\x00\x00`\x18@'
tRp3455
sg30
I1
sg2795
g45
(g586
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3456
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4735360145568848
sS'trials2.thisN'
p3457
I66
sa(dp3458
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3459
g45
(g586
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3460
sS'trials2.thisRepN'
p3461
I0
sS'trials2.thisTrialN'
p3462
I67
sg2791
S'./stim/MorphM10_07_orig.jpg'
p3463
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfa\x14@'
tRp3464
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x13\xc0'
tRp3465
sg30
I0
sg2795
g45
(g586
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3466
sg32
I1
sg39
g40
sg43
V3
sg33
F17.494493007659912
sS'trials2.thisN'
p3467
I67
sa(dp3468
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3469
g45
(g586
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3470
sS'trials2.thisRepN'
p3471
I0
sS'trials2.thisTrialN'
p3472
I68
sg2791
S'./stim/MorphM5_05_orig.jpg'
p3473
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x08\x06\xc0'
tRp3474
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa1#\xc0'
tRp3475
sg30
I1
sg2795
g45
(g586
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3476
sg32
I0
sg39
g40
sg43
V3
sg33
F15.870376825332642
sS'trials2.thisN'
p3477
I68
sa(dp3478
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3479
g45
(g586
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3480
sS'trials2.thisRepN'
p3481
I0
sS'trials2.thisTrialN'
p3482
I69
sg2791
S'./stim/MorphM3_02_orig.jpg'
p3483
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00<\x0e\xc0'
tRp3484
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xe8'\xc0"
tRp3485
sg30
I1
sg2795
g45
(g586
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3486
sg32
I0
sg39
g40
sg43
V3
sg33
F17.812379837036133
sS'trials2.thisN'
p3487
I69
sa(dp3488
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3489
g45
(g586
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3490
sS'trials2.thisRepN'
p3491
I0
sS'trials2.thisTrialN'
p3492
I70
sg2791
S'./stim/MorphF2_08_orig.jpg'
p3493
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00<\x0e\xc0'
tRp3494
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xe8'\xc0"
tRp3495
sg30
I0
sg2795
g45
(g586
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3496
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2710940837860107
sS'trials2.thisN'
p3497
I70
sa(dp3498
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3499
g45
(g586
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3500
sS'trials2.thisRepN'
p3501
I0
sS'trials2.thisTrialN'
p3502
I71
sg2791
S'./stim/MorphM5_00_orig.jpg'
p3503
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x0e\xc0'
tRp3504
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\xac'\xc0"
tRp3505
sg30
I1
sg2795
g45
(g586
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3506
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2892060279846191
sS'trials2.thisN'
p3507
I71
sa(dp3508
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3509
g45
(g586
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3510
sS'trials2.thisRepN'
p3511
I0
sS'trials2.thisTrialN'
p3512
I72
sg2791
S'./stim/MorphF6_07_orig.jpg'
p3513
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00<\x0e\xc0'
tRp3514
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp3515
sg30
I0
sg2795
g45
(g586
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3516
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2545590400695801
sS'trials2.thisN'
p3517
I72
sa(dp3518
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3519
g45
(g586
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3520
sS'trials2.thisRepN'
p3521
I0
sS'trials2.thisTrialN'
p3522
I73
sg2791
S'./stim/MorphM7_07_orig.jpg'
p3523
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00<\x0e\xc0'
tRp3524
sg29
g45
(g47
S"\x00\x00\x00\x00\x00\x9d'\xc0"
tRp3525
sg30
I0
sg2795
g45
(g586
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3526
sg32
I1
sg39
g40
sg43
V3
sg33
F0.85321784019470215
sS'trials2.thisN'
p3527
I73
sa(dp3528
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3529
g45
(g586
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3530
sS'trials2.thisRepN'
p3531
I0
sS'trials2.thisTrialN'
p3532
I74
sg2791
S'./stim/MorphM4_05_orig.jpg'
p3533
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp3534
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3535
sg30
I1
sg2795
g45
(g586
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3536
sg32
I0
sg39
g40
sg43
V3
sg33
F11.613677978515625
sS'trials2.thisN'
p3537
I74
sa(dp3538
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3539
g45
(g586
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3540
sS'trials2.thisRepN'
p3541
I0
sS'trials2.thisTrialN'
p3542
I75
sg2791
S'./stim/MorphF1_02_orig.jpg'
p3543
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp3544
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3545
sg30
I1
sg2795
g45
(g586
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3546
sg32
I0
sg39
g40
sg43
V3
sg33
F3.9536540508270264
sS'trials2.thisN'
p3547
I75
sa(dp3548
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3549
g45
(g586
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3550
sS'trials2.thisRepN'
p3551
I0
sS'trials2.thisTrialN'
p3552
I76
sg2791
S'./stim/MorphM1_03_orig.jpg'
p3553
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp3554
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3555
sg30
I1
sg2795
g45
(g586
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3556
sg32
I0
sg39
g40
sg43
V3
sg33
F3.6696159839630127
sS'trials2.thisN'
p3557
I76
sa(dp3558
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3559
g45
(g586
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3560
sS'trials2.thisRepN'
p3561
I0
sS'trials2.thisTrialN'
p3562
I77
sg2791
S'./stim/MorphM6_01_orig.jpg'
p3563
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf8\xf6\xbf'
tRp3564
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3565
sg30
I1
sg2795
g45
(g586
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3566
sg32
I0
sg39
g40
sg43
V3
sg33
F4.1366519927978516
sS'trials2.thisN'
p3567
I77
sa(dp3568
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3569
g45
(g586
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3570
sS'trials2.thisRepN'
p3571
I0
sS'trials2.thisTrialN'
p3572
I78
sg2791
S'./stim/MorphF5_05_orig.jpg'
p3573
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp3574
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x05)\xc0'
tRp3575
sg30
I0
sg2795
g45
(g586
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3576
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2106499671936035
sS'trials2.thisN'
p3577
I78
sa(dp3578
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3579
g45
(g586
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3580
sS'trials2.thisRepN'
p3581
I0
sS'trials2.thisTrialN'
p3582
I79
sg2791
S'./stim/MorphF4_10_orig.jpg'
p3583
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xc6\xbf'
tRp3584
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x05)\xc0'
tRp3585
sg30
I0
sg2795
g45
(g586
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3586
sg32
I1
sg39
g40
sg43
V3
sg33
F0.86931991577148438
sS'trials2.thisN'
p3587
I79
sa(dp3588
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3589
g45
(g586
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3590
sS'trials2.thisRepN'
p3591
I0
sS'trials2.thisTrialN'
p3592
I80
sg2791
S'./stim/MorphF9_03_orig.jpg'
p3593
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp3594
sg29
g45
(g47
S"\x00\x00\x00\x00\x00R'\xc0"
tRp3595
sg30
I1
sg2795
g45
(g586
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3596
sg32
I0
sg39
g40
sg43
V3
sg33
F38.344913005828857
sS'trials2.thisN'
p3597
I80
sa(dp3598
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3599
g45
(g586
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3600
sS'trials2.thisRepN'
p3601
I0
sS'trials2.thisTrialN'
p3602
I81
sg2791
S'./stim/MorphM8_04_orig.jpg'
p3603
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp3604
sg29
g45
(g47
S"\x00\x00\x00\x00\x00C'\xc0"
tRp3605
sg30
I0
sg2795
g45
(g586
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3606
sg32
I1
sg39
g40
sg43
V3
sg33
F1.9765050411224365
sS'trials2.thisN'
p3607
I81
sa(dp3608
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3609
g45
(g586
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3610
sS'trials2.thisRepN'
p3611
I0
sS'trials2.thisTrialN'
p3612
I82
sg2791
S'./stim/MorphF2_04_orig.jpg'
p3613
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x9e&\xc0'
tRp3614
sg29
g45
(g47
S"\x00\x00\x00\x00\x00C'\xc0"
tRp3615
sg30
I1
sg2795
g45
(g586
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3616
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6245639324188232
sS'trials2.thisN'
p3617
I82
sa(dp3618
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3619
g45
(g586
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3620
sS'trials2.thisRepN'
p3621
I0
sS'trials2.thisTrialN'
p3622
I83
sg2791
S'./stim/MorphM10_01_orig.jpg'
p3623
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd2\x1e\xc0'
tRp3624
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xda&\xc0'
tRp3625
sg30
I1
sg2795
g45
(g586
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3626
sg32
I0
sg39
g40
sg43
V3
sg33
F5.8813269138336182
sS'trials2.thisN'
p3627
I83
sa(dp3628
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3629
g45
(g586
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3630
sS'trials2.thisRepN'
p3631
I0
sS'trials2.thisTrialN'
p3632
I84
sg2791
S'./stim/MorphF6_10_orig.jpg'
p3633
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3634
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbc&\xc0'
tRp3635
sg30
I0
sg2795
g45
(g586
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3636
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2887418270111084
sS'trials2.thisN'
p3637
I84
sa(dp3638
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3639
g45
(g586
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3640
sS'trials2.thisRepN'
p3641
I0
sS'trials2.thisTrialN'
p3642
I85
sg2791
S'./stim/MorphF10_00_orig.jpg'
p3643
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00x\x1e\xc0'
tRp3644
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbc&\xc0'
tRp3645
sg30
I1
sg2795
g45
(g586
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3646
sg32
I0
sg39
g40
sg43
V3
sg33
F2.4466960430145264
sS'trials2.thisN'
p3647
I85
sa(dp3648
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3649
g45
(g586
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3650
sS'trials2.thisRepN'
p3651
I0
sS'trials2.thisTrialN'
p3652
I86
sg2791
S'./stim/MorphM10_04_orig.jpg'
p3653
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00Z\x1e\xc0'
tRp3654
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp3655
sg30
I0
sg2795
g45
(g586
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3656
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0199899673461914
sS'trials2.thisN'
p3657
I86
sa(dp3658
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3659
g45
(g586
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3660
sS'trials2.thisRepN'
p3661
I0
sS'trials2.thisTrialN'
p3662
I87
sg2791
S'./stim/MorphM4_07_orig.jpg'
p3663
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00<\x1e\xc0'
tRp3664
sg29
g45
(g47
S'\x00\x00\x00\x00\x00q&\xc0'
tRp3665
sg30
I0
sg2795
g45
(g586
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3666
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0878620147705078
sS'trials2.thisN'
p3667
I87
sa(dp3668
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3669
g45
(g586
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3670
sS'trials2.thisRepN'
p3671
I0
sS'trials2.thisTrialN'
p3672
I88
sg2791
S'./stim/MorphF10_07_orig.jpg'
p3673
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp3674
sg29
g45
(g47
S'\x00\x00\x00\x00\x00O*\xc0'
tRp3675
sg30
I0
sg2795
g45
(g586
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3676
sg32
I1
sg39
g40
sg43
V3
sg33
F9.2477610111236572
sS'trials2.thisN'
p3677
I88
sa(dp3678
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3679
g45
(g586
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3680
sS'trials2.thisRepN'
p3681
I0
sS'trials2.thisTrialN'
p3682
I89
sg2791
S'./stim/MorphF8_02_orig.jpg'
p3683
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe4\x0b\xc0'
tRp3684
sg29
g45
(g47
S'\x00\x00\x00\x00\x00A)\xc0'
tRp3685
sg30
I1
sg2795
g45
(g586
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3686
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0202138423919678
sS'trials2.thisN'
p3687
I89
sa(dp3688
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3689
g45
(g586
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3690
sS'trials2.thisRepN'
p3691
I0
sS'trials2.thisTrialN'
p3692
I90
sg2791
S'./stim/MorphM10_06_orig.jpg'
p3693
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe4\x0b\xc0'
tRp3694
sg29
g45
(g47
S'\x00\x00\x00\x00\x00A)\xc0'
tRp3695
sg30
I0
sg2795
g45
(g586
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3696
sg32
I1
sg39
g40
sg43
V3
sg33
F3.7362320423126221
sS'trials2.thisN'
p3697
I90
sa(dp3698
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3699
g45
(g586
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3700
sS'trials2.thisRepN'
p3701
I0
sS'trials2.thisTrialN'
p3702
I91
sg2791
S'./stim/MorphF6_06_orig.jpg'
p3703
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe6)\xc0'
tRp3704
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8f&\xc0'
tRp3705
sg30
I0
sg2795
g45
(g586
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3706
sg32
I1
sg39
g40
sg43
V3
sg33
F9.2990429401397705
sS'trials2.thisN'
p3707
I91
sa(dp3708
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3709
g45
(g586
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3710
sS'trials2.thisRepN'
p3711
I0
sS'trials2.thisTrialN'
p3712
I92
sg2791
S'./stim/MorphF2_07_orig.jpg'
p3713
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd7)\xc0'
tRp3714
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80&\xc0'
tRp3715
sg30
I0
sg2795
g45
(g586
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3716
sg32
I1
sg39
g40
sg43
V3
sg33
F10.540395021438599
sS'trials2.thisN'
p3717
I92
sa(dp3718
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3719
g45
(g586
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3720
sS'trials2.thisRepN'
p3721
I0
sS'trials2.thisTrialN'
p3722
I93
sg2791
S'./stim/MorphF3_04_orig.jpg'
p3723
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp3724
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd8(\xc0'
tRp3725
sg30
I1
sg2795
g45
(g586
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3726
sg32
I0
sg39
g40
sg43
V3
sg33
F19.590648889541626
sS'trials2.thisN'
p3727
I93
sa(dp3728
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3729
g45
(g586
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3730
sS'trials2.thisRepN'
p3731
I0
sS'trials2.thisTrialN'
p3732
I94
sg2791
S'./stim/MorphM10_10_orig.jpg'
p3733
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x04\x1a\xc0'
tRp3734
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xad&\xc0'
tRp3735
sg30
I0
sg2795
g45
(g586
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3736
sg32
I1
sg39
g40
sg43
V3
sg33
F5.1103742122650146
sS'trials2.thisN'
p3737
I94
sa(dp3738
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3739
g45
(g586
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3740
sS'trials2.thisRepN'
p3741
I0
sS'trials2.thisTrialN'
p3742
I95
sg2791
S'./stim/MorphF3_06_orig.jpg'
p3743
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4\x1a\xc0'
tRp3744
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x08&\xc0'
tRp3745
sg30
I1
sg2795
g45
(g586
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3746
sg32
I0
sg39
g40
sg43
V3
sg33
F4.3724009990692139
sS'trials2.thisN'
p3747
I95
sa(dp3748
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3749
g45
(g586
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3750
sS'trials2.thisRepN'
p3751
I0
sS'trials2.thisTrialN'
p3752
I96
sg2791
S'./stim/MorphM8_06_orig.jpg'
p3753
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x98\x1c\xc0'
tRp3754
sg29
g45
(g47
S'\x00\x00\x00\x00\x00S&\xc0'
tRp3755
sg30
I1
sg2795
g45
(g586
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3756
sg32
I0
sg39
g40
sg43
V3
sg33
F19.943058013916016
sS'trials2.thisN'
p3757
I96
sa(dp3758
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3759
g45
(g586
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3760
sS'trials2.thisRepN'
p3761
I0
sS'trials2.thisTrialN'
p3762
I97
sg2791
S'./stim/MorphM4_02_orig.jpg'
p3763
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X1\xc0'
tRp3764
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xee!@'
tRp3765
sg30
I1
sg2795
g45
(g586
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3766
sg32
I0
sg39
g40
sg43
V3
sg33
F109.03721714019775
sS'trials2.thisN'
p3767
I97
sa(dp3768
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3769
g45
(g586
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3770
sS'trials2.thisRepN'
p3771
I0
sS'trials2.thisTrialN'
p3772
I98
sg2791
S'./stim/MorphF9_08_orig.jpg'
p3773
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X1\xc0'
tRp3774
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xee!@'
tRp3775
sg30
I0
sg2795
g45
(g586
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3776
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5390200614929199
sS'trials2.thisN'
p3777
I98
sa(dp3778
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3779
g45
(g586
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3780
sS'trials2.thisRepN'
p3781
I0
sS'trials2.thisTrialN'
p3782
I99
sg2791
S'./stim/MorphF3_07_orig.jpg'
p3783
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X1\xc0'
tRp3784
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x0c"@'
tRp3785
sg30
I1
sg2795
g45
(g586
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3786
sg32
I0
sg39
g40
sg43
V3
sg33
F4.4064979553222656
sS'trials2.thisN'
p3787
I99
sa(dp3788
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3789
g45
(g586
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3790
sS'trials2.thisRepN'
p3791
I0
sS'trials2.thisTrialN'
p3792
I100
sg2791
S'./stim/MorphM10_09_orig.jpg'
p3793
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X1\xc0'
tRp3794
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1b"@'
tRp3795
sg30
I0
sg2795
g45
(g586
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3796
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2609391212463379
sS'trials2.thisN'
p3797
I100
sa(dp3798
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3799
g45
(g586
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3800
sS'trials2.thisRepN'
p3801
I0
sS'trials2.thisTrialN'
p3802
I101
sg2791
S'./stim/MorphM4_04_orig.jpg'
p3803
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X1\xc0'
tRp3804
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1b"@'
tRp3805
sg30
I0
sg2795
g45
(g586
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3806
sg32
I1
sg39
g40
sg43
V3
sg33
F2.6289730072021484
sS'trials2.thisN'
p3807
I101
sa(dp3808
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3809
g45
(g586
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3810
sS'trials2.thisRepN'
p3811
I0
sS'trials2.thisTrialN'
p3812
I102
sg2791
S'./stim/MorphM6_07_orig.jpg'
p3813
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00y-\xc0'
tRp3814
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp3815
sg30
I1
sg2795
g45
(g586
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3816
sg32
I0
sg39
g40
sg43
V3
sg33
F8.9142580032348633
sS'trials2.thisN'
p3817
I102
sa(dp3818
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3819
g45
(g586
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3820
sS'trials2.thisRepN'
p3821
I0
sS'trials2.thisTrialN'
p3822
I103
sg2791
S'./stim/MorphF4_01_orig.jpg'
p3823
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88-\xc0'
tRp3824
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp3825
sg30
I1
sg2795
g45
(g586
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3826
sg32
I0
sg39
g40
sg43
V3
sg33
F2.0422978401184082
sS'trials2.thisN'
p3827
I103
sa(dp3828
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3829
g45
(g586
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3830
sS'trials2.thisRepN'
p3831
I0
sS'trials2.thisTrialN'
p3832
I104
sg2791
S'./stim/MorphF10_06_orig.jpg'
p3833
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88-\xc0'
tRp3834
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp3835
sg30
I0
sg2795
g45
(g586
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3836
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5217959880828857
sS'trials2.thisN'
p3837
I104
sa(dp3838
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3839
g45
(g586
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3840
sS'trials2.thisRepN'
p3841
I0
sS'trials2.thisTrialN'
p3842
I105
sg2791
S'./stim/MorphM3_00_orig.jpg'
p3843
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88-\xc0'
tRp3844
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp3845
sg30
I1
sg2795
g45
(g586
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3846
sg32
I0
sg39
g40
sg43
V3
sg33
F2.6464478969573975
sS'trials2.thisN'
p3847
I105
sa(dp3848
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3849
g45
(g586
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3850
sS'trials2.thisRepN'
p3851
I0
sS'trials2.thisTrialN'
p3852
I106
sg2791
S'./stim/MorphF7_08_orig.jpg'
p3853
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88-\xc0'
tRp3854
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\t%@'
tRp3855
sg30
I0
sg2795
g45
(g586
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3856
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0707662105560303
sS'trials2.thisN'
p3857
I106
sa(dp3858
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3859
g45
(g586
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3860
sS'trials2.thisRepN'
p3861
I0
sS'trials2.thisTrialN'
p3862
I107
sg2791
S'./stim/MorphF1_06_orig.jpg'
p3863
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x87.\xc0'
tRp3864
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x83#@'
tRp3865
sg30
I0
sg2795
g45
(g586
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3866
sg32
I1
sg39
g40
sg43
V3
sg33
F5.6296229362487793
sS'trials2.thisN'
p3867
I107
sa(dp3868
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3869
g45
(g586
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3870
sS'trials2.thisRepN'
p3871
I0
sS'trials2.thisTrialN'
p3872
I108
sg2791
S'./stim/MorphM7_02_orig.jpg'
p3873
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x87.\xc0'
tRp3874
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x83#@'
tRp3875
sg30
I0
sg2795
g45
(g586
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3876
sg32
I1
sg39
g40
sg43
V3
sg33
F0.85336804389953613
sS'trials2.thisN'
p3877
I108
sa(dp3878
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3879
g45
(g586
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3880
sS'trials2.thisRepN'
p3881
I0
sS'trials2.thisTrialN'
p3882
I109
sg2791
S'./stim/MorphM5_02_orig.jpg'
p3883
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc3.\xc0'
tRp3884
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa1#@'
tRp3885
sg30
I0
sg2795
g45
(g586
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3886
sg32
I1
sg39
g40
sg43
V3
sg33
F4.336216926574707
sS'trials2.thisN'
p3887
I109
sa(dp3888
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3889
g45
(g586
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3890
sS'trials2.thisRepN'
p3891
I0
sS'trials2.thisTrialN'
p3892
I110
sg2791
S'./stim/MorphM6_08_orig.jpg'
p3893
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc3.\xc0'
tRp3894
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa1#@'
tRp3895
sg30
I0
sg2795
g45
(g586
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3896
sg32
I1
sg39
g40
sg43
V3
sg33
F2.9983749389648438
sS'trials2.thisN'
p3897
I110
sa(dp3898
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3899
g45
(g586
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3900
sS'trials2.thisRepN'
p3901
I0
sS'trials2.thisTrialN'
p3902
I111
sg2791
S'./stim/MorphF6_01_orig.jpg'
p3903
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd2.\xc0'
tRp3904
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb0#@'
tRp3905
sg30
I1
sg2795
g45
(g586
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3906
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0712110996246338
sS'trials2.thisN'
p3907
I111
sa(dp3908
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3909
g45
(g586
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3910
sS'trials2.thisRepN'
p3911
I0
sS'trials2.thisTrialN'
p3912
I112
sg2791
S'./stim/MorphM3_08_orig.jpg'
p3913
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb4.\xc0'
tRp3914
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbf#@'
tRp3915
sg30
I0
sg2795
g45
(g586
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3916
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0208539962768555
sS'trials2.thisN'
p3917
I112
sa(dp3918
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3919
g45
(g586
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3920
sS'trials2.thisRepN'
p3921
I0
sS'trials2.thisTrialN'
p3922
I113
sg2791
S'./stim/MorphF2_06_orig.jpg'
p3923
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x12\x1b\xc0'
tRp3924
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x10\x1d@'
tRp3925
sg30
I0
sg2795
g45
(g586
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3926
sg32
I1
sg39
g40
sg43
V3
sg33
F9.8693380355834961
sS'trials2.thisN'
p3927
I113
sa(dp3928
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3929
g45
(g586
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3930
sS'trials2.thisRepN'
p3931
I0
sS'trials2.thisTrialN'
p3932
I114
sg2791
S'./stim/MorphM9_05_orig.jpg'
p3933
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp3934
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xee\x11\xc0'
tRp3935
sg30
I1
sg2795
g45
(g586
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3936
sg32
I0
sg39
g40
sg43
V3
sg33
F22.352473974227905
sS'trials2.thisN'
p3937
I114
sa(dp3938
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3939
g45
(g586
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3940
sS'trials2.thisRepN'
p3941
I0
sS'trials2.thisTrialN'
p3942
I115
sg2791
S'./stim/MorphM7_06_orig.jpg'
p3943
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb8\n\xc0'
tRp3944
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x0c\x12\xc0'
tRp3945
sg30
I0
sg2795
g45
(g586
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3946
sg32
I1
sg39
g40
sg43
V3
sg33
F4.0039420127868652
sS'trials2.thisN'
p3947
I115
sa(dp3948
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3949
g45
(g586
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3950
sS'trials2.thisRepN'
p3951
I0
sS'trials2.thisTrialN'
p3952
I116
sg2791
S'./stim/MorphF7_00_orig.jpg'
p3953
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00L\r\xc0'
tRp3954
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x10\xc0'
tRp3955
sg30
I1
sg2795
g45
(g586
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3956
sg32
I0
sg39
g40
sg43
V3
sg33
F1.473114013671875
sS'trials2.thisN'
p3957
I116
sa(dp3958
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3959
g45
(g586
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3960
sS'trials2.thisRepN'
p3961
I0
sS'trials2.thisTrialN'
p3962
I117
sg2791
S'./stim/MorphM7_00_orig.jpg'
p3963
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x88\r\xc0'
tRp3964
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x11\xc0'
tRp3965
sg30
I0
sg2795
g45
(g586
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3966
sg32
I1
sg39
g40
sg43
V3
sg33
F0.86947393417358398
sS'trials2.thisN'
p3967
I117
sa(dp3968
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3969
g45
(g586
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3970
sS'trials2.thisRepN'
p3971
I0
sS'trials2.thisTrialN'
p3972
I118
sg2791
S'./stim/MorphM6_02_orig.jpg'
p3973
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc4\r\xc0'
tRp3974
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x10\xc0'
tRp3975
sg30
I1
sg2795
g45
(g586
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3976
sg32
I0
sg39
g40
sg43
V3
sg33
F2.1423230171203613
sS'trials2.thisN'
p3977
I118
sa(dp3978
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3979
g45
(g586
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3980
sS'trials2.thisRepN'
p3981
I0
sS'trials2.thisTrialN'
p3982
I119
sg2791
S'./stim/MorphF7_04_orig.jpg'
p3983
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x0e\xc0'
tRp3984
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x11\xc0'
tRp3985
sg30
I1
sg2795
g45
(g586
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3986
sg32
I0
sg39
g40
sg43
V3
sg33
F8.5794839859008789
sS'trials2.thisN'
p3987
I119
sa(dp3988
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3989
g45
(g586
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3990
sS'trials2.thisRepN'
p3991
I0
sS'trials2.thisTrialN'
p3992
I120
sg2791
S'./stim/MorphF4_00_orig.jpg'
p3993
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\x0e\xc0'
tRp3994
sg29
g45
(g47
S'\x00\x00\x00\x00\x00:\x11\xc0'
tRp3995
sg30
I1
sg2795
g45
(g586
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3996
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0382039546966553
sS'trials2.thisN'
p3997
I120
sa(dp3998
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p3999
g45
(g586
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4000
sS'trials2.thisRepN'
p4001
I0
sS'trials2.thisTrialN'
p4002
I121
sg2791
S'./stim/MorphF9_07_orig.jpg'
p4003
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x0e\xc0'
tRp4004
sg29
g45
(g47
S'\x00\x00\x00\x00\x00X\x11\xc0'
tRp4005
sg30
I0
sg2795
g45
(g586
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4006
sg32
I1
sg39
g40
sg43
V3
sg33
F2.0433988571166992
sS'trials2.thisN'
p4007
I121
sa(dp4008
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4009
g45
(g586
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4010
sS'trials2.thisRepN'
p4011
I0
sS'trials2.thisTrialN'
p4012
I122
sg2791
S'./stim/MorphF4_05_orig.jpg'
p4013
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp4014
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \x0c\xc0'
tRp4015
sg30
I1
sg2795
g45
(g586
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4016
sg32
I0
sg39
g40
sg43
V3
sg33
F18.28344202041626
sS'trials2.thisN'
p4017
I122
sa(dp4018
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4019
g45
(g586
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4020
sS'trials2.thisRepN'
p4021
I0
sS'trials2.thisTrialN'
p4022
I123
sg2791
S'./stim/MorphF5_10_orig.jpg'
p4023
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp4024
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \x0c\xc0'
tRp4025
sg30
I0
sg2795
g45
(g586
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4026
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2050158977508545
sS'trials2.thisN'
p4027
I123
sa(dp4028
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4029
g45
(g586
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4030
sS'trials2.thisRepN'
p4031
I0
sS'trials2.thisTrialN'
p4032
I124
sg2791
S'./stim/MorphM9_06_orig.jpg'
p4033
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp4034
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4035
sg30
I0
sg2795
g45
(g586
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4036
sg32
I1
sg39
g40
sg43
V3
sg33
F5.7807550430297852
sS'trials2.thisN'
p4037
I124
sa(dp4038
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4039
g45
(g586
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4040
sS'trials2.thisRepN'
p4041
I0
sS'trials2.thisTrialN'
p4042
I125
sg2791
S'./stim/MorphF1_00_orig.jpg'
p4043
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xdc\x04\xc0'
tRp4044
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\xee\xbf'
tRp4045
sg30
I1
sg2795
g45
(g586
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4046
sg32
I0
sg39
g40
sg43
V3
sg33
F2.6445879936218262
sS'trials2.thisN'
p4047
I125
sa(dp4048
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4049
g45
(g586
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4050
sS'trials2.thisRepN'
p4051
I0
sS'trials2.thisTrialN'
p4052
I126
sg2791
S'./stim/MorphF5_07_orig.jpg'
p4053
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp4054
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4055
sg30
I0
sg2795
g45
(g586
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4056
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2102000713348389
sS'trials2.thisN'
p4057
I126
sa(dp4058
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4059
g45
(g586
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4060
sS'trials2.thisRepN'
p4061
I0
sS'trials2.thisTrialN'
p4062
I127
sg2791
S'./stim/MorphM6_06_orig.jpg'
p4063
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x18\x05\xc0'
tRp4064
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4065
sg30
I0
sg2795
g45
(g586
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4066
sg32
I1
sg39
g40
sg43
V3
sg33
F2.1422960758209229
sS'trials2.thisN'
p4067
I127
sa(dp4068
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4069
g45
(g586
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4070
sS'trials2.thisRepN'
p4071
I0
sS'trials2.thisTrialN'
p4072
I128
sg2791
S'./stim/MorphF2_00_orig.jpg'
p4073
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\x04\xc0'
tRp4074
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \xec\xbf'
tRp4075
sg30
I0
sg2795
g45
(g586
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4076
sg32
I1
sg39
g40
sg43
V3
sg33
F2.4455881118774414
sS'trials2.thisN'
p4077
I128
sa(dp4078
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4079
g45
(g586
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4080
sS'trials2.thisRepN'
p4081
I0
sS'trials2.thisTrialN'
p4082
I129
sg2791
S'./stim/MorphM6_03_orig.jpg'
p4083
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00d\x04\xc0'
tRp4084
sg29
g45
(g47
S'\x00\x00\x00\x00\x000\xeb\xbf'
tRp4085
sg30
I1
sg2795
g45
(g586
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4086
sg32
I0
sg39
g40
sg43
V3
sg33
F2.5799319744110107
sS'trials2.thisN'
p4087
I129
sa(dp4088
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4089
g45
(g586
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4090
sS'trials2.thisRepN'
p4091
I0
sS'trials2.thisTrialN'
p4092
I130
sg2791
S'./stim/MorphM3_04_orig.jpg'
p4093
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4094
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8a\x1b\xc0'
tRp4095
sg30
I0
sg2795
g45
(g586
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4096
sg32
I1
sg39
g40
sg43
V3
sg33
F15.618710994720459
sS'trials2.thisN'
p4097
I130
sa(dp4098
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4099
g45
(g586
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4100
sS'trials2.thisRepN'
p4101
I0
sS'trials2.thisTrialN'
p4102
I131
sg2791
S'./stim/MorphM8_01_orig.jpg'
p4103
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4104
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8a\x1b\xc0'
tRp4105
sg30
I0
sg2795
g45
(g586
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4106
sg32
I1
sg39
g40
sg43
V3
sg33
F13.288845062255859
sS'trials2.thisN'
p4107
I131
sa(dp4108
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4109
g45
(g586
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4110
sS'trials2.thisRepN'
p4111
I0
sS'trials2.thisTrialN'
p4112
I132
sg2791
S'./stim/MorphM1_06_orig.jpg'
p4113
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4114
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8a\x1b\xc0'
tRp4115
sg30
I1
sg2795
g45
(g586
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4116
sg32
I0
sg39
g40
sg43
V3
sg33
F7.840573787689209
sS'trials2.thisN'
p4117
I132
sa(dp4118
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4119
g45
(g586
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4120
sS'trials2.thisRepN'
p4121
I0
sS'trials2.thisTrialN'
p4122
I133
sg2791
S'./stim/MorphM2_09_orig.jpg'
p4123
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xef\xbf'
tRp4124
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x8a\x1b\xc0'
tRp4125
sg30
I0
sg2795
g45
(g586
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4126
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2548520565032959
sS'trials2.thisN'
p4127
I133
sa(dp4128
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4129
g45
(g586
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4130
sS'trials2.thisRepN'
p4131
I0
sS'trials2.thisTrialN'
p4132
I134
sg2791
S'./stim/MorphF2_01_orig.jpg'
p4133
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp4134
sg29
g45
(g47
S'\x00\x00\x00\x00\x00l\x1b\xc0'
tRp4135
sg30
I1
sg2795
g45
(g586
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4136
sg32
I0
sg39
g40
sg43
V3
sg33
F1.9596710205078125
sS'trials2.thisN'
p4137
I134
sa(dp4138
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4139
g45
(g586
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4140
sS'trials2.thisRepN'
p4141
I0
sS'trials2.thisTrialN'
p4142
I135
sg2791
S'./stim/MorphM5_01_orig.jpg'
p4143
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp4144
sg29
g45
(g47
S'\x00\x00\x00\x00\x00l\x1b\xc0'
tRp4145
sg30
I1
sg2795
g45
(g586
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4146
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6412110328674316
sS'trials2.thisN'
p4147
I135
sa(dp4148
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4149
g45
(g586
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4150
sS'trials2.thisRepN'
p4151
I0
sS'trials2.thisTrialN'
p4152
I136
sg2791
S'./stim/MorphF8_03_orig.jpg'
p4153
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0\xbf'
tRp4154
sg29
g45
(g47
S'\x00\x00\x00\x00\x00l\x1b\xc0'
tRp4155
sg30
I1
sg2795
g45
(g586
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4156
sg32
I0
sg39
g40
sg43
V3
sg33
F0.80164885520935059
sS'trials2.thisN'
p4157
I136
sa(dp4158
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4159
g45
(g586
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4160
sS'trials2.thisRepN'
p4161
I0
sS'trials2.thisTrialN'
p4162
I137
sg2791
S'./stim/MorphF10_03_orig.jpg'
p4163
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4164
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp4165
sg30
I1
sg2795
g45
(g586
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4166
sg32
I0
sg39
g40
sg43
V3
sg33
F5.5460588932037354
sS'trials2.thisN'
p4167
I137
sa(dp4168
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4169
g45
(g586
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4170
sS'trials2.thisRepN'
p4171
I0
sS'trials2.thisTrialN'
p4172
I138
sg2791
S'./stim/MorphM7_09_orig.jpg'
p4173
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x00\xee\xbf'
tRp4174
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x9a\x1a\xc0'
tRp4175
sg30
I0
sg2795
g45
(g586
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4176
sg32
I1
sg39
g40
sg43
V3
sg33
F0.81893396377563477
sS'trials2.thisN'
p4177
I138
sa(dp4178
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4179
g45
(g586
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4180
sS'trials2.thisRepN'
p4181
I0
sS'trials2.thisTrialN'
p4182
I139
sg2791
S'./stim/MorphM9_00_orig.jpg'
p4183
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00P\x19@'
tRp4184
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x82$\xc0'
tRp4185
sg30
I1
sg2795
g45
(g586
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4186
sg32
I0
sg39
g40
sg43
V3
sg33
F17.562900066375732
sS'trials2.thisN'
p4187
I139
sa(dp4188
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4189
g45
(g586
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4190
sS'trials2.thisRepN'
p4191
I0
sS'trials2.thisTrialN'
p4192
I140
sg2791
S'./stim/MorphM3_05_orig.jpg'
p4193
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xac\x17@'
tRp4194
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe6\x19\xc0'
tRp4195
sg30
I0
sg2795
g45
(g586
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4196
sg32
I1
sg39
g40
sg43
V3
sg33
F2.8478009700775146
sS'trials2.thisN'
p4197
I140
sa(dp4198
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4199
g45
(g586
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4200
sS'trials2.thisRepN'
p4201
I0
sS'trials2.thisTrialN'
p4202
I141
sg2791
S'./stim/MorphM1_07_orig.jpg'
p4203
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8e\x17@'
tRp4204
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe6\x19\xc0'
tRp4205
sg30
I0
sg2795
g45
(g586
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4206
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4907290935516357
sS'trials2.thisN'
p4207
I141
sa(dp4208
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4209
g45
(g586
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4210
sS'trials2.thisRepN'
p4211
I0
sS'trials2.thisTrialN'
p4212
I142
sg2791
S'./stim/MorphM9_07_orig.jpg'
p4213
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\x17@'
tRp4214
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc8\x19\xc0'
tRp4215
sg30
I0
sg2795
g45
(g586
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4216
sg32
I1
sg39
g40
sg43
V3
sg33
F1.6080060005187988
sS'trials2.thisN'
p4217
I142
sa(dp4218
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4219
g45
(g586
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4220
sS'trials2.thisRepN'
p4221
I0
sS'trials2.thisTrialN'
p4222
I143
sg2791
S'./stim/MorphF3_03_orig.jpg'
p4223
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00d\x14@'
tRp4224
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\\\x1c\xc0'
tRp4225
sg30
I1
sg2795
g45
(g586
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4226
sg32
I0
sg39
g40
sg43
V3
sg33
F2.8975520133972168
sS'trials2.thisN'
p4227
I143
sa(dp4228
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4229
g45
(g586
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4230
sS'trials2.thisRepN'
p4231
I0
sS'trials2.thisTrialN'
p4232
I144
sg2791
S'./stim/MorphF4_07_orig.jpg'
p4233
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x0e @'
tRp4234
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf4\n\xc0'
tRp4235
sg30
I0
sg2795
g45
(g586
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4236
sg32
I1
sg39
g40
sg43
V3
sg33
F1.356471061706543
sS'trials2.thisN'
p4237
I144
sa(dp4238
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4239
g45
(g586
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4240
sS'trials2.thisRepN'
p4241
I0
sS'trials2.thisTrialN'
p4242
I145
sg2791
S'./stim/MorphM2_10_orig.jpg'
p4243
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1d @'
tRp4244
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb8\n\xc0'
tRp4245
sg30
I0
sg2795
g45
(g586
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4246
sg32
I1
sg39
g40
sg43
V3
sg33
F0.96912288665771484
sS'trials2.thisN'
p4247
I145
sa(dp4248
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4249
g45
(g586
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4250
sS'trials2.thisRepN'
p4251
I0
sS'trials2.thisTrialN'
p4252
I146
sg2791
S'./stim/MorphF7_06_orig.jpg'
p4253
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp4254
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\x02\xc0'
tRp4255
sg30
I0
sg2795
g45
(g586
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4256
sg32
I1
sg39
g40
sg43
V3
sg33
F1.6224579811096191
sS'trials2.thisN'
p4257
I146
sa(dp4258
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4259
g45
(g586
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4260
sS'trials2.thisRepN'
p4261
I0
sS'trials2.thisTrialN'
p4262
I147
sg2791
S'./stim/MorphM8_02_orig.jpg'
p4263
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00.\x1d@'
tRp4264
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x01\xc0'
tRp4265
sg30
I0
sg2795
g45
(g586
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4266
sg32
I1
sg39
g40
sg43
V3
sg33
F1.7082610130310059
sS'trials2.thisN'
p4267
I147
sa(dp4268
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4269
g45
(g586
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4270
sS'trials2.thisRepN'
p4271
I0
sS'trials2.thisTrialN'
p4272
I148
sg2791
S'./stim/MorphF3_05_orig.jpg'
p4273
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8c\x19@'
tRp4274
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp4275
sg30
I1
sg2795
g45
(g586
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4276
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1721999645233154
sS'trials2.thisN'
p4277
I148
sa(dp4278
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4279
g45
(g586
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4280
sS'trials2.thisRepN'
p4281
I0
sS'trials2.thisTrialN'
p4282
I149
sg2791
S'./stim/MorphF6_04_orig.jpg'
p4283
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8c\x19@'
tRp4284
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xff\xbf'
tRp4285
sg30
I1
sg2795
g45
(g586
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4286
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0541138648986816
sS'trials2.thisN'
p4287
I149
sa(dp4288
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4289
g45
(g586
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4290
sS'trials2.thisRepN'
p4291
I0
sS'trials2.thisTrialN'
p4292
I150
sg2791
S'./stim/MorphM4_10_orig.jpg'
p4293
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00n\x19@'
tRp4294
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xff\xbf'
tRp4295
sg30
I0
sg2795
g45
(g586
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4296
sg32
I1
sg39
g40
sg43
V3
sg33
F1.154735803604126
sS'trials2.thisN'
p4297
I150
sa(dp4298
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4299
g45
(g586
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4300
sS'trials2.thisRepN'
p4301
I0
sS'trials2.thisTrialN'
p4302
I151
sg2791
S'./stim/MorphF10_08_orig.jpg'
p4303
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00n\x19@'
tRp4304
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\xff\xbf'
tRp4305
sg30
I0
sg2795
g45
(g586
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4306
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2565639019012451
sS'trials2.thisN'
p4307
I151
sa(dp4308
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4309
g45
(g586
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4310
sS'trials2.thisRepN'
p4311
I0
sS'trials2.thisTrialN'
p4312
I152
sg2791
S'./stim/MorphF5_02_orig.jpg'
p4313
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x8c\x19@'
tRp4314
sg29
g45
(g47
S'\x00\x00\x00\x00\x00x\xfe\xbf'
tRp4315
sg30
I1
sg2795
g45
(g586
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4316
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1048448085784912
sS'trials2.thisN'
p4317
I152
sa(dp4318
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4319
g45
(g586
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4320
sS'trials2.thisRepN'
p4321
I0
sS'trials2.thisTrialN'
p4322
I153
sg2791
S'./stim/MorphF1_05_orig.jpg'
p4323
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x9e\x16@'
tRp4324
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x80\xc6\xbf'
tRp4325
sg30
I0
sg2795
g45
(g586
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4326
sg32
I1
sg39
g40
sg43
V3
sg33
F10.824020862579346
sS'trials2.thisN'
p4327
I153
sa(dp4328
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4329
g45
(g586
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4330
sS'trials2.thisRepN'
p4331
I0
sS'trials2.thisTrialN'
p4332
I154
sg2791
S'./stim/MorphF9_09_orig.jpg'
p4333
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp4334
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x83#\xc0'
tRp4335
sg30
I0
sg2795
g45
(g586
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4336
sg32
I1
sg39
g40
sg43
V3
sg33
F6.3171570301055908
sS'trials2.thisN'
p4337
I154
sa(dp4338
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4339
g45
(g586
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4340
sS'trials2.thisRepN'
p4341
I0
sS'trials2.thisTrialN'
p4342
I155
sg2791
S'./stim/MorphF5_03_orig.jpg'
p4343
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe4\x0b@'
tRp4344
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xbf#\xc0'
tRp4345
sg30
I0
sg2795
g45
(g586
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4346
sg32
I1
sg39
g40
sg43
V3
sg33
F7.6414132118225098
sS'trials2.thisN'
p4347
I155
sa(dp4348
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4349
g45
(g586
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4350
sS'trials2.thisRepN'
p4351
I0
sS'trials2.thisTrialN'
p4352
I156
sg2791
S'./stim/MorphF4_03_orig.jpg'
p4353
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\x0e@'
tRp4354
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp4355
sg30
I1
sg2795
g45
(g586
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4356
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1722350120544434
sS'trials2.thisN'
p4357
I156
sa(dp4358
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4359
g45
(g586
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4360
sS'trials2.thisRepN'
p4361
I0
sS'trials2.thisTrialN'
p4362
I157
sg2791
S'./stim/MorphF5_01_orig.jpg'
p4363
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\x0e@'
tRp4364
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp4365
sg30
I0
sg2795
g45
(g586
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4366
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3542008399963379
sS'trials2.thisN'
p4367
I157
sa(dp4368
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4369
g45
(g586
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4370
sS'trials2.thisRepN'
p4371
I0
sS'trials2.thisTrialN'
p4372
I158
sg2791
S'./stim/MorphM1_01_orig.jpg'
p4373
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00:\x11@'
tRp4374
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp4375
sg30
I1
sg2795
g45
(g586
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4376
sg32
I0
sg39
g40
sg43
V3
sg33
F2.630033016204834
sS'trials2.thisN'
p4377
I158
sa(dp4378
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4379
g45
(g586
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4380
sS'trials2.thisRepN'
p4381
I0
sS'trials2.thisTrialN'
p4382
I159
sg2791
S'./stim/MorphF9_02_orig.jpg'
p4383
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00:\x11@'
tRp4384
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp4385
sg30
I1
sg2795
g45
(g586
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4386
sg32
I0
sg39
g40
sg43
V3
sg33
F2.2782590389251709
sS'trials2.thisN'
p4387
I159
sa(dp4388
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4389
g45
(g586
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4390
sS'trials2.thisRepN'
p4391
I0
sS'trials2.thisTrialN'
p4392
I160
sg2791
S'./stim/MorphF2_02_orig.jpg'
p4393
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00X\x11@'
tRp4394
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp4395
sg30
I1
sg2795
g45
(g586
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4396
sg32
I0
sg39
g40
sg43
V3
sg33
F1.4400382041931152
sS'trials2.thisN'
p4397
I160
sa(dp4398
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4399
g45
(g586
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4400
sS'trials2.thisRepN'
p4401
I0
sS'trials2.thisTrialN'
p4402
I161
sg2791
S'./stim/MorphM8_10_orig.jpg'
p4403
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x12@'
tRp4404
sg29
g45
(g47
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4405
sg30
I0
sg2795
g45
(g586
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4406
sg32
I1
sg39
g40
sg43
V3
sg33
F2.8979809284210205
sS'trials2.thisN'
p4407
I161
sa(dp4408
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4409
g45
(g586
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4410
sS'trials2.thisRepN'
p4411
I0
sS'trials2.thisTrialN'
p4412
I162
sg2791
S'./stim/MorphM1_10_orig.jpg'
p4413
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x12@'
tRp4414
sg29
g45
(g47
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4415
sg30
I0
sg2795
g45
(g586
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4416
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0212481021881104
sS'trials2.thisN'
p4417
I162
sa(dp4418
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4419
g45
(g586
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4420
sS'trials2.thisRepN'
p4421
I0
sS'trials2.thisTrialN'
p4422
I163
sg2791
S'./stim/MorphF10_04_orig.jpg'
p4423
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x12@'
tRp4424
sg29
g45
(g47
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4425
sg30
I0
sg2795
g45
(g586
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4426
sg32
I1
sg39
g40
sg43
V3
sg33
F3.2654449939727783
sS'trials2.thisN'
p4427
I163
sa(dp4428
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4429
g45
(g586
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4430
sS'trials2.thisRepN'
p4431
I0
sS'trials2.thisTrialN'
p4432
I164
sg2791
S'./stim/MorphF3_00_orig.jpg'
p4433
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb2\x11@'
tRp4434
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa3!\xc0'
tRp4435
sg30
I1
sg2795
g45
(g586
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4436
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2220380306243896
sS'trials2.thisN'
p4437
I164
sa(dp4438
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4439
g45
(g586
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4440
sS'trials2.thisRepN'
p4441
I0
sS'trials2.thisTrialN'
p4442
I165
sg2791
S'./stim/MorphM2_07_orig.jpg'
p4443
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp4444
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xef \xc0'
tRp4445
sg30
I1
sg2795
g45
(g586
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4446
sg32
I0
sg39
g40
sg43
V3
sg33
F5.2109978199005127
sS'trials2.thisN'
p4447
I165
sa(dp4448
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4449
g45
(g586
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4450
sS'trials2.thisRepN'
p4451
I0
sS'trials2.thisTrialN'
p4452
I166
sg2791
S'./stim/MorphF7_05_orig.jpg'
p4453
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp4454
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb3 \xc0'
tRp4455
sg30
I0
sg2795
g45
(g586
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4456
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3388419151306152
sS'trials2.thisN'
p4457
I166
sa(dp4458
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4459
g45
(g586
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4460
sS'trials2.thisRepN'
p4461
I0
sS'trials2.thisTrialN'
p4462
I167
sg2791
S'./stim/MorphF6_03_orig.jpg'
p4463
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x11@'
tRp4464
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb3 \xc0'
tRp4465
sg30
I1
sg2795
g45
(g586
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4466
sg32
I0
sg39
g40
sg43
V3
sg33
F1.1363730430603027
sS'trials2.thisN'
p4467
I167
sa(dp4468
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4469
g45
(g586
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4470
sS'trials2.thisRepN'
p4471
I0
sS'trials2.thisTrialN'
p4472
I168
sg2791
S'./stim/MorphF3_02_orig.jpg'
p4473
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xfe\x10@'
tRp4474
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xa4 \xc0'
tRp4475
sg30
I1
sg2795
g45
(g586
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4476
sg32
I0
sg39
g40
sg43
V3
sg33
F5.2428009510040283
sS'trials2.thisN'
p4477
I168
sa(dp4478
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4479
g45
(g586
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4480
sS'trials2.thisRepN'
p4481
I0
sS'trials2.thisTrialN'
p4482
I169
sg2791
S'./stim/MorphF1_01_orig.jpg'
p4483
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xf3?'
tRp4484
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x95 \xc0'
tRp4485
sg30
I1
sg2795
g45
(g586
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4486
sg32
I0
sg39
g40
sg43
V3
sg33
F5.0099058151245117
sS'trials2.thisN'
p4487
I169
sa(dp4488
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4489
g45
(g586
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4490
sS'trials2.thisRepN'
p4491
I0
sS'trials2.thisTrialN'
p4492
I170
sg2791
S'./stim/MorphM1_04_orig.jpg'
p4493
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00h\xf0?'
tRp4494
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd1 \xc0'
tRp4495
sg30
I1
sg2795
g45
(g586
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4496
sg32
I0
sg39
g40
sg43
V3
sg33
F8.0431649684906006
sS'trials2.thisN'
p4497
I170
sa(dp4498
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4499
g45
(g586
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4500
sS'trials2.thisRepN'
p4501
I0
sS'trials2.thisTrialN'
p4502
I171
sg2791
S'./stim/MorphF4_09_orig.jpg'
p4503
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00p\xe7?'
tRp4504
sg29
g45
(g47
S'\x00\x00\x00\x00\x00+!\xc0'
tRp4505
sg30
I0
sg2795
g45
(g586
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4506
sg32
I1
sg39
g40
sg43
V3
sg33
F8.8313288688659668
sS'trials2.thisN'
p4507
I171
sa(dp4508
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4509
g45
(g586
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4510
sS'trials2.thisRepN'
p4511
I0
sS'trials2.thisTrialN'
p4512
I172
sg2791
S'./stim/MorphM6_00_orig.jpg'
p4513
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp4514
sg29
g45
(g47
S'\x00\x00\x00\x00\x00I!\xc0'
tRp4515
sg30
I1
sg2795
g45
(g586
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4516
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0717031955718994
sS'trials2.thisN'
p4517
I172
sa(dp4518
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4519
g45
(g586
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4520
sS'trials2.thisRepN'
p4521
I0
sS'trials2.thisTrialN'
p4522
I173
sg2791
S'./stim/MorphM5_09_orig.jpg'
p4523
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp4524
sg29
g45
(g47
S'\x00\x00\x00\x00\x00I!\xc0'
tRp4525
sg30
I0
sg2795
g45
(g586
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4526
sg32
I1
sg39
g40
sg43
V3
sg33
F1.1716461181640625
sS'trials2.thisN'
p4527
I173
sa(dp4528
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4529
g45
(g586
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4530
sS'trials2.thisRepN'
p4531
I0
sS'trials2.thisTrialN'
p4532
I174
sg2791
S'./stim/MorphF5_06_orig.jpg'
p4533
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2?'
tRp4534
sg29
g45
(g47
S'\x00\x00\x00\x00\x00I!\xc0'
tRp4535
sg30
I0
sg2795
g45
(g586
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4536
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0364670753479004
sS'trials2.thisN'
p4537
I174
sa(dp4538
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4539
g45
(g586
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4540
sS'trials2.thisRepN'
p4541
I0
sS'trials2.thisTrialN'
p4542
I175
sg2791
S'./stim/MorphF9_01_orig.jpg'
p4543
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xe1?'
tRp4544
sg29
g45
(g47
S'\x00\x00\x00\x00\x00I!\xc0'
tRp4545
sg30
I1
sg2795
g45
(g586
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4546
sg32
I0
sg39
g40
sg43
V3
sg33
F5.6804327964782715
sS'trials2.thisN'
p4547
I175
sa(dp4548
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4549
g45
(g586
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4550
sS'trials2.thisRepN'
p4551
I0
sS'trials2.thisTrialN'
p4552
I176
sg2791
S'./stim/MorphM5_07_orig.jpg'
p4553
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xdf?'
tRp4554
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc2 \xc0'
tRp4555
sg30
I0
sg2795
g45
(g586
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4556
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4568638801574707
sS'trials2.thisN'
p4557
I176
sa(dp4558
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4559
g45
(g586
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4560
sS'trials2.thisRepN'
p4561
I0
sS'trials2.thisTrialN'
p4562
I177
sg2791
S'./stim/MorphM2_01_orig.jpg'
p4563
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xa0\xd4?'
tRp4564
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J \xc0'
tRp4565
sg30
I1
sg2795
g45
(g586
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4566
sg32
I0
sg39
g40
sg43
V3
sg33
F1.3905830383300781
sS'trials2.thisN'
p4567
I177
sa(dp4568
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4569
g45
(g586
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4570
sS'trials2.thisRepN'
p4571
I0
sS'trials2.thisTrialN'
p4572
I178
sg2791
S'./stim/MorphM7_03_orig.jpg'
p4573
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xd2?'
tRp4574
sg29
g45
(g47
S'\x00\x00\x00\x00\x00; \xc0'
tRp4575
sg30
I0
sg2795
g45
(g586
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4576
sg32
I1
sg39
g40
sg43
V3
sg33
F0.88618683815002441
sS'trials2.thisN'
p4577
I178
sa(dp4578
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4579
g45
(g586
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4580
sS'trials2.thisRepN'
p4581
I0
sS'trials2.thisTrialN'
p4582
I179
sg2791
S'./stim/MorphM9_09_orig.jpg'
p4583
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00`\xd8\xbf'
tRp4584
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x86 \xc0'
tRp4585
sg30
I0
sg2795
g45
(g586
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4586
sg32
I1
sg39
g40
sg43
V3
sg33
F2.2109701633453369
sS'trials2.thisN'
p4587
I179
sa(dp4588
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4589
g45
(g586
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4590
sS'trials2.thisRepN'
p4591
I0
sS'trials2.thisTrialN'
p4592
I180
sg2791
S'./stim/MorphF9_10_orig.jpg'
p4593
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp4594
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Y \xc0'
tRp4595
sg30
I0
sg2795
g45
(g586
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4596
sg32
I1
sg39
g40
sg43
V3
sg33
F0.73632693290710449
sS'trials2.thisN'
p4597
I180
sa(dp4598
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4599
g45
(g586
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4600
sS'trials2.thisRepN'
p4601
I0
sS'trials2.thisTrialN'
p4602
I181
sg2791
S'./stim/MorphF8_10_orig.jpg'
p4603
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp4604
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Y \xc0'
tRp4605
sg30
I0
sg2795
g45
(g586
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4606
sg32
I1
sg39
g40
sg43
V3
sg33
F0.70132994651794434
sS'trials2.thisN'
p4607
I181
sa(dp4608
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4609
g45
(g586
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4610
sS'trials2.thisRepN'
p4611
I0
sS'trials2.thisTrialN'
p4612
I182
sg2791
S'./stim/MorphF10_10_orig.jpg'
p4613
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00 \xdc\xbf'
tRp4614
sg29
g45
(g47
S'\x00\x00\x00\x00\x00Y \xc0'
tRp4615
sg30
I0
sg2795
g45
(g586
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4616
sg32
I1
sg39
g40
sg43
V3
sg33
F0.81941008567810059
sS'trials2.thisN'
p4617
I182
sa(dp4618
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4619
g45
(g586
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4620
sS'trials2.thisRepN'
p4621
I0
sS'trials2.thisTrialN'
p4622
I183
sg2791
S'./stim/MorphM3_09_orig.jpg'
p4623
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp4624
sg29
g45
(g47
S'\x00\x00\x00\x00\x00h\x1f\xc0'
tRp4625
sg30
I0
sg2795
g45
(g586
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4626
sg32
I1
sg39
g40
sg43
V3
sg33
F1.13861083984375
sS'trials2.thisN'
p4627
I183
sa(dp4628
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4629
g45
(g586
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4630
sS'trials2.thisRepN'
p4631
I0
sS'trials2.thisTrialN'
p4632
I184
sg2791
S'./stim/MorphF10_05_orig.jpg'
p4633
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xdf\xbf'
tRp4634
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x1f\xc0'
tRp4635
sg30
I1
sg2795
g45
(g586
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4636
sg32
I0
sg39
g40
sg43
V3
sg33
F3.9704380035400391
sS'trials2.thisN'
p4637
I184
sa(dp4638
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4639
g45
(g586
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4640
sS'trials2.thisRepN'
p4641
I0
sS'trials2.thisTrialN'
p4642
I185
sg2791
S'./stim/MorphF6_00_orig.jpg'
p4643
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp4644
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\x1e\xc0'
tRp4645
sg30
I1
sg2795
g45
(g586
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4646
sg32
I0
sg39
g40
sg43
V3
sg33
F0.9363710880279541
sS'trials2.thisN'
p4647
I185
sa(dp4648
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4649
g45
(g586
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4650
sS'trials2.thisRepN'
p4651
I0
sS'trials2.thisTrialN'
p4652
I186
sg2791
S'./stim/MorphF8_08_orig.jpg'
p4653
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\xe1\xbf'
tRp4654
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xf0\x1e\xc0'
tRp4655
sg30
I0
sg2795
g45
(g586
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4656
sg32
I1
sg39
g40
sg43
V3
sg33
F1.6913659572601318
sS'trials2.thisN'
p4657
I186
sa(dp4658
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4659
g45
(g586
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4660
sS'trials2.thisRepN'
p4661
I0
sS'trials2.thisTrialN'
p4662
I187
sg2791
S'./stim/MorphF7_10_orig.jpg'
p4663
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp4664
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd2\x1e\xc0'
tRp4665
sg30
I0
sg2795
g45
(g586
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4666
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5054590702056885
sS'trials2.thisN'
p4667
I187
sa(dp4668
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4669
g45
(g586
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4670
sS'trials2.thisRepN'
p4671
I0
sS'trials2.thisTrialN'
p4672
I188
sg2791
S'./stim/MorphM9_10_orig.jpg'
p4673
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xe0\xbf'
tRp4674
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd2\x1e\xc0'
tRp4675
sg30
I0
sg2795
g45
(g586
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4676
sg32
I1
sg39
g40
sg43
V3
sg33
F0.78534698486328125
sS'trials2.thisN'
p4677
I188
sa(dp4678
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4679
g45
(g586
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4680
sS'trials2.thisRepN'
p4681
I0
sS'trials2.thisTrialN'
p4682
I189
sg2791
S'./stim/MorphM10_05_orig.jpg'
p4683
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp4684
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xb4\x1e\xc0'
tRp4685
sg30
I0
sg2795
g45
(g586
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4686
sg32
I1
sg39
g40
sg43
V3
sg33
F5.6460299491882324
sS'trials2.thisN'
p4687
I189
sa(dp4688
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4689
g45
(g586
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4690
sS'trials2.thisRepN'
p4691
I0
sS'trials2.thisTrialN'
p4692
I190
sg2791
S'./stim/MorphM8_03_orig.jpg'
p4693
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp4694
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x1f\xc0'
tRp4695
sg30
I0
sg2795
g45
(g586
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4696
sg32
I1
sg39
g40
sg43
V3
sg33
F4.5732738971710205
sS'trials2.thisN'
p4697
I190
sa(dp4698
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4699
g45
(g586
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4700
sS'trials2.thisRepN'
p4701
I0
sS'trials2.thisTrialN'
p4702
I191
sg2791
S'./stim/MorphF2_10_orig.jpg'
p4703
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\xe2\xbf'
tRp4704
sg29
g45
(g47
S'\x00\x00\x00\x00\x00,\x1f\xc0'
tRp4705
sg30
I0
sg2795
g45
(g586
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4706
sg32
I1
sg39
g40
sg43
V3
sg33
F4.3891971111297607
sS'trials2.thisN'
p4707
I191
sa(dp4708
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4709
g45
(g586
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4710
sS'trials2.thisRepN'
p4711
I0
sS'trials2.thisTrialN'
p4712
I192
sg2791
S'./stim/MorphM1_02_orig.jpg'
p4713
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\xe3\xbf'
tRp4714
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp4715
sg30
I1
sg2795
g45
(g586
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4716
sg32
I0
sg39
g40
sg43
V3
sg33
F2.4462959766387939
sS'trials2.thisN'
p4717
I192
sa(dp4718
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4719
g45
(g586
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4720
sS'trials2.thisRepN'
p4721
I0
sS'trials2.thisTrialN'
p4722
I193
sg2791
S'./stim/MorphM4_09_orig.jpg'
p4723
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4724
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp4725
sg30
I0
sg2795
g45
(g586
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4726
sg32
I1
sg39
g40
sg43
V3
sg33
F1.4562649726867676
sS'trials2.thisN'
p4727
I193
sa(dp4728
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4729
g45
(g586
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4730
sS'trials2.thisRepN'
p4731
I0
sS'trials2.thisTrialN'
p4732
I194
sg2791
S'./stim/MorphM8_07_orig.jpg'
p4733
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4734
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp4735
sg30
I0
sg2795
g45
(g586
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4736
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0032219886779785
sS'trials2.thisN'
p4737
I194
sa(dp4738
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4739
g45
(g586
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4740
sS'trials2.thisRepN'
p4741
I0
sS'trials2.thisTrialN'
p4742
I195
sg2791
S'./stim/MorphM1_08_orig.jpg'
p4743
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4744
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp4745
sg30
I0
sg2795
g45
(g586
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4746
sg32
I1
sg39
g40
sg43
V3
sg33
F1.5404520034790039
sS'trials2.thisN'
p4747
I195
sa(dp4748
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4749
g45
(g586
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4750
sS'trials2.thisRepN'
p4751
I0
sS'trials2.thisTrialN'
p4752
I196
sg2791
S'./stim/MorphF4_08_orig.jpg'
p4753
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4754
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp4755
sg30
I0
sg2795
g45
(g586
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4756
sg32
I1
sg39
g40
sg43
V3
sg33
F2.5798580646514893
sS'trials2.thisN'
p4757
I196
sa(dp4758
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4759
g45
(g586
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4760
sS'trials2.thisRepN'
p4761
I0
sS'trials2.thisTrialN'
p4762
I197
sg2791
S'./stim/MorphM9_04_orig.jpg'
p4763
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x90\xe5\xbf'
tRp4764
sg29
g45
(g47
S'\x00\x00\x00\x00\x00J\x1f\xc0'
tRp4765
sg30
I1
sg2795
g45
(g586
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4766
sg32
I0
sg39
g40
sg43
V3
sg33
F0.98606586456298828
sS'trials2.thisN'
p4767
I197
sa(dp4768
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4769
g45
(g586
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4770
sS'trials2.thisRepN'
p4771
I0
sS'trials2.thisTrialN'
p4772
I198
sg2791
S'./stim/MorphF1_09_orig.jpg'
p4773
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t\x03@'
tRp4774
sg29
g45
(g47
S'\x00\x00\x00\x00\x00l\x1b\xc0'
tRp4775
sg30
I0
sg2795
g45
(g586
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4776
sg32
I1
sg39
g40
sg43
V3
sg33
F24.115653038024902
sS'trials2.thisN'
p4777
I198
sa(dp4778
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4779
g45
(g586
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4780
sS'trials2.thisRepN'
p4781
I0
sS'trials2.thisTrialN'
p4782
I199
sg2791
S'./stim/MorphM9_08_orig.jpg'
p4783
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00t\x03@'
tRp4784
sg29
g45
(g47
S'\x00\x00\x00\x00\x00l\x1b\xc0'
tRp4785
sg30
I0
sg2795
g45
(g586
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4786
sg32
I1
sg39
g40
sg43
V3
sg33
F1.3394620418548584
sS'trials2.thisN'
p4787
I199
sa(dp4788
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4789
g45
(g586
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4790
sS'trials2.thisRepN'
p4791
I0
sS'trials2.thisTrialN'
p4792
I200
sg2791
S'./stim/MorphF10_01_orig.jpg'
p4793
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\x03@'
tRp4794
sg29
g45
(g47
S'\x00\x00\x00\x00\x00N\x1b\xc0'
tRp4795
sg30
I1
sg2795
g45
(g586
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4796
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0210990905761719
sS'trials2.thisN'
p4797
I200
sa(dp4798
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4799
g45
(g586
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4800
sS'trials2.thisRepN'
p4801
I0
sS'trials2.thisTrialN'
p4802
I201
sg2791
S'./stim/MorphM10_00_orig.jpg'
p4803
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x03@'
tRp4804
sg29
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp4805
sg30
I1
sg2795
g45
(g586
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4806
sg32
I0
sg39
g40
sg43
V3
sg33
F0.78644013404846191
sS'trials2.thisN'
p4807
I201
sa(dp4808
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4809
g45
(g586
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4810
sS'trials2.thisRepN'
p4811
I0
sS'trials2.thisTrialN'
p4812
I202
sg2791
S'./stim/MorphM2_00_orig.jpg'
p4813
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x03@'
tRp4814
sg29
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp4815
sg30
I1
sg2795
g45
(g586
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4816
sg32
I0
sg39
g40
sg43
V3
sg33
F0.63348007202148438
sS'trials2.thisN'
p4817
I202
sa(dp4818
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4819
g45
(g586
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4820
sS'trials2.thisRepN'
p4821
I0
sS'trials2.thisTrialN'
p4822
I203
sg2791
S'./stim/MorphM9_01_orig.jpg'
p4823
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x03@'
tRp4824
sg29
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp4825
sg30
I1
sg2795
g45
(g586
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4826
sg32
I0
sg39
g40
sg43
V3
sg33
F1.0552289485931396
sS'trials2.thisN'
p4827
I203
sa(dp4828
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4829
g45
(g586
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4830
sS'trials2.thisRepN'
p4831
I0
sS'trials2.thisTrialN'
p4832
I204
sg2791
S'./stim/MorphF7_09_orig.jpg'
p4833
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xec\x03@'
tRp4834
sg29
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp4835
sg30
I0
sg2795
g45
(g586
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4836
sg32
I1
sg39
g40
sg43
V3
sg33
F1.0038051605224609
sS'trials2.thisN'
p4837
I204
sa(dp4838
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4839
g45
(g586
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4840
sS'trials2.thisRepN'
p4841
I0
sS'trials2.thisTrialN'
p4842
I205
sg2791
S'./stim/MorphF9_00_orig.jpg'
p4843
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xb0\x03@'
tRp4844
sg29
g45
(g47
S'\x00\x00\x00\x00\x00N\x1b\xc0'
tRp4845
sg30
I1
sg2795
g45
(g586
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4846
sg32
I0
sg39
g40
sg43
V3
sg33
F1.2389380931854248
sS'trials2.thisN'
p4847
I205
sa(dp4848
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4849
g45
(g586
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4850
sS'trials2.thisRepN'
p4851
I0
sS'trials2.thisTrialN'
p4852
I206
sg2791
S'./stim/MorphM2_02_orig.jpg'
p4853
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00H\x02@'
tRp4854
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c\xc0'
tRp4855
sg30
I1
sg2795
g45
(g586
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4856
sg32
I0
sg39
g40
sg43
V3
sg33
F4.9422140121459961
sS'trials2.thisN'
p4857
I206
sa(dp4858
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4859
g45
(g586
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4860
sS'trials2.thisRepN'
p4861
I0
sS'trials2.thisTrialN'
p4862
I207
sg2791
S'./stim/MorphF8_05_orig.jpg'
p4863
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x84\x02@'
tRp4864
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c\xc0'
tRp4865
sg30
I1
sg2795
g45
(g586
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4866
sg32
I0
sg39
g40
sg43
V3
sg33
F0.98803210258483887
sS'trials2.thisN'
p4867
I207
sa(dp4868
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4869
g45
(g586
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4870
sS'trials2.thisRepN'
p4871
I0
sS'trials2.thisTrialN'
p4872
I208
sg2791
S'./stim/MorphF3_09_orig.jpg'
p4873
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x84\x02@'
tRp4874
sg29
g45
(g47
S'\x00\x00\x00\x00\x00 \x1c\xc0'
tRp4875
sg30
I1
sg2795
g45
(g586
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4876
sg32
I0
sg39
g40
sg43
V3
sg33
F2.0578598976135254
sS'trials2.thisN'
p4877
I208
sa(dp4878
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4879
g45
(g586
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4880
sS'trials2.thisRepN'
p4881
I0
sS'trials2.thisTrialN'
p4882
I209
sg2791
S'./stim/MorphM5_10_orig.jpg'
p4883
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xc0\x02@'
tRp4884
sg29
g45
(g47
S'\x00\x00\x00\x00\x00>\x1c\xc0'
tRp4885
sg30
I0
sg2795
g45
(g586
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4886
sg32
I1
sg39
g40
sg43
V3
sg33
F1.7084910869598389
sS'trials2.thisN'
p4887
I209
sa(dp4888
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4889
g45
(g586
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4890
sS'trials2.thisRepN'
p4891
I0
sS'trials2.thisTrialN'
p4892
I210
sg2791
S'./stim/MorphM8_08_orig.jpg'
p4893
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x0c\x02@'
tRp4894
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xc6\x1b\xc0'
tRp4895
sg30
I0
sg2795
g45
(g586
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4896
sg32
I1
sg39
g40
sg43
V3
sg33
F2.1611499786376953
sS'trials2.thisN'
p4897
I210
sa(dp4898
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4899
g45
(g586
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4900
sS'trials2.thisRepN'
p4901
I0
sS'trials2.thisTrialN'
p4902
I211
sg2791
S'./stim/MorphM3_07_orig.jpg'
p4903
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x94\x01@'
tRp4904
sg29
g45
(g47
S'\x00\x00\x00\x00\x00N\x1b\xc0'
tRp4905
sg30
I0
sg2795
g45
(g586
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4906
sg32
I1
sg39
g40
sg43
V3
sg33
F0.88637304306030273
sS'trials2.thisN'
p4907
I211
sa(dp4908
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4909
g45
(g586
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4910
sS'trials2.thisRepN'
p4911
I0
sS'trials2.thisTrialN'
p4912
I212
sg2791
S'./stim/MorphM5_06_orig.jpg'
p4913
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x94\x01@'
tRp4914
sg29
g45
(g47
S'\x00\x00\x00\x00\x00N\x1b\xc0'
tRp4915
sg30
I1
sg2795
g45
(g586
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4916
sg32
I0
sg39
g40
sg43
V3
sg33
F1.7085800170898438
sS'trials2.thisN'
p4917
I212
sa(dp4918
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4919
g45
(g586
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4920
sS'trials2.thisRepN'
p4921
I0
sS'trials2.thisTrialN'
p4922
I213
sg2791
S'./stim/MorphF5_09_orig.jpg'
p4923
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x94\x01@'
tRp4924
sg29
g45
(g47
S'\x00\x00\x00\x00\x000\x1b\xc0'
tRp4925
sg30
I0
sg2795
g45
(g586
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4926
sg32
I1
sg39
g40
sg43
V3
sg33
F1.2219538688659668
sS'trials2.thisN'
p4927
I213
sa(dp4928
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4929
g45
(g586
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4930
sS'trials2.thisRepN'
p4931
I0
sS'trials2.thisTrialN'
p4932
I214
sg2791
S'./stim/MorphF8_06_orig.jpg'
p4933
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xd0\x01@'
tRp4934
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\x12\x1b\xc0'
tRp4935
sg30
I1
sg2795
g45
(g586
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4936
sg32
I0
sg39
g40
sg43
V3
sg33
F1.6414039134979248
sS'trials2.thisN'
p4937
I214
sa(dp4938
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4939
g45
(g586
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4940
sS'trials2.thisRepN'
p4941
I0
sS'trials2.thisTrialN'
p4942
I215
sg2791
S'./stim/MorphF5_04_orig.jpg'
p4943
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x01@'
tRp4944
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd6\x1a\xc0'
tRp4945
sg30
I1
sg2795
g45
(g586
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4946
sg32
I0
sg39
g40
sg43
V3
sg33
F20.32828688621521
sS'trials2.thisN'
p4947
I215
sa(dp4948
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4949
g45
(g586
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4950
sS'trials2.thisRepN'
p4951
I0
sS'trials2.thisTrialN'
p4952
I216
sg2791
S'./stim/MorphM2_04_orig.jpg'
p4953
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x01@'
tRp4954
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd6\x1a\xc0'
tRp4955
sg30
I1
sg2795
g45
(g586
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4956
sg32
I0
sg39
g40
sg43
V3
sg33
F0.95438694953918457
sS'trials2.thisN'
p4957
I216
sa(dp4958
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4959
g45
(g586
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4960
sS'trials2.thisRepN'
p4961
I0
sS'trials2.thisTrialN'
p4962
I217
sg2791
S'./stim/MorphF2_05_orig.jpg'
p4963
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x01@'
tRp4964
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd6\x1a\xc0'
tRp4965
sg30
I1
sg2795
g45
(g586
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4966
sg32
I0
sg39
g40
sg43
V3
sg33
F0.83662509918212891
sS'trials2.thisN'
p4967
I217
sa(dp4968
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4969
g45
(g586
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4970
sS'trials2.thisRepN'
p4971
I0
sS'trials2.thisTrialN'
p4972
I218
sg2791
S'./stim/MorphM7_01_orig.jpg'
p4973
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\x1c\x01@'
tRp4974
sg29
g45
(g47
S'\x00\x00\x00\x00\x00\xd6\x1a\xc0'
tRp4975
sg30
I0
sg2795
g45
(g586
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4976
sg32
I1
sg39
g40
sg43
V3
sg33
F0.88615989685058594
sS'trials2.thisN'
p4977
I218
sa(dp4978
g31
I0
sg42
g11
sg41
VG
sS'trials2.thisIndex'
p4979
g45
(g586
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4980
sS'trials2.thisRepN'
p4981
I0
sS'trials2.thisTrialN'
p4982
I219
sg2791
S'./stim/MorphF10_09_orig.jpg'
p4983
sg44
g48
sg28
g45
(g47
S'\x00\x00\x00\x00\x00\xe0\xff?'
tRp4984
sg29
g45
(g47
S'\x00\x00\x00\x00\x00^\x1a\xc0'
tRp4985
sg30
I0
sg2795
g45
(g586
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4986
sg32
I1
sg39
g40
sg43
V3
sg33
F2.3945438861846924
sS'trials2.thisN'
p4987
I219
sasS'loops'
p4988
(lp4989
g1
(cpsychopy.data
TrialHandler
p4990
g3
NtRp4991
(dp4992
S'origin'
p4993
V\u000a\u000a\u000a\u000a\u000a#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p4994
sS'thisTrial'
p4995
(lp4996
sS'_exp'
p4997
I140485067032016
sg10
S'basicLoop'
p4998
sg6
S'/home/labor/faces/emoFaces.py'
p4999
sS'thisRepN'
p5000
I1
sg36
I01
sg37
g38
sS'data'
p5001
g1
(cpsychopy.data
DataHandler
p5002
c__builtin__
dict
p5003
(dp5004
g16
cnumpy.core.multiarray
_reconstruct
p5005
(cnumpy
ndarray
p5006
(I0
tS'b'
tRp5007
(I1
(I84
I1
tg46
(S'O8'
I0
I1
tRp5008
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5009
NaNaNag111
ag71
aNaNaNaNaNag111
ag71
aNaNaNaNaNag111
ag71
aNaNaNaNaNag111
aNaNaNaNaNaNag111
ag71
aNag71
aNaNaNag111
ag71
aNaNaNaNaNag111
aNaNaNaNaNaNag111
aNaNaNaNaNaNag111
ag71
aNaNaNaNaNag111
aNaNaNaNaNaNag111
aNaNaNaNaNaNag111
ag71
aNaNatbsg18
g5005
(g5006
(I0
tS'b'
tRp5010
(I1
(I84
I1
tg5008
I00
(lp5011
g98
aNag85
aNaNaNaNag98
aNaNaNaNaNaNag98
aNaNaNaNaNaNag85
aNag85
aNag98
aNaNag98
aNag85
aNaNaNaNag98
aNaNaNaNaNaNag98
aNaNaNaNaNaNag98
aNag85
aNaNaNaNag98
ag85
aNaNaNaNaNag98
aNaNaNag85
aNaNag98
aNag85
aNag98
aNaNag98
aNag85
aNaNaNaNatbsg21
g5005
(g5006
(I0
tS'b'
tRp5012
(I1
(I84
I1
tg5008
I00
(lp5013
NaF0.59199999999999997
aNaNaNaF3.351
aNaNaF4.2430000000000003
aF1.962
aNaNaF0.57699999999999996
aNaNaF1.2929999999999999
aF1.5129999999999999
aNaNaF4.3940000000000001
aNaNaF4.7119999999999997
aNaNaNaF3.6589999999999998
aNaNaF1.5760000000000001
aNaNaNaF1.6160000000000001
aNaNaF15.552
aF6.9710000000000001
aNaNaS'9.'
p5014
aNaNaF1.6759999999999999
aF1.3600000000000001
aNaF6.9269999999999996
aF1.1759999999999999
aNaNaF10.904
aNaNaF11.584
aF2.9529999999999998
aNaNaNaF8.7859999999999996
aNaNaF19.108000000000001
aNaNaF1.8120000000000001
aF3.9119999999999999
aNaNaF1.276
aNaNaF1.282
aNaNaNaF1.107
aNaNaF2.8530000000000002
aNaNaNaF1.2410000000000001
aNatbsS'ran'
p5015
cnumpy.ma.core
_mareconstruct
p5016
(cnumpy.ma.core
MaskedArray
p5017
g5006
(I0
tp5018
S'b'
tRp5019
(I1
(I84
I1
tg46
(S'f4'
I0
I1
tRp5020
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5005
(g5006
(I0
tS'b'
tRp5021
(I1
(I84
I1
tg5008
I00
(lp5022
NaNaNaF1.681
aF4.8849999999999998
aNaNaNaNaNaF1.296
aF1.379
aNaNaNaNaNaF1.21
aF1.75
aNaNaNaNaNaF1.595
aNaNaNaNaNaNaF1.5800000000000001
aF24.422000000000001
aNaF2.9740000000000002
aNaNaNaF2.2679999999999998
aF2.351
aNaNaNaNaNaF0.99399999999999999
aNaNaNaNaNaNaF1.7649999999999999
aNaNaNaNaNaNaF1.113
aF2.403
aNaNaNaNaNaF0.82699999999999996
aNaNaNaNaNaNaF1.1639999999999999
aNaNaNaNaNaNaF2.5600000000000001
aF1.302
aNaNatbsg23
g5005
(g5006
(I0
tS'b'
tRp5023
(I1
(I84
I1
tg5008
I00
(lp5024
NaNaNaNaNaNaF3.0219999999999998
aNaNaNaNaNaNaF14.379
aNaNaNaNaNaNaF4.5449999999999999
aNaNaNaNaNaNaF1.1899999999999999
aNaNaNaNaNaNaNaNaNaNaNaNaNaF1.861
aNaNaNaNaNaNaF1.0249999999999999
aNaNaNaNaNaNaF1.964
aNaNaNaNaNaNaF2.0499999999999998
aNaNaNaNaNaNaF0.97499999999999998
aNaNaNaNaNaNaF5.1139999999999999
aNaNaNaNaNaNaF5.3499999999999996
atbsg22
g5005
(g5006
(I0
tS'b'
tRp5025
(I1
(I84
I1
tg5008
I00
(lp5026
NaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNaNaNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
aNaNaNaNaNaNag79
atbsg19
g5005
(g5006
(I0
tS'b'
tRp5027
(I1
(I84
I1
tg5008
I00
(lp5028
F1.262
aNaF3.488
aNaNaNaNaF1.7969999999999999
aNaNaNaNaNaNaF0.97799999999999998
aNaNaNaNaNaNaF17.289000000000001
aNaF0.60899999999999999
aNaF1.8320000000000001
aNaNaF1.8999999999999999
aNaF5.8550000000000004
aNaNaNaNaF0.876
aNaNaNaNaNaNaF2.1640000000000001
aNaNaNaNaNaNaF1.381
aNaF5.258
aNaNaNaNaF3.4260000000000002
aF3.9580000000000002
aNaNaNaNaNaF2.282
aNaNaNaF3.7410000000000001
aNaNaF0.97799999999999998
aNaF4.681
aNaF10.045
aNaNaF1.159
aNaF2.5369999999999999
aNaNaNaNatbsg20
g5005
(g5006
(I0
tS'b'
tRp5029
(I1
(I84
I1
tg5008
I00
(lp5030
Nag151
aNaNaNag67
aNaNag151
ag67
aNaNag67
aNaNag151
ag67
aNaNag67
aNaNag151
aNaNaNag67
aNaNag151
aNaNaNag67
aNaNag151
ag151
aNaNag67
aNaNag151
ag67
aNag151
ag67
aNaNag151
aNaNag151
ag67
aNaNaNag67
aNaNag67
aNaNag151
ag67
aNaNag67
aNaNag151
aNaNaNag67
aNaNag151
aNaNaNag67
aNatbsS'order'
p5031
g5016
(g5017
g5006
g5018
S'b'
tRp5032
(I1
(I84
I1
tg5020
I00
S'\x00\x00xB\x00\x00\x1cB\x00\x00pA\x00\x00\x14B\x00\x00 A\x00\x00\x9cB\x00\x00(B\x00\x00\xc0A\x00\x00\x18B\x00\x00\xb8A\x00\x00\x96B\x00\x000A\x00\x00tB\x00\x00\x00@\x00\x00HB\x00\x00\x88A\x00\x00XB\x00\x00lB\x00\x00\x80?\x00\x00\xa6B\x00\x00\xf8A\x00\x00`A\x00\x00\xd0A\x00\x00$B\x00\x00DB\x00\x00\x8aB\x00\x00\x80B\x00\x00\xe0A\x00\x000B\x00\x00\x8cB\x00\x00\x84B\x00\x00,B\x00\x00\xb0A\x00\x00pB\x00\x00\x00A\x00\x00\xa2B\x00\x00\xa0A\x00\x00PA\x00\x00\xa4B\x00\x00\x90B\x00\x00\x00\x00\x00\x00\x90A\x00\x00\xa0@\x00\x00\x04B\x00\x00\xc0@\x00\x00TB\x00\x00\x86B\x00\x00\xa0B\x00\x00hB\x00\x00\x88B\x00\x00\\B\x00\x00\xd8A\x00\x00\xa8A\x00\x00\x08B\x00\x00\xc8A\x00\x00`B\x00\x00\x98A\x00\x00\x94B\x00\x00\x10A\x00\x00\x80A\x00\x00LB\x00\x00\xf0A\x00\x00PB\x00\x00\xe8A\x00\x00|B\x00\x00\x82B\x00\x00\x98B\x00\x00@B\x00\x004B\x00\x00\x9eB\x00\x008B\x00\x00\x0cB\x00\x00@@\x00\x00\x00B\x00\x00\x10B\x00\x00<B\x00\x00\x80@\x00\x00\x8eB\x00\x00dB\x00\x00 B\x00\x00\xe0@\x00\x00\x9aB\x00\x00\x92B\x00\x00@A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5033
(dp5034
S'isNumeric'
p5035
(dp5036
g16
I00
sg18
I00
sg21
I00
sg5015
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5031
I01
ssS'trials'
p5037
g4991
sS'dataTypes'
p5038
(lp5039
g5015
ag5031
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5040
(lp5041
I84
aI1
asbsS'method'
p5042
S'fullRandom'
p5043
sS'sequenceIndices'
p5044
g5005
(g5006
(I0
tS'b'
tRp5045
(I1
(I84
I1
tg5008
I00
(lp5046
I40
aI18
aI13
aI72
aI76
aI42
aI44
aI80
aI34
aI58
aI4
aI11
aI83
aI37
aI21
aI2
aI59
aI15
aI41
aI56
aI36
aI52
aI32
aI9
aI7
aI54
aI22
aI51
aI27
aI63
aI61
aI20
aI73
aI43
aI53
aI71
aI74
aI3
aI8
aI1
aI79
aI23
aI6
aI31
aI28
aI68
aI70
aI75
aI67
aI24
aI14
aI60
aI62
aI45
aI16
aI50
aI55
aI78
aI48
aI17
aI33
aI12
aI0
aI64
aI26
aI65
aI30
aI46
aI49
aI25
aI29
aI77
aI39
aI82
aI57
aI10
aI66
aI81
aI5
aI69
aI47
aI35
aI38
aI19
atbsS'finished'
p5047
I01
sS'nReps'
p5048
I1
sS'nRemaining'
p5049
I-1
sS'trialList'
p5050
(lp5051
g1
(cpsychopy.data
TrialType
p5052
g5003
(dp5053
g57
g443
stRp5054
ag1
(g5052
g5003
(dp5055
g57
g305
stRp5056
ag1
(g5052
g5003
(dp5057
g57
g161
stRp5058
ag1
(g5052
g5003
(dp5059
g57
g293
stRp5060
ag1
(g5052
g5003
(dp5061
g57
g130
stRp5062
ag1
(g5052
g5003
(dp5063
g57
g539
stRp5064
ag1
(g5052
g5003
(dp5065
g57
g323
stRp5066
ag1
(g5052
g5003
(dp5067
g57
g215
stRp5068
ag1
(g5052
g5003
(dp5069
g57
g299
stRp5070
ag1
(g5052
g5003
(dp5071
g57
g209
stRp5072
ag1
(g5052
g5003
(dp5073
g57
g521
stRp5074
ag1
(g5052
g5003
(dp5075
g57
g136
stRp5076
ag1
(g5052
g5003
(dp5077
g57
g437
stRp5078
ag1
(g5052
g5003
(dp5079
g57
g78
stRp5080
ag1
(g5052
g5003
(dp5081
g57
g371
stRp5082
ag1
(g5052
g5003
(dp5083
g57
g173
stRp5084
ag1
(g5052
g5003
(dp5085
g57
g395
stRp5086
ag1
(g5052
g5003
(dp5087
g57
g425
stRp5088
ag1
(g5052
g5003
(dp5089
g57
g72
stRp5090
ag1
(g5052
g5003
(dp5091
g57
g569
stRp5092
ag1
(g5052
g5003
(dp5093
g57
g257
stRp5094
ag1
(g5052
g5003
(dp5095
g57
g155
stRp5096
ag1
(g5052
g5003
(dp5097
g57
g227
stRp5098
ag1
(g5052
g5003
(dp5099
g57
g317
stRp5100
ag1
(g5052
g5003
(dp5101
g57
g365
stRp5102
ag1
(g5052
g5003
(dp5103
g57
g485
stRp5104
ag1
(g5052
g5003
(dp5105
g57
g455
stRp5106
ag1
(g5052
g5003
(dp5107
g57
g239
stRp5108
ag1
(g5052
g5003
(dp5109
g57
g335
stRp5110
ag1
(g5052
g5003
(dp5111
g57
g491
stRp5112
ag1
(g5052
g5003
(dp5113
g57
g467
stRp5114
ag1
(g5052
g5003
(dp5115
g57
g329
stRp5116
ag1
(g5052
g5003
(dp5117
g57
g203
stRp5118
ag1
(g5052
g5003
(dp5119
g57
g431
stRp5120
ag1
(g5052
g5003
(dp5121
g57
g118
stRp5122
ag1
(g5052
g5003
(dp5123
g57
g557
stRp5124
ag1
(g5052
g5003
(dp5125
g57
g191
stRp5126
ag1
(g5052
g5003
(dp5127
g57
g148
stRp5128
ag1
(g5052
g5003
(dp5129
g57
g563
stRp5130
ag1
(g5052
g5003
(dp5131
g57
g503
stRp5132
ag1
(g5052
g5003
(dp5133
g57
g64
stRp5134
ag1
(g5052
g5003
(dp5135
g57
g179
stRp5136
ag1
(g5052
g5003
(dp5137
g57
g99
stRp5138
ag1
(g5052
g5003
(dp5139
g57
g269
stRp5140
ag1
(g5052
g5003
(dp5141
g57
g105
stRp5142
ag1
(g5052
g5003
(dp5143
g57
g389
stRp5144
ag1
(g5052
g5003
(dp5145
g57
g473
stRp5146
ag1
(g5052
g5003
(dp5147
g57
g551
stRp5148
ag1
(g5052
g5003
(dp5149
g57
g419
stRp5150
ag1
(g5052
g5003
(dp5151
g57
g479
stRp5152
ag1
(g5052
g5003
(dp5153
g57
g401
stRp5154
ag1
(g5052
g5003
(dp5155
g57
g233
stRp5156
ag1
(g5052
g5003
(dp5157
g57
g197
stRp5158
ag1
(g5052
g5003
(dp5159
g57
g275
stRp5160
ag1
(g5052
g5003
(dp5161
g57
g221
stRp5162
ag1
(g5052
g5003
(dp5163
g57
g407
stRp5164
ag1
(g5052
g5003
(dp5165
g57
g185
stRp5166
ag1
(g5052
g5003
(dp5167
g57
g515
stRp5168
ag1
(g5052
g5003
(dp5169
g57
g124
stRp5170
ag1
(g5052
g5003
(dp5171
g57
g167
stRp5172
ag1
(g5052
g5003
(dp5173
g57
g377
stRp5174
ag1
(g5052
g5003
(dp5175
g57
g251
stRp5176
ag1
(g5052
g5003
(dp5177
g57
g383
stRp5178
ag1
(g5052
g5003
(dp5179
g57
g245
stRp5180
ag1
(g5052
g5003
(dp5181
g57
g449
stRp5182
ag1
(g5052
g5003
(dp5183
g57
g461
stRp5184
ag1
(g5052
g5003
(dp5185
g57
g527
stRp5186
ag1
(g5052
g5003
(dp5187
g57
g359
stRp5188
ag1
(g5052
g5003
(dp5189
g57
g341
stRp5190
ag1
(g5052
g5003
(dp5191
g57
g545
stRp5192
ag1
(g5052
g5003
(dp5193
g57
g347
stRp5194
ag1
(g5052
g5003
(dp5195
g57
g281
stRp5196
ag1
(g5052
g5003
(dp5197
g57
g86
stRp5198
ag1
(g5052
g5003
(dp5199
g57
g263
stRp5200
ag1
(g5052
g5003
(dp5201
g57
g287
stRp5202
ag1
(g5052
g5003
(dp5203
g57
g353
stRp5204
ag1
(g5052
g5003
(dp5205
g57
g92
stRp5206
ag1
(g5052
g5003
(dp5207
g57
g497
stRp5208
ag1
(g5052
g5003
(dp5209
g57
g413
stRp5210
ag1
(g5052
g5003
(dp5211
g57
g311
stRp5212
ag1
(g5052
g5003
(dp5213
g57
g112
stRp5214
ag1
(g5052
g5003
(dp5215
g57
g533
stRp5216
ag1
(g5052
g5003
(dp5217
g57
g509
stRp5218
ag1
(g5052
g5003
(dp5219
g57
g142
stRp5220
asS'seed'
p5221
NsS'thisIndex'
p5222
I19
sS'thisN'
p5223
I84
sS'thisTrialN'
p5224
I0
sS'nTotal'
p5225
I84
sS'_warnUseOfNext'
p5226
I01
sbag1
(g4990
g3
NtRp5227
(dp5228
g4993
V\u000a\u000a\u000a\u000a\u000a#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5229
sg4995
(lp5230
sg4997
I140485067032016
sg10
g5037
sg6
g4999
sg5000
I1
sg36
I01
sg37
g38
sg5001
g1
(g5002
g5003
(dp5231
g30
g5016
(g5017
g5006
g5018
S'b'
tRp5232
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5015
g5016
(g5017
g5006
g5018
S'b'
tRp5233
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5005
(g5006
(I0
tS'b'
tRp5234
(I1
(I220
I1
tg5008
I00
(lp5235
g589
ag599
ag609
ag619
ag629
ag639
ag649
ag659
ag669
ag679
ag689
ag699
ag709
ag719
ag729
ag739
ag749
ag759
ag769
ag779
ag789
ag799
ag809
ag819
ag829
ag839
ag849
ag859
ag869
ag879
ag889
ag899
ag909
ag919
ag929
ag939
ag949
ag959
ag969
ag979
ag989
ag999
ag1009
ag1019
ag1029
ag1039
ag1049
ag1059
ag1069
ag1079
ag1089
ag1099
ag1109
ag1119
ag1129
ag1139
ag1149
ag1159
ag1169
ag1179
ag1189
ag1199
ag1209
ag1219
ag1229
ag1239
ag1249
ag1259
ag1269
ag1279
ag1289
ag1299
ag1309
ag1319
ag1329
ag1339
ag1349
ag1359
ag1369
ag1379
ag1389
ag1399
ag1409
ag1419
ag1429
ag1439
ag1449
ag1459
ag1469
ag1479
ag1489
ag1499
ag1509
ag1519
ag1529
ag1539
ag1549
ag1559
ag1569
ag1579
ag1589
ag1599
ag1609
ag1619
ag1629
ag1639
ag1649
ag1659
ag1669
ag1679
ag1689
ag1699
ag1709
ag1719
ag1729
ag1739
ag1749
ag1759
ag1769
ag1779
ag1789
ag1799
ag1809
ag1819
ag1829
ag1839
ag1849
ag1859
ag1869
ag1879
ag1889
ag1899
ag1909
ag1919
ag1929
ag1939
ag1949
ag1959
ag1969
ag1979
ag1989
ag1999
ag2009
ag2019
ag2029
ag2039
ag2049
ag2059
ag2069
ag2079
ag2089
ag2099
ag2109
ag2119
ag2129
ag2139
ag2149
ag2159
ag2169
ag2179
ag2189
ag2199
ag2209
ag2219
ag2229
ag2239
ag2249
ag2259
ag2269
ag2279
ag2289
ag2299
ag2309
ag2319
ag2329
ag2339
ag2349
ag2359
ag2369
ag2379
ag2389
ag2399
ag2409
ag2419
ag2429
ag2439
ag2449
ag2459
ag2469
ag2479
ag2489
ag2499
ag2509
ag2519
ag2529
ag2539
ag2549
ag2559
ag2569
ag2579
ag2589
ag2599
ag2609
ag2619
ag2629
ag2639
ag2649
ag2659
ag2669
ag2679
ag2689
ag2699
ag2709
ag2719
ag2729
ag2739
ag2749
ag2759
ag2769
ag2779
atbsg29
g5005
(g5006
(I0
tS'b'
tRp5236
(I1
(I220
I1
tg5008
I00
(lp5237
g590
ag600
ag610
ag620
ag630
ag640
ag650
ag660
ag670
ag680
ag690
ag700
ag710
ag720
ag730
ag740
ag750
ag760
ag770
ag780
ag790
ag800
ag810
ag820
ag830
ag840
ag850
ag860
ag870
ag880
ag890
ag900
ag910
ag920
ag930
ag940
ag950
ag960
ag970
ag980
ag990
ag1000
ag1010
ag1020
ag1030
ag1040
ag1050
ag1060
ag1070
ag1080
ag1090
ag1100
ag1110
ag1120
ag1130
ag1140
ag1150
ag1160
ag1170
ag1180
ag1190
ag1200
ag1210
ag1220
ag1230
ag1240
ag1250
ag1260
ag1270
ag1280
ag1290
ag1300
ag1310
ag1320
ag1330
ag1340
ag1350
ag1360
ag1370
ag1380
ag1390
ag1400
ag1410
ag1420
ag1430
ag1440
ag1450
ag1460
ag1470
ag1480
ag1490
ag1500
ag1510
ag1520
ag1530
ag1540
ag1550
ag1560
ag1570
ag1580
ag1590
ag1600
ag1610
ag1620
ag1630
ag1640
ag1650
ag1660
ag1670
ag1680
ag1690
ag1700
ag1710
ag1720
ag1730
ag1740
ag1750
ag1760
ag1770
ag1780
ag1790
ag1800
ag1810
ag1820
ag1830
ag1840
ag1850
ag1860
ag1870
ag1880
ag1890
ag1900
ag1910
ag1920
ag1930
ag1940
ag1950
ag1960
ag1970
ag1980
ag1990
ag2000
ag2010
ag2020
ag2030
ag2040
ag2050
ag2060
ag2070
ag2080
ag2090
ag2100
ag2110
ag2120
ag2130
ag2140
ag2150
ag2160
ag2170
ag2180
ag2190
ag2200
ag2210
ag2220
ag2230
ag2240
ag2250
ag2260
ag2270
ag2280
ag2290
ag2300
ag2310
ag2320
ag2330
ag2340
ag2350
ag2360
ag2370
ag2380
ag2390
ag2400
ag2410
ag2420
ag2430
ag2440
ag2450
ag2460
ag2470
ag2480
ag2490
ag2500
ag2510
ag2520
ag2530
ag2540
ag2550
ag2560
ag2570
ag2580
ag2590
ag2600
ag2610
ag2620
ag2630
ag2640
ag2650
ag2660
ag2670
ag2680
ag2690
ag2700
ag2710
ag2720
ag2730
ag2740
ag2750
ag2760
ag2770
ag2780
atbsg31
g5016
(g5017
g5006
g5018
S'b'
tRp5238
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5016
(g5017
g5006
g5018
S'b'
tRp5239
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5016
(g5017
g5006
g5018
S'b'
tRp5240
(I1
(I220
I1
tg5020
I00
S'\x02\xbbI@\xaa\xce\xe0?\x0c:\x8d?\xac#\x89?\xe8\xbe\x10@\x85\xb9\x10@h\\\xba?\xe4\xa0x?d\xb5\xaf?@\xc1\xbd@\x10\xd0\xcd?"\xa1\xad?\x08\x17\x98?\xdex\xab?\xc4\x89\x8d@\xbc9D@a\xfb@@\x0cE\xaaA\x1c\x97\xaf?\\#4@7\x8e:@\xac\x97\x8f?Dh\x96AV.\x98?\x14\xcb\xcd?1U_A\x0c\xd4\x11A\xe4\xf6o?\x14\x1cg?\x7fe\x0c@\xd0\xf2\xa2?\xe6\x92\xda?\x8c\x01\x86@\x0c\xfb\x04AOYr@/C\x7fA=\xd0[@\x9e\xed\xb1?cbs@F\x8eHA|\xd7\x84?\xacb^?\x8d\x1b\x80@\x0cm\xc6Ax\xcb\xcd?\x01lG@\xf6\xae\xaf?\x80\xb0\x80@\xb2\x84\xe7?n\x83\xba?\xa0\x1cM?\x16\xdf\xa2?K\xca=@\x82Y\xc7?<\x1dk?\xde\xe7\x83@|\xad\xbc@\x04W\x0c@\xe8\xbb\xcf?\xa3\x04_@x\xa7k?\x84\x93\x80?J\r\xc3?@\xbd\x90@\xc8\'\x98?\x18\x9d\x80?\xe4\xbc\xb3?H\xd1s?\xc8C\x98@\x0b\xc3aA\xe8G\xa9?b)\xb6?\xf1F7@`V8?\xa9g\xd5@BF\xd8?\x05j8@\x91\xa0K@\x94\xa3\x1f@\x04Pt?\x81\xea\xa8@\x18\xfc\x17AD\x83pA\x02\xd3\xdb@\xe2=\xad?\xc2\xbb\x82?\xbaW\x80?\xdc\xf6\xb1?nT\x8f?X9\x9a?\x849\x98?\xcc}\x00@\x18\x07c?\x88\xde\x84?\xf2\xef\xcf?\x18W\xd8?H\xd0\xf8@\x0e\xf8\xa4?\x88\x87x?4\xcds?\xca\xd4\x84?\xb0\xf1\x9a@\x8c\xff\x1eA8*\x8d?~\xfc\x05@\x1c%\xa5@>>\xe3?|\xd5\xfc?\xb2*\x98?\xe6\xb0\x10@)\xcf\x82@\x9a\x1c\x98?B\n\x96?\x8f\x86f@r\xde\x03@\x807\x9f@\xc28\xd4?\nwlAh\x1f\xe1?\x80)\xa7?\x8c\xa0M?\x10[\xf4?z\xe2\x05@\xccc\xa9?\x94\x02\x89A<\xd0o?\xf0\xd9^?\xfc\xa8\x80@\x8a\x06\x89?J\xb6\x82?\xd2\xbb\xa0?\x94(8?:\x95\x87@W"\xbb@9Dq@$\xe7\xde?\xa4#t?\x80\x17\xf0?\xac\x10Z?\xa4r\x8f?TrZ?*\xff\xb8@\x84N\x1cAFH\x8b?h\xd2\x84?\x1c\xda@?\x08\xe7;?\x84TI?\xc18\x90@\xe4\x0f\xb4?6<\x8b?\x0e\xba\xa0?V/\x8b?Dw\xec@Gx\x1d@\x16d!AL\x1a\x9d@!\xcc\xa0@\x01\x07\xb3@\x96$\x08@P\x19\x89?\xd4\xf8Q?\xb2\xa6\xbe?\x901q@b\xfb\x95?\xb0\x89\x9c@d\xfb\xce@J\x80\xba?\xf4\x87\x80?\xe0\x03\'?i\xc50@\x0cyx?\\V\xa9?\xa8M\x9a?\xba\xdf\xd1?\xd0G\xe2@\xe4>\x9f@\x90\x94\xd0@X\xce\x86?\xf2\xc9\x86?\xb5\x195@Z.a@\xdcI<?\x8cA<?&q\xba?\x80\xd4\x84?\xd7lW@"5\xa7?\xd4\x14M?h68?\xa6W\xbe@\xb2\xbe\xaf?\xc4\xee\xdc@\x89\xecN@]\xe1?@\x1a\x1d\xb8?\xb0fx?\xac\xcf|?j\xbc\xad@\xafysAT\x87|?DI@?\xb4\xe67?t\xb1M?\xac\xc9\xaf?F\xccDA\xdf.dA\xcc\x99\xa4@\x0eI\xf1@\xb4\x1fQ@p^G@\x90\xac/?\xb6\x0f\xc3?D\xa5\xad?t?d@+\x15\xc9@$\xe2Q?\xb5R\x1a@\x08yM? \x83<?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5031
g5016
(g5017
g5006
g5018
S'b'
tRp5241
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5242
(dp5243
g5035
(dp5244
g31
I01
sg5015
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5031
I01
ssg5037
g5227
sg5038
(lp5245
g5015
ag5031
ag28
ag29
ag30
ag31
ag32
ag33
asg5040
(lp5246
I220
aI1
asbsg5042
S'sequential'
p5247
sg5044
g5005
(g5006
(I0
tS'b'
tRp5248
(I1
(I220
I1
tg586
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5047
I01
sg5048
I1
sg5049
I-1
sg5050
(lp5249
g1
(g5052
g5003
(dp5250
g58
g591
sg583
g584
stRp5251
ag1
(g5052
g5003
(dp5252
g58
g601
sg583
g595
stRp5253
ag1
(g5052
g5003
(dp5254
g58
g611
sg583
g605
stRp5255
ag1
(g5052
g5003
(dp5256
g58
g621
sg583
g615
stRp5257
ag1
(g5052
g5003
(dp5258
g58
g631
sg583
g625
stRp5259
ag1
(g5052
g5003
(dp5260
g58
g641
sg583
g635
stRp5261
ag1
(g5052
g5003
(dp5262
g58
g651
sg583
g645
stRp5263
ag1
(g5052
g5003
(dp5264
g58
g661
sg583
g655
stRp5265
ag1
(g5052
g5003
(dp5266
g58
g671
sg583
g665
stRp5267
ag1
(g5052
g5003
(dp5268
g58
g681
sg583
g675
stRp5269
ag1
(g5052
g5003
(dp5270
g58
g691
sg583
g685
stRp5271
ag1
(g5052
g5003
(dp5272
g58
g701
sg583
g695
stRp5273
ag1
(g5052
g5003
(dp5274
g58
g711
sg583
g705
stRp5275
ag1
(g5052
g5003
(dp5276
g58
g721
sg583
g715
stRp5277
ag1
(g5052
g5003
(dp5278
g58
g731
sg583
g725
stRp5279
ag1
(g5052
g5003
(dp5280
g58
g741
sg583
g735
stRp5281
ag1
(g5052
g5003
(dp5282
g58
g751
sg583
g745
stRp5283
ag1
(g5052
g5003
(dp5284
g58
g761
sg583
g755
stRp5285
ag1
(g5052
g5003
(dp5286
g58
g771
sg583
g765
stRp5287
ag1
(g5052
g5003
(dp5288
g58
g781
sg583
g775
stRp5289
ag1
(g5052
g5003
(dp5290
g58
g791
sg583
g785
stRp5291
ag1
(g5052
g5003
(dp5292
g58
g801
sg583
g795
stRp5293
ag1
(g5052
g5003
(dp5294
g58
g811
sg583
g805
stRp5295
ag1
(g5052
g5003
(dp5296
g58
g821
sg583
g815
stRp5297
ag1
(g5052
g5003
(dp5298
g58
g831
sg583
g825
stRp5299
ag1
(g5052
g5003
(dp5300
g58
g841
sg583
g835
stRp5301
ag1
(g5052
g5003
(dp5302
g58
g851
sg583
g845
stRp5303
ag1
(g5052
g5003
(dp5304
g58
g861
sg583
g855
stRp5305
ag1
(g5052
g5003
(dp5306
g58
g871
sg583
g865
stRp5307
ag1
(g5052
g5003
(dp5308
g58
g881
sg583
g875
stRp5309
ag1
(g5052
g5003
(dp5310
g58
g891
sg583
g885
stRp5311
ag1
(g5052
g5003
(dp5312
g58
g901
sg583
g895
stRp5313
ag1
(g5052
g5003
(dp5314
g58
g911
sg583
g905
stRp5315
ag1
(g5052
g5003
(dp5316
g58
g921
sg583
g915
stRp5317
ag1
(g5052
g5003
(dp5318
g58
g931
sg583
g925
stRp5319
ag1
(g5052
g5003
(dp5320
g58
g941
sg583
g935
stRp5321
ag1
(g5052
g5003
(dp5322
g58
g951
sg583
g945
stRp5323
ag1
(g5052
g5003
(dp5324
g58
g961
sg583
g955
stRp5325
ag1
(g5052
g5003
(dp5326
g58
g971
sg583
g965
stRp5327
ag1
(g5052
g5003
(dp5328
g58
g981
sg583
g975
stRp5329
ag1
(g5052
g5003
(dp5330
g58
g991
sg583
g985
stRp5331
ag1
(g5052
g5003
(dp5332
g58
g1001
sg583
g995
stRp5333
ag1
(g5052
g5003
(dp5334
g58
g1011
sg583
g1005
stRp5335
ag1
(g5052
g5003
(dp5336
g58
g1021
sg583
g1015
stRp5337
ag1
(g5052
g5003
(dp5338
g58
g1031
sg583
g1025
stRp5339
ag1
(g5052
g5003
(dp5340
g58
g1041
sg583
g1035
stRp5341
ag1
(g5052
g5003
(dp5342
g58
g1051
sg583
g1045
stRp5343
ag1
(g5052
g5003
(dp5344
g58
g1061
sg583
g1055
stRp5345
ag1
(g5052
g5003
(dp5346
g58
g1071
sg583
g1065
stRp5347
ag1
(g5052
g5003
(dp5348
g58
g1081
sg583
g1075
stRp5349
ag1
(g5052
g5003
(dp5350
g58
g1091
sg583
g1085
stRp5351
ag1
(g5052
g5003
(dp5352
g58
g1101
sg583
g1095
stRp5353
ag1
(g5052
g5003
(dp5354
g58
g1111
sg583
g1105
stRp5355
ag1
(g5052
g5003
(dp5356
g58
g1121
sg583
g1115
stRp5357
ag1
(g5052
g5003
(dp5358
g58
g1131
sg583
g1125
stRp5359
ag1
(g5052
g5003
(dp5360
g58
g1141
sg583
g1135
stRp5361
ag1
(g5052
g5003
(dp5362
g58
g1151
sg583
g1145
stRp5363
ag1
(g5052
g5003
(dp5364
g58
g1161
sg583
g1155
stRp5365
ag1
(g5052
g5003
(dp5366
g58
g1171
sg583
g1165
stRp5367
ag1
(g5052
g5003
(dp5368
g58
g1181
sg583
g1175
stRp5369
ag1
(g5052
g5003
(dp5370
g58
g1191
sg583
g1185
stRp5371
ag1
(g5052
g5003
(dp5372
g58
g1201
sg583
g1195
stRp5373
ag1
(g5052
g5003
(dp5374
g58
g1211
sg583
g1205
stRp5375
ag1
(g5052
g5003
(dp5376
g58
g1221
sg583
g1215
stRp5377
ag1
(g5052
g5003
(dp5378
g58
g1231
sg583
g1225
stRp5379
ag1
(g5052
g5003
(dp5380
g58
g1241
sg583
g1235
stRp5381
ag1
(g5052
g5003
(dp5382
g58
g1251
sg583
g1245
stRp5383
ag1
(g5052
g5003
(dp5384
g58
g1261
sg583
g1255
stRp5385
ag1
(g5052
g5003
(dp5386
g58
g1271
sg583
g1265
stRp5387
ag1
(g5052
g5003
(dp5388
g58
g1281
sg583
g1275
stRp5389
ag1
(g5052
g5003
(dp5390
g58
g1291
sg583
g1285
stRp5391
ag1
(g5052
g5003
(dp5392
g58
g1301
sg583
g1295
stRp5393
ag1
(g5052
g5003
(dp5394
g58
g1311
sg583
g1305
stRp5395
ag1
(g5052
g5003
(dp5396
g58
g1321
sg583
g1315
stRp5397
ag1
(g5052
g5003
(dp5398
g58
g1331
sg583
g1325
stRp5399
ag1
(g5052
g5003
(dp5400
g58
g1341
sg583
g1335
stRp5401
ag1
(g5052
g5003
(dp5402
g58
g1351
sg583
g1345
stRp5403
ag1
(g5052
g5003
(dp5404
g58
g1361
sg583
g1355
stRp5405
ag1
(g5052
g5003
(dp5406
g58
g1371
sg583
g1365
stRp5407
ag1
(g5052
g5003
(dp5408
g58
g1381
sg583
g1375
stRp5409
ag1
(g5052
g5003
(dp5410
g58
g1391
sg583
g1385
stRp5411
ag1
(g5052
g5003
(dp5412
g58
g1401
sg583
g1395
stRp5413
ag1
(g5052
g5003
(dp5414
g58
g1411
sg583
g1405
stRp5415
ag1
(g5052
g5003
(dp5416
g58
g1421
sg583
g1415
stRp5417
ag1
(g5052
g5003
(dp5418
g58
g1431
sg583
g1425
stRp5419
ag1
(g5052
g5003
(dp5420
g58
g1441
sg583
g1435
stRp5421
ag1
(g5052
g5003
(dp5422
g58
g1451
sg583
g1445
stRp5423
ag1
(g5052
g5003
(dp5424
g58
g1461
sg583
g1455
stRp5425
ag1
(g5052
g5003
(dp5426
g58
g1471
sg583
g1465
stRp5427
ag1
(g5052
g5003
(dp5428
g58
g1481
sg583
g1475
stRp5429
ag1
(g5052
g5003
(dp5430
g58
g1491
sg583
g1485
stRp5431
ag1
(g5052
g5003
(dp5432
g58
g1501
sg583
g1495
stRp5433
ag1
(g5052
g5003
(dp5434
g58
g1511
sg583
g1505
stRp5435
ag1
(g5052
g5003
(dp5436
g58
g1521
sg583
g1515
stRp5437
ag1
(g5052
g5003
(dp5438
g58
g1531
sg583
g1525
stRp5439
ag1
(g5052
g5003
(dp5440
g58
g1541
sg583
g1535
stRp5441
ag1
(g5052
g5003
(dp5442
g58
g1551
sg583
g1545
stRp5443
ag1
(g5052
g5003
(dp5444
g58
g1561
sg583
g1555
stRp5445
ag1
(g5052
g5003
(dp5446
g58
g1571
sg583
g1565
stRp5447
ag1
(g5052
g5003
(dp5448
g58
g1581
sg583
g1575
stRp5449
ag1
(g5052
g5003
(dp5450
g58
g1591
sg583
g1585
stRp5451
ag1
(g5052
g5003
(dp5452
g58
g1601
sg583
g1595
stRp5453
ag1
(g5052
g5003
(dp5454
g58
g1611
sg583
g1605
stRp5455
ag1
(g5052
g5003
(dp5456
g58
g1621
sg583
g1615
stRp5457
ag1
(g5052
g5003
(dp5458
g58
g1631
sg583
g1625
stRp5459
ag1
(g5052
g5003
(dp5460
g58
g1641
sg583
g1635
stRp5461
ag1
(g5052
g5003
(dp5462
g58
g1651
sg583
g1645
stRp5463
ag1
(g5052
g5003
(dp5464
g58
g1661
sg583
g1655
stRp5465
ag1
(g5052
g5003
(dp5466
g58
g1671
sg583
g1665
stRp5467
ag1
(g5052
g5003
(dp5468
g58
g1681
sg583
g1675
stRp5469
ag1
(g5052
g5003
(dp5470
g58
g1691
sg583
g1685
stRp5471
ag1
(g5052
g5003
(dp5472
g58
g1701
sg583
g1695
stRp5473
ag1
(g5052
g5003
(dp5474
g58
g1711
sg583
g1705
stRp5475
ag1
(g5052
g5003
(dp5476
g58
g1721
sg583
g1715
stRp5477
ag1
(g5052
g5003
(dp5478
g58
g1731
sg583
g1725
stRp5479
ag1
(g5052
g5003
(dp5480
g58
g1741
sg583
g1735
stRp5481
ag1
(g5052
g5003
(dp5482
g58
g1751
sg583
g1745
stRp5483
ag1
(g5052
g5003
(dp5484
g58
g1761
sg583
g1755
stRp5485
ag1
(g5052
g5003
(dp5486
g58
g1771
sg583
g1765
stRp5487
ag1
(g5052
g5003
(dp5488
g58
g1781
sg583
g1775
stRp5489
ag1
(g5052
g5003
(dp5490
g58
g1791
sg583
g1785
stRp5491
ag1
(g5052
g5003
(dp5492
g58
g1801
sg583
g1795
stRp5493
ag1
(g5052
g5003
(dp5494
g58
g1811
sg583
g1805
stRp5495
ag1
(g5052
g5003
(dp5496
g58
g1821
sg583
g1815
stRp5497
ag1
(g5052
g5003
(dp5498
g58
g1831
sg583
g1825
stRp5499
ag1
(g5052
g5003
(dp5500
g58
g1841
sg583
g1835
stRp5501
ag1
(g5052
g5003
(dp5502
g58
g1851
sg583
g1845
stRp5503
ag1
(g5052
g5003
(dp5504
g58
g1861
sg583
g1855
stRp5505
ag1
(g5052
g5003
(dp5506
g58
g1871
sg583
g1865
stRp5507
ag1
(g5052
g5003
(dp5508
g58
g1881
sg583
g1875
stRp5509
ag1
(g5052
g5003
(dp5510
g58
g1891
sg583
g1885
stRp5511
ag1
(g5052
g5003
(dp5512
g58
g1901
sg583
g1895
stRp5513
ag1
(g5052
g5003
(dp5514
g58
g1911
sg583
g1905
stRp5515
ag1
(g5052
g5003
(dp5516
g58
g1921
sg583
g1915
stRp5517
ag1
(g5052
g5003
(dp5518
g58
g1931
sg583
g1925
stRp5519
ag1
(g5052
g5003
(dp5520
g58
g1941
sg583
g1935
stRp5521
ag1
(g5052
g5003
(dp5522
g58
g1951
sg583
g1945
stRp5523
ag1
(g5052
g5003
(dp5524
g58
g1961
sg583
g1955
stRp5525
ag1
(g5052
g5003
(dp5526
g58
g1971
sg583
g1965
stRp5527
ag1
(g5052
g5003
(dp5528
g58
g1981
sg583
g1975
stRp5529
ag1
(g5052
g5003
(dp5530
g58
g1991
sg583
g1985
stRp5531
ag1
(g5052
g5003
(dp5532
g58
g2001
sg583
g1995
stRp5533
ag1
(g5052
g5003
(dp5534
g58
g2011
sg583
g2005
stRp5535
ag1
(g5052
g5003
(dp5536
g58
g2021
sg583
g2015
stRp5537
ag1
(g5052
g5003
(dp5538
g58
g2031
sg583
g2025
stRp5539
ag1
(g5052
g5003
(dp5540
g58
g2041
sg583
g2035
stRp5541
ag1
(g5052
g5003
(dp5542
g58
g2051
sg583
g2045
stRp5543
ag1
(g5052
g5003
(dp5544
g58
g2061
sg583
g2055
stRp5545
ag1
(g5052
g5003
(dp5546
g58
g2071
sg583
g2065
stRp5547
ag1
(g5052
g5003
(dp5548
g58
g2081
sg583
g2075
stRp5549
ag1
(g5052
g5003
(dp5550
g58
g2091
sg583
g2085
stRp5551
ag1
(g5052
g5003
(dp5552
g58
g2101
sg583
g2095
stRp5553
ag1
(g5052
g5003
(dp5554
g58
g2111
sg583
g2105
stRp5555
ag1
(g5052
g5003
(dp5556
g58
g2121
sg583
g2115
stRp5557
ag1
(g5052
g5003
(dp5558
g58
g2131
sg583
g2125
stRp5559
ag1
(g5052
g5003
(dp5560
g58
g2141
sg583
g2135
stRp5561
ag1
(g5052
g5003
(dp5562
g58
g2151
sg583
g2145
stRp5563
ag1
(g5052
g5003
(dp5564
g58
g2161
sg583
g2155
stRp5565
ag1
(g5052
g5003
(dp5566
g58
g2171
sg583
g2165
stRp5567
ag1
(g5052
g5003
(dp5568
g58
g2181
sg583
g2175
stRp5569
ag1
(g5052
g5003
(dp5570
g58
g2191
sg583
g2185
stRp5571
ag1
(g5052
g5003
(dp5572
g58
g2201
sg583
g2195
stRp5573
ag1
(g5052
g5003
(dp5574
g58
g2211
sg583
g2205
stRp5575
ag1
(g5052
g5003
(dp5576
g58
g2221
sg583
g2215
stRp5577
ag1
(g5052
g5003
(dp5578
g58
g2231
sg583
g2225
stRp5579
ag1
(g5052
g5003
(dp5580
g58
g2241
sg583
g2235
stRp5581
ag1
(g5052
g5003
(dp5582
g58
g2251
sg583
g2245
stRp5583
ag1
(g5052
g5003
(dp5584
g58
g2261
sg583
g2255
stRp5585
ag1
(g5052
g5003
(dp5586
g58
g2271
sg583
g2265
stRp5587
ag1
(g5052
g5003
(dp5588
g58
g2281
sg583
g2275
stRp5589
ag1
(g5052
g5003
(dp5590
g58
g2291
sg583
g2285
stRp5591
ag1
(g5052
g5003
(dp5592
g58
g2301
sg583
g2295
stRp5593
ag1
(g5052
g5003
(dp5594
g58
g2311
sg583
g2305
stRp5595
ag1
(g5052
g5003
(dp5596
g58
g2321
sg583
g2315
stRp5597
ag1
(g5052
g5003
(dp5598
g58
g2331
sg583
g2325
stRp5599
ag1
(g5052
g5003
(dp5600
g58
g2341
sg583
g2335
stRp5601
ag1
(g5052
g5003
(dp5602
g58
g2351
sg583
g2345
stRp5603
ag1
(g5052
g5003
(dp5604
g58
g2361
sg583
g2355
stRp5605
ag1
(g5052
g5003
(dp5606
g58
g2371
sg583
g2365
stRp5607
ag1
(g5052
g5003
(dp5608
g58
g2381
sg583
g2375
stRp5609
ag1
(g5052
g5003
(dp5610
g58
g2391
sg583
g2385
stRp5611
ag1
(g5052
g5003
(dp5612
g58
g2401
sg583
g2395
stRp5613
ag1
(g5052
g5003
(dp5614
g58
g2411
sg583
g2405
stRp5615
ag1
(g5052
g5003
(dp5616
g58
g2421
sg583
g2415
stRp5617
ag1
(g5052
g5003
(dp5618
g58
g2431
sg583
g2425
stRp5619
ag1
(g5052
g5003
(dp5620
g58
g2441
sg583
g2435
stRp5621
ag1
(g5052
g5003
(dp5622
g58
g2451
sg583
g2445
stRp5623
ag1
(g5052
g5003
(dp5624
g58
g2461
sg583
g2455
stRp5625
ag1
(g5052
g5003
(dp5626
g58
g2471
sg583
g2465
stRp5627
ag1
(g5052
g5003
(dp5628
g58
g2481
sg583
g2475
stRp5629
ag1
(g5052
g5003
(dp5630
g58
g2491
sg583
g2485
stRp5631
ag1
(g5052
g5003
(dp5632
g58
g2501
sg583
g2495
stRp5633
ag1
(g5052
g5003
(dp5634
g58
g2511
sg583
g2505
stRp5635
ag1
(g5052
g5003
(dp5636
g58
g2521
sg583
g2515
stRp5637
ag1
(g5052
g5003
(dp5638
g58
g2531
sg583
g2525
stRp5639
ag1
(g5052
g5003
(dp5640
g58
g2541
sg583
g2535
stRp5641
ag1
(g5052
g5003
(dp5642
g58
g2551
sg583
g2545
stRp5643
ag1
(g5052
g5003
(dp5644
g58
g2561
sg583
g2555
stRp5645
ag1
(g5052
g5003
(dp5646
g58
g2571
sg583
g2565
stRp5647
ag1
(g5052
g5003
(dp5648
g58
g2581
sg583
g2575
stRp5649
ag1
(g5052
g5003
(dp5650
g58
g2591
sg583
g2585
stRp5651
ag1
(g5052
g5003
(dp5652
g58
g2601
sg583
g2595
stRp5653
ag1
(g5052
g5003
(dp5654
g58
g2611
sg583
g2605
stRp5655
ag1
(g5052
g5003
(dp5656
g58
g2621
sg583
g2615
stRp5657
ag1
(g5052
g5003
(dp5658
g58
g2631
sg583
g2625
stRp5659
ag1
(g5052
g5003
(dp5660
g58
g2641
sg583
g2635
stRp5661
ag1
(g5052
g5003
(dp5662
g58
g2651
sg583
g2645
stRp5663
ag1
(g5052
g5003
(dp5664
g58
g2661
sg583
g2655
stRp5665
ag1
(g5052
g5003
(dp5666
g58
g2671
sg583
g2665
stRp5667
ag1
(g5052
g5003
(dp5668
g58
g2681
sg583
g2675
stRp5669
ag1
(g5052
g5003
(dp5670
g58
g2691
sg583
g2685
stRp5671
ag1
(g5052
g5003
(dp5672
g58
g2701
sg583
g2695
stRp5673
ag1
(g5052
g5003
(dp5674
g58
g2711
sg583
g2705
stRp5675
ag1
(g5052
g5003
(dp5676
g58
g2721
sg583
g2715
stRp5677
ag1
(g5052
g5003
(dp5678
g58
g2731
sg583
g2725
stRp5679
ag1
(g5052
g5003
(dp5680
g58
g2741
sg583
g2735
stRp5681
ag1
(g5052
g5003
(dp5682
g58
g2751
sg583
g2745
stRp5683
ag1
(g5052
g5003
(dp5684
g58
g2761
sg583
g2755
stRp5685
ag1
(g5052
g5003
(dp5686
g58
g2771
sg583
g2765
stRp5687
ag1
(g5052
g5003
(dp5688
g58
g2781
sg583
g2775
stRp5689
asg5221
Nsg5222
g2777
sg5223
I220
sg5224
I0
sg5225
I220
sg5226
I01
sbag1
(g4990
g3
NtRp5690
(dp5691
g4993
V\u000a\u000a\u000a\u000a\u000a#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5692
sg4995
(lp5693
sg4997
I140485067032016
sg10
S'trials2'
p5694
sg6
g4999
sg5000
I1
sg36
I01
sg37
g38
sg5001
g1
(g5002
g5003
(dp5695
g30
g5016
(g5017
g5006
g5018
S'b'
tRp5696
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5015
g5016
(g5017
g5006
g5018
S'b'
tRp5697
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5005
(g5006
(I0
tS'b'
tRp5698
(I1
(I220
I1
tg5008
I00
(lp5699
g2793
ag2804
ag2814
ag2824
ag2834
ag2844
ag2854
ag2864
ag2874
ag2884
ag2894
ag2904
ag2914
ag2924
ag2934
ag2944
ag2954
ag2964
ag2974
ag2984
ag2994
ag3004
ag3014
ag3024
ag3034
ag3044
ag3054
ag3064
ag3074
ag3084
ag3094
ag3104
ag3114
ag3124
ag3134
ag3144
ag3154
ag3164
ag3174
ag3184
ag3194
ag3204
ag3214
ag3224
ag3234
ag3244
ag3254
ag3264
ag3274
ag3284
ag3294
ag3304
ag3314
ag3324
ag3334
ag3344
ag3354
ag3364
ag3374
ag3384
ag3394
ag3404
ag3414
ag3424
ag3434
ag3444
ag3454
ag3464
ag3474
ag3484
ag3494
ag3504
ag3514
ag3524
ag3534
ag3544
ag3554
ag3564
ag3574
ag3584
ag3594
ag3604
ag3614
ag3624
ag3634
ag3644
ag3654
ag3664
ag3674
ag3684
ag3694
ag3704
ag3714
ag3724
ag3734
ag3744
ag3754
ag3764
ag3774
ag3784
ag3794
ag3804
ag3814
ag3824
ag3834
ag3844
ag3854
ag3864
ag3874
ag3884
ag3894
ag3904
ag3914
ag3924
ag3934
ag3944
ag3954
ag3964
ag3974
ag3984
ag3994
ag4004
ag4014
ag4024
ag4034
ag4044
ag4054
ag4064
ag4074
ag4084
ag4094
ag4104
ag4114
ag4124
ag4134
ag4144
ag4154
ag4164
ag4174
ag4184
ag4194
ag4204
ag4214
ag4224
ag4234
ag4244
ag4254
ag4264
ag4274
ag4284
ag4294
ag4304
ag4314
ag4324
ag4334
ag4344
ag4354
ag4364
ag4374
ag4384
ag4394
ag4404
ag4414
ag4424
ag4434
ag4444
ag4454
ag4464
ag4474
ag4484
ag4494
ag4504
ag4514
ag4524
ag4534
ag4544
ag4554
ag4564
ag4574
ag4584
ag4594
ag4604
ag4614
ag4624
ag4634
ag4644
ag4654
ag4664
ag4674
ag4684
ag4694
ag4704
ag4714
ag4724
ag4734
ag4744
ag4754
ag4764
ag4774
ag4784
ag4794
ag4804
ag4814
ag4824
ag4834
ag4844
ag4854
ag4864
ag4874
ag4884
ag4894
ag4904
ag4914
ag4924
ag4934
ag4944
ag4954
ag4964
ag4974
ag4984
atbsg29
g5005
(g5006
(I0
tS'b'
tRp5700
(I1
(I220
I1
tg5008
I00
(lp5701
g2794
ag2805
ag2815
ag2825
ag2835
ag2845
ag2855
ag2865
ag2875
ag2885
ag2895
ag2905
ag2915
ag2925
ag2935
ag2945
ag2955
ag2965
ag2975
ag2985
ag2995
ag3005
ag3015
ag3025
ag3035
ag3045
ag3055
ag3065
ag3075
ag3085
ag3095
ag3105
ag3115
ag3125
ag3135
ag3145
ag3155
ag3165
ag3175
ag3185
ag3195
ag3205
ag3215
ag3225
ag3235
ag3245
ag3255
ag3265
ag3275
ag3285
ag3295
ag3305
ag3315
ag3325
ag3335
ag3345
ag3355
ag3365
ag3375
ag3385
ag3395
ag3405
ag3415
ag3425
ag3435
ag3445
ag3455
ag3465
ag3475
ag3485
ag3495
ag3505
ag3515
ag3525
ag3535
ag3545
ag3555
ag3565
ag3575
ag3585
ag3595
ag3605
ag3615
ag3625
ag3635
ag3645
ag3655
ag3665
ag3675
ag3685
ag3695
ag3705
ag3715
ag3725
ag3735
ag3745
ag3755
ag3765
ag3775
ag3785
ag3795
ag3805
ag3815
ag3825
ag3835
ag3845
ag3855
ag3865
ag3875
ag3885
ag3895
ag3905
ag3915
ag3925
ag3935
ag3945
ag3955
ag3965
ag3975
ag3985
ag3995
ag4005
ag4015
ag4025
ag4035
ag4045
ag4055
ag4065
ag4075
ag4085
ag4095
ag4105
ag4115
ag4125
ag4135
ag4145
ag4155
ag4165
ag4175
ag4185
ag4195
ag4205
ag4215
ag4225
ag4235
ag4245
ag4255
ag4265
ag4275
ag4285
ag4295
ag4305
ag4315
ag4325
ag4335
ag4345
ag4355
ag4365
ag4375
ag4385
ag4395
ag4405
ag4415
ag4425
ag4435
ag4445
ag4455
ag4465
ag4475
ag4485
ag4495
ag4505
ag4515
ag4525
ag4535
ag4545
ag4555
ag4565
ag4575
ag4585
ag4595
ag4605
ag4615
ag4625
ag4635
ag4645
ag4655
ag4665
ag4675
ag4685
ag4695
ag4705
ag4715
ag4725
ag4735
ag4745
ag4755
ag4765
ag4775
ag4785
ag4795
ag4805
ag4815
ag4825
ag4835
ag4845
ag4855
ag4865
ag4875
ag4885
ag4895
ag4905
ag4915
ag4925
ag4935
ag4945
ag4955
ag4965
ag4975
ag4985
atbsg31
g5016
(g5017
g5006
g5018
S'b'
tRp5702
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5016
(g5017
g5006
g5018
S'b'
tRp5703
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5016
(g5017
g5006
g5018
S'b'
tRp5704
(I1
(I220
I1
tg5020
I00
S'\xd0\xc8\x1dA|sk?\x9e%\x98?\xe6\'\xa7?\x8fZ/A\x9aF\xa9?.\xb4\xb4@\x94bg?\xb2\'\x8d?\x04\xebD?\xf8\xa5\x9e?D\xaa@?\xa4\x11\x89?z\xca\xc2?\x9e\x809@\x18\xf1QAz0\xc5?*8\xb6?\xea\xa9\x9dA~V\xa9?\xd7\xbdy@\x1c\xd3\x95?v\xc3=@j\xc8\x86?k\x1c!A(\n$@\xc0\xcb\xbc?\x14Y\x8f?\xf8\x91k?\xde\xea\x93?\x1c\xbck?.\x01^@\xdcE\xcc@\xb1\xcf\xd3@\xf1\xb9\x10@W\xb2\x98AZ[\x9c?<v|?H\xbf\x88@2\xac\xa6@\xaa_\xdc@\xedBOAV[\xc7?t\xe5|?\xde\x18\x16@\x87\xae\xc4A\x94\x89\x8f?\xe8\xe5TA\x8cb\xe5?\xd3hG@\x19r\r@\xa4.\x8b?\x8dh\x12Bo\x1e\xb3Al\xf4\x88?\x00\x8a\xcd?\xbais@\x10\x92\x8f?\xf4\x1c\xa7?\xbej\x9a@\x8c1\xb6?\x02\xb9\xa0?\x1e\x8cu@\x18R\x11AF}\x9b@\x90\xf6o?\xd4\x9c\xbc?\xb9\xf4\x8bA\x10\xed}A\xc1\x7f\x8eA6\xb3\xa2?\xb4\x04\xa5?d\x95\xa0?|lZ?\xa0\xd19A\xab\x08}@\xfd\xdaj@t_\x84@J{\r@\xc0\x8b^?1a\x19B\x1e\xfe\xfc?\xb6\xf1\xcf?\xd43\xbc@~\xf5\xa4?\xab\x96\x1c@\x08\x8f\x82?\x10?\x8b?\xd4\xf6\x13A^\x96\x82?m\x1eo@\xe1\xc8\x14Au\xa5(A\xa6\xb9\x9cA0\x88\xa3@\xb6\xea\x8b@b\x8b\x9fA\x0e\x13\xdaB\x9c\xfe\xc4?\x08\x02\x8d@:\xb3\x10@\x18A(@\xcd\xa0\x0eA\x02\xb5\x02@6\xca\xc2?g_)@\xde\x0e\x89?\xdf%\xb4@TvZ?J\xc2\x8a@`\xe5?@r\x1d\x89?X\xab\x82?\xcf\xe8\x1dA\xde\xd1\xb2AK \x80@\x00\x8f\xbc?\xd8\x95^?\xd2\x1b\t@\x91E\tA\xde\xe3\x84?\x0c\xc7\x02@}D\x92A\xf6=\x9a?\xf2\xfb\xb8@\xee@)@\xebs\r@a\x1b\t@\x84\x84\x1c@\x9b\x1d%@>\xe6yA\x1c\x9fTA\xfb\xe5\xfa@\xfe\x9e\xa0?\x80\xd6\xfa?4\x13\xd2?\xdc8M?Py\xb1@\xa8\xa5Q?\xd2\x80\x8cA_B6@6\xd0\xbe?$\xd3\xcd?~q9@\xd8\xa0\xad?p\x18x?\xb4\xac\xcf?L\xa8\xda?\xa6\n\x96?4\xed\x86?b\xce\x93?\x16\xd7\xa0?\x8ek\x8d?0/-A&&\xca@u\x86\xf4@\xcc\x0b\x96?tV\xad?vR(@\xff\xce\x11@,S\xb8?\x85x9@B\xb8\x82?\r\xfdP@\xbek\x9c?~\xc0\xa6@,_\xab?\xact\x91?\x06\xc5\xa7@&Q\xa0@\xce\xb0\x00A M\rA\x92-\x89?\x80\xf8\x95?\xf4\xaa\x84?\x1b\xc6\xb5@\x84z\xba?\xa0\xfe\xb1?$\xddb?\x89\x80\r@\xec\x7f<?\\\x8a3?\xdc\xc4Q?\x00\xbe\x91?\xa8\x1b~@\x04\xb6o?\xae~\xd8?\xe2\xb2\xc0?\x80\x0cI?G\xac\xb4@BX\x92@Nt\x8c@\x1d\x90\x1c@\xe4f\xba?\x94i\x80?\x88-\xc5?e\x1c%@\xd0n|?\xdc\xec\xc0A~s\xab?`\xb3\x82?$TI?\xc0+"?\xbe\x11\x87?\xb0|\x80?\x86\x95\x9e?\x9e&\x9e@\xac\xef|?\xfa\xb3\x03@\xd6\xaf\xda?HP\n@X\xe9b?\xc0\xb2\xda?\xfch\x9c?\x86\x19\xd2?U\xa0\xa2A\xb4Rt?\x10-V?`\xdbb?5@\x19@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5031
g5016
(g5017
g5006
g5018
S'b'
tRp5705
(I1
(I220
I1
tg5020
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5706
(dp5707
g5035
(dp5708
g31
I01
sg5015
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5031
I01
ssg5037
g5690
sg5038
(lp5709
g5015
ag5031
ag28
ag29
ag30
ag31
ag32
ag33
asg5040
(lp5710
I220
aI1
asbsg5042
g5247
sg5044
g5005
(g5006
(I0
tS'b'
tRp5711
(I1
(I220
I1
tg586
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5047
I01
sg5048
I1
sg5049
I-1
sg5050
(lp5712
g1
(g5052
g5003
(dp5713
g2795
g2796
sg2791
g2792
stRp5714
ag1
(g5052
g5003
(dp5715
g2795
g2806
sg2791
g2803
stRp5716
ag1
(g5052
g5003
(dp5717
g2795
g2816
sg2791
g2813
stRp5718
ag1
(g5052
g5003
(dp5719
g2795
g2826
sg2791
g2823
stRp5720
ag1
(g5052
g5003
(dp5721
g2795
g2836
sg2791
g2833
stRp5722
ag1
(g5052
g5003
(dp5723
g2795
g2846
sg2791
g2843
stRp5724
ag1
(g5052
g5003
(dp5725
g2795
g2856
sg2791
g2853
stRp5726
ag1
(g5052
g5003
(dp5727
g2795
g2866
sg2791
g2863
stRp5728
ag1
(g5052
g5003
(dp5729
g2795
g2876
sg2791
g2873
stRp5730
ag1
(g5052
g5003
(dp5731
g2795
g2886
sg2791
g2883
stRp5732
ag1
(g5052
g5003
(dp5733
g2795
g2896
sg2791
g2893
stRp5734
ag1
(g5052
g5003
(dp5735
g2795
g2906
sg2791
g2903
stRp5736
ag1
(g5052
g5003
(dp5737
g2795
g2916
sg2791
g2913
stRp5738
ag1
(g5052
g5003
(dp5739
g2795
g2926
sg2791
g2923
stRp5740
ag1
(g5052
g5003
(dp5741
g2795
g2936
sg2791
g2933
stRp5742
ag1
(g5052
g5003
(dp5743
g2795
g2946
sg2791
g2943
stRp5744
ag1
(g5052
g5003
(dp5745
g2795
g2956
sg2791
g2953
stRp5746
ag1
(g5052
g5003
(dp5747
g2795
g2966
sg2791
g2963
stRp5748
ag1
(g5052
g5003
(dp5749
g2795
g2976
sg2791
g2973
stRp5750
ag1
(g5052
g5003
(dp5751
g2795
g2986
sg2791
g2983
stRp5752
ag1
(g5052
g5003
(dp5753
g2795
g2996
sg2791
g2993
stRp5754
ag1
(g5052
g5003
(dp5755
g2795
g3006
sg2791
g3003
stRp5756
ag1
(g5052
g5003
(dp5757
g2795
g3016
sg2791
g3013
stRp5758
ag1
(g5052
g5003
(dp5759
g2795
g3026
sg2791
g3023
stRp5760
ag1
(g5052
g5003
(dp5761
g2795
g3036
sg2791
g3033
stRp5762
ag1
(g5052
g5003
(dp5763
g2795
g3046
sg2791
g3043
stRp5764
ag1
(g5052
g5003
(dp5765
g2795
g3056
sg2791
g3053
stRp5766
ag1
(g5052
g5003
(dp5767
g2795
g3066
sg2791
g3063
stRp5768
ag1
(g5052
g5003
(dp5769
g2795
g3076
sg2791
g3073
stRp5770
ag1
(g5052
g5003
(dp5771
g2795
g3086
sg2791
g3083
stRp5772
ag1
(g5052
g5003
(dp5773
g2795
g3096
sg2791
g3093
stRp5774
ag1
(g5052
g5003
(dp5775
g2795
g3106
sg2791
g3103
stRp5776
ag1
(g5052
g5003
(dp5777
g2795
g3116
sg2791
g3113
stRp5778
ag1
(g5052
g5003
(dp5779
g2795
g3126
sg2791
g3123
stRp5780
ag1
(g5052
g5003
(dp5781
g2795
g3136
sg2791
g3133
stRp5782
ag1
(g5052
g5003
(dp5783
g2795
g3146
sg2791
g3143
stRp5784
ag1
(g5052
g5003
(dp5785
g2795
g3156
sg2791
g3153
stRp5786
ag1
(g5052
g5003
(dp5787
g2795
g3166
sg2791
g3163
stRp5788
ag1
(g5052
g5003
(dp5789
g2795
g3176
sg2791
g3173
stRp5790
ag1
(g5052
g5003
(dp5791
g2795
g3186
sg2791
g3183
stRp5792
ag1
(g5052
g5003
(dp5793
g2795
g3196
sg2791
g3193
stRp5794
ag1
(g5052
g5003
(dp5795
g2795
g3206
sg2791
g3203
stRp5796
ag1
(g5052
g5003
(dp5797
g2795
g3216
sg2791
g3213
stRp5798
ag1
(g5052
g5003
(dp5799
g2795
g3226
sg2791
g3223
stRp5800
ag1
(g5052
g5003
(dp5801
g2795
g3236
sg2791
g3233
stRp5802
ag1
(g5052
g5003
(dp5803
g2795
g3246
sg2791
g3243
stRp5804
ag1
(g5052
g5003
(dp5805
g2795
g3256
sg2791
g3253
stRp5806
ag1
(g5052
g5003
(dp5807
g2795
g3266
sg2791
g3263
stRp5808
ag1
(g5052
g5003
(dp5809
g2795
g3276
sg2791
g3273
stRp5810
ag1
(g5052
g5003
(dp5811
g2795
g3286
sg2791
g3283
stRp5812
ag1
(g5052
g5003
(dp5813
g2795
g3296
sg2791
g3293
stRp5814
ag1
(g5052
g5003
(dp5815
g2795
g3306
sg2791
g3303
stRp5816
ag1
(g5052
g5003
(dp5817
g2795
g3316
sg2791
g3313
stRp5818
ag1
(g5052
g5003
(dp5819
g2795
g3326
sg2791
g3323
stRp5820
ag1
(g5052
g5003
(dp5821
g2795
g3336
sg2791
g3333
stRp5822
ag1
(g5052
g5003
(dp5823
g2795
g3346
sg2791
g3343
stRp5824
ag1
(g5052
g5003
(dp5825
g2795
g3356
sg2791
g3353
stRp5826
ag1
(g5052
g5003
(dp5827
g2795
g3366
sg2791
g3363
stRp5828
ag1
(g5052
g5003
(dp5829
g2795
g3376
sg2791
g3373
stRp5830
ag1
(g5052
g5003
(dp5831
g2795
g3386
sg2791
g3383
stRp5832
ag1
(g5052
g5003
(dp5833
g2795
g3396
sg2791
g3393
stRp5834
ag1
(g5052
g5003
(dp5835
g2795
g3406
sg2791
g3403
stRp5836
ag1
(g5052
g5003
(dp5837
g2795
g3416
sg2791
g3413
stRp5838
ag1
(g5052
g5003
(dp5839
g2795
g3426
sg2791
g3423
stRp5840
ag1
(g5052
g5003
(dp5841
g2795
g3436
sg2791
g3433
stRp5842
ag1
(g5052
g5003
(dp5843
g2795
g3446
sg2791
g3443
stRp5844
ag1
(g5052
g5003
(dp5845
g2795
g3456
sg2791
g3453
stRp5846
ag1
(g5052
g5003
(dp5847
g2795
g3466
sg2791
g3463
stRp5848
ag1
(g5052
g5003
(dp5849
g2795
g3476
sg2791
g3473
stRp5850
ag1
(g5052
g5003
(dp5851
g2795
g3486
sg2791
g3483
stRp5852
ag1
(g5052
g5003
(dp5853
g2795
g3496
sg2791
g3493
stRp5854
ag1
(g5052
g5003
(dp5855
g2795
g3506
sg2791
g3503
stRp5856
ag1
(g5052
g5003
(dp5857
g2795
g3516
sg2791
g3513
stRp5858
ag1
(g5052
g5003
(dp5859
g2795
g3526
sg2791
g3523
stRp5860
ag1
(g5052
g5003
(dp5861
g2795
g3536
sg2791
g3533
stRp5862
ag1
(g5052
g5003
(dp5863
g2795
g3546
sg2791
g3543
stRp5864
ag1
(g5052
g5003
(dp5865
g2795
g3556
sg2791
g3553
stRp5866
ag1
(g5052
g5003
(dp5867
g2795
g3566
sg2791
g3563
stRp5868
ag1
(g5052
g5003
(dp5869
g2795
g3576
sg2791
g3573
stRp5870
ag1
(g5052
g5003
(dp5871
g2795
g3586
sg2791
g3583
stRp5872
ag1
(g5052
g5003
(dp5873
g2795
g3596
sg2791
g3593
stRp5874
ag1
(g5052
g5003
(dp5875
g2795
g3606
sg2791
g3603
stRp5876
ag1
(g5052
g5003
(dp5877
g2795
g3616
sg2791
g3613
stRp5878
ag1
(g5052
g5003
(dp5879
g2795
g3626
sg2791
g3623
stRp5880
ag1
(g5052
g5003
(dp5881
g2795
g3636
sg2791
g3633
stRp5882
ag1
(g5052
g5003
(dp5883
g2795
g3646
sg2791
g3643
stRp5884
ag1
(g5052
g5003
(dp5885
g2795
g3656
sg2791
g3653
stRp5886
ag1
(g5052
g5003
(dp5887
g2795
g3666
sg2791
g3663
stRp5888
ag1
(g5052
g5003
(dp5889
g2795
g3676
sg2791
g3673
stRp5890
ag1
(g5052
g5003
(dp5891
g2795
g3686
sg2791
g3683
stRp5892
ag1
(g5052
g5003
(dp5893
g2795
g3696
sg2791
g3693
stRp5894
ag1
(g5052
g5003
(dp5895
g2795
g3706
sg2791
g3703
stRp5896
ag1
(g5052
g5003
(dp5897
g2795
g3716
sg2791
g3713
stRp5898
ag1
(g5052
g5003
(dp5899
g2795
g3726
sg2791
g3723
stRp5900
ag1
(g5052
g5003
(dp5901
g2795
g3736
sg2791
g3733
stRp5902
ag1
(g5052
g5003
(dp5903
g2795
g3746
sg2791
g3743
stRp5904
ag1
(g5052
g5003
(dp5905
g2795
g3756
sg2791
g3753
stRp5906
ag1
(g5052
g5003
(dp5907
g2795
g3766
sg2791
g3763
stRp5908
ag1
(g5052
g5003
(dp5909
g2795
g3776
sg2791
g3773
stRp5910
ag1
(g5052
g5003
(dp5911
g2795
g3786
sg2791
g3783
stRp5912
ag1
(g5052
g5003
(dp5913
g2795
g3796
sg2791
g3793
stRp5914
ag1
(g5052
g5003
(dp5915
g2795
g3806
sg2791
g3803
stRp5916
ag1
(g5052
g5003
(dp5917
g2795
g3816
sg2791
g3813
stRp5918
ag1
(g5052
g5003
(dp5919
g2795
g3826
sg2791
g3823
stRp5920
ag1
(g5052
g5003
(dp5921
g2795
g3836
sg2791
g3833
stRp5922
ag1
(g5052
g5003
(dp5923
g2795
g3846
sg2791
g3843
stRp5924
ag1
(g5052
g5003
(dp5925
g2795
g3856
sg2791
g3853
stRp5926
ag1
(g5052
g5003
(dp5927
g2795
g3866
sg2791
g3863
stRp5928
ag1
(g5052
g5003
(dp5929
g2795
g3876
sg2791
g3873
stRp5930
ag1
(g5052
g5003
(dp5931
g2795
g3886
sg2791
g3883
stRp5932
ag1
(g5052
g5003
(dp5933
g2795
g3896
sg2791
g3893
stRp5934
ag1
(g5052
g5003
(dp5935
g2795
g3906
sg2791
g3903
stRp5936
ag1
(g5052
g5003
(dp5937
g2795
g3916
sg2791
g3913
stRp5938
ag1
(g5052
g5003
(dp5939
g2795
g3926
sg2791
g3923
stRp5940
ag1
(g5052
g5003
(dp5941
g2795
g3936
sg2791
g3933
stRp5942
ag1
(g5052
g5003
(dp5943
g2795
g3946
sg2791
g3943
stRp5944
ag1
(g5052
g5003
(dp5945
g2795
g3956
sg2791
g3953
stRp5946
ag1
(g5052
g5003
(dp5947
g2795
g3966
sg2791
g3963
stRp5948
ag1
(g5052
g5003
(dp5949
g2795
g3976
sg2791
g3973
stRp5950
ag1
(g5052
g5003
(dp5951
g2795
g3986
sg2791
g3983
stRp5952
ag1
(g5052
g5003
(dp5953
g2795
g3996
sg2791
g3993
stRp5954
ag1
(g5052
g5003
(dp5955
g2795
g4006
sg2791
g4003
stRp5956
ag1
(g5052
g5003
(dp5957
g2795
g4016
sg2791
g4013
stRp5958
ag1
(g5052
g5003
(dp5959
g2795
g4026
sg2791
g4023
stRp5960
ag1
(g5052
g5003
(dp5961
g2795
g4036
sg2791
g4033
stRp5962
ag1
(g5052
g5003
(dp5963
g2795
g4046
sg2791
g4043
stRp5964
ag1
(g5052
g5003
(dp5965
g2795
g4056
sg2791
g4053
stRp5966
ag1
(g5052
g5003
(dp5967
g2795
g4066
sg2791
g4063
stRp5968
ag1
(g5052
g5003
(dp5969
g2795
g4076
sg2791
g4073
stRp5970
ag1
(g5052
g5003
(dp5971
g2795
g4086
sg2791
g4083
stRp5972
ag1
(g5052
g5003
(dp5973
g2795
g4096
sg2791
g4093
stRp5974
ag1
(g5052
g5003
(dp5975
g2795
g4106
sg2791
g4103
stRp5976
ag1
(g5052
g5003
(dp5977
g2795
g4116
sg2791
g4113
stRp5978
ag1
(g5052
g5003
(dp5979
g2795
g4126
sg2791
g4123
stRp5980
ag1
(g5052
g5003
(dp5981
g2795
g4136
sg2791
g4133
stRp5982
ag1
(g5052
g5003
(dp5983
g2795
g4146
sg2791
g4143
stRp5984
ag1
(g5052
g5003
(dp5985
g2795
g4156
sg2791
g4153
stRp5986
ag1
(g5052
g5003
(dp5987
g2795
g4166
sg2791
g4163
stRp5988
ag1
(g5052
g5003
(dp5989
g2795
g4176
sg2791
g4173
stRp5990
ag1
(g5052
g5003
(dp5991
g2795
g4186
sg2791
g4183
stRp5992
ag1
(g5052
g5003
(dp5993
g2795
g4196
sg2791
g4193
stRp5994
ag1
(g5052
g5003
(dp5995
g2795
g4206
sg2791
g4203
stRp5996
ag1
(g5052
g5003
(dp5997
g2795
g4216
sg2791
g4213
stRp5998
ag1
(g5052
g5003
(dp5999
g2795
g4226
sg2791
g4223
stRp6000
ag1
(g5052
g5003
(dp6001
g2795
g4236
sg2791
g4233
stRp6002
ag1
(g5052
g5003
(dp6003
g2795
g4246
sg2791
g4243
stRp6004
ag1
(g5052
g5003
(dp6005
g2795
g4256
sg2791
g4253
stRp6006
ag1
(g5052
g5003
(dp6007
g2795
g4266
sg2791
g4263
stRp6008
ag1
(g5052
g5003
(dp6009
g2795
g4276
sg2791
g4273
stRp6010
ag1
(g5052
g5003
(dp6011
g2795
g4286
sg2791
g4283
stRp6012
ag1
(g5052
g5003
(dp6013
g2795
g4296
sg2791
g4293
stRp6014
ag1
(g5052
g5003
(dp6015
g2795
g4306
sg2791
g4303
stRp6016
ag1
(g5052
g5003
(dp6017
g2795
g4316
sg2791
g4313
stRp6018
ag1
(g5052
g5003
(dp6019
g2795
g4326
sg2791
g4323
stRp6020
ag1
(g5052
g5003
(dp6021
g2795
g4336
sg2791
g4333
stRp6022
ag1
(g5052
g5003
(dp6023
g2795
g4346
sg2791
g4343
stRp6024
ag1
(g5052
g5003
(dp6025
g2795
g4356
sg2791
g4353
stRp6026
ag1
(g5052
g5003
(dp6027
g2795
g4366
sg2791
g4363
stRp6028
ag1
(g5052
g5003
(dp6029
g2795
g4376
sg2791
g4373
stRp6030
ag1
(g5052
g5003
(dp6031
g2795
g4386
sg2791
g4383
stRp6032
ag1
(g5052
g5003
(dp6033
g2795
g4396
sg2791
g4393
stRp6034
ag1
(g5052
g5003
(dp6035
g2795
g4406
sg2791
g4403
stRp6036
ag1
(g5052
g5003
(dp6037
g2795
g4416
sg2791
g4413
stRp6038
ag1
(g5052
g5003
(dp6039
g2795
g4426
sg2791
g4423
stRp6040
ag1
(g5052
g5003
(dp6041
g2795
g4436
sg2791
g4433
stRp6042
ag1
(g5052
g5003
(dp6043
g2795
g4446
sg2791
g4443
stRp6044
ag1
(g5052
g5003
(dp6045
g2795
g4456
sg2791
g4453
stRp6046
ag1
(g5052
g5003
(dp6047
g2795
g4466
sg2791
g4463
stRp6048
ag1
(g5052
g5003
(dp6049
g2795
g4476
sg2791
g4473
stRp6050
ag1
(g5052
g5003
(dp6051
g2795
g4486
sg2791
g4483
stRp6052
ag1
(g5052
g5003
(dp6053
g2795
g4496
sg2791
g4493
stRp6054
ag1
(g5052
g5003
(dp6055
g2795
g4506
sg2791
g4503
stRp6056
ag1
(g5052
g5003
(dp6057
g2795
g4516
sg2791
g4513
stRp6058
ag1
(g5052
g5003
(dp6059
g2795
g4526
sg2791
g4523
stRp6060
ag1
(g5052
g5003
(dp6061
g2795
g4536
sg2791
g4533
stRp6062
ag1
(g5052
g5003
(dp6063
g2795
g4546
sg2791
g4543
stRp6064
ag1
(g5052
g5003
(dp6065
g2795
g4556
sg2791
g4553
stRp6066
ag1
(g5052
g5003
(dp6067
g2795
g4566
sg2791
g4563
stRp6068
ag1
(g5052
g5003
(dp6069
g2795
g4576
sg2791
g4573
stRp6070
ag1
(g5052
g5003
(dp6071
g2795
g4586
sg2791
g4583
stRp6072
ag1
(g5052
g5003
(dp6073
g2795
g4596
sg2791
g4593
stRp6074
ag1
(g5052
g5003
(dp6075
g2795
g4606
sg2791
g4603
stRp6076
ag1
(g5052
g5003
(dp6077
g2795
g4616
sg2791
g4613
stRp6078
ag1
(g5052
g5003
(dp6079
g2795
g4626
sg2791
g4623
stRp6080
ag1
(g5052
g5003
(dp6081
g2795
g4636
sg2791
g4633
stRp6082
ag1
(g5052
g5003
(dp6083
g2795
g4646
sg2791
g4643
stRp6084
ag1
(g5052
g5003
(dp6085
g2795
g4656
sg2791
g4653
stRp6086
ag1
(g5052
g5003
(dp6087
g2795
g4666
sg2791
g4663
stRp6088
ag1
(g5052
g5003
(dp6089
g2795
g4676
sg2791
g4673
stRp6090
ag1
(g5052
g5003
(dp6091
g2795
g4686
sg2791
g4683
stRp6092
ag1
(g5052
g5003
(dp6093
g2795
g4696
sg2791
g4693
stRp6094
ag1
(g5052
g5003
(dp6095
g2795
g4706
sg2791
g4703
stRp6096
ag1
(g5052
g5003
(dp6097
g2795
g4716
sg2791
g4713
stRp6098
ag1
(g5052
g5003
(dp6099
g2795
g4726
sg2791
g4723
stRp6100
ag1
(g5052
g5003
(dp6101
g2795
g4736
sg2791
g4733
stRp6102
ag1
(g5052
g5003
(dp6103
g2795
g4746
sg2791
g4743
stRp6104
ag1
(g5052
g5003
(dp6105
g2795
g4756
sg2791
g4753
stRp6106
ag1
(g5052
g5003
(dp6107
g2795
g4766
sg2791
g4763
stRp6108
ag1
(g5052
g5003
(dp6109
g2795
g4776
sg2791
g4773
stRp6110
ag1
(g5052
g5003
(dp6111
g2795
g4786
sg2791
g4783
stRp6112
ag1
(g5052
g5003
(dp6113
g2795
g4796
sg2791
g4793
stRp6114
ag1
(g5052
g5003
(dp6115
g2795
g4806
sg2791
g4803
stRp6116
ag1
(g5052
g5003
(dp6117
g2795
g4816
sg2791
g4813
stRp6118
ag1
(g5052
g5003
(dp6119
g2795
g4826
sg2791
g4823
stRp6120
ag1
(g5052
g5003
(dp6121
g2795
g4836
sg2791
g4833
stRp6122
ag1
(g5052
g5003
(dp6123
g2795
g4846
sg2791
g4843
stRp6124
ag1
(g5052
g5003
(dp6125
g2795
g4856
sg2791
g4853
stRp6126
ag1
(g5052
g5003
(dp6127
g2795
g4866
sg2791
g4863
stRp6128
ag1
(g5052
g5003
(dp6129
g2795
g4876
sg2791
g4873
stRp6130
ag1
(g5052
g5003
(dp6131
g2795
g4886
sg2791
g4883
stRp6132
ag1
(g5052
g5003
(dp6133
g2795
g4896
sg2791
g4893
stRp6134
ag1
(g5052
g5003
(dp6135
g2795
g4906
sg2791
g4903
stRp6136
ag1
(g5052
g5003
(dp6137
g2795
g4916
sg2791
g4913
stRp6138
ag1
(g5052
g5003
(dp6139
g2795
g4926
sg2791
g4923
stRp6140
ag1
(g5052
g5003
(dp6141
g2795
g4936
sg2791
g4933
stRp6142
ag1
(g5052
g5003
(dp6143
g2795
g4946
sg2791
g4943
stRp6144
ag1
(g5052
g5003
(dp6145
g2795
g4956
sg2791
g4953
stRp6146
ag1
(g5052
g5003
(dp6147
g2795
g4966
sg2791
g4963
stRp6148
ag1
(g5052
g5003
(dp6149
g2795
g4976
sg2791
g4973
stRp6150
ag1
(g5052
g5003
(dp6151
g2795
g4986
sg2791
g4983
stRp6152
asg5221
Nsg5222
g4980
sg5223
I220
sg5224
I0
sg5225
I220
sg5226
I01
sbasS'savePickle'
p6153
I00
sb.